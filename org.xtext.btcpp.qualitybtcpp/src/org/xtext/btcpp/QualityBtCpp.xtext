// automatically generated by Xtext
grammar org.xtext.btcpp.QualityBtCpp with org.eclipse.xtext.common.Terminals

import "http://www.example.org/btcpp" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

Root returns Root:
	'Root'  main_tree_to_execute=EString
		BEGIN behaviortrees+=BehaviorTree (behaviortrees+=BehaviorTree)* END
;


TreeNode returns TreeNode:
	LeafNode | ControlNode | DecoratorNode | SubTree
;

LeafNode returns LeafNode:
	ActionNodeBase | ConditionNode;

ConditionNode returns ConditionNode:
	ScriptConditionNode;

ActionNodeBase returns ActionNodeBase:
	SyncActionNode | AsynchActionNode | ThreadedActionNode
;
SyncActionNode returns SyncActionNode:
	ScriptNode | EntryUpdatedActionNode | AlwaysSuccessNode | AlwaysFailureNode| SetBlackboardNode | UnsetBlackboardNode | PopFromQueueNode  
;

AsynchActionNode returns AsynchActionNode: 
	StatefulActionNode | CoroActionNode
	
	;
StatefulActionNode returns StatefulActionNode:
	SleepNode | TestNode
;

ControlNode returns ControlNode:
	ReactiveSequenceNode | SequenceNode | SequenceWithMemoryNode | FallbackNode | ReactiveFallbackNode  | ParallelNode | ParallelAllNode | IfThenElseNode | SwitchNode | WhileDoElseNode | ManualSelectorNode
;

DecoratorNode returns DecoratorNode:
	RepeatNode | ForceFailureNode | ForceSuccessNode | RetryNode | InverterNode | TimeoutNode | KeepRunningUntilFailureNode | DelayNode| PreconditionNode | RunOnceNode | LoopNode | ConsumeQueueNode | EntryUpdatedDecoratorNode
;

BehaviorTree returns BehaviorTree:
	'BehaviorTree'
	
		'ID' '=' ID=EString
		BEGIN node=TreeNode  END
;


EString returns ecore::EString:
	STRING | ID;

Parameter returns Parameter:
		key=EString "=" value=EString
;

Quality returns Quality:
	{Quality}
		'Quality' "=" ID=EString
		("(" qualityreq+=QualityRequirement ( "," qualityreq+=QualityRequirement)* ")" )?
;

QualityRequirement returns QualityRequirement:
	{QualityRequirement}
	'QualityReq'
		'ID' "=" ID=EString
		'description' "=" description=EString
;


FallbackNode returns FallbackNode:
	'?'
		("("
		&
//		('ID' "=" ID=EString)? &
		("name" "=" name=EString)? &
		('parameters' parameters+=Parameter ( "," parameters+=Parameter)* )? &
		('satisfices' satisfices+=Quality ( "," satisfices+=Quality)* )? &
		('satisfies'satisfies+=QualityRequirement ( "," satisfies+=QualityRequirement)* )?
		&
	")")?
	BEGIN child+=TreeNode ( child+=TreeNode)* END
;

IfThenElseNode returns IfThenElseNode:
	'IfThenElse'
		("("
		&
//		('ID' "=" ID=EString)? &
		("name" "=" name=EString)? &
		('parameters' parameters+=Parameter ( "," parameters+=Parameter)* )? &
		('satisfices' satisfices+=Quality ( "," satisfices+=Quality)* )? &
		('satisfies'satisfies+=QualityRequirement ( "," satisfies+=QualityRequirement)* )?
		&
	")")?
	BEGIN child+=TreeNode ( child+=TreeNode)* END
;

ManualSelectorNode returns ManualSelectorNode:
	'ManualSelector'
		("("
		&
//		('ID' "=" ID=EString)? &
		("name" "=" name=EString)? &
		('parameters' parameters+=Parameter ( "," parameters+=Parameter)* )? &
		('satisfices' satisfices+=Quality ( "," satisfices+=Quality)* )? &
		('satisfies'satisfies+=QualityRequirement ( "," satisfies+=QualityRequirement)* )?
		&
	")")?
	BEGIN child+=TreeNode ( child+=TreeNode)* END
;

ParallelNode returns ParallelNode:
	'||'
		("("
		&
//		('ID' "=" ID=EString)? &
		("name" "=" name=EString)? &
		('parameters' parameters+=Parameter ( "," parameters+=Parameter)* )? &
		('satisfices' satisfices+=Quality ( "," satisfices+=Quality)* )? &
		('satisfies'satisfies+=QualityRequirement ( "," satisfies+=QualityRequirement)* )?
		&
	")")?
	BEGIN child+=TreeNode ( child+=TreeNode)* END
;

SequenceWithMemoryNode returns SequenceWithMemoryNode:
	'M->'
		("("
		&
//		('ID' "=" ID=EString)? &
		("name" "=" name=EString)? &
		('parameters' parameters+=Parameter ( "," parameters+=Parameter)* )? &
		('satisfices' satisfices+=Quality ( "," satisfices+=Quality)* )? &
		('satisfies'satisfies+=QualityRequirement ( "," satisfies+=QualityRequirement)* )?
		&
	")")?
	BEGIN child+=TreeNode ( child+=TreeNode)* END
;

SwitchNode returns SwitchNode:
	'Switch'
		("("
		&
//		('ID' "=" ID=EString)? &
		("name" "=" name=EString)? &
		('parameters' parameters+=Parameter ( "," parameters+=Parameter)* )? &
		('satisfices' satisfices+=Quality ( "," satisfices+=Quality)* )? &
		('satisfies'satisfies+=QualityRequirement ( "," satisfies+=QualityRequirement)* )?
		&
	")")?
	BEGIN child+=TreeNode ( child+=TreeNode)* END
;

ReactiveFallbackNode returns ReactiveFallbackNode:
	'R?'
		("("
		&
//		('ID' "=" ID=EString)? &
		("name" "=" name=EString)? &
		('parameters' parameters+=Parameter ( "," parameters+=Parameter)* )? &
		('satisfices' satisfices+=Quality ( "," satisfices+=Quality)* )? &
		('satisfies'satisfies+=QualityRequirement ( "," satisfies+=QualityRequirement)* )?
		&
	")")?
	BEGIN child+=TreeNode ( child+=TreeNode)* END
;

WhileDoElseNode returns WhileDoElseNode:
	'WhileDoElse'
		("("
		&
//		('ID' "=" ID=EString)? &
		("name" "=" name=EString)? &
		('parameters' parameters+=Parameter ( "," parameters+=Parameter)* )? &
		('satisfices' satisfices+=Quality ( "," satisfices+=Quality)* )? &
		('satisfies'satisfies+=QualityRequirement ( "," satisfies+=QualityRequirement)* )?
		&
	")")?
	BEGIN child+=TreeNode ( child+=TreeNode)* END
;

ReactiveSequenceNode returns ReactiveSequenceNode:
	'R->'
		("("
		&
//		('ID' "=" ID=EString)? &
		("name" "=" name=EString)? &
		('parameters' parameters+=Parameter ( "," parameters+=Parameter)* )? &
		('satisfices' satisfices+=Quality ( "," satisfices+=Quality)* )? &
		('satisfies'satisfies+=QualityRequirement ( "," satisfies+=QualityRequirement)* )?
		&
	")")?
	BEGIN child+=TreeNode ( child+=TreeNode)* END
;

SequenceNode returns SequenceNode:
	'->'
		("("
		&
//		('ID' "=" ID=EString)? &
		("name" "=" name=EString)? &
		('parameters' parameters+=Parameter ( "," parameters+=Parameter)* )? &
		('satisfices' satisfices+=Quality ( "," satisfices+=Quality)* )? &
		('satisfies'satisfies+=QualityRequirement ( "," satisfies+=QualityRequirement)* )?
		&
	")")?
	BEGIN child+=TreeNode ( child+=TreeNode)* END
;

TimeoutNode returns TimeoutNode:
	'Timeout'
		("("
		&
//		('ID' "=" ID=EString)? &
		("name" "=" name=EString)? &
		('parameters' parameters+=Parameter ( "," parameters+=Parameter)* )? &
		('satisfices' satisfices+=Quality ( "," satisfices+=Quality)* )? &
		('satisfies'satisfies+=QualityRequirement ( "," satisfies+=QualityRequirement)* )?&
		('msec' '=' msec=EString) 
		&
	")")?
	BEGIN child=TreeNode END
;

KeepRunningUntilFailureNode returns KeepRunningUntilFailureNode:
	'KeepRunningUntilFailure'
		("("
		&
//		('ID' "=" ID=EString)? &
		("name" "=" name=EString)? &
		('parameters' parameters+=Parameter ( "," parameters+=Parameter)* )? &
		('satisfices' satisfices+=Quality ( "," satisfices+=Quality)* )? &
		('satisfies'satisfies+=QualityRequirement ( "," satisfies+=QualityRequirement)* )?
		&
	")")?
	BEGIN child=TreeNode END
;

InverterNode returns InverterNode:
	'Inverter'
		("("
		&
//		('ID' "=" ID=EString)? &
		("name" "=" name=EString)? &
		('parameters' parameters+=Parameter ( "," parameters+=Parameter)* )? &
		('satisfices' satisfices+=Quality ( "," satisfices+=Quality)* )? &
		('satisfies'satisfies+=QualityRequirement ( "," satisfies+=QualityRequirement)* )?
		&
	")")?
	BEGIN child=TreeNode END
;

ForceSuccessNode returns ForceSuccessNode:
	'ForceSuccess'
		("("
		&
//		('ID' "=" ID=EString)? &
		("name" "=" name=EString)? &
		('parameters' parameters+=Parameter ( "," parameters+=Parameter)* )? &
		('satisfices' satisfices+=Quality ( "," satisfices+=Quality)* )? &
		('satisfies'satisfies+=QualityRequirement ( "," satisfies+=QualityRequirement)* )?
		&
	")")?
	BEGIN child=TreeNode END
;

ForceFailureNode returns ForceFailureNode:
	'ForceFailure'
		("("
		&
//		('ID' "=" ID=EString)? &
		("name" "=" name=EString)? &
		('parameters' parameters+=Parameter ( "," parameters+=Parameter)* )? &
		('satisfices' satisfices+=Quality ( "," satisfices+=Quality)* )? &
		('satisfies'satisfies+=QualityRequirement ( "," satisfies+=QualityRequirement)* )?
		&
	")")?
	BEGIN child=TreeNode END
;

RepeatNode returns RepeatNode:
	'Repeat'
		("("
		&
//		('ID' "=" ID=EString)? &
		("name" "=" name=EString)? &
		('parameters' parameters+=Parameter ( "," parameters+=Parameter)* )? &
		('satisfices' satisfices+=Quality ( "," satisfices+=Quality)* )? &
		('satisfies'satisfies+=QualityRequirement ( "," satisfies+=QualityRequirement)* )? &
		("num_cycles" "=" num_cycles=EString) 
		&
	")")?
	BEGIN child=TreeNode END
;

SubTree returns SubTree:
	{SubTree}
	'SubTree'
		("("
		&
		('ID' "=" ID=EString) &
		("name" "=" name=EString)? &
		('parameters' parameters+=Parameter ( "," parameters+=Parameter)* )? &
		('satisfices' satisfices+=Quality ( "," satisfices+=Quality)* )? &
		('satisfies'satisfies+=QualityRequirement ( "," satisfies+=QualityRequirement)* )?
		&
	")")?
	(BEGIN child+=TreeNode ( child+=TreeNode)* END)?
;



RetryNode returns RetryNode:
	'Retry'
		("("
		&
//		('ID' "=" ID=EString)? &
		("name" "=" name=EString)? &
		('parameters' parameters+=Parameter ( "," parameters+=Parameter)* )? &
		('satisfices' satisfices+=Quality ( "," satisfices+=Quality)* )? &
		('satisfies'satisfies+=QualityRequirement ( "," satisfies+=QualityRequirement)* )? &
		('num_attempts' '=' num_attempts=EString)
		&
	")")?
	BEGIN child=TreeNode END
;

ParallelAllNode returns ParallelAllNode:
	'All||'
		("("
		&
//		('ID' "=" ID=EString)? &
		("name" "=" name=EString)? &
		('parameters' parameters+=Parameter ( "," parameters+=Parameter)* )? &
		('satisfices' satisfices+=Quality ( "," satisfices+=Quality)* )? &
		('satisfies'satisfies+=QualityRequirement ( "," satisfies+=QualityRequirement)* )?
		&
	")")?
	BEGIN child+=TreeNode ( child+=TreeNode)* END
;

DelayNode returns DelayNode:
	'Delay'
		("("
		&
//		('ID' "=" ID=EString)? &
		("name" "=" name=EString)? &
		('delay_msec' '=' delay_msec=EString) &
		('parameters' parameters+=Parameter ( "," parameters+=Parameter)* )? &
		('satisfices' satisfices+=Quality ( "," satisfices+=Quality)* )? &
		('satisfies'satisfies+=QualityRequirement ( "," satisfies+=QualityRequirement)* )?
		&
	")")?
	BEGIN child=TreeNode END
;

PreconditionNode returns PreconditionNode:
	'Precondition'
		("("
			&
//		('ID' "=" ID=EString)? &
		("name" "=" name=EString)? &
		('parameters' parameters+=Parameter ( "," parameters+=Parameter)* )? &
		('satisfices' satisfices+=Quality ( "," satisfices+=Quality)* )? &
		('satisfies'satisfies+=QualityRequirement ( "," satisfies+=QualityRequirement)* )?
		&
	")")?
	BEGIN child=TreeNode END
;

EntryUpdatedDecoratorNode returns EntryUpdatedDecoratorNode:
	'EntryUpdatedDecorator'
		("("
			&
//		('ID' "=" ID=EString)? &
		("name" "=" name=EString)? &
		('parameters' parameters+=Parameter ( "," parameters+=Parameter)* )? &
		('satisfices' satisfices+=Quality ( "," satisfices+=Quality)* )? &
		('satisfies'satisfies+=QualityRequirement ( "," satisfies+=QualityRequirement)* )?
		&
	")")?
	BEGIN child=TreeNode END
;



RunOnceNode returns RunOnceNode:
	'RunOnce'
		("("
			&
//		('ID' "=" ID=EString)? &
		("name" "=" name=EString)? &
		('parameters' parameters+=Parameter ( "," parameters+=Parameter)* )? &
		('satisfices' satisfices+=Quality ( "," satisfices+=Quality)* )? &
		('satisfies'satisfies+=QualityRequirement ( "," satisfies+=QualityRequirement)* )?
		&
	")")?
	BEGIN child=TreeNode END
;

LoopNode returns LoopNode:
	'Loop'
		("("
			&
//		('ID' "=" ID=EString)? &
		("name" "=" name=EString)? &
		('parameters' parameters+=Parameter ( "," parameters+=Parameter)* )? &
		('satisfices' satisfices+=Quality ( "," satisfices+=Quality)* )? &
		('satisfies'satisfies+=QualityRequirement ( "," satisfies+=QualityRequirement)* )?
		&
	")")?
	BEGIN child=TreeNode END
;

ConsumeQueueNode returns ConsumeQueueNode:
	'ConsumeQueue'
		("("
			&
//		('ID' "=" ID=EString)? &
		("name" "=" name=EString)? &
		('parameters' parameters+=Parameter ( "," parameters+=Parameter)* )? &
		('satisfices' satisfices+=Quality ( "," satisfices+=Quality)* )? &
		('satisfies'satisfies+=QualityRequirement ( "," satisfies+=QualityRequirement)* )?
		&
	")")?
	BEGIN child=TreeNode END
;

ScriptNode returns ScriptNode:
	{ScriptNode}
	'ScriptAction'
	("("
		&
//		('ID' "=" ID=EString)? &
		("name" "=" name=EString)? &
		('parameters' parameters+=Parameter ( "," parameters+=Parameter)* )? &
		('satisfices' satisfices+=Quality ( "," satisfices+=Quality)* )? &
		('satisfies'satisfies+=QualityRequirement ( "," satisfies+=QualityRequirement)* )?
		&
	")")?
;

ScriptConditionNode returns ScriptConditionNode:
	{ScriptConditionNode}
	'ScriptCondition'
	("("
		&
//		('ID' "=" ID=EString)? &
		("name" "=" name=EString)? &
		('parameters' parameters+=Parameter ( "," parameters+=Parameter)* )? &
		('satisfices' satisfices+=Quality ( "," satisfices+=Quality)* )? &
		('satisfies'satisfies+=QualityRequirement ( "," satisfies+=QualityRequirement)* )?
		&
	")")?
;

AlwaysFailureNode returns AlwaysFailureNode:
	{AlwaysFailureNode}
	'AlwaysFailure'
	("("
		&
//		('ID' "=" ID=EString)? &
		("name" "=" name=EString)? &
		('parameters' parameters+=Parameter ( "," parameters+=Parameter)* )? &
		('satisfices' satisfices+=Quality ( "," satisfices+=Quality)* )? &
		('satisfies'satisfies+=QualityRequirement ( "," satisfies+=QualityRequirement)* )?
		&
	")")?
;

AlwaysSuccessNode returns AlwaysSuccessNode:
	{AlwaysSuccessNode}
	'AlwaysSuccess'
	("("
		&
//		('ID' "=" ID=EString)? &
		("name" "=" name=EString)? &
		('parameters' parameters+=Parameter ( "," parameters+=Parameter)* )? &
		('satisfices' satisfices+=Quality ( "," satisfices+=Quality)* )? &
		('satisfies'satisfies+=QualityRequirement ( "," satisfies+=QualityRequirement)* )?
		&
	")")?
;

SetBlackboardNode returns SetBlackboardNode:
	{SetBlackboardNode}
	'SetBlackboard'
	("("
		&
//		('ID' "=" ID=EString)? &
		("name" "=" name=EString)? &
		('satisfices' satisfices+=Quality ( "," satisfices+=Quality)* )? &
		('value' '=' value=EString) &
		('output_key' '=' output_key=EString) &
		('parameters' parameters+=Parameter ( "," parameters+=Parameter)* )? &
		
		('satisfies'satisfies+=QualityRequirement ( "," satisfies+=QualityRequirement)* )?
		&
	")")?
;

TestNode returns TestNode:
	{TestNode}
	'Test'
	("("
		&
//		('ID' "=" ID=EString)? &
		("name" "=" name=EString)? &
		('parameters' parameters+=Parameter ( "," parameters+=Parameter)* )? &
		('satisfices' satisfices+=Quality ( "," satisfices+=Quality)* )? &
		('satisfies'satisfies+=QualityRequirement ( "," satisfies+=QualityRequirement)* )?
		&
	")")?
;

EntryUpdatedActionNode returns EntryUpdatedActionNode:
	{EntryUpdatedActionNode}
	'EntryUpdatedAction'
	("("
		&
//		('ID' "=" ID=EString)? &
		("name" "=" name=EString)? &
		('parameters' parameters+=Parameter ( "," parameters+=Parameter)* )? &
		('satisfices' satisfices+=Quality ( "," satisfices+=Quality)* )? &
		('satisfies'satisfies+=QualityRequirement ( "," satisfies+=QualityRequirement)* )?
		&
	")")?
;

UnsetBlackboardNode returns UnsetBlackboardNode:
	{UnsetBlackboardNode}
	'UnsetBlackboard'
	("("
		&
//		('ID' "=" ID=EString)? &
		("name" "=" name=EString)? &
		('parameters' parameters+=Parameter ( "," parameters+=Parameter)* )? &
		('satisfices' satisfices+=Quality ( "," satisfices+=Quality)* )? &
		('satisfies'satisfies+=QualityRequirement ( "," satisfies+=QualityRequirement)* )?
		&
	")")?
;

ThreadedActionNode returns ThreadedActionNode:
	{ThreadedActionNode}
	'ThreadedAction'
	("("
		&
//		('ID' "=" ID=EString)? &
		("name" "=" name=EString)? &
		('parameters' parameters+=Parameter ( "," parameters+=Parameter)* )? &
		('satisfices' satisfices+=Quality ( "," satisfices+=Quality)* )? &
		('satisfies'satisfies+=QualityRequirement ( "," satisfies+=QualityRequirement)* )?
		&
	")")?
;

CoroActionNode returns CoroActionNode:
	{CoroActionNode}
	'CoroAction'
	("("
		&
//		('ID' "=" ID=EString)? &
		("name" "=" name=EString)? &
		('parameters' parameters+=Parameter ( "," parameters+=Parameter)* )? &
		('satisfices' satisfices+=Quality ( "," satisfices+=Quality)* )? &
		('satisfies'satisfies+=QualityRequirement ( "," satisfies+=QualityRequirement)* )?
		&
	")")?
	;

SleepNode returns SleepNode:
	{SleepNode}
	'Sleep'
	("("
		&
//		('ID' "=" ID=EString)? &
		("name" "=" name=EString)? &
		('parameters' parameters+=Parameter ( "," parameters+=Parameter)* )? &
		('satisfices' satisfices+=Quality ( "," satisfices+=Quality)* )? &
		('satisfies'satisfies+=QualityRequirement ( "," satisfies+=QualityRequirement)* )?
		&
	")")?
;

PopFromQueueNode returns PopFromQueueNode:
	{PopFromQueueNode}
	'PopFromQueue'
	("("
		&
//		('ID' "=" ID=EString)? &
		("name" "=" name=EString)? &
		('parameters' parameters+=Parameter ( "," parameters+=Parameter)* )? &
		('satisfices' satisfices+=Quality ( "," satisfices+=Quality)* )? &
		('satisfies'satisfies+=QualityRequirement ( "," satisfies+=QualityRequirement)* )?
		&
	")")?
;
	
terminal NL: ('\r'?'\n')+;
terminal BEGIN: 'synthetic:BEGIN';
terminal END: 'synthetic:END';
