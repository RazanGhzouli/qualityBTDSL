package org.xtext.btcpp.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.btcpp.services.QualityBtCppGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;

@SuppressWarnings("all")
public class InternalQualityBtCppParser extends AbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "KeepRunningUntilFailure", "EntryUpdatedDecorator", "EntryUpdatedAction", "ScriptCondition", "UnsetBlackboard", "ManualSelector", "ThreadedAction", "AlwaysFailure", "AlwaysSuccess", "SetBlackboard", "BehaviorTree", "ConsumeQueue", "ForceFailure", "ForceSuccess", "PopFromQueue", "Precondition", "ScriptAction", "Num_attempts", "WhileDoElse", "Description", "CoroAction", "IfThenElse", "QualityReq", "Delay_msec", "Num_cycles", "Output_key", "Parameters", "Satisfices", "Satisfies", "Inverter", "Quality", "RunOnce", "SubTree", "Timeout", "Repeat", "Switch", "All", "Delay", "Retry", "Sleep", "Value", "Loop", "Root", "Test", "Msec", "Name", "M", "R_1", "HyphenMinusGreaterThanSign", "ID", "R", "VerticalLineVerticalLine", "LeftParenthesis", "RightParenthesis", "Comma", "EqualsSign", "QuestionMark", "RULE_NL", "RULE_BEGIN", "RULE_END", "RULE_ID", "RULE_INT", "RULE_STRING", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER"
    };
    public static final int All=40;
    public static final int QualityReq=26;
    public static final int RULE_BEGIN=62;
    public static final int Delay_msec=27;
    public static final int R_1=51;
    public static final int Precondition=19;
    public static final int SubTree=36;
    public static final int Repeat=38;
    public static final int ForceFailure=16;
    public static final int Delay=41;
    public static final int Name=49;
    public static final int AlwaysSuccess=12;
    public static final int LeftParenthesis=56;
    public static final int ForceSuccess=17;
    public static final int RunOnce=35;
    public static final int Test=47;
    public static final int AlwaysFailure=11;
    public static final int ID=53;
    public static final int PopFromQueue=18;
    public static final int ThreadedAction=10;
    public static final int UnsetBlackboard=8;
    public static final int SetBlackboard=13;
    public static final int Parameters=30;
    public static final int Root=46;
    public static final int RULE_ID=64;
    public static final int Timeout=37;
    public static final int Satisfies=32;
    public static final int Output_key=29;
    public static final int RightParenthesis=57;
    public static final int KeepRunningUntilFailure=4;
    public static final int ManualSelector=9;
    public static final int EntryUpdatedAction=6;
    public static final int Switch=39;
    public static final int RULE_INT=65;
    public static final int Value=44;
    public static final int RULE_ML_COMMENT=67;
    public static final int ScriptAction=20;
    public static final int Retry=42;
    public static final int Msec=48;
    public static final int RULE_END=63;
    public static final int Description=23;
    public static final int VerticalLineVerticalLine=55;
    public static final int RULE_STRING=66;
    public static final int CoroAction=24;
    public static final int M=50;
    public static final int RULE_SL_COMMENT=68;
    public static final int Comma=58;
    public static final int EqualsSign=59;
    public static final int R=54;
    public static final int Num_attempts=21;
    public static final int Quality=34;
    public static final int EOF=-1;
    public static final int Inverter=33;
    public static final int Loop=45;
    public static final int RULE_WS=69;
    public static final int RULE_ANY_OTHER=70;
    public static final int BehaviorTree=14;
    public static final int WhileDoElse=22;
    public static final int EntryUpdatedDecorator=5;
    public static final int Sleep=43;
    public static final int QuestionMark=60;
    public static final int Num_cycles=28;
    public static final int IfThenElse=25;
    public static final int RULE_NL=61;
    public static final int HyphenMinusGreaterThanSign=52;
    public static final int Satisfices=31;
    public static final int ScriptCondition=7;
    public static final int ConsumeQueue=15;

    // delegates
    // delegators


        public InternalQualityBtCppParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalQualityBtCppParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalQualityBtCppParser.tokenNames; }
    public String getGrammarFileName() { return "InternalQualityBtCppParser.g"; }



     	private QualityBtCppGrammarAccess grammarAccess;

        public InternalQualityBtCppParser(TokenStream input, QualityBtCppGrammarAccess grammarAccess) {
            this(input);
            this.grammarAccess = grammarAccess;
            registerRules(grammarAccess.getGrammar());
        }

        @Override
        protected String getFirstRuleName() {
        	return "Root";
       	}

       	@Override
       	protected QualityBtCppGrammarAccess getGrammarAccess() {
       		return grammarAccess;
       	}




    // $ANTLR start "entryRuleRoot"
    // InternalQualityBtCppParser.g:57:1: entryRuleRoot returns [EObject current=null] : iv_ruleRoot= ruleRoot EOF ;
    public final EObject entryRuleRoot() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRoot = null;


        try {
            // InternalQualityBtCppParser.g:57:45: (iv_ruleRoot= ruleRoot EOF )
            // InternalQualityBtCppParser.g:58:2: iv_ruleRoot= ruleRoot EOF
            {
             newCompositeNode(grammarAccess.getRootRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleRoot=ruleRoot();

            state._fsp--;

             current =iv_ruleRoot; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRoot"


    // $ANTLR start "ruleRoot"
    // InternalQualityBtCppParser.g:64:1: ruleRoot returns [EObject current=null] : (otherlv_0= Root ( (lv_main_tree_to_execute_1_0= ruleEString ) ) this_BEGIN_2= RULE_BEGIN ( (lv_behaviortrees_3_0= ruleBehaviorTree ) ) ( (lv_behaviortrees_4_0= ruleBehaviorTree ) )* this_END_5= RULE_END ) ;
    public final EObject ruleRoot() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token this_BEGIN_2=null;
        Token this_END_5=null;
        AntlrDatatypeRuleToken lv_main_tree_to_execute_1_0 = null;

        EObject lv_behaviortrees_3_0 = null;

        EObject lv_behaviortrees_4_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:70:2: ( (otherlv_0= Root ( (lv_main_tree_to_execute_1_0= ruleEString ) ) this_BEGIN_2= RULE_BEGIN ( (lv_behaviortrees_3_0= ruleBehaviorTree ) ) ( (lv_behaviortrees_4_0= ruleBehaviorTree ) )* this_END_5= RULE_END ) )
            // InternalQualityBtCppParser.g:71:2: (otherlv_0= Root ( (lv_main_tree_to_execute_1_0= ruleEString ) ) this_BEGIN_2= RULE_BEGIN ( (lv_behaviortrees_3_0= ruleBehaviorTree ) ) ( (lv_behaviortrees_4_0= ruleBehaviorTree ) )* this_END_5= RULE_END )
            {
            // InternalQualityBtCppParser.g:71:2: (otherlv_0= Root ( (lv_main_tree_to_execute_1_0= ruleEString ) ) this_BEGIN_2= RULE_BEGIN ( (lv_behaviortrees_3_0= ruleBehaviorTree ) ) ( (lv_behaviortrees_4_0= ruleBehaviorTree ) )* this_END_5= RULE_END )
            // InternalQualityBtCppParser.g:72:3: otherlv_0= Root ( (lv_main_tree_to_execute_1_0= ruleEString ) ) this_BEGIN_2= RULE_BEGIN ( (lv_behaviortrees_3_0= ruleBehaviorTree ) ) ( (lv_behaviortrees_4_0= ruleBehaviorTree ) )* this_END_5= RULE_END
            {
            otherlv_0=(Token)match(input,Root,FOLLOW_3); 

            			newLeafNode(otherlv_0, grammarAccess.getRootAccess().getRootKeyword_0());
            		
            // InternalQualityBtCppParser.g:76:3: ( (lv_main_tree_to_execute_1_0= ruleEString ) )
            // InternalQualityBtCppParser.g:77:4: (lv_main_tree_to_execute_1_0= ruleEString )
            {
            // InternalQualityBtCppParser.g:77:4: (lv_main_tree_to_execute_1_0= ruleEString )
            // InternalQualityBtCppParser.g:78:5: lv_main_tree_to_execute_1_0= ruleEString
            {

            					newCompositeNode(grammarAccess.getRootAccess().getMain_tree_to_executeEStringParserRuleCall_1_0());
            				
            pushFollow(FOLLOW_4);
            lv_main_tree_to_execute_1_0=ruleEString();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getRootRule());
            					}
            					set(
            						current,
            						"main_tree_to_execute",
            						lv_main_tree_to_execute_1_0,
            						"org.xtext.btcpp.QualityBtCpp.EString");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            this_BEGIN_2=(Token)match(input,RULE_BEGIN,FOLLOW_5); 

            			newLeafNode(this_BEGIN_2, grammarAccess.getRootAccess().getBEGINTerminalRuleCall_2());
            		
            // InternalQualityBtCppParser.g:99:3: ( (lv_behaviortrees_3_0= ruleBehaviorTree ) )
            // InternalQualityBtCppParser.g:100:4: (lv_behaviortrees_3_0= ruleBehaviorTree )
            {
            // InternalQualityBtCppParser.g:100:4: (lv_behaviortrees_3_0= ruleBehaviorTree )
            // InternalQualityBtCppParser.g:101:5: lv_behaviortrees_3_0= ruleBehaviorTree
            {

            					newCompositeNode(grammarAccess.getRootAccess().getBehaviortreesBehaviorTreeParserRuleCall_3_0());
            				
            pushFollow(FOLLOW_6);
            lv_behaviortrees_3_0=ruleBehaviorTree();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getRootRule());
            					}
            					add(
            						current,
            						"behaviortrees",
            						lv_behaviortrees_3_0,
            						"org.xtext.btcpp.QualityBtCpp.BehaviorTree");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            // InternalQualityBtCppParser.g:118:3: ( (lv_behaviortrees_4_0= ruleBehaviorTree ) )*
            loop1:
            do {
                int alt1=2;
                int LA1_0 = input.LA(1);

                if ( (LA1_0==BehaviorTree) ) {
                    alt1=1;
                }


                switch (alt1) {
            	case 1 :
            	    // InternalQualityBtCppParser.g:119:4: (lv_behaviortrees_4_0= ruleBehaviorTree )
            	    {
            	    // InternalQualityBtCppParser.g:119:4: (lv_behaviortrees_4_0= ruleBehaviorTree )
            	    // InternalQualityBtCppParser.g:120:5: lv_behaviortrees_4_0= ruleBehaviorTree
            	    {

            	    					newCompositeNode(grammarAccess.getRootAccess().getBehaviortreesBehaviorTreeParserRuleCall_4_0());
            	    				
            	    pushFollow(FOLLOW_6);
            	    lv_behaviortrees_4_0=ruleBehaviorTree();

            	    state._fsp--;


            	    					if (current==null) {
            	    						current = createModelElementForParent(grammarAccess.getRootRule());
            	    					}
            	    					add(
            	    						current,
            	    						"behaviortrees",
            	    						lv_behaviortrees_4_0,
            	    						"org.xtext.btcpp.QualityBtCpp.BehaviorTree");
            	    					afterParserOrEnumRuleCall();
            	    				

            	    }


            	    }
            	    break;

            	default :
            	    break loop1;
                }
            } while (true);

            this_END_5=(Token)match(input,RULE_END,FOLLOW_2); 

            			newLeafNode(this_END_5, grammarAccess.getRootAccess().getENDTerminalRuleCall_5());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRoot"


    // $ANTLR start "entryRuleTreeNode"
    // InternalQualityBtCppParser.g:145:1: entryRuleTreeNode returns [EObject current=null] : iv_ruleTreeNode= ruleTreeNode EOF ;
    public final EObject entryRuleTreeNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTreeNode = null;


        try {
            // InternalQualityBtCppParser.g:145:49: (iv_ruleTreeNode= ruleTreeNode EOF )
            // InternalQualityBtCppParser.g:146:2: iv_ruleTreeNode= ruleTreeNode EOF
            {
             newCompositeNode(grammarAccess.getTreeNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleTreeNode=ruleTreeNode();

            state._fsp--;

             current =iv_ruleTreeNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTreeNode"


    // $ANTLR start "ruleTreeNode"
    // InternalQualityBtCppParser.g:152:1: ruleTreeNode returns [EObject current=null] : (this_LeafNode_0= ruleLeafNode | this_ControlNode_1= ruleControlNode | this_DecoratorNode_2= ruleDecoratorNode | this_SubTree_3= ruleSubTree ) ;
    public final EObject ruleTreeNode() throws RecognitionException {
        EObject current = null;

        EObject this_LeafNode_0 = null;

        EObject this_ControlNode_1 = null;

        EObject this_DecoratorNode_2 = null;

        EObject this_SubTree_3 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:158:2: ( (this_LeafNode_0= ruleLeafNode | this_ControlNode_1= ruleControlNode | this_DecoratorNode_2= ruleDecoratorNode | this_SubTree_3= ruleSubTree ) )
            // InternalQualityBtCppParser.g:159:2: (this_LeafNode_0= ruleLeafNode | this_ControlNode_1= ruleControlNode | this_DecoratorNode_2= ruleDecoratorNode | this_SubTree_3= ruleSubTree )
            {
            // InternalQualityBtCppParser.g:159:2: (this_LeafNode_0= ruleLeafNode | this_ControlNode_1= ruleControlNode | this_DecoratorNode_2= ruleDecoratorNode | this_SubTree_3= ruleSubTree )
            int alt2=4;
            switch ( input.LA(1) ) {
            case EntryUpdatedAction:
            case ScriptCondition:
            case UnsetBlackboard:
            case ThreadedAction:
            case AlwaysFailure:
            case AlwaysSuccess:
            case SetBlackboard:
            case PopFromQueue:
            case ScriptAction:
            case CoroAction:
            case Sleep:
            case Test:
                {
                alt2=1;
                }
                break;
            case ManualSelector:
            case WhileDoElse:
            case IfThenElse:
            case Switch:
            case All:
            case M:
            case R_1:
            case HyphenMinusGreaterThanSign:
            case R:
            case VerticalLineVerticalLine:
            case QuestionMark:
                {
                alt2=2;
                }
                break;
            case KeepRunningUntilFailure:
            case EntryUpdatedDecorator:
            case ConsumeQueue:
            case ForceFailure:
            case ForceSuccess:
            case Precondition:
            case Inverter:
            case RunOnce:
            case Timeout:
            case Repeat:
            case Delay:
            case Retry:
            case Loop:
                {
                alt2=3;
                }
                break;
            case SubTree:
                {
                alt2=4;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 2, 0, input);

                throw nvae;
            }

            switch (alt2) {
                case 1 :
                    // InternalQualityBtCppParser.g:160:3: this_LeafNode_0= ruleLeafNode
                    {

                    			newCompositeNode(grammarAccess.getTreeNodeAccess().getLeafNodeParserRuleCall_0());
                    		
                    pushFollow(FOLLOW_2);
                    this_LeafNode_0=ruleLeafNode();

                    state._fsp--;


                    			current = this_LeafNode_0;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 2 :
                    // InternalQualityBtCppParser.g:169:3: this_ControlNode_1= ruleControlNode
                    {

                    			newCompositeNode(grammarAccess.getTreeNodeAccess().getControlNodeParserRuleCall_1());
                    		
                    pushFollow(FOLLOW_2);
                    this_ControlNode_1=ruleControlNode();

                    state._fsp--;


                    			current = this_ControlNode_1;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 3 :
                    // InternalQualityBtCppParser.g:178:3: this_DecoratorNode_2= ruleDecoratorNode
                    {

                    			newCompositeNode(grammarAccess.getTreeNodeAccess().getDecoratorNodeParserRuleCall_2());
                    		
                    pushFollow(FOLLOW_2);
                    this_DecoratorNode_2=ruleDecoratorNode();

                    state._fsp--;


                    			current = this_DecoratorNode_2;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 4 :
                    // InternalQualityBtCppParser.g:187:3: this_SubTree_3= ruleSubTree
                    {

                    			newCompositeNode(grammarAccess.getTreeNodeAccess().getSubTreeParserRuleCall_3());
                    		
                    pushFollow(FOLLOW_2);
                    this_SubTree_3=ruleSubTree();

                    state._fsp--;


                    			current = this_SubTree_3;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTreeNode"


    // $ANTLR start "entryRuleLeafNode"
    // InternalQualityBtCppParser.g:199:1: entryRuleLeafNode returns [EObject current=null] : iv_ruleLeafNode= ruleLeafNode EOF ;
    public final EObject entryRuleLeafNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLeafNode = null;


        try {
            // InternalQualityBtCppParser.g:199:49: (iv_ruleLeafNode= ruleLeafNode EOF )
            // InternalQualityBtCppParser.g:200:2: iv_ruleLeafNode= ruleLeafNode EOF
            {
             newCompositeNode(grammarAccess.getLeafNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleLeafNode=ruleLeafNode();

            state._fsp--;

             current =iv_ruleLeafNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLeafNode"


    // $ANTLR start "ruleLeafNode"
    // InternalQualityBtCppParser.g:206:1: ruleLeafNode returns [EObject current=null] : (this_ActionNodeBase_0= ruleActionNodeBase | this_ConditionNode_1= ruleConditionNode ) ;
    public final EObject ruleLeafNode() throws RecognitionException {
        EObject current = null;

        EObject this_ActionNodeBase_0 = null;

        EObject this_ConditionNode_1 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:212:2: ( (this_ActionNodeBase_0= ruleActionNodeBase | this_ConditionNode_1= ruleConditionNode ) )
            // InternalQualityBtCppParser.g:213:2: (this_ActionNodeBase_0= ruleActionNodeBase | this_ConditionNode_1= ruleConditionNode )
            {
            // InternalQualityBtCppParser.g:213:2: (this_ActionNodeBase_0= ruleActionNodeBase | this_ConditionNode_1= ruleConditionNode )
            int alt3=2;
            int LA3_0 = input.LA(1);

            if ( (LA3_0==EntryUpdatedAction||LA3_0==UnsetBlackboard||(LA3_0>=ThreadedAction && LA3_0<=SetBlackboard)||LA3_0==PopFromQueue||LA3_0==ScriptAction||LA3_0==CoroAction||LA3_0==Sleep||LA3_0==Test) ) {
                alt3=1;
            }
            else if ( (LA3_0==ScriptCondition) ) {
                alt3=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 3, 0, input);

                throw nvae;
            }
            switch (alt3) {
                case 1 :
                    // InternalQualityBtCppParser.g:214:3: this_ActionNodeBase_0= ruleActionNodeBase
                    {

                    			newCompositeNode(grammarAccess.getLeafNodeAccess().getActionNodeBaseParserRuleCall_0());
                    		
                    pushFollow(FOLLOW_2);
                    this_ActionNodeBase_0=ruleActionNodeBase();

                    state._fsp--;


                    			current = this_ActionNodeBase_0;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 2 :
                    // InternalQualityBtCppParser.g:223:3: this_ConditionNode_1= ruleConditionNode
                    {

                    			newCompositeNode(grammarAccess.getLeafNodeAccess().getConditionNodeParserRuleCall_1());
                    		
                    pushFollow(FOLLOW_2);
                    this_ConditionNode_1=ruleConditionNode();

                    state._fsp--;


                    			current = this_ConditionNode_1;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLeafNode"


    // $ANTLR start "entryRuleConditionNode"
    // InternalQualityBtCppParser.g:235:1: entryRuleConditionNode returns [EObject current=null] : iv_ruleConditionNode= ruleConditionNode EOF ;
    public final EObject entryRuleConditionNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConditionNode = null;


        try {
            // InternalQualityBtCppParser.g:235:54: (iv_ruleConditionNode= ruleConditionNode EOF )
            // InternalQualityBtCppParser.g:236:2: iv_ruleConditionNode= ruleConditionNode EOF
            {
             newCompositeNode(grammarAccess.getConditionNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleConditionNode=ruleConditionNode();

            state._fsp--;

             current =iv_ruleConditionNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConditionNode"


    // $ANTLR start "ruleConditionNode"
    // InternalQualityBtCppParser.g:242:1: ruleConditionNode returns [EObject current=null] : this_ScriptConditionNode_0= ruleScriptConditionNode ;
    public final EObject ruleConditionNode() throws RecognitionException {
        EObject current = null;

        EObject this_ScriptConditionNode_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:248:2: (this_ScriptConditionNode_0= ruleScriptConditionNode )
            // InternalQualityBtCppParser.g:249:2: this_ScriptConditionNode_0= ruleScriptConditionNode
            {

            		newCompositeNode(grammarAccess.getConditionNodeAccess().getScriptConditionNodeParserRuleCall());
            	
            pushFollow(FOLLOW_2);
            this_ScriptConditionNode_0=ruleScriptConditionNode();

            state._fsp--;


            		current = this_ScriptConditionNode_0;
            		afterParserOrEnumRuleCall();
            	

            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConditionNode"


    // $ANTLR start "entryRuleActionNodeBase"
    // InternalQualityBtCppParser.g:260:1: entryRuleActionNodeBase returns [EObject current=null] : iv_ruleActionNodeBase= ruleActionNodeBase EOF ;
    public final EObject entryRuleActionNodeBase() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleActionNodeBase = null;


        try {
            // InternalQualityBtCppParser.g:260:55: (iv_ruleActionNodeBase= ruleActionNodeBase EOF )
            // InternalQualityBtCppParser.g:261:2: iv_ruleActionNodeBase= ruleActionNodeBase EOF
            {
             newCompositeNode(grammarAccess.getActionNodeBaseRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleActionNodeBase=ruleActionNodeBase();

            state._fsp--;

             current =iv_ruleActionNodeBase; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleActionNodeBase"


    // $ANTLR start "ruleActionNodeBase"
    // InternalQualityBtCppParser.g:267:1: ruleActionNodeBase returns [EObject current=null] : (this_SyncActionNode_0= ruleSyncActionNode | this_AsynchActionNode_1= ruleAsynchActionNode | this_ThreadedActionNode_2= ruleThreadedActionNode ) ;
    public final EObject ruleActionNodeBase() throws RecognitionException {
        EObject current = null;

        EObject this_SyncActionNode_0 = null;

        EObject this_AsynchActionNode_1 = null;

        EObject this_ThreadedActionNode_2 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:273:2: ( (this_SyncActionNode_0= ruleSyncActionNode | this_AsynchActionNode_1= ruleAsynchActionNode | this_ThreadedActionNode_2= ruleThreadedActionNode ) )
            // InternalQualityBtCppParser.g:274:2: (this_SyncActionNode_0= ruleSyncActionNode | this_AsynchActionNode_1= ruleAsynchActionNode | this_ThreadedActionNode_2= ruleThreadedActionNode )
            {
            // InternalQualityBtCppParser.g:274:2: (this_SyncActionNode_0= ruleSyncActionNode | this_AsynchActionNode_1= ruleAsynchActionNode | this_ThreadedActionNode_2= ruleThreadedActionNode )
            int alt4=3;
            switch ( input.LA(1) ) {
            case EntryUpdatedAction:
            case UnsetBlackboard:
            case AlwaysFailure:
            case AlwaysSuccess:
            case SetBlackboard:
            case PopFromQueue:
            case ScriptAction:
                {
                alt4=1;
                }
                break;
            case CoroAction:
            case Sleep:
            case Test:
                {
                alt4=2;
                }
                break;
            case ThreadedAction:
                {
                alt4=3;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 4, 0, input);

                throw nvae;
            }

            switch (alt4) {
                case 1 :
                    // InternalQualityBtCppParser.g:275:3: this_SyncActionNode_0= ruleSyncActionNode
                    {

                    			newCompositeNode(grammarAccess.getActionNodeBaseAccess().getSyncActionNodeParserRuleCall_0());
                    		
                    pushFollow(FOLLOW_2);
                    this_SyncActionNode_0=ruleSyncActionNode();

                    state._fsp--;


                    			current = this_SyncActionNode_0;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 2 :
                    // InternalQualityBtCppParser.g:284:3: this_AsynchActionNode_1= ruleAsynchActionNode
                    {

                    			newCompositeNode(grammarAccess.getActionNodeBaseAccess().getAsynchActionNodeParserRuleCall_1());
                    		
                    pushFollow(FOLLOW_2);
                    this_AsynchActionNode_1=ruleAsynchActionNode();

                    state._fsp--;


                    			current = this_AsynchActionNode_1;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 3 :
                    // InternalQualityBtCppParser.g:293:3: this_ThreadedActionNode_2= ruleThreadedActionNode
                    {

                    			newCompositeNode(grammarAccess.getActionNodeBaseAccess().getThreadedActionNodeParserRuleCall_2());
                    		
                    pushFollow(FOLLOW_2);
                    this_ThreadedActionNode_2=ruleThreadedActionNode();

                    state._fsp--;


                    			current = this_ThreadedActionNode_2;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleActionNodeBase"


    // $ANTLR start "entryRuleSyncActionNode"
    // InternalQualityBtCppParser.g:305:1: entryRuleSyncActionNode returns [EObject current=null] : iv_ruleSyncActionNode= ruleSyncActionNode EOF ;
    public final EObject entryRuleSyncActionNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSyncActionNode = null;


        try {
            // InternalQualityBtCppParser.g:305:55: (iv_ruleSyncActionNode= ruleSyncActionNode EOF )
            // InternalQualityBtCppParser.g:306:2: iv_ruleSyncActionNode= ruleSyncActionNode EOF
            {
             newCompositeNode(grammarAccess.getSyncActionNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleSyncActionNode=ruleSyncActionNode();

            state._fsp--;

             current =iv_ruleSyncActionNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSyncActionNode"


    // $ANTLR start "ruleSyncActionNode"
    // InternalQualityBtCppParser.g:312:1: ruleSyncActionNode returns [EObject current=null] : (this_ScriptNode_0= ruleScriptNode | this_EntryUpdatedActionNode_1= ruleEntryUpdatedActionNode | this_AlwaysSuccessNode_2= ruleAlwaysSuccessNode | this_AlwaysFailureNode_3= ruleAlwaysFailureNode | this_SetBlackboardNode_4= ruleSetBlackboardNode | this_UnsetBlackboardNode_5= ruleUnsetBlackboardNode | this_PopFromQueueNode_6= rulePopFromQueueNode ) ;
    public final EObject ruleSyncActionNode() throws RecognitionException {
        EObject current = null;

        EObject this_ScriptNode_0 = null;

        EObject this_EntryUpdatedActionNode_1 = null;

        EObject this_AlwaysSuccessNode_2 = null;

        EObject this_AlwaysFailureNode_3 = null;

        EObject this_SetBlackboardNode_4 = null;

        EObject this_UnsetBlackboardNode_5 = null;

        EObject this_PopFromQueueNode_6 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:318:2: ( (this_ScriptNode_0= ruleScriptNode | this_EntryUpdatedActionNode_1= ruleEntryUpdatedActionNode | this_AlwaysSuccessNode_2= ruleAlwaysSuccessNode | this_AlwaysFailureNode_3= ruleAlwaysFailureNode | this_SetBlackboardNode_4= ruleSetBlackboardNode | this_UnsetBlackboardNode_5= ruleUnsetBlackboardNode | this_PopFromQueueNode_6= rulePopFromQueueNode ) )
            // InternalQualityBtCppParser.g:319:2: (this_ScriptNode_0= ruleScriptNode | this_EntryUpdatedActionNode_1= ruleEntryUpdatedActionNode | this_AlwaysSuccessNode_2= ruleAlwaysSuccessNode | this_AlwaysFailureNode_3= ruleAlwaysFailureNode | this_SetBlackboardNode_4= ruleSetBlackboardNode | this_UnsetBlackboardNode_5= ruleUnsetBlackboardNode | this_PopFromQueueNode_6= rulePopFromQueueNode )
            {
            // InternalQualityBtCppParser.g:319:2: (this_ScriptNode_0= ruleScriptNode | this_EntryUpdatedActionNode_1= ruleEntryUpdatedActionNode | this_AlwaysSuccessNode_2= ruleAlwaysSuccessNode | this_AlwaysFailureNode_3= ruleAlwaysFailureNode | this_SetBlackboardNode_4= ruleSetBlackboardNode | this_UnsetBlackboardNode_5= ruleUnsetBlackboardNode | this_PopFromQueueNode_6= rulePopFromQueueNode )
            int alt5=7;
            switch ( input.LA(1) ) {
            case ScriptAction:
                {
                alt5=1;
                }
                break;
            case EntryUpdatedAction:
                {
                alt5=2;
                }
                break;
            case AlwaysSuccess:
                {
                alt5=3;
                }
                break;
            case AlwaysFailure:
                {
                alt5=4;
                }
                break;
            case SetBlackboard:
                {
                alt5=5;
                }
                break;
            case UnsetBlackboard:
                {
                alt5=6;
                }
                break;
            case PopFromQueue:
                {
                alt5=7;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 5, 0, input);

                throw nvae;
            }

            switch (alt5) {
                case 1 :
                    // InternalQualityBtCppParser.g:320:3: this_ScriptNode_0= ruleScriptNode
                    {

                    			newCompositeNode(grammarAccess.getSyncActionNodeAccess().getScriptNodeParserRuleCall_0());
                    		
                    pushFollow(FOLLOW_2);
                    this_ScriptNode_0=ruleScriptNode();

                    state._fsp--;


                    			current = this_ScriptNode_0;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 2 :
                    // InternalQualityBtCppParser.g:329:3: this_EntryUpdatedActionNode_1= ruleEntryUpdatedActionNode
                    {

                    			newCompositeNode(grammarAccess.getSyncActionNodeAccess().getEntryUpdatedActionNodeParserRuleCall_1());
                    		
                    pushFollow(FOLLOW_2);
                    this_EntryUpdatedActionNode_1=ruleEntryUpdatedActionNode();

                    state._fsp--;


                    			current = this_EntryUpdatedActionNode_1;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 3 :
                    // InternalQualityBtCppParser.g:338:3: this_AlwaysSuccessNode_2= ruleAlwaysSuccessNode
                    {

                    			newCompositeNode(grammarAccess.getSyncActionNodeAccess().getAlwaysSuccessNodeParserRuleCall_2());
                    		
                    pushFollow(FOLLOW_2);
                    this_AlwaysSuccessNode_2=ruleAlwaysSuccessNode();

                    state._fsp--;


                    			current = this_AlwaysSuccessNode_2;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 4 :
                    // InternalQualityBtCppParser.g:347:3: this_AlwaysFailureNode_3= ruleAlwaysFailureNode
                    {

                    			newCompositeNode(grammarAccess.getSyncActionNodeAccess().getAlwaysFailureNodeParserRuleCall_3());
                    		
                    pushFollow(FOLLOW_2);
                    this_AlwaysFailureNode_3=ruleAlwaysFailureNode();

                    state._fsp--;


                    			current = this_AlwaysFailureNode_3;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 5 :
                    // InternalQualityBtCppParser.g:356:3: this_SetBlackboardNode_4= ruleSetBlackboardNode
                    {

                    			newCompositeNode(grammarAccess.getSyncActionNodeAccess().getSetBlackboardNodeParserRuleCall_4());
                    		
                    pushFollow(FOLLOW_2);
                    this_SetBlackboardNode_4=ruleSetBlackboardNode();

                    state._fsp--;


                    			current = this_SetBlackboardNode_4;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 6 :
                    // InternalQualityBtCppParser.g:365:3: this_UnsetBlackboardNode_5= ruleUnsetBlackboardNode
                    {

                    			newCompositeNode(grammarAccess.getSyncActionNodeAccess().getUnsetBlackboardNodeParserRuleCall_5());
                    		
                    pushFollow(FOLLOW_2);
                    this_UnsetBlackboardNode_5=ruleUnsetBlackboardNode();

                    state._fsp--;


                    			current = this_UnsetBlackboardNode_5;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 7 :
                    // InternalQualityBtCppParser.g:374:3: this_PopFromQueueNode_6= rulePopFromQueueNode
                    {

                    			newCompositeNode(grammarAccess.getSyncActionNodeAccess().getPopFromQueueNodeParserRuleCall_6());
                    		
                    pushFollow(FOLLOW_2);
                    this_PopFromQueueNode_6=rulePopFromQueueNode();

                    state._fsp--;


                    			current = this_PopFromQueueNode_6;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSyncActionNode"


    // $ANTLR start "entryRuleAsynchActionNode"
    // InternalQualityBtCppParser.g:386:1: entryRuleAsynchActionNode returns [EObject current=null] : iv_ruleAsynchActionNode= ruleAsynchActionNode EOF ;
    public final EObject entryRuleAsynchActionNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAsynchActionNode = null;


        try {
            // InternalQualityBtCppParser.g:386:57: (iv_ruleAsynchActionNode= ruleAsynchActionNode EOF )
            // InternalQualityBtCppParser.g:387:2: iv_ruleAsynchActionNode= ruleAsynchActionNode EOF
            {
             newCompositeNode(grammarAccess.getAsynchActionNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleAsynchActionNode=ruleAsynchActionNode();

            state._fsp--;

             current =iv_ruleAsynchActionNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAsynchActionNode"


    // $ANTLR start "ruleAsynchActionNode"
    // InternalQualityBtCppParser.g:393:1: ruleAsynchActionNode returns [EObject current=null] : (this_StatefulActionNode_0= ruleStatefulActionNode | this_CoroActionNode_1= ruleCoroActionNode ) ;
    public final EObject ruleAsynchActionNode() throws RecognitionException {
        EObject current = null;

        EObject this_StatefulActionNode_0 = null;

        EObject this_CoroActionNode_1 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:399:2: ( (this_StatefulActionNode_0= ruleStatefulActionNode | this_CoroActionNode_1= ruleCoroActionNode ) )
            // InternalQualityBtCppParser.g:400:2: (this_StatefulActionNode_0= ruleStatefulActionNode | this_CoroActionNode_1= ruleCoroActionNode )
            {
            // InternalQualityBtCppParser.g:400:2: (this_StatefulActionNode_0= ruleStatefulActionNode | this_CoroActionNode_1= ruleCoroActionNode )
            int alt6=2;
            int LA6_0 = input.LA(1);

            if ( (LA6_0==Sleep||LA6_0==Test) ) {
                alt6=1;
            }
            else if ( (LA6_0==CoroAction) ) {
                alt6=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 6, 0, input);

                throw nvae;
            }
            switch (alt6) {
                case 1 :
                    // InternalQualityBtCppParser.g:401:3: this_StatefulActionNode_0= ruleStatefulActionNode
                    {

                    			newCompositeNode(grammarAccess.getAsynchActionNodeAccess().getStatefulActionNodeParserRuleCall_0());
                    		
                    pushFollow(FOLLOW_2);
                    this_StatefulActionNode_0=ruleStatefulActionNode();

                    state._fsp--;


                    			current = this_StatefulActionNode_0;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 2 :
                    // InternalQualityBtCppParser.g:410:3: this_CoroActionNode_1= ruleCoroActionNode
                    {

                    			newCompositeNode(grammarAccess.getAsynchActionNodeAccess().getCoroActionNodeParserRuleCall_1());
                    		
                    pushFollow(FOLLOW_2);
                    this_CoroActionNode_1=ruleCoroActionNode();

                    state._fsp--;


                    			current = this_CoroActionNode_1;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAsynchActionNode"


    // $ANTLR start "entryRuleStatefulActionNode"
    // InternalQualityBtCppParser.g:422:1: entryRuleStatefulActionNode returns [EObject current=null] : iv_ruleStatefulActionNode= ruleStatefulActionNode EOF ;
    public final EObject entryRuleStatefulActionNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStatefulActionNode = null;


        try {
            // InternalQualityBtCppParser.g:422:59: (iv_ruleStatefulActionNode= ruleStatefulActionNode EOF )
            // InternalQualityBtCppParser.g:423:2: iv_ruleStatefulActionNode= ruleStatefulActionNode EOF
            {
             newCompositeNode(grammarAccess.getStatefulActionNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleStatefulActionNode=ruleStatefulActionNode();

            state._fsp--;

             current =iv_ruleStatefulActionNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStatefulActionNode"


    // $ANTLR start "ruleStatefulActionNode"
    // InternalQualityBtCppParser.g:429:1: ruleStatefulActionNode returns [EObject current=null] : (this_SleepNode_0= ruleSleepNode | this_TestNode_1= ruleTestNode ) ;
    public final EObject ruleStatefulActionNode() throws RecognitionException {
        EObject current = null;

        EObject this_SleepNode_0 = null;

        EObject this_TestNode_1 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:435:2: ( (this_SleepNode_0= ruleSleepNode | this_TestNode_1= ruleTestNode ) )
            // InternalQualityBtCppParser.g:436:2: (this_SleepNode_0= ruleSleepNode | this_TestNode_1= ruleTestNode )
            {
            // InternalQualityBtCppParser.g:436:2: (this_SleepNode_0= ruleSleepNode | this_TestNode_1= ruleTestNode )
            int alt7=2;
            int LA7_0 = input.LA(1);

            if ( (LA7_0==Sleep) ) {
                alt7=1;
            }
            else if ( (LA7_0==Test) ) {
                alt7=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 7, 0, input);

                throw nvae;
            }
            switch (alt7) {
                case 1 :
                    // InternalQualityBtCppParser.g:437:3: this_SleepNode_0= ruleSleepNode
                    {

                    			newCompositeNode(grammarAccess.getStatefulActionNodeAccess().getSleepNodeParserRuleCall_0());
                    		
                    pushFollow(FOLLOW_2);
                    this_SleepNode_0=ruleSleepNode();

                    state._fsp--;


                    			current = this_SleepNode_0;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 2 :
                    // InternalQualityBtCppParser.g:446:3: this_TestNode_1= ruleTestNode
                    {

                    			newCompositeNode(grammarAccess.getStatefulActionNodeAccess().getTestNodeParserRuleCall_1());
                    		
                    pushFollow(FOLLOW_2);
                    this_TestNode_1=ruleTestNode();

                    state._fsp--;


                    			current = this_TestNode_1;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStatefulActionNode"


    // $ANTLR start "entryRuleControlNode"
    // InternalQualityBtCppParser.g:458:1: entryRuleControlNode returns [EObject current=null] : iv_ruleControlNode= ruleControlNode EOF ;
    public final EObject entryRuleControlNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleControlNode = null;


        try {
            // InternalQualityBtCppParser.g:458:52: (iv_ruleControlNode= ruleControlNode EOF )
            // InternalQualityBtCppParser.g:459:2: iv_ruleControlNode= ruleControlNode EOF
            {
             newCompositeNode(grammarAccess.getControlNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleControlNode=ruleControlNode();

            state._fsp--;

             current =iv_ruleControlNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleControlNode"


    // $ANTLR start "ruleControlNode"
    // InternalQualityBtCppParser.g:465:1: ruleControlNode returns [EObject current=null] : (this_ReactiveSequenceNode_0= ruleReactiveSequenceNode | this_SequenceNode_1= ruleSequenceNode | this_SequenceWithMemoryNode_2= ruleSequenceWithMemoryNode | this_FallbackNode_3= ruleFallbackNode | this_ReactiveFallbackNode_4= ruleReactiveFallbackNode | this_ParallelNode_5= ruleParallelNode | this_ParallelAllNode_6= ruleParallelAllNode | this_IfThenElseNode_7= ruleIfThenElseNode | this_SwitchNode_8= ruleSwitchNode | this_WhileDoElseNode_9= ruleWhileDoElseNode | this_ManualSelectorNode_10= ruleManualSelectorNode ) ;
    public final EObject ruleControlNode() throws RecognitionException {
        EObject current = null;

        EObject this_ReactiveSequenceNode_0 = null;

        EObject this_SequenceNode_1 = null;

        EObject this_SequenceWithMemoryNode_2 = null;

        EObject this_FallbackNode_3 = null;

        EObject this_ReactiveFallbackNode_4 = null;

        EObject this_ParallelNode_5 = null;

        EObject this_ParallelAllNode_6 = null;

        EObject this_IfThenElseNode_7 = null;

        EObject this_SwitchNode_8 = null;

        EObject this_WhileDoElseNode_9 = null;

        EObject this_ManualSelectorNode_10 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:471:2: ( (this_ReactiveSequenceNode_0= ruleReactiveSequenceNode | this_SequenceNode_1= ruleSequenceNode | this_SequenceWithMemoryNode_2= ruleSequenceWithMemoryNode | this_FallbackNode_3= ruleFallbackNode | this_ReactiveFallbackNode_4= ruleReactiveFallbackNode | this_ParallelNode_5= ruleParallelNode | this_ParallelAllNode_6= ruleParallelAllNode | this_IfThenElseNode_7= ruleIfThenElseNode | this_SwitchNode_8= ruleSwitchNode | this_WhileDoElseNode_9= ruleWhileDoElseNode | this_ManualSelectorNode_10= ruleManualSelectorNode ) )
            // InternalQualityBtCppParser.g:472:2: (this_ReactiveSequenceNode_0= ruleReactiveSequenceNode | this_SequenceNode_1= ruleSequenceNode | this_SequenceWithMemoryNode_2= ruleSequenceWithMemoryNode | this_FallbackNode_3= ruleFallbackNode | this_ReactiveFallbackNode_4= ruleReactiveFallbackNode | this_ParallelNode_5= ruleParallelNode | this_ParallelAllNode_6= ruleParallelAllNode | this_IfThenElseNode_7= ruleIfThenElseNode | this_SwitchNode_8= ruleSwitchNode | this_WhileDoElseNode_9= ruleWhileDoElseNode | this_ManualSelectorNode_10= ruleManualSelectorNode )
            {
            // InternalQualityBtCppParser.g:472:2: (this_ReactiveSequenceNode_0= ruleReactiveSequenceNode | this_SequenceNode_1= ruleSequenceNode | this_SequenceWithMemoryNode_2= ruleSequenceWithMemoryNode | this_FallbackNode_3= ruleFallbackNode | this_ReactiveFallbackNode_4= ruleReactiveFallbackNode | this_ParallelNode_5= ruleParallelNode | this_ParallelAllNode_6= ruleParallelAllNode | this_IfThenElseNode_7= ruleIfThenElseNode | this_SwitchNode_8= ruleSwitchNode | this_WhileDoElseNode_9= ruleWhileDoElseNode | this_ManualSelectorNode_10= ruleManualSelectorNode )
            int alt8=11;
            switch ( input.LA(1) ) {
            case R_1:
                {
                alt8=1;
                }
                break;
            case HyphenMinusGreaterThanSign:
                {
                alt8=2;
                }
                break;
            case M:
                {
                alt8=3;
                }
                break;
            case QuestionMark:
                {
                alt8=4;
                }
                break;
            case R:
                {
                alt8=5;
                }
                break;
            case VerticalLineVerticalLine:
                {
                alt8=6;
                }
                break;
            case All:
                {
                alt8=7;
                }
                break;
            case IfThenElse:
                {
                alt8=8;
                }
                break;
            case Switch:
                {
                alt8=9;
                }
                break;
            case WhileDoElse:
                {
                alt8=10;
                }
                break;
            case ManualSelector:
                {
                alt8=11;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 8, 0, input);

                throw nvae;
            }

            switch (alt8) {
                case 1 :
                    // InternalQualityBtCppParser.g:473:3: this_ReactiveSequenceNode_0= ruleReactiveSequenceNode
                    {

                    			newCompositeNode(grammarAccess.getControlNodeAccess().getReactiveSequenceNodeParserRuleCall_0());
                    		
                    pushFollow(FOLLOW_2);
                    this_ReactiveSequenceNode_0=ruleReactiveSequenceNode();

                    state._fsp--;


                    			current = this_ReactiveSequenceNode_0;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 2 :
                    // InternalQualityBtCppParser.g:482:3: this_SequenceNode_1= ruleSequenceNode
                    {

                    			newCompositeNode(grammarAccess.getControlNodeAccess().getSequenceNodeParserRuleCall_1());
                    		
                    pushFollow(FOLLOW_2);
                    this_SequenceNode_1=ruleSequenceNode();

                    state._fsp--;


                    			current = this_SequenceNode_1;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 3 :
                    // InternalQualityBtCppParser.g:491:3: this_SequenceWithMemoryNode_2= ruleSequenceWithMemoryNode
                    {

                    			newCompositeNode(grammarAccess.getControlNodeAccess().getSequenceWithMemoryNodeParserRuleCall_2());
                    		
                    pushFollow(FOLLOW_2);
                    this_SequenceWithMemoryNode_2=ruleSequenceWithMemoryNode();

                    state._fsp--;


                    			current = this_SequenceWithMemoryNode_2;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 4 :
                    // InternalQualityBtCppParser.g:500:3: this_FallbackNode_3= ruleFallbackNode
                    {

                    			newCompositeNode(grammarAccess.getControlNodeAccess().getFallbackNodeParserRuleCall_3());
                    		
                    pushFollow(FOLLOW_2);
                    this_FallbackNode_3=ruleFallbackNode();

                    state._fsp--;


                    			current = this_FallbackNode_3;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 5 :
                    // InternalQualityBtCppParser.g:509:3: this_ReactiveFallbackNode_4= ruleReactiveFallbackNode
                    {

                    			newCompositeNode(grammarAccess.getControlNodeAccess().getReactiveFallbackNodeParserRuleCall_4());
                    		
                    pushFollow(FOLLOW_2);
                    this_ReactiveFallbackNode_4=ruleReactiveFallbackNode();

                    state._fsp--;


                    			current = this_ReactiveFallbackNode_4;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 6 :
                    // InternalQualityBtCppParser.g:518:3: this_ParallelNode_5= ruleParallelNode
                    {

                    			newCompositeNode(grammarAccess.getControlNodeAccess().getParallelNodeParserRuleCall_5());
                    		
                    pushFollow(FOLLOW_2);
                    this_ParallelNode_5=ruleParallelNode();

                    state._fsp--;


                    			current = this_ParallelNode_5;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 7 :
                    // InternalQualityBtCppParser.g:527:3: this_ParallelAllNode_6= ruleParallelAllNode
                    {

                    			newCompositeNode(grammarAccess.getControlNodeAccess().getParallelAllNodeParserRuleCall_6());
                    		
                    pushFollow(FOLLOW_2);
                    this_ParallelAllNode_6=ruleParallelAllNode();

                    state._fsp--;


                    			current = this_ParallelAllNode_6;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 8 :
                    // InternalQualityBtCppParser.g:536:3: this_IfThenElseNode_7= ruleIfThenElseNode
                    {

                    			newCompositeNode(grammarAccess.getControlNodeAccess().getIfThenElseNodeParserRuleCall_7());
                    		
                    pushFollow(FOLLOW_2);
                    this_IfThenElseNode_7=ruleIfThenElseNode();

                    state._fsp--;


                    			current = this_IfThenElseNode_7;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 9 :
                    // InternalQualityBtCppParser.g:545:3: this_SwitchNode_8= ruleSwitchNode
                    {

                    			newCompositeNode(grammarAccess.getControlNodeAccess().getSwitchNodeParserRuleCall_8());
                    		
                    pushFollow(FOLLOW_2);
                    this_SwitchNode_8=ruleSwitchNode();

                    state._fsp--;


                    			current = this_SwitchNode_8;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 10 :
                    // InternalQualityBtCppParser.g:554:3: this_WhileDoElseNode_9= ruleWhileDoElseNode
                    {

                    			newCompositeNode(grammarAccess.getControlNodeAccess().getWhileDoElseNodeParserRuleCall_9());
                    		
                    pushFollow(FOLLOW_2);
                    this_WhileDoElseNode_9=ruleWhileDoElseNode();

                    state._fsp--;


                    			current = this_WhileDoElseNode_9;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 11 :
                    // InternalQualityBtCppParser.g:563:3: this_ManualSelectorNode_10= ruleManualSelectorNode
                    {

                    			newCompositeNode(grammarAccess.getControlNodeAccess().getManualSelectorNodeParserRuleCall_10());
                    		
                    pushFollow(FOLLOW_2);
                    this_ManualSelectorNode_10=ruleManualSelectorNode();

                    state._fsp--;


                    			current = this_ManualSelectorNode_10;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleControlNode"


    // $ANTLR start "entryRuleDecoratorNode"
    // InternalQualityBtCppParser.g:575:1: entryRuleDecoratorNode returns [EObject current=null] : iv_ruleDecoratorNode= ruleDecoratorNode EOF ;
    public final EObject entryRuleDecoratorNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDecoratorNode = null;


        try {
            // InternalQualityBtCppParser.g:575:54: (iv_ruleDecoratorNode= ruleDecoratorNode EOF )
            // InternalQualityBtCppParser.g:576:2: iv_ruleDecoratorNode= ruleDecoratorNode EOF
            {
             newCompositeNode(grammarAccess.getDecoratorNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleDecoratorNode=ruleDecoratorNode();

            state._fsp--;

             current =iv_ruleDecoratorNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDecoratorNode"


    // $ANTLR start "ruleDecoratorNode"
    // InternalQualityBtCppParser.g:582:1: ruleDecoratorNode returns [EObject current=null] : (this_RepeatNode_0= ruleRepeatNode | this_ForceFailureNode_1= ruleForceFailureNode | this_ForceSuccessNode_2= ruleForceSuccessNode | this_RetryNode_3= ruleRetryNode | this_InverterNode_4= ruleInverterNode | this_TimeoutNode_5= ruleTimeoutNode | this_KeepRunningUntilFailureNode_6= ruleKeepRunningUntilFailureNode | this_DelayNode_7= ruleDelayNode | this_PreconditionNode_8= rulePreconditionNode | this_RunOnceNode_9= ruleRunOnceNode | this_LoopNode_10= ruleLoopNode | this_ConsumeQueueNode_11= ruleConsumeQueueNode | this_EntryUpdatedDecoratorNode_12= ruleEntryUpdatedDecoratorNode ) ;
    public final EObject ruleDecoratorNode() throws RecognitionException {
        EObject current = null;

        EObject this_RepeatNode_0 = null;

        EObject this_ForceFailureNode_1 = null;

        EObject this_ForceSuccessNode_2 = null;

        EObject this_RetryNode_3 = null;

        EObject this_InverterNode_4 = null;

        EObject this_TimeoutNode_5 = null;

        EObject this_KeepRunningUntilFailureNode_6 = null;

        EObject this_DelayNode_7 = null;

        EObject this_PreconditionNode_8 = null;

        EObject this_RunOnceNode_9 = null;

        EObject this_LoopNode_10 = null;

        EObject this_ConsumeQueueNode_11 = null;

        EObject this_EntryUpdatedDecoratorNode_12 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:588:2: ( (this_RepeatNode_0= ruleRepeatNode | this_ForceFailureNode_1= ruleForceFailureNode | this_ForceSuccessNode_2= ruleForceSuccessNode | this_RetryNode_3= ruleRetryNode | this_InverterNode_4= ruleInverterNode | this_TimeoutNode_5= ruleTimeoutNode | this_KeepRunningUntilFailureNode_6= ruleKeepRunningUntilFailureNode | this_DelayNode_7= ruleDelayNode | this_PreconditionNode_8= rulePreconditionNode | this_RunOnceNode_9= ruleRunOnceNode | this_LoopNode_10= ruleLoopNode | this_ConsumeQueueNode_11= ruleConsumeQueueNode | this_EntryUpdatedDecoratorNode_12= ruleEntryUpdatedDecoratorNode ) )
            // InternalQualityBtCppParser.g:589:2: (this_RepeatNode_0= ruleRepeatNode | this_ForceFailureNode_1= ruleForceFailureNode | this_ForceSuccessNode_2= ruleForceSuccessNode | this_RetryNode_3= ruleRetryNode | this_InverterNode_4= ruleInverterNode | this_TimeoutNode_5= ruleTimeoutNode | this_KeepRunningUntilFailureNode_6= ruleKeepRunningUntilFailureNode | this_DelayNode_7= ruleDelayNode | this_PreconditionNode_8= rulePreconditionNode | this_RunOnceNode_9= ruleRunOnceNode | this_LoopNode_10= ruleLoopNode | this_ConsumeQueueNode_11= ruleConsumeQueueNode | this_EntryUpdatedDecoratorNode_12= ruleEntryUpdatedDecoratorNode )
            {
            // InternalQualityBtCppParser.g:589:2: (this_RepeatNode_0= ruleRepeatNode | this_ForceFailureNode_1= ruleForceFailureNode | this_ForceSuccessNode_2= ruleForceSuccessNode | this_RetryNode_3= ruleRetryNode | this_InverterNode_4= ruleInverterNode | this_TimeoutNode_5= ruleTimeoutNode | this_KeepRunningUntilFailureNode_6= ruleKeepRunningUntilFailureNode | this_DelayNode_7= ruleDelayNode | this_PreconditionNode_8= rulePreconditionNode | this_RunOnceNode_9= ruleRunOnceNode | this_LoopNode_10= ruleLoopNode | this_ConsumeQueueNode_11= ruleConsumeQueueNode | this_EntryUpdatedDecoratorNode_12= ruleEntryUpdatedDecoratorNode )
            int alt9=13;
            switch ( input.LA(1) ) {
            case Repeat:
                {
                alt9=1;
                }
                break;
            case ForceFailure:
                {
                alt9=2;
                }
                break;
            case ForceSuccess:
                {
                alt9=3;
                }
                break;
            case Retry:
                {
                alt9=4;
                }
                break;
            case Inverter:
                {
                alt9=5;
                }
                break;
            case Timeout:
                {
                alt9=6;
                }
                break;
            case KeepRunningUntilFailure:
                {
                alt9=7;
                }
                break;
            case Delay:
                {
                alt9=8;
                }
                break;
            case Precondition:
                {
                alt9=9;
                }
                break;
            case RunOnce:
                {
                alt9=10;
                }
                break;
            case Loop:
                {
                alt9=11;
                }
                break;
            case ConsumeQueue:
                {
                alt9=12;
                }
                break;
            case EntryUpdatedDecorator:
                {
                alt9=13;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 9, 0, input);

                throw nvae;
            }

            switch (alt9) {
                case 1 :
                    // InternalQualityBtCppParser.g:590:3: this_RepeatNode_0= ruleRepeatNode
                    {

                    			newCompositeNode(grammarAccess.getDecoratorNodeAccess().getRepeatNodeParserRuleCall_0());
                    		
                    pushFollow(FOLLOW_2);
                    this_RepeatNode_0=ruleRepeatNode();

                    state._fsp--;


                    			current = this_RepeatNode_0;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 2 :
                    // InternalQualityBtCppParser.g:599:3: this_ForceFailureNode_1= ruleForceFailureNode
                    {

                    			newCompositeNode(grammarAccess.getDecoratorNodeAccess().getForceFailureNodeParserRuleCall_1());
                    		
                    pushFollow(FOLLOW_2);
                    this_ForceFailureNode_1=ruleForceFailureNode();

                    state._fsp--;


                    			current = this_ForceFailureNode_1;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 3 :
                    // InternalQualityBtCppParser.g:608:3: this_ForceSuccessNode_2= ruleForceSuccessNode
                    {

                    			newCompositeNode(grammarAccess.getDecoratorNodeAccess().getForceSuccessNodeParserRuleCall_2());
                    		
                    pushFollow(FOLLOW_2);
                    this_ForceSuccessNode_2=ruleForceSuccessNode();

                    state._fsp--;


                    			current = this_ForceSuccessNode_2;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 4 :
                    // InternalQualityBtCppParser.g:617:3: this_RetryNode_3= ruleRetryNode
                    {

                    			newCompositeNode(grammarAccess.getDecoratorNodeAccess().getRetryNodeParserRuleCall_3());
                    		
                    pushFollow(FOLLOW_2);
                    this_RetryNode_3=ruleRetryNode();

                    state._fsp--;


                    			current = this_RetryNode_3;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 5 :
                    // InternalQualityBtCppParser.g:626:3: this_InverterNode_4= ruleInverterNode
                    {

                    			newCompositeNode(grammarAccess.getDecoratorNodeAccess().getInverterNodeParserRuleCall_4());
                    		
                    pushFollow(FOLLOW_2);
                    this_InverterNode_4=ruleInverterNode();

                    state._fsp--;


                    			current = this_InverterNode_4;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 6 :
                    // InternalQualityBtCppParser.g:635:3: this_TimeoutNode_5= ruleTimeoutNode
                    {

                    			newCompositeNode(grammarAccess.getDecoratorNodeAccess().getTimeoutNodeParserRuleCall_5());
                    		
                    pushFollow(FOLLOW_2);
                    this_TimeoutNode_5=ruleTimeoutNode();

                    state._fsp--;


                    			current = this_TimeoutNode_5;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 7 :
                    // InternalQualityBtCppParser.g:644:3: this_KeepRunningUntilFailureNode_6= ruleKeepRunningUntilFailureNode
                    {

                    			newCompositeNode(grammarAccess.getDecoratorNodeAccess().getKeepRunningUntilFailureNodeParserRuleCall_6());
                    		
                    pushFollow(FOLLOW_2);
                    this_KeepRunningUntilFailureNode_6=ruleKeepRunningUntilFailureNode();

                    state._fsp--;


                    			current = this_KeepRunningUntilFailureNode_6;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 8 :
                    // InternalQualityBtCppParser.g:653:3: this_DelayNode_7= ruleDelayNode
                    {

                    			newCompositeNode(grammarAccess.getDecoratorNodeAccess().getDelayNodeParserRuleCall_7());
                    		
                    pushFollow(FOLLOW_2);
                    this_DelayNode_7=ruleDelayNode();

                    state._fsp--;


                    			current = this_DelayNode_7;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 9 :
                    // InternalQualityBtCppParser.g:662:3: this_PreconditionNode_8= rulePreconditionNode
                    {

                    			newCompositeNode(grammarAccess.getDecoratorNodeAccess().getPreconditionNodeParserRuleCall_8());
                    		
                    pushFollow(FOLLOW_2);
                    this_PreconditionNode_8=rulePreconditionNode();

                    state._fsp--;


                    			current = this_PreconditionNode_8;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 10 :
                    // InternalQualityBtCppParser.g:671:3: this_RunOnceNode_9= ruleRunOnceNode
                    {

                    			newCompositeNode(grammarAccess.getDecoratorNodeAccess().getRunOnceNodeParserRuleCall_9());
                    		
                    pushFollow(FOLLOW_2);
                    this_RunOnceNode_9=ruleRunOnceNode();

                    state._fsp--;


                    			current = this_RunOnceNode_9;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 11 :
                    // InternalQualityBtCppParser.g:680:3: this_LoopNode_10= ruleLoopNode
                    {

                    			newCompositeNode(grammarAccess.getDecoratorNodeAccess().getLoopNodeParserRuleCall_10());
                    		
                    pushFollow(FOLLOW_2);
                    this_LoopNode_10=ruleLoopNode();

                    state._fsp--;


                    			current = this_LoopNode_10;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 12 :
                    // InternalQualityBtCppParser.g:689:3: this_ConsumeQueueNode_11= ruleConsumeQueueNode
                    {

                    			newCompositeNode(grammarAccess.getDecoratorNodeAccess().getConsumeQueueNodeParserRuleCall_11());
                    		
                    pushFollow(FOLLOW_2);
                    this_ConsumeQueueNode_11=ruleConsumeQueueNode();

                    state._fsp--;


                    			current = this_ConsumeQueueNode_11;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 13 :
                    // InternalQualityBtCppParser.g:698:3: this_EntryUpdatedDecoratorNode_12= ruleEntryUpdatedDecoratorNode
                    {

                    			newCompositeNode(grammarAccess.getDecoratorNodeAccess().getEntryUpdatedDecoratorNodeParserRuleCall_12());
                    		
                    pushFollow(FOLLOW_2);
                    this_EntryUpdatedDecoratorNode_12=ruleEntryUpdatedDecoratorNode();

                    state._fsp--;


                    			current = this_EntryUpdatedDecoratorNode_12;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDecoratorNode"


    // $ANTLR start "entryRuleBehaviorTree"
    // InternalQualityBtCppParser.g:710:1: entryRuleBehaviorTree returns [EObject current=null] : iv_ruleBehaviorTree= ruleBehaviorTree EOF ;
    public final EObject entryRuleBehaviorTree() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBehaviorTree = null;


        try {
            // InternalQualityBtCppParser.g:710:53: (iv_ruleBehaviorTree= ruleBehaviorTree EOF )
            // InternalQualityBtCppParser.g:711:2: iv_ruleBehaviorTree= ruleBehaviorTree EOF
            {
             newCompositeNode(grammarAccess.getBehaviorTreeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleBehaviorTree=ruleBehaviorTree();

            state._fsp--;

             current =iv_ruleBehaviorTree; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBehaviorTree"


    // $ANTLR start "ruleBehaviorTree"
    // InternalQualityBtCppParser.g:717:1: ruleBehaviorTree returns [EObject current=null] : (otherlv_0= BehaviorTree otherlv_1= ID otherlv_2= EqualsSign ( (lv_ID_3_0= ruleEString ) ) this_BEGIN_4= RULE_BEGIN ( (lv_node_5_0= ruleTreeNode ) ) ( (lv_node_6_0= ruleTreeNode ) )* this_END_7= RULE_END ) ;
    public final EObject ruleBehaviorTree() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token this_BEGIN_4=null;
        Token this_END_7=null;
        AntlrDatatypeRuleToken lv_ID_3_0 = null;

        EObject lv_node_5_0 = null;

        EObject lv_node_6_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:723:2: ( (otherlv_0= BehaviorTree otherlv_1= ID otherlv_2= EqualsSign ( (lv_ID_3_0= ruleEString ) ) this_BEGIN_4= RULE_BEGIN ( (lv_node_5_0= ruleTreeNode ) ) ( (lv_node_6_0= ruleTreeNode ) )* this_END_7= RULE_END ) )
            // InternalQualityBtCppParser.g:724:2: (otherlv_0= BehaviorTree otherlv_1= ID otherlv_2= EqualsSign ( (lv_ID_3_0= ruleEString ) ) this_BEGIN_4= RULE_BEGIN ( (lv_node_5_0= ruleTreeNode ) ) ( (lv_node_6_0= ruleTreeNode ) )* this_END_7= RULE_END )
            {
            // InternalQualityBtCppParser.g:724:2: (otherlv_0= BehaviorTree otherlv_1= ID otherlv_2= EqualsSign ( (lv_ID_3_0= ruleEString ) ) this_BEGIN_4= RULE_BEGIN ( (lv_node_5_0= ruleTreeNode ) ) ( (lv_node_6_0= ruleTreeNode ) )* this_END_7= RULE_END )
            // InternalQualityBtCppParser.g:725:3: otherlv_0= BehaviorTree otherlv_1= ID otherlv_2= EqualsSign ( (lv_ID_3_0= ruleEString ) ) this_BEGIN_4= RULE_BEGIN ( (lv_node_5_0= ruleTreeNode ) ) ( (lv_node_6_0= ruleTreeNode ) )* this_END_7= RULE_END
            {
            otherlv_0=(Token)match(input,BehaviorTree,FOLLOW_7); 

            			newLeafNode(otherlv_0, grammarAccess.getBehaviorTreeAccess().getBehaviorTreeKeyword_0());
            		
            otherlv_1=(Token)match(input,ID,FOLLOW_8); 

            			newLeafNode(otherlv_1, grammarAccess.getBehaviorTreeAccess().getIDKeyword_1());
            		
            otherlv_2=(Token)match(input,EqualsSign,FOLLOW_3); 

            			newLeafNode(otherlv_2, grammarAccess.getBehaviorTreeAccess().getEqualsSignKeyword_2());
            		
            // InternalQualityBtCppParser.g:737:3: ( (lv_ID_3_0= ruleEString ) )
            // InternalQualityBtCppParser.g:738:4: (lv_ID_3_0= ruleEString )
            {
            // InternalQualityBtCppParser.g:738:4: (lv_ID_3_0= ruleEString )
            // InternalQualityBtCppParser.g:739:5: lv_ID_3_0= ruleEString
            {

            					newCompositeNode(grammarAccess.getBehaviorTreeAccess().getIDEStringParserRuleCall_3_0());
            				
            pushFollow(FOLLOW_4);
            lv_ID_3_0=ruleEString();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getBehaviorTreeRule());
            					}
            					set(
            						current,
            						"ID",
            						lv_ID_3_0,
            						"org.xtext.btcpp.QualityBtCpp.EString");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            this_BEGIN_4=(Token)match(input,RULE_BEGIN,FOLLOW_9); 

            			newLeafNode(this_BEGIN_4, grammarAccess.getBehaviorTreeAccess().getBEGINTerminalRuleCall_4());
            		
            // InternalQualityBtCppParser.g:760:3: ( (lv_node_5_0= ruleTreeNode ) )
            // InternalQualityBtCppParser.g:761:4: (lv_node_5_0= ruleTreeNode )
            {
            // InternalQualityBtCppParser.g:761:4: (lv_node_5_0= ruleTreeNode )
            // InternalQualityBtCppParser.g:762:5: lv_node_5_0= ruleTreeNode
            {

            					newCompositeNode(grammarAccess.getBehaviorTreeAccess().getNodeTreeNodeParserRuleCall_5_0());
            				
            pushFollow(FOLLOW_10);
            lv_node_5_0=ruleTreeNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getBehaviorTreeRule());
            					}
            					add(
            						current,
            						"node",
            						lv_node_5_0,
            						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            // InternalQualityBtCppParser.g:779:3: ( (lv_node_6_0= ruleTreeNode ) )*
            loop10:
            do {
                int alt10=2;
                int LA10_0 = input.LA(1);

                if ( ((LA10_0>=KeepRunningUntilFailure && LA10_0<=SetBlackboard)||(LA10_0>=ConsumeQueue && LA10_0<=ScriptAction)||LA10_0==WhileDoElse||(LA10_0>=CoroAction && LA10_0<=IfThenElse)||LA10_0==Inverter||(LA10_0>=RunOnce && LA10_0<=Sleep)||LA10_0==Loop||LA10_0==Test||(LA10_0>=M && LA10_0<=HyphenMinusGreaterThanSign)||(LA10_0>=R && LA10_0<=VerticalLineVerticalLine)||LA10_0==QuestionMark) ) {
                    alt10=1;
                }


                switch (alt10) {
            	case 1 :
            	    // InternalQualityBtCppParser.g:780:4: (lv_node_6_0= ruleTreeNode )
            	    {
            	    // InternalQualityBtCppParser.g:780:4: (lv_node_6_0= ruleTreeNode )
            	    // InternalQualityBtCppParser.g:781:5: lv_node_6_0= ruleTreeNode
            	    {

            	    					newCompositeNode(grammarAccess.getBehaviorTreeAccess().getNodeTreeNodeParserRuleCall_6_0());
            	    				
            	    pushFollow(FOLLOW_10);
            	    lv_node_6_0=ruleTreeNode();

            	    state._fsp--;


            	    					if (current==null) {
            	    						current = createModelElementForParent(grammarAccess.getBehaviorTreeRule());
            	    					}
            	    					add(
            	    						current,
            	    						"node",
            	    						lv_node_6_0,
            	    						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            	    					afterParserOrEnumRuleCall();
            	    				

            	    }


            	    }
            	    break;

            	default :
            	    break loop10;
                }
            } while (true);

            this_END_7=(Token)match(input,RULE_END,FOLLOW_2); 

            			newLeafNode(this_END_7, grammarAccess.getBehaviorTreeAccess().getENDTerminalRuleCall_7());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBehaviorTree"


    // $ANTLR start "entryRuleEString"
    // InternalQualityBtCppParser.g:806:1: entryRuleEString returns [String current=null] : iv_ruleEString= ruleEString EOF ;
    public final String entryRuleEString() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleEString = null;


        try {
            // InternalQualityBtCppParser.g:806:47: (iv_ruleEString= ruleEString EOF )
            // InternalQualityBtCppParser.g:807:2: iv_ruleEString= ruleEString EOF
            {
             newCompositeNode(grammarAccess.getEStringRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleEString=ruleEString();

            state._fsp--;

             current =iv_ruleEString.getText(); 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEString"


    // $ANTLR start "ruleEString"
    // InternalQualityBtCppParser.g:813:1: ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_STRING_0= RULE_STRING | this_ID_1= RULE_ID ) ;
    public final AntlrDatatypeRuleToken ruleEString() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_STRING_0=null;
        Token this_ID_1=null;


        	enterRule();

        try {
            // InternalQualityBtCppParser.g:819:2: ( (this_STRING_0= RULE_STRING | this_ID_1= RULE_ID ) )
            // InternalQualityBtCppParser.g:820:2: (this_STRING_0= RULE_STRING | this_ID_1= RULE_ID )
            {
            // InternalQualityBtCppParser.g:820:2: (this_STRING_0= RULE_STRING | this_ID_1= RULE_ID )
            int alt11=2;
            int LA11_0 = input.LA(1);

            if ( (LA11_0==RULE_STRING) ) {
                alt11=1;
            }
            else if ( (LA11_0==RULE_ID) ) {
                alt11=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 11, 0, input);

                throw nvae;
            }
            switch (alt11) {
                case 1 :
                    // InternalQualityBtCppParser.g:821:3: this_STRING_0= RULE_STRING
                    {
                    this_STRING_0=(Token)match(input,RULE_STRING,FOLLOW_2); 

                    			current.merge(this_STRING_0);
                    		

                    			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
                    		

                    }
                    break;
                case 2 :
                    // InternalQualityBtCppParser.g:829:3: this_ID_1= RULE_ID
                    {
                    this_ID_1=(Token)match(input,RULE_ID,FOLLOW_2); 

                    			current.merge(this_ID_1);
                    		

                    			newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1());
                    		

                    }
                    break;

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEString"


    // $ANTLR start "entryRuleParameter"
    // InternalQualityBtCppParser.g:840:1: entryRuleParameter returns [EObject current=null] : iv_ruleParameter= ruleParameter EOF ;
    public final EObject entryRuleParameter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParameter = null;


        try {
            // InternalQualityBtCppParser.g:840:50: (iv_ruleParameter= ruleParameter EOF )
            // InternalQualityBtCppParser.g:841:2: iv_ruleParameter= ruleParameter EOF
            {
             newCompositeNode(grammarAccess.getParameterRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleParameter=ruleParameter();

            state._fsp--;

             current =iv_ruleParameter; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleParameter"


    // $ANTLR start "ruleParameter"
    // InternalQualityBtCppParser.g:847:1: ruleParameter returns [EObject current=null] : ( ( (lv_key_0_0= ruleEString ) ) otherlv_1= EqualsSign ( (lv_value_2_0= ruleEString ) ) ) ;
    public final EObject ruleParameter() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        AntlrDatatypeRuleToken lv_key_0_0 = null;

        AntlrDatatypeRuleToken lv_value_2_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:853:2: ( ( ( (lv_key_0_0= ruleEString ) ) otherlv_1= EqualsSign ( (lv_value_2_0= ruleEString ) ) ) )
            // InternalQualityBtCppParser.g:854:2: ( ( (lv_key_0_0= ruleEString ) ) otherlv_1= EqualsSign ( (lv_value_2_0= ruleEString ) ) )
            {
            // InternalQualityBtCppParser.g:854:2: ( ( (lv_key_0_0= ruleEString ) ) otherlv_1= EqualsSign ( (lv_value_2_0= ruleEString ) ) )
            // InternalQualityBtCppParser.g:855:3: ( (lv_key_0_0= ruleEString ) ) otherlv_1= EqualsSign ( (lv_value_2_0= ruleEString ) )
            {
            // InternalQualityBtCppParser.g:855:3: ( (lv_key_0_0= ruleEString ) )
            // InternalQualityBtCppParser.g:856:4: (lv_key_0_0= ruleEString )
            {
            // InternalQualityBtCppParser.g:856:4: (lv_key_0_0= ruleEString )
            // InternalQualityBtCppParser.g:857:5: lv_key_0_0= ruleEString
            {

            					newCompositeNode(grammarAccess.getParameterAccess().getKeyEStringParserRuleCall_0_0());
            				
            pushFollow(FOLLOW_8);
            lv_key_0_0=ruleEString();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getParameterRule());
            					}
            					set(
            						current,
            						"key",
            						lv_key_0_0,
            						"org.xtext.btcpp.QualityBtCpp.EString");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            otherlv_1=(Token)match(input,EqualsSign,FOLLOW_3); 

            			newLeafNode(otherlv_1, grammarAccess.getParameterAccess().getEqualsSignKeyword_1());
            		
            // InternalQualityBtCppParser.g:878:3: ( (lv_value_2_0= ruleEString ) )
            // InternalQualityBtCppParser.g:879:4: (lv_value_2_0= ruleEString )
            {
            // InternalQualityBtCppParser.g:879:4: (lv_value_2_0= ruleEString )
            // InternalQualityBtCppParser.g:880:5: lv_value_2_0= ruleEString
            {

            					newCompositeNode(grammarAccess.getParameterAccess().getValueEStringParserRuleCall_2_0());
            				
            pushFollow(FOLLOW_2);
            lv_value_2_0=ruleEString();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getParameterRule());
            					}
            					set(
            						current,
            						"value",
            						lv_value_2_0,
            						"org.xtext.btcpp.QualityBtCpp.EString");
            					afterParserOrEnumRuleCall();
            				

            }


            }


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleParameter"


    // $ANTLR start "entryRuleQuality"
    // InternalQualityBtCppParser.g:901:1: entryRuleQuality returns [EObject current=null] : iv_ruleQuality= ruleQuality EOF ;
    public final EObject entryRuleQuality() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleQuality = null;


        try {
            // InternalQualityBtCppParser.g:901:48: (iv_ruleQuality= ruleQuality EOF )
            // InternalQualityBtCppParser.g:902:2: iv_ruleQuality= ruleQuality EOF
            {
             newCompositeNode(grammarAccess.getQualityRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleQuality=ruleQuality();

            state._fsp--;

             current =iv_ruleQuality; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQuality"


    // $ANTLR start "ruleQuality"
    // InternalQualityBtCppParser.g:908:1: ruleQuality returns [EObject current=null] : ( () otherlv_1= Quality otherlv_2= EqualsSign ( (lv_ID_3_0= ruleEString ) ) (otherlv_4= LeftParenthesis ( (lv_qualityreq_5_0= ruleQualityRequirement ) ) (otherlv_6= Comma ( (lv_qualityreq_7_0= ruleQualityRequirement ) ) )* otherlv_8= RightParenthesis )? ) ;
    public final EObject ruleQuality() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        AntlrDatatypeRuleToken lv_ID_3_0 = null;

        EObject lv_qualityreq_5_0 = null;

        EObject lv_qualityreq_7_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:914:2: ( ( () otherlv_1= Quality otherlv_2= EqualsSign ( (lv_ID_3_0= ruleEString ) ) (otherlv_4= LeftParenthesis ( (lv_qualityreq_5_0= ruleQualityRequirement ) ) (otherlv_6= Comma ( (lv_qualityreq_7_0= ruleQualityRequirement ) ) )* otherlv_8= RightParenthesis )? ) )
            // InternalQualityBtCppParser.g:915:2: ( () otherlv_1= Quality otherlv_2= EqualsSign ( (lv_ID_3_0= ruleEString ) ) (otherlv_4= LeftParenthesis ( (lv_qualityreq_5_0= ruleQualityRequirement ) ) (otherlv_6= Comma ( (lv_qualityreq_7_0= ruleQualityRequirement ) ) )* otherlv_8= RightParenthesis )? )
            {
            // InternalQualityBtCppParser.g:915:2: ( () otherlv_1= Quality otherlv_2= EqualsSign ( (lv_ID_3_0= ruleEString ) ) (otherlv_4= LeftParenthesis ( (lv_qualityreq_5_0= ruleQualityRequirement ) ) (otherlv_6= Comma ( (lv_qualityreq_7_0= ruleQualityRequirement ) ) )* otherlv_8= RightParenthesis )? )
            // InternalQualityBtCppParser.g:916:3: () otherlv_1= Quality otherlv_2= EqualsSign ( (lv_ID_3_0= ruleEString ) ) (otherlv_4= LeftParenthesis ( (lv_qualityreq_5_0= ruleQualityRequirement ) ) (otherlv_6= Comma ( (lv_qualityreq_7_0= ruleQualityRequirement ) ) )* otherlv_8= RightParenthesis )?
            {
            // InternalQualityBtCppParser.g:916:3: ()
            // InternalQualityBtCppParser.g:917:4: 
            {

            				current = forceCreateModelElement(
            					grammarAccess.getQualityAccess().getQualityAction_0(),
            					current);
            			

            }

            otherlv_1=(Token)match(input,Quality,FOLLOW_8); 

            			newLeafNode(otherlv_1, grammarAccess.getQualityAccess().getQualityKeyword_1());
            		
            otherlv_2=(Token)match(input,EqualsSign,FOLLOW_3); 

            			newLeafNode(otherlv_2, grammarAccess.getQualityAccess().getEqualsSignKeyword_2());
            		
            // InternalQualityBtCppParser.g:931:3: ( (lv_ID_3_0= ruleEString ) )
            // InternalQualityBtCppParser.g:932:4: (lv_ID_3_0= ruleEString )
            {
            // InternalQualityBtCppParser.g:932:4: (lv_ID_3_0= ruleEString )
            // InternalQualityBtCppParser.g:933:5: lv_ID_3_0= ruleEString
            {

            					newCompositeNode(grammarAccess.getQualityAccess().getIDEStringParserRuleCall_3_0());
            				
            pushFollow(FOLLOW_11);
            lv_ID_3_0=ruleEString();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getQualityRule());
            					}
            					set(
            						current,
            						"ID",
            						lv_ID_3_0,
            						"org.xtext.btcpp.QualityBtCpp.EString");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            // InternalQualityBtCppParser.g:950:3: (otherlv_4= LeftParenthesis ( (lv_qualityreq_5_0= ruleQualityRequirement ) ) (otherlv_6= Comma ( (lv_qualityreq_7_0= ruleQualityRequirement ) ) )* otherlv_8= RightParenthesis )?
            int alt13=2;
            int LA13_0 = input.LA(1);

            if ( (LA13_0==LeftParenthesis) ) {
                int LA13_1 = input.LA(2);

                if ( (LA13_1==QualityReq) ) {
                    alt13=1;
                }
            }
            switch (alt13) {
                case 1 :
                    // InternalQualityBtCppParser.g:951:4: otherlv_4= LeftParenthesis ( (lv_qualityreq_5_0= ruleQualityRequirement ) ) (otherlv_6= Comma ( (lv_qualityreq_7_0= ruleQualityRequirement ) ) )* otherlv_8= RightParenthesis
                    {
                    otherlv_4=(Token)match(input,LeftParenthesis,FOLLOW_12); 

                    				newLeafNode(otherlv_4, grammarAccess.getQualityAccess().getLeftParenthesisKeyword_4_0());
                    			
                    // InternalQualityBtCppParser.g:955:4: ( (lv_qualityreq_5_0= ruleQualityRequirement ) )
                    // InternalQualityBtCppParser.g:956:5: (lv_qualityreq_5_0= ruleQualityRequirement )
                    {
                    // InternalQualityBtCppParser.g:956:5: (lv_qualityreq_5_0= ruleQualityRequirement )
                    // InternalQualityBtCppParser.g:957:6: lv_qualityreq_5_0= ruleQualityRequirement
                    {

                    						newCompositeNode(grammarAccess.getQualityAccess().getQualityreqQualityRequirementParserRuleCall_4_1_0());
                    					
                    pushFollow(FOLLOW_13);
                    lv_qualityreq_5_0=ruleQualityRequirement();

                    state._fsp--;


                    						if (current==null) {
                    							current = createModelElementForParent(grammarAccess.getQualityRule());
                    						}
                    						add(
                    							current,
                    							"qualityreq",
                    							lv_qualityreq_5_0,
                    							"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:974:4: (otherlv_6= Comma ( (lv_qualityreq_7_0= ruleQualityRequirement ) ) )*
                    loop12:
                    do {
                        int alt12=2;
                        int LA12_0 = input.LA(1);

                        if ( (LA12_0==Comma) ) {
                            alt12=1;
                        }


                        switch (alt12) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:975:5: otherlv_6= Comma ( (lv_qualityreq_7_0= ruleQualityRequirement ) )
                    	    {
                    	    otherlv_6=(Token)match(input,Comma,FOLLOW_12); 

                    	    					newLeafNode(otherlv_6, grammarAccess.getQualityAccess().getCommaKeyword_4_2_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:979:5: ( (lv_qualityreq_7_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:980:6: (lv_qualityreq_7_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:980:6: (lv_qualityreq_7_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:981:7: lv_qualityreq_7_0= ruleQualityRequirement
                    	    {

                    	    							newCompositeNode(grammarAccess.getQualityAccess().getQualityreqQualityRequirementParserRuleCall_4_2_1_0());
                    	    						
                    	    pushFollow(FOLLOW_13);
                    	    lv_qualityreq_7_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    							if (current==null) {
                    	    								current = createModelElementForParent(grammarAccess.getQualityRule());
                    	    							}
                    	    							add(
                    	    								current,
                    	    								"qualityreq",
                    	    								lv_qualityreq_7_0,
                    	    								"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop12;
                        }
                    } while (true);

                    otherlv_8=(Token)match(input,RightParenthesis,FOLLOW_2); 

                    				newLeafNode(otherlv_8, grammarAccess.getQualityAccess().getRightParenthesisKeyword_4_3());
                    			

                    }
                    break;

            }


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQuality"


    // $ANTLR start "entryRuleQualityRequirement"
    // InternalQualityBtCppParser.g:1008:1: entryRuleQualityRequirement returns [EObject current=null] : iv_ruleQualityRequirement= ruleQualityRequirement EOF ;
    public final EObject entryRuleQualityRequirement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleQualityRequirement = null;


        try {
            // InternalQualityBtCppParser.g:1008:59: (iv_ruleQualityRequirement= ruleQualityRequirement EOF )
            // InternalQualityBtCppParser.g:1009:2: iv_ruleQualityRequirement= ruleQualityRequirement EOF
            {
             newCompositeNode(grammarAccess.getQualityRequirementRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleQualityRequirement=ruleQualityRequirement();

            state._fsp--;

             current =iv_ruleQualityRequirement; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQualityRequirement"


    // $ANTLR start "ruleQualityRequirement"
    // InternalQualityBtCppParser.g:1015:1: ruleQualityRequirement returns [EObject current=null] : ( () otherlv_1= QualityReq otherlv_2= ID otherlv_3= EqualsSign ( (lv_ID_4_0= ruleEString ) ) otherlv_5= Description otherlv_6= EqualsSign ( (lv_description_7_0= ruleEString ) ) ) ;
    public final EObject ruleQualityRequirement() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        AntlrDatatypeRuleToken lv_ID_4_0 = null;

        AntlrDatatypeRuleToken lv_description_7_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:1021:2: ( ( () otherlv_1= QualityReq otherlv_2= ID otherlv_3= EqualsSign ( (lv_ID_4_0= ruleEString ) ) otherlv_5= Description otherlv_6= EqualsSign ( (lv_description_7_0= ruleEString ) ) ) )
            // InternalQualityBtCppParser.g:1022:2: ( () otherlv_1= QualityReq otherlv_2= ID otherlv_3= EqualsSign ( (lv_ID_4_0= ruleEString ) ) otherlv_5= Description otherlv_6= EqualsSign ( (lv_description_7_0= ruleEString ) ) )
            {
            // InternalQualityBtCppParser.g:1022:2: ( () otherlv_1= QualityReq otherlv_2= ID otherlv_3= EqualsSign ( (lv_ID_4_0= ruleEString ) ) otherlv_5= Description otherlv_6= EqualsSign ( (lv_description_7_0= ruleEString ) ) )
            // InternalQualityBtCppParser.g:1023:3: () otherlv_1= QualityReq otherlv_2= ID otherlv_3= EqualsSign ( (lv_ID_4_0= ruleEString ) ) otherlv_5= Description otherlv_6= EqualsSign ( (lv_description_7_0= ruleEString ) )
            {
            // InternalQualityBtCppParser.g:1023:3: ()
            // InternalQualityBtCppParser.g:1024:4: 
            {

            				current = forceCreateModelElement(
            					grammarAccess.getQualityRequirementAccess().getQualityRequirementAction_0(),
            					current);
            			

            }

            otherlv_1=(Token)match(input,QualityReq,FOLLOW_7); 

            			newLeafNode(otherlv_1, grammarAccess.getQualityRequirementAccess().getQualityReqKeyword_1());
            		
            otherlv_2=(Token)match(input,ID,FOLLOW_8); 

            			newLeafNode(otherlv_2, grammarAccess.getQualityRequirementAccess().getIDKeyword_2());
            		
            otherlv_3=(Token)match(input,EqualsSign,FOLLOW_3); 

            			newLeafNode(otherlv_3, grammarAccess.getQualityRequirementAccess().getEqualsSignKeyword_3());
            		
            // InternalQualityBtCppParser.g:1042:3: ( (lv_ID_4_0= ruleEString ) )
            // InternalQualityBtCppParser.g:1043:4: (lv_ID_4_0= ruleEString )
            {
            // InternalQualityBtCppParser.g:1043:4: (lv_ID_4_0= ruleEString )
            // InternalQualityBtCppParser.g:1044:5: lv_ID_4_0= ruleEString
            {

            					newCompositeNode(grammarAccess.getQualityRequirementAccess().getIDEStringParserRuleCall_4_0());
            				
            pushFollow(FOLLOW_14);
            lv_ID_4_0=ruleEString();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getQualityRequirementRule());
            					}
            					set(
            						current,
            						"ID",
            						lv_ID_4_0,
            						"org.xtext.btcpp.QualityBtCpp.EString");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            otherlv_5=(Token)match(input,Description,FOLLOW_8); 

            			newLeafNode(otherlv_5, grammarAccess.getQualityRequirementAccess().getDescriptionKeyword_5());
            		
            otherlv_6=(Token)match(input,EqualsSign,FOLLOW_3); 

            			newLeafNode(otherlv_6, grammarAccess.getQualityRequirementAccess().getEqualsSignKeyword_6());
            		
            // InternalQualityBtCppParser.g:1069:3: ( (lv_description_7_0= ruleEString ) )
            // InternalQualityBtCppParser.g:1070:4: (lv_description_7_0= ruleEString )
            {
            // InternalQualityBtCppParser.g:1070:4: (lv_description_7_0= ruleEString )
            // InternalQualityBtCppParser.g:1071:5: lv_description_7_0= ruleEString
            {

            					newCompositeNode(grammarAccess.getQualityRequirementAccess().getDescriptionEStringParserRuleCall_7_0());
            				
            pushFollow(FOLLOW_2);
            lv_description_7_0=ruleEString();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getQualityRequirementRule());
            					}
            					set(
            						current,
            						"description",
            						lv_description_7_0,
            						"org.xtext.btcpp.QualityBtCpp.EString");
            					afterParserOrEnumRuleCall();
            				

            }


            }


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQualityRequirement"


    // $ANTLR start "entryRuleFallbackNode"
    // InternalQualityBtCppParser.g:1092:1: entryRuleFallbackNode returns [EObject current=null] : iv_ruleFallbackNode= ruleFallbackNode EOF ;
    public final EObject entryRuleFallbackNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFallbackNode = null;


        try {
            // InternalQualityBtCppParser.g:1092:53: (iv_ruleFallbackNode= ruleFallbackNode EOF )
            // InternalQualityBtCppParser.g:1093:2: iv_ruleFallbackNode= ruleFallbackNode EOF
            {
             newCompositeNode(grammarAccess.getFallbackNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleFallbackNode=ruleFallbackNode();

            state._fsp--;

             current =iv_ruleFallbackNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFallbackNode"


    // $ANTLR start "ruleFallbackNode"
    // InternalQualityBtCppParser.g:1099:1: ruleFallbackNode returns [EObject current=null] : (otherlv_0= QuestionMark ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END ) ;
    public final EObject ruleFallbackNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token this_BEGIN_22=null;
        Token this_END_25=null;
        AntlrDatatypeRuleToken lv_ID_5_0 = null;

        AntlrDatatypeRuleToken lv_name_8_0 = null;

        EObject lv_parameters_10_0 = null;

        EObject lv_parameters_12_0 = null;

        EObject lv_satisfices_14_0 = null;

        EObject lv_satisfices_16_0 = null;

        EObject lv_satisfies_18_0 = null;

        EObject lv_satisfies_20_0 = null;

        EObject lv_child_23_0 = null;

        EObject lv_child_24_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:1105:2: ( (otherlv_0= QuestionMark ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END ) )
            // InternalQualityBtCppParser.g:1106:2: (otherlv_0= QuestionMark ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END )
            {
            // InternalQualityBtCppParser.g:1106:2: (otherlv_0= QuestionMark ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END )
            // InternalQualityBtCppParser.g:1107:3: otherlv_0= QuestionMark ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END
            {
            otherlv_0=(Token)match(input,QuestionMark,FOLLOW_15); 

            			newLeafNode(otherlv_0, grammarAccess.getFallbackNodeAccess().getQuestionMarkKeyword_0());
            		
            // InternalQualityBtCppParser.g:1111:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt18=2;
            int LA18_0 = input.LA(1);

            if ( ((LA18_0>=Parameters && LA18_0<=Satisfies)||LA18_0==Name||LA18_0==ID||(LA18_0>=LeftParenthesis && LA18_0<=RightParenthesis)) ) {
                alt18=1;
            }
            switch (alt18) {
                case 1 :
                    // InternalQualityBtCppParser.g:1112:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:1112:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:1113:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1());
                    				
                    // InternalQualityBtCppParser.g:1116:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:1117:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:1117:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+
                    int cnt17=0;
                    loop17:
                    do {
                        int alt17=8;
                        int LA17_0 = input.LA(1);

                        if ( LA17_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1(), 0) ) {
                            alt17=1;
                        }
                        else if ( LA17_0 == ID && getUnorderedGroupHelper().canSelect(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1(), 1) ) {
                            alt17=2;
                        }
                        else if ( LA17_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1(), 2) ) {
                            alt17=3;
                        }
                        else if ( LA17_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1(), 3) ) {
                            alt17=4;
                        }
                        else if ( LA17_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1(), 4) ) {
                            alt17=5;
                        }
                        else if ( LA17_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1(), 5) ) {
                            alt17=6;
                        }
                        else if ( LA17_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1(), 6) ) {
                            alt17=7;
                        }


                        switch (alt17) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:1118:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:1118:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:1119:5: {...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleFallbackNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:1119:109: ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:1120:6: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:1123:9: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:1123:10: {...}? => (otherlv_2= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleFallbackNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:1123:19: (otherlv_2= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:1123:20: otherlv_2= LeftParenthesis
                    	    {
                    	    otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_2, grammarAccess.getFallbackNodeAccess().getLeftParenthesisKeyword_1_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:1133:4: ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:1133:4: ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:1134:5: {...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleFallbackNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:1134:109: ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:1135:6: ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:1138:9: ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:1138:10: {...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleFallbackNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:1138:19: (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:1138:20: otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) )
                    	    {
                    	    otherlv_3=(Token)match(input,ID,FOLLOW_8); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getFallbackNodeAccess().getIDKeyword_1_1_0());
                    	    								
                    	    otherlv_4=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getFallbackNodeAccess().getEqualsSignKeyword_1_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:1146:9: ( (lv_ID_5_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:1147:10: (lv_ID_5_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:1147:10: (lv_ID_5_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:1148:11: lv_ID_5_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getFallbackNodeAccess().getIDEStringParserRuleCall_1_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_15);
                    	    lv_ID_5_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getFallbackNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"ID",
                    	    												lv_ID_5_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:1171:4: ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:1171:4: ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:1172:5: {...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleFallbackNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:1172:109: ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:1173:6: ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:1176:9: ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:1176:10: {...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleFallbackNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:1176:19: (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:1176:20: otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) )
                    	    {
                    	    otherlv_6=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_6, grammarAccess.getFallbackNodeAccess().getNameKeyword_1_2_0());
                    	    								
                    	    otherlv_7=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_7, grammarAccess.getFallbackNodeAccess().getEqualsSignKeyword_1_2_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:1184:9: ( (lv_name_8_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:1185:10: (lv_name_8_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:1185:10: (lv_name_8_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:1186:11: lv_name_8_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getFallbackNodeAccess().getNameEStringParserRuleCall_1_2_2_0());
                    	    										
                    	    pushFollow(FOLLOW_15);
                    	    lv_name_8_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getFallbackNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_8_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:1209:4: ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:1209:4: ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:1210:5: {...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleFallbackNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:1210:109: ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:1211:6: ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:1214:9: ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:1214:10: {...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleFallbackNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:1214:19: (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:1214:20: otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_9=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_9, grammarAccess.getFallbackNodeAccess().getParametersKeyword_1_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:1218:9: ( (lv_parameters_10_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:1219:10: (lv_parameters_10_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:1219:10: (lv_parameters_10_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:1220:11: lv_parameters_10_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getFallbackNodeAccess().getParametersParameterParserRuleCall_1_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_parameters_10_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getFallbackNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_10_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:1237:9: (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )*
                    	    loop14:
                    	    do {
                    	        int alt14=2;
                    	        int LA14_0 = input.LA(1);

                    	        if ( (LA14_0==Comma) ) {
                    	            alt14=1;
                    	        }


                    	        switch (alt14) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:1238:10: otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_11=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_11, grammarAccess.getFallbackNodeAccess().getCommaKeyword_1_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:1242:10: ( (lv_parameters_12_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:1243:11: (lv_parameters_12_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:1243:11: (lv_parameters_12_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:1244:12: lv_parameters_12_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getFallbackNodeAccess().getParametersParameterParserRuleCall_1_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_parameters_12_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getFallbackNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_12_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop14;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:1268:4: ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:1268:4: ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:1269:5: {...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleFallbackNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:1269:109: ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:1270:6: ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:1273:9: ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:1273:10: {...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleFallbackNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:1273:19: (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:1273:20: otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_13=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_13, grammarAccess.getFallbackNodeAccess().getSatisficesKeyword_1_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:1277:9: ( (lv_satisfices_14_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:1278:10: (lv_satisfices_14_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:1278:10: (lv_satisfices_14_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:1279:11: lv_satisfices_14_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getFallbackNodeAccess().getSatisficesQualityParserRuleCall_1_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfices_14_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getFallbackNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_14_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:1296:9: (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )*
                    	    loop15:
                    	    do {
                    	        int alt15=2;
                    	        int LA15_0 = input.LA(1);

                    	        if ( (LA15_0==Comma) ) {
                    	            alt15=1;
                    	        }


                    	        switch (alt15) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:1297:10: otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_15=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_15, grammarAccess.getFallbackNodeAccess().getCommaKeyword_1_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:1301:10: ( (lv_satisfices_16_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:1302:11: (lv_satisfices_16_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:1302:11: (lv_satisfices_16_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:1303:12: lv_satisfices_16_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getFallbackNodeAccess().getSatisficesQualityParserRuleCall_1_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfices_16_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getFallbackNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_16_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop15;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:1327:4: ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:1327:4: ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:1328:5: {...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleFallbackNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:1328:109: ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:1329:6: ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:1332:9: ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:1332:10: {...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleFallbackNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:1332:19: (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:1332:20: otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_17=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_17, grammarAccess.getFallbackNodeAccess().getSatisfiesKeyword_1_5_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:1336:9: ( (lv_satisfies_18_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:1337:10: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:1337:10: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:1338:11: lv_satisfies_18_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getFallbackNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_5_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfies_18_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getFallbackNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_18_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:1355:9: (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )*
                    	    loop16:
                    	    do {
                    	        int alt16=2;
                    	        int LA16_0 = input.LA(1);

                    	        if ( (LA16_0==Comma) ) {
                    	            alt16=1;
                    	        }


                    	        switch (alt16) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:1356:10: otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_19=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_19, grammarAccess.getFallbackNodeAccess().getCommaKeyword_1_5_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:1360:10: ( (lv_satisfies_20_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:1361:11: (lv_satisfies_20_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:1361:11: (lv_satisfies_20_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:1362:12: lv_satisfies_20_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getFallbackNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_5_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfies_20_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getFallbackNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_20_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop16;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 7 :
                    	    // InternalQualityBtCppParser.g:1386:4: ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:1386:4: ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:1387:5: {...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1(), 6) ) {
                    	        throw new FailedPredicateException(input, "ruleFallbackNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1(), 6)");
                    	    }
                    	    // InternalQualityBtCppParser.g:1387:109: ( ({...}? => (otherlv_21= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:1388:6: ({...}? => (otherlv_21= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1(), 6);
                    	    					
                    	    // InternalQualityBtCppParser.g:1391:9: ({...}? => (otherlv_21= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:1391:10: {...}? => (otherlv_21= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleFallbackNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:1391:19: (otherlv_21= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:1391:20: otherlv_21= RightParenthesis
                    	    {
                    	    otherlv_21=(Token)match(input,RightParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_21, grammarAccess.getFallbackNodeAccess().getRightParenthesisKeyword_1_6());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt17 >= 1 ) break loop17;
                                EarlyExitException eee =
                                    new EarlyExitException(17, input);
                                throw eee;
                        }
                        cnt17++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1()) ) {
                        throw new FailedPredicateException(input, "ruleFallbackNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1());
                    				

                    }
                    break;

            }

            this_BEGIN_22=(Token)match(input,RULE_BEGIN,FOLLOW_9); 

            			newLeafNode(this_BEGIN_22, grammarAccess.getFallbackNodeAccess().getBEGINTerminalRuleCall_2());
            		
            // InternalQualityBtCppParser.g:1413:3: ( (lv_child_23_0= ruleTreeNode ) )
            // InternalQualityBtCppParser.g:1414:4: (lv_child_23_0= ruleTreeNode )
            {
            // InternalQualityBtCppParser.g:1414:4: (lv_child_23_0= ruleTreeNode )
            // InternalQualityBtCppParser.g:1415:5: lv_child_23_0= ruleTreeNode
            {

            					newCompositeNode(grammarAccess.getFallbackNodeAccess().getChildTreeNodeParserRuleCall_3_0());
            				
            pushFollow(FOLLOW_10);
            lv_child_23_0=ruleTreeNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getFallbackNodeRule());
            					}
            					add(
            						current,
            						"child",
            						lv_child_23_0,
            						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            // InternalQualityBtCppParser.g:1432:3: ( (lv_child_24_0= ruleTreeNode ) )*
            loop19:
            do {
                int alt19=2;
                int LA19_0 = input.LA(1);

                if ( ((LA19_0>=KeepRunningUntilFailure && LA19_0<=SetBlackboard)||(LA19_0>=ConsumeQueue && LA19_0<=ScriptAction)||LA19_0==WhileDoElse||(LA19_0>=CoroAction && LA19_0<=IfThenElse)||LA19_0==Inverter||(LA19_0>=RunOnce && LA19_0<=Sleep)||LA19_0==Loop||LA19_0==Test||(LA19_0>=M && LA19_0<=HyphenMinusGreaterThanSign)||(LA19_0>=R && LA19_0<=VerticalLineVerticalLine)||LA19_0==QuestionMark) ) {
                    alt19=1;
                }


                switch (alt19) {
            	case 1 :
            	    // InternalQualityBtCppParser.g:1433:4: (lv_child_24_0= ruleTreeNode )
            	    {
            	    // InternalQualityBtCppParser.g:1433:4: (lv_child_24_0= ruleTreeNode )
            	    // InternalQualityBtCppParser.g:1434:5: lv_child_24_0= ruleTreeNode
            	    {

            	    					newCompositeNode(grammarAccess.getFallbackNodeAccess().getChildTreeNodeParserRuleCall_4_0());
            	    				
            	    pushFollow(FOLLOW_10);
            	    lv_child_24_0=ruleTreeNode();

            	    state._fsp--;


            	    					if (current==null) {
            	    						current = createModelElementForParent(grammarAccess.getFallbackNodeRule());
            	    					}
            	    					add(
            	    						current,
            	    						"child",
            	    						lv_child_24_0,
            	    						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            	    					afterParserOrEnumRuleCall();
            	    				

            	    }


            	    }
            	    break;

            	default :
            	    break loop19;
                }
            } while (true);

            this_END_25=(Token)match(input,RULE_END,FOLLOW_2); 

            			newLeafNode(this_END_25, grammarAccess.getFallbackNodeAccess().getENDTerminalRuleCall_5());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFallbackNode"


    // $ANTLR start "entryRuleIfThenElseNode"
    // InternalQualityBtCppParser.g:1459:1: entryRuleIfThenElseNode returns [EObject current=null] : iv_ruleIfThenElseNode= ruleIfThenElseNode EOF ;
    public final EObject entryRuleIfThenElseNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIfThenElseNode = null;


        try {
            // InternalQualityBtCppParser.g:1459:55: (iv_ruleIfThenElseNode= ruleIfThenElseNode EOF )
            // InternalQualityBtCppParser.g:1460:2: iv_ruleIfThenElseNode= ruleIfThenElseNode EOF
            {
             newCompositeNode(grammarAccess.getIfThenElseNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleIfThenElseNode=ruleIfThenElseNode();

            state._fsp--;

             current =iv_ruleIfThenElseNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIfThenElseNode"


    // $ANTLR start "ruleIfThenElseNode"
    // InternalQualityBtCppParser.g:1466:1: ruleIfThenElseNode returns [EObject current=null] : (otherlv_0= IfThenElse ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END ) ;
    public final EObject ruleIfThenElseNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token this_BEGIN_22=null;
        Token this_END_25=null;
        AntlrDatatypeRuleToken lv_ID_5_0 = null;

        AntlrDatatypeRuleToken lv_name_8_0 = null;

        EObject lv_parameters_10_0 = null;

        EObject lv_parameters_12_0 = null;

        EObject lv_satisfices_14_0 = null;

        EObject lv_satisfices_16_0 = null;

        EObject lv_satisfies_18_0 = null;

        EObject lv_satisfies_20_0 = null;

        EObject lv_child_23_0 = null;

        EObject lv_child_24_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:1472:2: ( (otherlv_0= IfThenElse ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END ) )
            // InternalQualityBtCppParser.g:1473:2: (otherlv_0= IfThenElse ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END )
            {
            // InternalQualityBtCppParser.g:1473:2: (otherlv_0= IfThenElse ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END )
            // InternalQualityBtCppParser.g:1474:3: otherlv_0= IfThenElse ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END
            {
            otherlv_0=(Token)match(input,IfThenElse,FOLLOW_15); 

            			newLeafNode(otherlv_0, grammarAccess.getIfThenElseNodeAccess().getIfThenElseKeyword_0());
            		
            // InternalQualityBtCppParser.g:1478:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt24=2;
            int LA24_0 = input.LA(1);

            if ( ((LA24_0>=Parameters && LA24_0<=Satisfies)||LA24_0==Name||LA24_0==ID||(LA24_0>=LeftParenthesis && LA24_0<=RightParenthesis)) ) {
                alt24=1;
            }
            switch (alt24) {
                case 1 :
                    // InternalQualityBtCppParser.g:1479:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:1479:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:1480:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1());
                    				
                    // InternalQualityBtCppParser.g:1483:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:1484:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:1484:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+
                    int cnt23=0;
                    loop23:
                    do {
                        int alt23=8;
                        int LA23_0 = input.LA(1);

                        if ( LA23_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1(), 0) ) {
                            alt23=1;
                        }
                        else if ( LA23_0 == ID && getUnorderedGroupHelper().canSelect(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1(), 1) ) {
                            alt23=2;
                        }
                        else if ( LA23_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1(), 2) ) {
                            alt23=3;
                        }
                        else if ( LA23_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1(), 3) ) {
                            alt23=4;
                        }
                        else if ( LA23_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1(), 4) ) {
                            alt23=5;
                        }
                        else if ( LA23_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1(), 5) ) {
                            alt23=6;
                        }
                        else if ( LA23_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1(), 6) ) {
                            alt23=7;
                        }


                        switch (alt23) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:1485:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:1485:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:1486:5: {...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleIfThenElseNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:1486:111: ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:1487:6: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:1490:9: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:1490:10: {...}? => (otherlv_2= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleIfThenElseNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:1490:19: (otherlv_2= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:1490:20: otherlv_2= LeftParenthesis
                    	    {
                    	    otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_2, grammarAccess.getIfThenElseNodeAccess().getLeftParenthesisKeyword_1_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:1500:4: ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:1500:4: ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:1501:5: {...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleIfThenElseNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:1501:111: ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:1502:6: ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:1505:9: ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:1505:10: {...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleIfThenElseNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:1505:19: (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:1505:20: otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) )
                    	    {
                    	    otherlv_3=(Token)match(input,ID,FOLLOW_8); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getIfThenElseNodeAccess().getIDKeyword_1_1_0());
                    	    								
                    	    otherlv_4=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getIfThenElseNodeAccess().getEqualsSignKeyword_1_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:1513:9: ( (lv_ID_5_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:1514:10: (lv_ID_5_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:1514:10: (lv_ID_5_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:1515:11: lv_ID_5_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getIfThenElseNodeAccess().getIDEStringParserRuleCall_1_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_15);
                    	    lv_ID_5_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getIfThenElseNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"ID",
                    	    												lv_ID_5_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:1538:4: ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:1538:4: ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:1539:5: {...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleIfThenElseNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:1539:111: ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:1540:6: ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:1543:9: ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:1543:10: {...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleIfThenElseNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:1543:19: (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:1543:20: otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) )
                    	    {
                    	    otherlv_6=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_6, grammarAccess.getIfThenElseNodeAccess().getNameKeyword_1_2_0());
                    	    								
                    	    otherlv_7=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_7, grammarAccess.getIfThenElseNodeAccess().getEqualsSignKeyword_1_2_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:1551:9: ( (lv_name_8_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:1552:10: (lv_name_8_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:1552:10: (lv_name_8_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:1553:11: lv_name_8_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getIfThenElseNodeAccess().getNameEStringParserRuleCall_1_2_2_0());
                    	    										
                    	    pushFollow(FOLLOW_15);
                    	    lv_name_8_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getIfThenElseNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_8_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:1576:4: ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:1576:4: ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:1577:5: {...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleIfThenElseNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:1577:111: ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:1578:6: ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:1581:9: ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:1581:10: {...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleIfThenElseNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:1581:19: (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:1581:20: otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_9=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_9, grammarAccess.getIfThenElseNodeAccess().getParametersKeyword_1_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:1585:9: ( (lv_parameters_10_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:1586:10: (lv_parameters_10_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:1586:10: (lv_parameters_10_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:1587:11: lv_parameters_10_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getIfThenElseNodeAccess().getParametersParameterParserRuleCall_1_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_parameters_10_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getIfThenElseNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_10_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:1604:9: (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )*
                    	    loop20:
                    	    do {
                    	        int alt20=2;
                    	        int LA20_0 = input.LA(1);

                    	        if ( (LA20_0==Comma) ) {
                    	            alt20=1;
                    	        }


                    	        switch (alt20) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:1605:10: otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_11=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_11, grammarAccess.getIfThenElseNodeAccess().getCommaKeyword_1_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:1609:10: ( (lv_parameters_12_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:1610:11: (lv_parameters_12_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:1610:11: (lv_parameters_12_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:1611:12: lv_parameters_12_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getIfThenElseNodeAccess().getParametersParameterParserRuleCall_1_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_parameters_12_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getIfThenElseNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_12_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop20;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:1635:4: ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:1635:4: ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:1636:5: {...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleIfThenElseNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:1636:111: ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:1637:6: ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:1640:9: ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:1640:10: {...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleIfThenElseNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:1640:19: (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:1640:20: otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_13=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_13, grammarAccess.getIfThenElseNodeAccess().getSatisficesKeyword_1_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:1644:9: ( (lv_satisfices_14_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:1645:10: (lv_satisfices_14_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:1645:10: (lv_satisfices_14_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:1646:11: lv_satisfices_14_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getIfThenElseNodeAccess().getSatisficesQualityParserRuleCall_1_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfices_14_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getIfThenElseNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_14_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:1663:9: (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )*
                    	    loop21:
                    	    do {
                    	        int alt21=2;
                    	        int LA21_0 = input.LA(1);

                    	        if ( (LA21_0==Comma) ) {
                    	            alt21=1;
                    	        }


                    	        switch (alt21) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:1664:10: otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_15=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_15, grammarAccess.getIfThenElseNodeAccess().getCommaKeyword_1_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:1668:10: ( (lv_satisfices_16_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:1669:11: (lv_satisfices_16_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:1669:11: (lv_satisfices_16_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:1670:12: lv_satisfices_16_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getIfThenElseNodeAccess().getSatisficesQualityParserRuleCall_1_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfices_16_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getIfThenElseNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_16_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop21;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:1694:4: ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:1694:4: ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:1695:5: {...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleIfThenElseNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:1695:111: ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:1696:6: ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:1699:9: ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:1699:10: {...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleIfThenElseNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:1699:19: (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:1699:20: otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_17=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_17, grammarAccess.getIfThenElseNodeAccess().getSatisfiesKeyword_1_5_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:1703:9: ( (lv_satisfies_18_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:1704:10: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:1704:10: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:1705:11: lv_satisfies_18_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getIfThenElseNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_5_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfies_18_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getIfThenElseNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_18_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:1722:9: (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )*
                    	    loop22:
                    	    do {
                    	        int alt22=2;
                    	        int LA22_0 = input.LA(1);

                    	        if ( (LA22_0==Comma) ) {
                    	            alt22=1;
                    	        }


                    	        switch (alt22) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:1723:10: otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_19=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_19, grammarAccess.getIfThenElseNodeAccess().getCommaKeyword_1_5_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:1727:10: ( (lv_satisfies_20_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:1728:11: (lv_satisfies_20_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:1728:11: (lv_satisfies_20_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:1729:12: lv_satisfies_20_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getIfThenElseNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_5_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfies_20_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getIfThenElseNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_20_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop22;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 7 :
                    	    // InternalQualityBtCppParser.g:1753:4: ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:1753:4: ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:1754:5: {...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1(), 6) ) {
                    	        throw new FailedPredicateException(input, "ruleIfThenElseNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1(), 6)");
                    	    }
                    	    // InternalQualityBtCppParser.g:1754:111: ( ({...}? => (otherlv_21= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:1755:6: ({...}? => (otherlv_21= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1(), 6);
                    	    					
                    	    // InternalQualityBtCppParser.g:1758:9: ({...}? => (otherlv_21= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:1758:10: {...}? => (otherlv_21= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleIfThenElseNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:1758:19: (otherlv_21= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:1758:20: otherlv_21= RightParenthesis
                    	    {
                    	    otherlv_21=(Token)match(input,RightParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_21, grammarAccess.getIfThenElseNodeAccess().getRightParenthesisKeyword_1_6());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt23 >= 1 ) break loop23;
                                EarlyExitException eee =
                                    new EarlyExitException(23, input);
                                throw eee;
                        }
                        cnt23++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1()) ) {
                        throw new FailedPredicateException(input, "ruleIfThenElseNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1());
                    				

                    }
                    break;

            }

            this_BEGIN_22=(Token)match(input,RULE_BEGIN,FOLLOW_9); 

            			newLeafNode(this_BEGIN_22, grammarAccess.getIfThenElseNodeAccess().getBEGINTerminalRuleCall_2());
            		
            // InternalQualityBtCppParser.g:1780:3: ( (lv_child_23_0= ruleTreeNode ) )
            // InternalQualityBtCppParser.g:1781:4: (lv_child_23_0= ruleTreeNode )
            {
            // InternalQualityBtCppParser.g:1781:4: (lv_child_23_0= ruleTreeNode )
            // InternalQualityBtCppParser.g:1782:5: lv_child_23_0= ruleTreeNode
            {

            					newCompositeNode(grammarAccess.getIfThenElseNodeAccess().getChildTreeNodeParserRuleCall_3_0());
            				
            pushFollow(FOLLOW_10);
            lv_child_23_0=ruleTreeNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getIfThenElseNodeRule());
            					}
            					add(
            						current,
            						"child",
            						lv_child_23_0,
            						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            // InternalQualityBtCppParser.g:1799:3: ( (lv_child_24_0= ruleTreeNode ) )*
            loop25:
            do {
                int alt25=2;
                int LA25_0 = input.LA(1);

                if ( ((LA25_0>=KeepRunningUntilFailure && LA25_0<=SetBlackboard)||(LA25_0>=ConsumeQueue && LA25_0<=ScriptAction)||LA25_0==WhileDoElse||(LA25_0>=CoroAction && LA25_0<=IfThenElse)||LA25_0==Inverter||(LA25_0>=RunOnce && LA25_0<=Sleep)||LA25_0==Loop||LA25_0==Test||(LA25_0>=M && LA25_0<=HyphenMinusGreaterThanSign)||(LA25_0>=R && LA25_0<=VerticalLineVerticalLine)||LA25_0==QuestionMark) ) {
                    alt25=1;
                }


                switch (alt25) {
            	case 1 :
            	    // InternalQualityBtCppParser.g:1800:4: (lv_child_24_0= ruleTreeNode )
            	    {
            	    // InternalQualityBtCppParser.g:1800:4: (lv_child_24_0= ruleTreeNode )
            	    // InternalQualityBtCppParser.g:1801:5: lv_child_24_0= ruleTreeNode
            	    {

            	    					newCompositeNode(grammarAccess.getIfThenElseNodeAccess().getChildTreeNodeParserRuleCall_4_0());
            	    				
            	    pushFollow(FOLLOW_10);
            	    lv_child_24_0=ruleTreeNode();

            	    state._fsp--;


            	    					if (current==null) {
            	    						current = createModelElementForParent(grammarAccess.getIfThenElseNodeRule());
            	    					}
            	    					add(
            	    						current,
            	    						"child",
            	    						lv_child_24_0,
            	    						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            	    					afterParserOrEnumRuleCall();
            	    				

            	    }


            	    }
            	    break;

            	default :
            	    break loop25;
                }
            } while (true);

            this_END_25=(Token)match(input,RULE_END,FOLLOW_2); 

            			newLeafNode(this_END_25, grammarAccess.getIfThenElseNodeAccess().getENDTerminalRuleCall_5());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIfThenElseNode"


    // $ANTLR start "entryRuleManualSelectorNode"
    // InternalQualityBtCppParser.g:1826:1: entryRuleManualSelectorNode returns [EObject current=null] : iv_ruleManualSelectorNode= ruleManualSelectorNode EOF ;
    public final EObject entryRuleManualSelectorNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleManualSelectorNode = null;


        try {
            // InternalQualityBtCppParser.g:1826:59: (iv_ruleManualSelectorNode= ruleManualSelectorNode EOF )
            // InternalQualityBtCppParser.g:1827:2: iv_ruleManualSelectorNode= ruleManualSelectorNode EOF
            {
             newCompositeNode(grammarAccess.getManualSelectorNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleManualSelectorNode=ruleManualSelectorNode();

            state._fsp--;

             current =iv_ruleManualSelectorNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleManualSelectorNode"


    // $ANTLR start "ruleManualSelectorNode"
    // InternalQualityBtCppParser.g:1833:1: ruleManualSelectorNode returns [EObject current=null] : (otherlv_0= ManualSelector ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END ) ;
    public final EObject ruleManualSelectorNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token this_BEGIN_22=null;
        Token this_END_25=null;
        AntlrDatatypeRuleToken lv_ID_5_0 = null;

        AntlrDatatypeRuleToken lv_name_8_0 = null;

        EObject lv_parameters_10_0 = null;

        EObject lv_parameters_12_0 = null;

        EObject lv_satisfices_14_0 = null;

        EObject lv_satisfices_16_0 = null;

        EObject lv_satisfies_18_0 = null;

        EObject lv_satisfies_20_0 = null;

        EObject lv_child_23_0 = null;

        EObject lv_child_24_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:1839:2: ( (otherlv_0= ManualSelector ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END ) )
            // InternalQualityBtCppParser.g:1840:2: (otherlv_0= ManualSelector ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END )
            {
            // InternalQualityBtCppParser.g:1840:2: (otherlv_0= ManualSelector ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END )
            // InternalQualityBtCppParser.g:1841:3: otherlv_0= ManualSelector ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END
            {
            otherlv_0=(Token)match(input,ManualSelector,FOLLOW_15); 

            			newLeafNode(otherlv_0, grammarAccess.getManualSelectorNodeAccess().getManualSelectorKeyword_0());
            		
            // InternalQualityBtCppParser.g:1845:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt30=2;
            int LA30_0 = input.LA(1);

            if ( ((LA30_0>=Parameters && LA30_0<=Satisfies)||LA30_0==Name||LA30_0==ID||(LA30_0>=LeftParenthesis && LA30_0<=RightParenthesis)) ) {
                alt30=1;
            }
            switch (alt30) {
                case 1 :
                    // InternalQualityBtCppParser.g:1846:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:1846:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:1847:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1());
                    				
                    // InternalQualityBtCppParser.g:1850:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:1851:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:1851:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+
                    int cnt29=0;
                    loop29:
                    do {
                        int alt29=8;
                        int LA29_0 = input.LA(1);

                        if ( LA29_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1(), 0) ) {
                            alt29=1;
                        }
                        else if ( LA29_0 == ID && getUnorderedGroupHelper().canSelect(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1(), 1) ) {
                            alt29=2;
                        }
                        else if ( LA29_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1(), 2) ) {
                            alt29=3;
                        }
                        else if ( LA29_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1(), 3) ) {
                            alt29=4;
                        }
                        else if ( LA29_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1(), 4) ) {
                            alt29=5;
                        }
                        else if ( LA29_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1(), 5) ) {
                            alt29=6;
                        }
                        else if ( LA29_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1(), 6) ) {
                            alt29=7;
                        }


                        switch (alt29) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:1852:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:1852:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:1853:5: {...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleManualSelectorNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:1853:115: ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:1854:6: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:1857:9: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:1857:10: {...}? => (otherlv_2= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleManualSelectorNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:1857:19: (otherlv_2= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:1857:20: otherlv_2= LeftParenthesis
                    	    {
                    	    otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_2, grammarAccess.getManualSelectorNodeAccess().getLeftParenthesisKeyword_1_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:1867:4: ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:1867:4: ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:1868:5: {...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleManualSelectorNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:1868:115: ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:1869:6: ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:1872:9: ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:1872:10: {...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleManualSelectorNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:1872:19: (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:1872:20: otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) )
                    	    {
                    	    otherlv_3=(Token)match(input,ID,FOLLOW_8); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getManualSelectorNodeAccess().getIDKeyword_1_1_0());
                    	    								
                    	    otherlv_4=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getManualSelectorNodeAccess().getEqualsSignKeyword_1_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:1880:9: ( (lv_ID_5_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:1881:10: (lv_ID_5_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:1881:10: (lv_ID_5_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:1882:11: lv_ID_5_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getManualSelectorNodeAccess().getIDEStringParserRuleCall_1_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_15);
                    	    lv_ID_5_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getManualSelectorNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"ID",
                    	    												lv_ID_5_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:1905:4: ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:1905:4: ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:1906:5: {...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleManualSelectorNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:1906:115: ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:1907:6: ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:1910:9: ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:1910:10: {...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleManualSelectorNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:1910:19: (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:1910:20: otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) )
                    	    {
                    	    otherlv_6=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_6, grammarAccess.getManualSelectorNodeAccess().getNameKeyword_1_2_0());
                    	    								
                    	    otherlv_7=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_7, grammarAccess.getManualSelectorNodeAccess().getEqualsSignKeyword_1_2_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:1918:9: ( (lv_name_8_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:1919:10: (lv_name_8_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:1919:10: (lv_name_8_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:1920:11: lv_name_8_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getManualSelectorNodeAccess().getNameEStringParserRuleCall_1_2_2_0());
                    	    										
                    	    pushFollow(FOLLOW_15);
                    	    lv_name_8_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getManualSelectorNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_8_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:1943:4: ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:1943:4: ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:1944:5: {...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleManualSelectorNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:1944:115: ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:1945:6: ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:1948:9: ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:1948:10: {...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleManualSelectorNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:1948:19: (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:1948:20: otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_9=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_9, grammarAccess.getManualSelectorNodeAccess().getParametersKeyword_1_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:1952:9: ( (lv_parameters_10_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:1953:10: (lv_parameters_10_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:1953:10: (lv_parameters_10_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:1954:11: lv_parameters_10_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getManualSelectorNodeAccess().getParametersParameterParserRuleCall_1_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_parameters_10_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getManualSelectorNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_10_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:1971:9: (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )*
                    	    loop26:
                    	    do {
                    	        int alt26=2;
                    	        int LA26_0 = input.LA(1);

                    	        if ( (LA26_0==Comma) ) {
                    	            alt26=1;
                    	        }


                    	        switch (alt26) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:1972:10: otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_11=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_11, grammarAccess.getManualSelectorNodeAccess().getCommaKeyword_1_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:1976:10: ( (lv_parameters_12_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:1977:11: (lv_parameters_12_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:1977:11: (lv_parameters_12_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:1978:12: lv_parameters_12_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getManualSelectorNodeAccess().getParametersParameterParserRuleCall_1_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_parameters_12_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getManualSelectorNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_12_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop26;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:2002:4: ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:2002:4: ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:2003:5: {...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleManualSelectorNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:2003:115: ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:2004:6: ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:2007:9: ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:2007:10: {...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleManualSelectorNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:2007:19: (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:2007:20: otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_13=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_13, grammarAccess.getManualSelectorNodeAccess().getSatisficesKeyword_1_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:2011:9: ( (lv_satisfices_14_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:2012:10: (lv_satisfices_14_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:2012:10: (lv_satisfices_14_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:2013:11: lv_satisfices_14_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getManualSelectorNodeAccess().getSatisficesQualityParserRuleCall_1_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfices_14_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getManualSelectorNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_14_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:2030:9: (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )*
                    	    loop27:
                    	    do {
                    	        int alt27=2;
                    	        int LA27_0 = input.LA(1);

                    	        if ( (LA27_0==Comma) ) {
                    	            alt27=1;
                    	        }


                    	        switch (alt27) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:2031:10: otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_15=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_15, grammarAccess.getManualSelectorNodeAccess().getCommaKeyword_1_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:2035:10: ( (lv_satisfices_16_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:2036:11: (lv_satisfices_16_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:2036:11: (lv_satisfices_16_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:2037:12: lv_satisfices_16_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getManualSelectorNodeAccess().getSatisficesQualityParserRuleCall_1_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfices_16_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getManualSelectorNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_16_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop27;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:2061:4: ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:2061:4: ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:2062:5: {...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleManualSelectorNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:2062:115: ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:2063:6: ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:2066:9: ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:2066:10: {...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleManualSelectorNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:2066:19: (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:2066:20: otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_17=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_17, grammarAccess.getManualSelectorNodeAccess().getSatisfiesKeyword_1_5_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:2070:9: ( (lv_satisfies_18_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:2071:10: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:2071:10: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:2072:11: lv_satisfies_18_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getManualSelectorNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_5_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfies_18_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getManualSelectorNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_18_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:2089:9: (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )*
                    	    loop28:
                    	    do {
                    	        int alt28=2;
                    	        int LA28_0 = input.LA(1);

                    	        if ( (LA28_0==Comma) ) {
                    	            alt28=1;
                    	        }


                    	        switch (alt28) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:2090:10: otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_19=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_19, grammarAccess.getManualSelectorNodeAccess().getCommaKeyword_1_5_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:2094:10: ( (lv_satisfies_20_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:2095:11: (lv_satisfies_20_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:2095:11: (lv_satisfies_20_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:2096:12: lv_satisfies_20_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getManualSelectorNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_5_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfies_20_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getManualSelectorNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_20_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop28;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 7 :
                    	    // InternalQualityBtCppParser.g:2120:4: ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:2120:4: ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:2121:5: {...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1(), 6) ) {
                    	        throw new FailedPredicateException(input, "ruleManualSelectorNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1(), 6)");
                    	    }
                    	    // InternalQualityBtCppParser.g:2121:115: ( ({...}? => (otherlv_21= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:2122:6: ({...}? => (otherlv_21= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1(), 6);
                    	    					
                    	    // InternalQualityBtCppParser.g:2125:9: ({...}? => (otherlv_21= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:2125:10: {...}? => (otherlv_21= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleManualSelectorNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:2125:19: (otherlv_21= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:2125:20: otherlv_21= RightParenthesis
                    	    {
                    	    otherlv_21=(Token)match(input,RightParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_21, grammarAccess.getManualSelectorNodeAccess().getRightParenthesisKeyword_1_6());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt29 >= 1 ) break loop29;
                                EarlyExitException eee =
                                    new EarlyExitException(29, input);
                                throw eee;
                        }
                        cnt29++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1()) ) {
                        throw new FailedPredicateException(input, "ruleManualSelectorNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1());
                    				

                    }
                    break;

            }

            this_BEGIN_22=(Token)match(input,RULE_BEGIN,FOLLOW_9); 

            			newLeafNode(this_BEGIN_22, grammarAccess.getManualSelectorNodeAccess().getBEGINTerminalRuleCall_2());
            		
            // InternalQualityBtCppParser.g:2147:3: ( (lv_child_23_0= ruleTreeNode ) )
            // InternalQualityBtCppParser.g:2148:4: (lv_child_23_0= ruleTreeNode )
            {
            // InternalQualityBtCppParser.g:2148:4: (lv_child_23_0= ruleTreeNode )
            // InternalQualityBtCppParser.g:2149:5: lv_child_23_0= ruleTreeNode
            {

            					newCompositeNode(grammarAccess.getManualSelectorNodeAccess().getChildTreeNodeParserRuleCall_3_0());
            				
            pushFollow(FOLLOW_10);
            lv_child_23_0=ruleTreeNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getManualSelectorNodeRule());
            					}
            					add(
            						current,
            						"child",
            						lv_child_23_0,
            						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            // InternalQualityBtCppParser.g:2166:3: ( (lv_child_24_0= ruleTreeNode ) )*
            loop31:
            do {
                int alt31=2;
                int LA31_0 = input.LA(1);

                if ( ((LA31_0>=KeepRunningUntilFailure && LA31_0<=SetBlackboard)||(LA31_0>=ConsumeQueue && LA31_0<=ScriptAction)||LA31_0==WhileDoElse||(LA31_0>=CoroAction && LA31_0<=IfThenElse)||LA31_0==Inverter||(LA31_0>=RunOnce && LA31_0<=Sleep)||LA31_0==Loop||LA31_0==Test||(LA31_0>=M && LA31_0<=HyphenMinusGreaterThanSign)||(LA31_0>=R && LA31_0<=VerticalLineVerticalLine)||LA31_0==QuestionMark) ) {
                    alt31=1;
                }


                switch (alt31) {
            	case 1 :
            	    // InternalQualityBtCppParser.g:2167:4: (lv_child_24_0= ruleTreeNode )
            	    {
            	    // InternalQualityBtCppParser.g:2167:4: (lv_child_24_0= ruleTreeNode )
            	    // InternalQualityBtCppParser.g:2168:5: lv_child_24_0= ruleTreeNode
            	    {

            	    					newCompositeNode(grammarAccess.getManualSelectorNodeAccess().getChildTreeNodeParserRuleCall_4_0());
            	    				
            	    pushFollow(FOLLOW_10);
            	    lv_child_24_0=ruleTreeNode();

            	    state._fsp--;


            	    					if (current==null) {
            	    						current = createModelElementForParent(grammarAccess.getManualSelectorNodeRule());
            	    					}
            	    					add(
            	    						current,
            	    						"child",
            	    						lv_child_24_0,
            	    						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            	    					afterParserOrEnumRuleCall();
            	    				

            	    }


            	    }
            	    break;

            	default :
            	    break loop31;
                }
            } while (true);

            this_END_25=(Token)match(input,RULE_END,FOLLOW_2); 

            			newLeafNode(this_END_25, grammarAccess.getManualSelectorNodeAccess().getENDTerminalRuleCall_5());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleManualSelectorNode"


    // $ANTLR start "entryRuleParallelNode"
    // InternalQualityBtCppParser.g:2193:1: entryRuleParallelNode returns [EObject current=null] : iv_ruleParallelNode= ruleParallelNode EOF ;
    public final EObject entryRuleParallelNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParallelNode = null;


        try {
            // InternalQualityBtCppParser.g:2193:53: (iv_ruleParallelNode= ruleParallelNode EOF )
            // InternalQualityBtCppParser.g:2194:2: iv_ruleParallelNode= ruleParallelNode EOF
            {
             newCompositeNode(grammarAccess.getParallelNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleParallelNode=ruleParallelNode();

            state._fsp--;

             current =iv_ruleParallelNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleParallelNode"


    // $ANTLR start "ruleParallelNode"
    // InternalQualityBtCppParser.g:2200:1: ruleParallelNode returns [EObject current=null] : (otherlv_0= VerticalLineVerticalLine ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END ) ;
    public final EObject ruleParallelNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token this_BEGIN_22=null;
        Token this_END_25=null;
        AntlrDatatypeRuleToken lv_ID_5_0 = null;

        AntlrDatatypeRuleToken lv_name_8_0 = null;

        EObject lv_parameters_10_0 = null;

        EObject lv_parameters_12_0 = null;

        EObject lv_satisfices_14_0 = null;

        EObject lv_satisfices_16_0 = null;

        EObject lv_satisfies_18_0 = null;

        EObject lv_satisfies_20_0 = null;

        EObject lv_child_23_0 = null;

        EObject lv_child_24_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:2206:2: ( (otherlv_0= VerticalLineVerticalLine ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END ) )
            // InternalQualityBtCppParser.g:2207:2: (otherlv_0= VerticalLineVerticalLine ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END )
            {
            // InternalQualityBtCppParser.g:2207:2: (otherlv_0= VerticalLineVerticalLine ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END )
            // InternalQualityBtCppParser.g:2208:3: otherlv_0= VerticalLineVerticalLine ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END
            {
            otherlv_0=(Token)match(input,VerticalLineVerticalLine,FOLLOW_15); 

            			newLeafNode(otherlv_0, grammarAccess.getParallelNodeAccess().getVerticalLineVerticalLineKeyword_0());
            		
            // InternalQualityBtCppParser.g:2212:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt36=2;
            int LA36_0 = input.LA(1);

            if ( ((LA36_0>=Parameters && LA36_0<=Satisfies)||LA36_0==Name||LA36_0==ID||(LA36_0>=LeftParenthesis && LA36_0<=RightParenthesis)) ) {
                alt36=1;
            }
            switch (alt36) {
                case 1 :
                    // InternalQualityBtCppParser.g:2213:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:2213:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:2214:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1());
                    				
                    // InternalQualityBtCppParser.g:2217:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:2218:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:2218:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+
                    int cnt35=0;
                    loop35:
                    do {
                        int alt35=8;
                        int LA35_0 = input.LA(1);

                        if ( LA35_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1(), 0) ) {
                            alt35=1;
                        }
                        else if ( LA35_0 == ID && getUnorderedGroupHelper().canSelect(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1(), 1) ) {
                            alt35=2;
                        }
                        else if ( LA35_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1(), 2) ) {
                            alt35=3;
                        }
                        else if ( LA35_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1(), 3) ) {
                            alt35=4;
                        }
                        else if ( LA35_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1(), 4) ) {
                            alt35=5;
                        }
                        else if ( LA35_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1(), 5) ) {
                            alt35=6;
                        }
                        else if ( LA35_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1(), 6) ) {
                            alt35=7;
                        }


                        switch (alt35) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:2219:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:2219:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:2220:5: {...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleParallelNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:2220:109: ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:2221:6: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:2224:9: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:2224:10: {...}? => (otherlv_2= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleParallelNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:2224:19: (otherlv_2= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:2224:20: otherlv_2= LeftParenthesis
                    	    {
                    	    otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_2, grammarAccess.getParallelNodeAccess().getLeftParenthesisKeyword_1_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:2234:4: ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:2234:4: ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:2235:5: {...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleParallelNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:2235:109: ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:2236:6: ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:2239:9: ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:2239:10: {...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleParallelNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:2239:19: (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:2239:20: otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) )
                    	    {
                    	    otherlv_3=(Token)match(input,ID,FOLLOW_8); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getParallelNodeAccess().getIDKeyword_1_1_0());
                    	    								
                    	    otherlv_4=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getParallelNodeAccess().getEqualsSignKeyword_1_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:2247:9: ( (lv_ID_5_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:2248:10: (lv_ID_5_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:2248:10: (lv_ID_5_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:2249:11: lv_ID_5_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getParallelNodeAccess().getIDEStringParserRuleCall_1_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_15);
                    	    lv_ID_5_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getParallelNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"ID",
                    	    												lv_ID_5_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:2272:4: ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:2272:4: ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:2273:5: {...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleParallelNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:2273:109: ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:2274:6: ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:2277:9: ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:2277:10: {...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleParallelNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:2277:19: (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:2277:20: otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) )
                    	    {
                    	    otherlv_6=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_6, grammarAccess.getParallelNodeAccess().getNameKeyword_1_2_0());
                    	    								
                    	    otherlv_7=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_7, grammarAccess.getParallelNodeAccess().getEqualsSignKeyword_1_2_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:2285:9: ( (lv_name_8_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:2286:10: (lv_name_8_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:2286:10: (lv_name_8_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:2287:11: lv_name_8_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getParallelNodeAccess().getNameEStringParserRuleCall_1_2_2_0());
                    	    										
                    	    pushFollow(FOLLOW_15);
                    	    lv_name_8_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getParallelNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_8_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:2310:4: ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:2310:4: ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:2311:5: {...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleParallelNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:2311:109: ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:2312:6: ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:2315:9: ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:2315:10: {...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleParallelNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:2315:19: (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:2315:20: otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_9=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_9, grammarAccess.getParallelNodeAccess().getParametersKeyword_1_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:2319:9: ( (lv_parameters_10_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:2320:10: (lv_parameters_10_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:2320:10: (lv_parameters_10_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:2321:11: lv_parameters_10_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getParallelNodeAccess().getParametersParameterParserRuleCall_1_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_parameters_10_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getParallelNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_10_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:2338:9: (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )*
                    	    loop32:
                    	    do {
                    	        int alt32=2;
                    	        int LA32_0 = input.LA(1);

                    	        if ( (LA32_0==Comma) ) {
                    	            alt32=1;
                    	        }


                    	        switch (alt32) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:2339:10: otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_11=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_11, grammarAccess.getParallelNodeAccess().getCommaKeyword_1_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:2343:10: ( (lv_parameters_12_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:2344:11: (lv_parameters_12_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:2344:11: (lv_parameters_12_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:2345:12: lv_parameters_12_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getParallelNodeAccess().getParametersParameterParserRuleCall_1_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_parameters_12_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getParallelNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_12_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop32;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:2369:4: ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:2369:4: ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:2370:5: {...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleParallelNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:2370:109: ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:2371:6: ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:2374:9: ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:2374:10: {...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleParallelNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:2374:19: (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:2374:20: otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_13=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_13, grammarAccess.getParallelNodeAccess().getSatisficesKeyword_1_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:2378:9: ( (lv_satisfices_14_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:2379:10: (lv_satisfices_14_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:2379:10: (lv_satisfices_14_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:2380:11: lv_satisfices_14_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getParallelNodeAccess().getSatisficesQualityParserRuleCall_1_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfices_14_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getParallelNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_14_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:2397:9: (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )*
                    	    loop33:
                    	    do {
                    	        int alt33=2;
                    	        int LA33_0 = input.LA(1);

                    	        if ( (LA33_0==Comma) ) {
                    	            alt33=1;
                    	        }


                    	        switch (alt33) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:2398:10: otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_15=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_15, grammarAccess.getParallelNodeAccess().getCommaKeyword_1_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:2402:10: ( (lv_satisfices_16_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:2403:11: (lv_satisfices_16_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:2403:11: (lv_satisfices_16_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:2404:12: lv_satisfices_16_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getParallelNodeAccess().getSatisficesQualityParserRuleCall_1_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfices_16_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getParallelNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_16_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop33;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:2428:4: ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:2428:4: ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:2429:5: {...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleParallelNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:2429:109: ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:2430:6: ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:2433:9: ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:2433:10: {...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleParallelNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:2433:19: (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:2433:20: otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_17=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_17, grammarAccess.getParallelNodeAccess().getSatisfiesKeyword_1_5_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:2437:9: ( (lv_satisfies_18_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:2438:10: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:2438:10: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:2439:11: lv_satisfies_18_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getParallelNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_5_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfies_18_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getParallelNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_18_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:2456:9: (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )*
                    	    loop34:
                    	    do {
                    	        int alt34=2;
                    	        int LA34_0 = input.LA(1);

                    	        if ( (LA34_0==Comma) ) {
                    	            alt34=1;
                    	        }


                    	        switch (alt34) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:2457:10: otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_19=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_19, grammarAccess.getParallelNodeAccess().getCommaKeyword_1_5_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:2461:10: ( (lv_satisfies_20_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:2462:11: (lv_satisfies_20_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:2462:11: (lv_satisfies_20_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:2463:12: lv_satisfies_20_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getParallelNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_5_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfies_20_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getParallelNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_20_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop34;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 7 :
                    	    // InternalQualityBtCppParser.g:2487:4: ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:2487:4: ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:2488:5: {...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1(), 6) ) {
                    	        throw new FailedPredicateException(input, "ruleParallelNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1(), 6)");
                    	    }
                    	    // InternalQualityBtCppParser.g:2488:109: ( ({...}? => (otherlv_21= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:2489:6: ({...}? => (otherlv_21= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1(), 6);
                    	    					
                    	    // InternalQualityBtCppParser.g:2492:9: ({...}? => (otherlv_21= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:2492:10: {...}? => (otherlv_21= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleParallelNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:2492:19: (otherlv_21= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:2492:20: otherlv_21= RightParenthesis
                    	    {
                    	    otherlv_21=(Token)match(input,RightParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_21, grammarAccess.getParallelNodeAccess().getRightParenthesisKeyword_1_6());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt35 >= 1 ) break loop35;
                                EarlyExitException eee =
                                    new EarlyExitException(35, input);
                                throw eee;
                        }
                        cnt35++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1()) ) {
                        throw new FailedPredicateException(input, "ruleParallelNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1());
                    				

                    }
                    break;

            }

            this_BEGIN_22=(Token)match(input,RULE_BEGIN,FOLLOW_9); 

            			newLeafNode(this_BEGIN_22, grammarAccess.getParallelNodeAccess().getBEGINTerminalRuleCall_2());
            		
            // InternalQualityBtCppParser.g:2514:3: ( (lv_child_23_0= ruleTreeNode ) )
            // InternalQualityBtCppParser.g:2515:4: (lv_child_23_0= ruleTreeNode )
            {
            // InternalQualityBtCppParser.g:2515:4: (lv_child_23_0= ruleTreeNode )
            // InternalQualityBtCppParser.g:2516:5: lv_child_23_0= ruleTreeNode
            {

            					newCompositeNode(grammarAccess.getParallelNodeAccess().getChildTreeNodeParserRuleCall_3_0());
            				
            pushFollow(FOLLOW_10);
            lv_child_23_0=ruleTreeNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getParallelNodeRule());
            					}
            					add(
            						current,
            						"child",
            						lv_child_23_0,
            						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            // InternalQualityBtCppParser.g:2533:3: ( (lv_child_24_0= ruleTreeNode ) )*
            loop37:
            do {
                int alt37=2;
                int LA37_0 = input.LA(1);

                if ( ((LA37_0>=KeepRunningUntilFailure && LA37_0<=SetBlackboard)||(LA37_0>=ConsumeQueue && LA37_0<=ScriptAction)||LA37_0==WhileDoElse||(LA37_0>=CoroAction && LA37_0<=IfThenElse)||LA37_0==Inverter||(LA37_0>=RunOnce && LA37_0<=Sleep)||LA37_0==Loop||LA37_0==Test||(LA37_0>=M && LA37_0<=HyphenMinusGreaterThanSign)||(LA37_0>=R && LA37_0<=VerticalLineVerticalLine)||LA37_0==QuestionMark) ) {
                    alt37=1;
                }


                switch (alt37) {
            	case 1 :
            	    // InternalQualityBtCppParser.g:2534:4: (lv_child_24_0= ruleTreeNode )
            	    {
            	    // InternalQualityBtCppParser.g:2534:4: (lv_child_24_0= ruleTreeNode )
            	    // InternalQualityBtCppParser.g:2535:5: lv_child_24_0= ruleTreeNode
            	    {

            	    					newCompositeNode(grammarAccess.getParallelNodeAccess().getChildTreeNodeParserRuleCall_4_0());
            	    				
            	    pushFollow(FOLLOW_10);
            	    lv_child_24_0=ruleTreeNode();

            	    state._fsp--;


            	    					if (current==null) {
            	    						current = createModelElementForParent(grammarAccess.getParallelNodeRule());
            	    					}
            	    					add(
            	    						current,
            	    						"child",
            	    						lv_child_24_0,
            	    						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            	    					afterParserOrEnumRuleCall();
            	    				

            	    }


            	    }
            	    break;

            	default :
            	    break loop37;
                }
            } while (true);

            this_END_25=(Token)match(input,RULE_END,FOLLOW_2); 

            			newLeafNode(this_END_25, grammarAccess.getParallelNodeAccess().getENDTerminalRuleCall_5());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleParallelNode"


    // $ANTLR start "entryRuleSequenceWithMemoryNode"
    // InternalQualityBtCppParser.g:2560:1: entryRuleSequenceWithMemoryNode returns [EObject current=null] : iv_ruleSequenceWithMemoryNode= ruleSequenceWithMemoryNode EOF ;
    public final EObject entryRuleSequenceWithMemoryNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSequenceWithMemoryNode = null;


        try {
            // InternalQualityBtCppParser.g:2560:63: (iv_ruleSequenceWithMemoryNode= ruleSequenceWithMemoryNode EOF )
            // InternalQualityBtCppParser.g:2561:2: iv_ruleSequenceWithMemoryNode= ruleSequenceWithMemoryNode EOF
            {
             newCompositeNode(grammarAccess.getSequenceWithMemoryNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleSequenceWithMemoryNode=ruleSequenceWithMemoryNode();

            state._fsp--;

             current =iv_ruleSequenceWithMemoryNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSequenceWithMemoryNode"


    // $ANTLR start "ruleSequenceWithMemoryNode"
    // InternalQualityBtCppParser.g:2567:1: ruleSequenceWithMemoryNode returns [EObject current=null] : (otherlv_0= M ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END ) ;
    public final EObject ruleSequenceWithMemoryNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token this_BEGIN_22=null;
        Token this_END_25=null;
        AntlrDatatypeRuleToken lv_ID_5_0 = null;

        AntlrDatatypeRuleToken lv_name_8_0 = null;

        EObject lv_parameters_10_0 = null;

        EObject lv_parameters_12_0 = null;

        EObject lv_satisfices_14_0 = null;

        EObject lv_satisfices_16_0 = null;

        EObject lv_satisfies_18_0 = null;

        EObject lv_satisfies_20_0 = null;

        EObject lv_child_23_0 = null;

        EObject lv_child_24_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:2573:2: ( (otherlv_0= M ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END ) )
            // InternalQualityBtCppParser.g:2574:2: (otherlv_0= M ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END )
            {
            // InternalQualityBtCppParser.g:2574:2: (otherlv_0= M ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END )
            // InternalQualityBtCppParser.g:2575:3: otherlv_0= M ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END
            {
            otherlv_0=(Token)match(input,M,FOLLOW_15); 

            			newLeafNode(otherlv_0, grammarAccess.getSequenceWithMemoryNodeAccess().getMKeyword_0());
            		
            // InternalQualityBtCppParser.g:2579:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt42=2;
            int LA42_0 = input.LA(1);

            if ( ((LA42_0>=Parameters && LA42_0<=Satisfies)||LA42_0==Name||LA42_0==ID||(LA42_0>=LeftParenthesis && LA42_0<=RightParenthesis)) ) {
                alt42=1;
            }
            switch (alt42) {
                case 1 :
                    // InternalQualityBtCppParser.g:2580:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:2580:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:2581:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1());
                    				
                    // InternalQualityBtCppParser.g:2584:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:2585:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:2585:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+
                    int cnt41=0;
                    loop41:
                    do {
                        int alt41=8;
                        int LA41_0 = input.LA(1);

                        if ( LA41_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1(), 0) ) {
                            alt41=1;
                        }
                        else if ( LA41_0 == ID && getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1(), 1) ) {
                            alt41=2;
                        }
                        else if ( LA41_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1(), 2) ) {
                            alt41=3;
                        }
                        else if ( LA41_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1(), 3) ) {
                            alt41=4;
                        }
                        else if ( LA41_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1(), 4) ) {
                            alt41=5;
                        }
                        else if ( LA41_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1(), 5) ) {
                            alt41=6;
                        }
                        else if ( LA41_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1(), 6) ) {
                            alt41=7;
                        }


                        switch (alt41) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:2586:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:2586:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:2587:5: {...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleSequenceWithMemoryNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:2587:119: ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:2588:6: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:2591:9: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:2591:10: {...}? => (otherlv_2= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSequenceWithMemoryNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:2591:19: (otherlv_2= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:2591:20: otherlv_2= LeftParenthesis
                    	    {
                    	    otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_2, grammarAccess.getSequenceWithMemoryNodeAccess().getLeftParenthesisKeyword_1_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:2601:4: ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:2601:4: ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:2602:5: {...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleSequenceWithMemoryNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:2602:119: ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:2603:6: ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:2606:9: ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:2606:10: {...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSequenceWithMemoryNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:2606:19: (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:2606:20: otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) )
                    	    {
                    	    otherlv_3=(Token)match(input,ID,FOLLOW_8); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getSequenceWithMemoryNodeAccess().getIDKeyword_1_1_0());
                    	    								
                    	    otherlv_4=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getSequenceWithMemoryNodeAccess().getEqualsSignKeyword_1_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:2614:9: ( (lv_ID_5_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:2615:10: (lv_ID_5_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:2615:10: (lv_ID_5_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:2616:11: lv_ID_5_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getSequenceWithMemoryNodeAccess().getIDEStringParserRuleCall_1_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_15);
                    	    lv_ID_5_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getSequenceWithMemoryNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"ID",
                    	    												lv_ID_5_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:2639:4: ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:2639:4: ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:2640:5: {...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleSequenceWithMemoryNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:2640:119: ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:2641:6: ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:2644:9: ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:2644:10: {...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSequenceWithMemoryNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:2644:19: (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:2644:20: otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) )
                    	    {
                    	    otherlv_6=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_6, grammarAccess.getSequenceWithMemoryNodeAccess().getNameKeyword_1_2_0());
                    	    								
                    	    otherlv_7=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_7, grammarAccess.getSequenceWithMemoryNodeAccess().getEqualsSignKeyword_1_2_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:2652:9: ( (lv_name_8_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:2653:10: (lv_name_8_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:2653:10: (lv_name_8_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:2654:11: lv_name_8_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getSequenceWithMemoryNodeAccess().getNameEStringParserRuleCall_1_2_2_0());
                    	    										
                    	    pushFollow(FOLLOW_15);
                    	    lv_name_8_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getSequenceWithMemoryNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_8_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:2677:4: ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:2677:4: ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:2678:5: {...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleSequenceWithMemoryNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:2678:119: ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:2679:6: ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:2682:9: ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:2682:10: {...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSequenceWithMemoryNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:2682:19: (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:2682:20: otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_9=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_9, grammarAccess.getSequenceWithMemoryNodeAccess().getParametersKeyword_1_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:2686:9: ( (lv_parameters_10_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:2687:10: (lv_parameters_10_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:2687:10: (lv_parameters_10_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:2688:11: lv_parameters_10_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getSequenceWithMemoryNodeAccess().getParametersParameterParserRuleCall_1_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_parameters_10_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getSequenceWithMemoryNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_10_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:2705:9: (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )*
                    	    loop38:
                    	    do {
                    	        int alt38=2;
                    	        int LA38_0 = input.LA(1);

                    	        if ( (LA38_0==Comma) ) {
                    	            alt38=1;
                    	        }


                    	        switch (alt38) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:2706:10: otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_11=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_11, grammarAccess.getSequenceWithMemoryNodeAccess().getCommaKeyword_1_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:2710:10: ( (lv_parameters_12_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:2711:11: (lv_parameters_12_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:2711:11: (lv_parameters_12_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:2712:12: lv_parameters_12_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getSequenceWithMemoryNodeAccess().getParametersParameterParserRuleCall_1_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_parameters_12_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getSequenceWithMemoryNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_12_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop38;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:2736:4: ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:2736:4: ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:2737:5: {...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleSequenceWithMemoryNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:2737:119: ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:2738:6: ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:2741:9: ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:2741:10: {...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSequenceWithMemoryNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:2741:19: (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:2741:20: otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_13=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_13, grammarAccess.getSequenceWithMemoryNodeAccess().getSatisficesKeyword_1_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:2745:9: ( (lv_satisfices_14_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:2746:10: (lv_satisfices_14_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:2746:10: (lv_satisfices_14_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:2747:11: lv_satisfices_14_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getSequenceWithMemoryNodeAccess().getSatisficesQualityParserRuleCall_1_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfices_14_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getSequenceWithMemoryNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_14_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:2764:9: (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )*
                    	    loop39:
                    	    do {
                    	        int alt39=2;
                    	        int LA39_0 = input.LA(1);

                    	        if ( (LA39_0==Comma) ) {
                    	            alt39=1;
                    	        }


                    	        switch (alt39) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:2765:10: otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_15=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_15, grammarAccess.getSequenceWithMemoryNodeAccess().getCommaKeyword_1_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:2769:10: ( (lv_satisfices_16_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:2770:11: (lv_satisfices_16_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:2770:11: (lv_satisfices_16_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:2771:12: lv_satisfices_16_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getSequenceWithMemoryNodeAccess().getSatisficesQualityParserRuleCall_1_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfices_16_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getSequenceWithMemoryNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_16_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop39;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:2795:4: ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:2795:4: ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:2796:5: {...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleSequenceWithMemoryNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:2796:119: ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:2797:6: ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:2800:9: ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:2800:10: {...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSequenceWithMemoryNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:2800:19: (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:2800:20: otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_17=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_17, grammarAccess.getSequenceWithMemoryNodeAccess().getSatisfiesKeyword_1_5_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:2804:9: ( (lv_satisfies_18_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:2805:10: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:2805:10: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:2806:11: lv_satisfies_18_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getSequenceWithMemoryNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_5_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfies_18_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getSequenceWithMemoryNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_18_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:2823:9: (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )*
                    	    loop40:
                    	    do {
                    	        int alt40=2;
                    	        int LA40_0 = input.LA(1);

                    	        if ( (LA40_0==Comma) ) {
                    	            alt40=1;
                    	        }


                    	        switch (alt40) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:2824:10: otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_19=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_19, grammarAccess.getSequenceWithMemoryNodeAccess().getCommaKeyword_1_5_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:2828:10: ( (lv_satisfies_20_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:2829:11: (lv_satisfies_20_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:2829:11: (lv_satisfies_20_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:2830:12: lv_satisfies_20_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getSequenceWithMemoryNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_5_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfies_20_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getSequenceWithMemoryNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_20_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop40;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 7 :
                    	    // InternalQualityBtCppParser.g:2854:4: ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:2854:4: ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:2855:5: {...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1(), 6) ) {
                    	        throw new FailedPredicateException(input, "ruleSequenceWithMemoryNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1(), 6)");
                    	    }
                    	    // InternalQualityBtCppParser.g:2855:119: ( ({...}? => (otherlv_21= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:2856:6: ({...}? => (otherlv_21= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1(), 6);
                    	    					
                    	    // InternalQualityBtCppParser.g:2859:9: ({...}? => (otherlv_21= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:2859:10: {...}? => (otherlv_21= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSequenceWithMemoryNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:2859:19: (otherlv_21= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:2859:20: otherlv_21= RightParenthesis
                    	    {
                    	    otherlv_21=(Token)match(input,RightParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_21, grammarAccess.getSequenceWithMemoryNodeAccess().getRightParenthesisKeyword_1_6());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt41 >= 1 ) break loop41;
                                EarlyExitException eee =
                                    new EarlyExitException(41, input);
                                throw eee;
                        }
                        cnt41++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1()) ) {
                        throw new FailedPredicateException(input, "ruleSequenceWithMemoryNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1());
                    				

                    }
                    break;

            }

            this_BEGIN_22=(Token)match(input,RULE_BEGIN,FOLLOW_9); 

            			newLeafNode(this_BEGIN_22, grammarAccess.getSequenceWithMemoryNodeAccess().getBEGINTerminalRuleCall_2());
            		
            // InternalQualityBtCppParser.g:2881:3: ( (lv_child_23_0= ruleTreeNode ) )
            // InternalQualityBtCppParser.g:2882:4: (lv_child_23_0= ruleTreeNode )
            {
            // InternalQualityBtCppParser.g:2882:4: (lv_child_23_0= ruleTreeNode )
            // InternalQualityBtCppParser.g:2883:5: lv_child_23_0= ruleTreeNode
            {

            					newCompositeNode(grammarAccess.getSequenceWithMemoryNodeAccess().getChildTreeNodeParserRuleCall_3_0());
            				
            pushFollow(FOLLOW_10);
            lv_child_23_0=ruleTreeNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getSequenceWithMemoryNodeRule());
            					}
            					add(
            						current,
            						"child",
            						lv_child_23_0,
            						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            // InternalQualityBtCppParser.g:2900:3: ( (lv_child_24_0= ruleTreeNode ) )*
            loop43:
            do {
                int alt43=2;
                int LA43_0 = input.LA(1);

                if ( ((LA43_0>=KeepRunningUntilFailure && LA43_0<=SetBlackboard)||(LA43_0>=ConsumeQueue && LA43_0<=ScriptAction)||LA43_0==WhileDoElse||(LA43_0>=CoroAction && LA43_0<=IfThenElse)||LA43_0==Inverter||(LA43_0>=RunOnce && LA43_0<=Sleep)||LA43_0==Loop||LA43_0==Test||(LA43_0>=M && LA43_0<=HyphenMinusGreaterThanSign)||(LA43_0>=R && LA43_0<=VerticalLineVerticalLine)||LA43_0==QuestionMark) ) {
                    alt43=1;
                }


                switch (alt43) {
            	case 1 :
            	    // InternalQualityBtCppParser.g:2901:4: (lv_child_24_0= ruleTreeNode )
            	    {
            	    // InternalQualityBtCppParser.g:2901:4: (lv_child_24_0= ruleTreeNode )
            	    // InternalQualityBtCppParser.g:2902:5: lv_child_24_0= ruleTreeNode
            	    {

            	    					newCompositeNode(grammarAccess.getSequenceWithMemoryNodeAccess().getChildTreeNodeParserRuleCall_4_0());
            	    				
            	    pushFollow(FOLLOW_10);
            	    lv_child_24_0=ruleTreeNode();

            	    state._fsp--;


            	    					if (current==null) {
            	    						current = createModelElementForParent(grammarAccess.getSequenceWithMemoryNodeRule());
            	    					}
            	    					add(
            	    						current,
            	    						"child",
            	    						lv_child_24_0,
            	    						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            	    					afterParserOrEnumRuleCall();
            	    				

            	    }


            	    }
            	    break;

            	default :
            	    break loop43;
                }
            } while (true);

            this_END_25=(Token)match(input,RULE_END,FOLLOW_2); 

            			newLeafNode(this_END_25, grammarAccess.getSequenceWithMemoryNodeAccess().getENDTerminalRuleCall_5());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSequenceWithMemoryNode"


    // $ANTLR start "entryRuleSwitchNode"
    // InternalQualityBtCppParser.g:2927:1: entryRuleSwitchNode returns [EObject current=null] : iv_ruleSwitchNode= ruleSwitchNode EOF ;
    public final EObject entryRuleSwitchNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSwitchNode = null;


        try {
            // InternalQualityBtCppParser.g:2927:51: (iv_ruleSwitchNode= ruleSwitchNode EOF )
            // InternalQualityBtCppParser.g:2928:2: iv_ruleSwitchNode= ruleSwitchNode EOF
            {
             newCompositeNode(grammarAccess.getSwitchNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleSwitchNode=ruleSwitchNode();

            state._fsp--;

             current =iv_ruleSwitchNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSwitchNode"


    // $ANTLR start "ruleSwitchNode"
    // InternalQualityBtCppParser.g:2934:1: ruleSwitchNode returns [EObject current=null] : (otherlv_0= Switch ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END ) ;
    public final EObject ruleSwitchNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token this_BEGIN_22=null;
        Token this_END_25=null;
        AntlrDatatypeRuleToken lv_ID_5_0 = null;

        AntlrDatatypeRuleToken lv_name_8_0 = null;

        EObject lv_parameters_10_0 = null;

        EObject lv_parameters_12_0 = null;

        EObject lv_satisfices_14_0 = null;

        EObject lv_satisfices_16_0 = null;

        EObject lv_satisfies_18_0 = null;

        EObject lv_satisfies_20_0 = null;

        EObject lv_child_23_0 = null;

        EObject lv_child_24_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:2940:2: ( (otherlv_0= Switch ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END ) )
            // InternalQualityBtCppParser.g:2941:2: (otherlv_0= Switch ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END )
            {
            // InternalQualityBtCppParser.g:2941:2: (otherlv_0= Switch ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END )
            // InternalQualityBtCppParser.g:2942:3: otherlv_0= Switch ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END
            {
            otherlv_0=(Token)match(input,Switch,FOLLOW_15); 

            			newLeafNode(otherlv_0, grammarAccess.getSwitchNodeAccess().getSwitchKeyword_0());
            		
            // InternalQualityBtCppParser.g:2946:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt48=2;
            int LA48_0 = input.LA(1);

            if ( ((LA48_0>=Parameters && LA48_0<=Satisfies)||LA48_0==Name||LA48_0==ID||(LA48_0>=LeftParenthesis && LA48_0<=RightParenthesis)) ) {
                alt48=1;
            }
            switch (alt48) {
                case 1 :
                    // InternalQualityBtCppParser.g:2947:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:2947:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:2948:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1());
                    				
                    // InternalQualityBtCppParser.g:2951:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:2952:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:2952:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+
                    int cnt47=0;
                    loop47:
                    do {
                        int alt47=8;
                        int LA47_0 = input.LA(1);

                        if ( LA47_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1(), 0) ) {
                            alt47=1;
                        }
                        else if ( LA47_0 == ID && getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1(), 1) ) {
                            alt47=2;
                        }
                        else if ( LA47_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1(), 2) ) {
                            alt47=3;
                        }
                        else if ( LA47_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1(), 3) ) {
                            alt47=4;
                        }
                        else if ( LA47_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1(), 4) ) {
                            alt47=5;
                        }
                        else if ( LA47_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1(), 5) ) {
                            alt47=6;
                        }
                        else if ( LA47_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1(), 6) ) {
                            alt47=7;
                        }


                        switch (alt47) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:2953:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:2953:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:2954:5: {...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleSwitchNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:2954:107: ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:2955:6: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:2958:9: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:2958:10: {...}? => (otherlv_2= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSwitchNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:2958:19: (otherlv_2= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:2958:20: otherlv_2= LeftParenthesis
                    	    {
                    	    otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_2, grammarAccess.getSwitchNodeAccess().getLeftParenthesisKeyword_1_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:2968:4: ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:2968:4: ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:2969:5: {...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleSwitchNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:2969:107: ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:2970:6: ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:2973:9: ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:2973:10: {...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSwitchNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:2973:19: (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:2973:20: otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) )
                    	    {
                    	    otherlv_3=(Token)match(input,ID,FOLLOW_8); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getSwitchNodeAccess().getIDKeyword_1_1_0());
                    	    								
                    	    otherlv_4=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getSwitchNodeAccess().getEqualsSignKeyword_1_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:2981:9: ( (lv_ID_5_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:2982:10: (lv_ID_5_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:2982:10: (lv_ID_5_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:2983:11: lv_ID_5_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getSwitchNodeAccess().getIDEStringParserRuleCall_1_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_15);
                    	    lv_ID_5_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getSwitchNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"ID",
                    	    												lv_ID_5_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:3006:4: ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:3006:4: ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:3007:5: {...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleSwitchNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:3007:107: ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:3008:6: ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:3011:9: ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:3011:10: {...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSwitchNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:3011:19: (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:3011:20: otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) )
                    	    {
                    	    otherlv_6=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_6, grammarAccess.getSwitchNodeAccess().getNameKeyword_1_2_0());
                    	    								
                    	    otherlv_7=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_7, grammarAccess.getSwitchNodeAccess().getEqualsSignKeyword_1_2_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:3019:9: ( (lv_name_8_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:3020:10: (lv_name_8_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:3020:10: (lv_name_8_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:3021:11: lv_name_8_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getSwitchNodeAccess().getNameEStringParserRuleCall_1_2_2_0());
                    	    										
                    	    pushFollow(FOLLOW_15);
                    	    lv_name_8_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getSwitchNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_8_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:3044:4: ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:3044:4: ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:3045:5: {...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleSwitchNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:3045:107: ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:3046:6: ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:3049:9: ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:3049:10: {...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSwitchNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:3049:19: (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:3049:20: otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_9=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_9, grammarAccess.getSwitchNodeAccess().getParametersKeyword_1_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:3053:9: ( (lv_parameters_10_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:3054:10: (lv_parameters_10_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:3054:10: (lv_parameters_10_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:3055:11: lv_parameters_10_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getSwitchNodeAccess().getParametersParameterParserRuleCall_1_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_parameters_10_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getSwitchNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_10_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:3072:9: (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )*
                    	    loop44:
                    	    do {
                    	        int alt44=2;
                    	        int LA44_0 = input.LA(1);

                    	        if ( (LA44_0==Comma) ) {
                    	            alt44=1;
                    	        }


                    	        switch (alt44) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:3073:10: otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_11=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_11, grammarAccess.getSwitchNodeAccess().getCommaKeyword_1_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:3077:10: ( (lv_parameters_12_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:3078:11: (lv_parameters_12_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:3078:11: (lv_parameters_12_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:3079:12: lv_parameters_12_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getSwitchNodeAccess().getParametersParameterParserRuleCall_1_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_parameters_12_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getSwitchNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_12_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop44;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:3103:4: ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:3103:4: ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:3104:5: {...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleSwitchNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:3104:107: ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:3105:6: ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:3108:9: ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:3108:10: {...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSwitchNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:3108:19: (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:3108:20: otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_13=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_13, grammarAccess.getSwitchNodeAccess().getSatisficesKeyword_1_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:3112:9: ( (lv_satisfices_14_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:3113:10: (lv_satisfices_14_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:3113:10: (lv_satisfices_14_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:3114:11: lv_satisfices_14_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getSwitchNodeAccess().getSatisficesQualityParserRuleCall_1_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfices_14_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getSwitchNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_14_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:3131:9: (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )*
                    	    loop45:
                    	    do {
                    	        int alt45=2;
                    	        int LA45_0 = input.LA(1);

                    	        if ( (LA45_0==Comma) ) {
                    	            alt45=1;
                    	        }


                    	        switch (alt45) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:3132:10: otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_15=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_15, grammarAccess.getSwitchNodeAccess().getCommaKeyword_1_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:3136:10: ( (lv_satisfices_16_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:3137:11: (lv_satisfices_16_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:3137:11: (lv_satisfices_16_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:3138:12: lv_satisfices_16_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getSwitchNodeAccess().getSatisficesQualityParserRuleCall_1_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfices_16_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getSwitchNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_16_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop45;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:3162:4: ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:3162:4: ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:3163:5: {...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleSwitchNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:3163:107: ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:3164:6: ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:3167:9: ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:3167:10: {...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSwitchNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:3167:19: (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:3167:20: otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_17=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_17, grammarAccess.getSwitchNodeAccess().getSatisfiesKeyword_1_5_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:3171:9: ( (lv_satisfies_18_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:3172:10: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:3172:10: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:3173:11: lv_satisfies_18_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getSwitchNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_5_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfies_18_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getSwitchNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_18_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:3190:9: (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )*
                    	    loop46:
                    	    do {
                    	        int alt46=2;
                    	        int LA46_0 = input.LA(1);

                    	        if ( (LA46_0==Comma) ) {
                    	            alt46=1;
                    	        }


                    	        switch (alt46) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:3191:10: otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_19=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_19, grammarAccess.getSwitchNodeAccess().getCommaKeyword_1_5_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:3195:10: ( (lv_satisfies_20_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:3196:11: (lv_satisfies_20_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:3196:11: (lv_satisfies_20_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:3197:12: lv_satisfies_20_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getSwitchNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_5_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfies_20_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getSwitchNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_20_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop46;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 7 :
                    	    // InternalQualityBtCppParser.g:3221:4: ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:3221:4: ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:3222:5: {...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1(), 6) ) {
                    	        throw new FailedPredicateException(input, "ruleSwitchNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1(), 6)");
                    	    }
                    	    // InternalQualityBtCppParser.g:3222:107: ( ({...}? => (otherlv_21= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:3223:6: ({...}? => (otherlv_21= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1(), 6);
                    	    					
                    	    // InternalQualityBtCppParser.g:3226:9: ({...}? => (otherlv_21= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:3226:10: {...}? => (otherlv_21= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSwitchNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:3226:19: (otherlv_21= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:3226:20: otherlv_21= RightParenthesis
                    	    {
                    	    otherlv_21=(Token)match(input,RightParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_21, grammarAccess.getSwitchNodeAccess().getRightParenthesisKeyword_1_6());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt47 >= 1 ) break loop47;
                                EarlyExitException eee =
                                    new EarlyExitException(47, input);
                                throw eee;
                        }
                        cnt47++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1()) ) {
                        throw new FailedPredicateException(input, "ruleSwitchNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1());
                    				

                    }
                    break;

            }

            this_BEGIN_22=(Token)match(input,RULE_BEGIN,FOLLOW_9); 

            			newLeafNode(this_BEGIN_22, grammarAccess.getSwitchNodeAccess().getBEGINTerminalRuleCall_2());
            		
            // InternalQualityBtCppParser.g:3248:3: ( (lv_child_23_0= ruleTreeNode ) )
            // InternalQualityBtCppParser.g:3249:4: (lv_child_23_0= ruleTreeNode )
            {
            // InternalQualityBtCppParser.g:3249:4: (lv_child_23_0= ruleTreeNode )
            // InternalQualityBtCppParser.g:3250:5: lv_child_23_0= ruleTreeNode
            {

            					newCompositeNode(grammarAccess.getSwitchNodeAccess().getChildTreeNodeParserRuleCall_3_0());
            				
            pushFollow(FOLLOW_10);
            lv_child_23_0=ruleTreeNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getSwitchNodeRule());
            					}
            					add(
            						current,
            						"child",
            						lv_child_23_0,
            						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            // InternalQualityBtCppParser.g:3267:3: ( (lv_child_24_0= ruleTreeNode ) )*
            loop49:
            do {
                int alt49=2;
                int LA49_0 = input.LA(1);

                if ( ((LA49_0>=KeepRunningUntilFailure && LA49_0<=SetBlackboard)||(LA49_0>=ConsumeQueue && LA49_0<=ScriptAction)||LA49_0==WhileDoElse||(LA49_0>=CoroAction && LA49_0<=IfThenElse)||LA49_0==Inverter||(LA49_0>=RunOnce && LA49_0<=Sleep)||LA49_0==Loop||LA49_0==Test||(LA49_0>=M && LA49_0<=HyphenMinusGreaterThanSign)||(LA49_0>=R && LA49_0<=VerticalLineVerticalLine)||LA49_0==QuestionMark) ) {
                    alt49=1;
                }


                switch (alt49) {
            	case 1 :
            	    // InternalQualityBtCppParser.g:3268:4: (lv_child_24_0= ruleTreeNode )
            	    {
            	    // InternalQualityBtCppParser.g:3268:4: (lv_child_24_0= ruleTreeNode )
            	    // InternalQualityBtCppParser.g:3269:5: lv_child_24_0= ruleTreeNode
            	    {

            	    					newCompositeNode(grammarAccess.getSwitchNodeAccess().getChildTreeNodeParserRuleCall_4_0());
            	    				
            	    pushFollow(FOLLOW_10);
            	    lv_child_24_0=ruleTreeNode();

            	    state._fsp--;


            	    					if (current==null) {
            	    						current = createModelElementForParent(grammarAccess.getSwitchNodeRule());
            	    					}
            	    					add(
            	    						current,
            	    						"child",
            	    						lv_child_24_0,
            	    						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            	    					afterParserOrEnumRuleCall();
            	    				

            	    }


            	    }
            	    break;

            	default :
            	    break loop49;
                }
            } while (true);

            this_END_25=(Token)match(input,RULE_END,FOLLOW_2); 

            			newLeafNode(this_END_25, grammarAccess.getSwitchNodeAccess().getENDTerminalRuleCall_5());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSwitchNode"


    // $ANTLR start "entryRuleReactiveFallbackNode"
    // InternalQualityBtCppParser.g:3294:1: entryRuleReactiveFallbackNode returns [EObject current=null] : iv_ruleReactiveFallbackNode= ruleReactiveFallbackNode EOF ;
    public final EObject entryRuleReactiveFallbackNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReactiveFallbackNode = null;


        try {
            // InternalQualityBtCppParser.g:3294:61: (iv_ruleReactiveFallbackNode= ruleReactiveFallbackNode EOF )
            // InternalQualityBtCppParser.g:3295:2: iv_ruleReactiveFallbackNode= ruleReactiveFallbackNode EOF
            {
             newCompositeNode(grammarAccess.getReactiveFallbackNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleReactiveFallbackNode=ruleReactiveFallbackNode();

            state._fsp--;

             current =iv_ruleReactiveFallbackNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleReactiveFallbackNode"


    // $ANTLR start "ruleReactiveFallbackNode"
    // InternalQualityBtCppParser.g:3301:1: ruleReactiveFallbackNode returns [EObject current=null] : (otherlv_0= R ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END ) ;
    public final EObject ruleReactiveFallbackNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token this_BEGIN_22=null;
        Token this_END_25=null;
        AntlrDatatypeRuleToken lv_ID_5_0 = null;

        AntlrDatatypeRuleToken lv_name_8_0 = null;

        EObject lv_parameters_10_0 = null;

        EObject lv_parameters_12_0 = null;

        EObject lv_satisfices_14_0 = null;

        EObject lv_satisfices_16_0 = null;

        EObject lv_satisfies_18_0 = null;

        EObject lv_satisfies_20_0 = null;

        EObject lv_child_23_0 = null;

        EObject lv_child_24_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:3307:2: ( (otherlv_0= R ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END ) )
            // InternalQualityBtCppParser.g:3308:2: (otherlv_0= R ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END )
            {
            // InternalQualityBtCppParser.g:3308:2: (otherlv_0= R ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END )
            // InternalQualityBtCppParser.g:3309:3: otherlv_0= R ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END
            {
            otherlv_0=(Token)match(input,R,FOLLOW_15); 

            			newLeafNode(otherlv_0, grammarAccess.getReactiveFallbackNodeAccess().getRKeyword_0());
            		
            // InternalQualityBtCppParser.g:3313:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt54=2;
            int LA54_0 = input.LA(1);

            if ( ((LA54_0>=Parameters && LA54_0<=Satisfies)||LA54_0==Name||LA54_0==ID||(LA54_0>=LeftParenthesis && LA54_0<=RightParenthesis)) ) {
                alt54=1;
            }
            switch (alt54) {
                case 1 :
                    // InternalQualityBtCppParser.g:3314:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:3314:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:3315:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1());
                    				
                    // InternalQualityBtCppParser.g:3318:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:3319:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:3319:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+
                    int cnt53=0;
                    loop53:
                    do {
                        int alt53=8;
                        int LA53_0 = input.LA(1);

                        if ( LA53_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1(), 0) ) {
                            alt53=1;
                        }
                        else if ( LA53_0 == ID && getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1(), 1) ) {
                            alt53=2;
                        }
                        else if ( LA53_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1(), 2) ) {
                            alt53=3;
                        }
                        else if ( LA53_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1(), 3) ) {
                            alt53=4;
                        }
                        else if ( LA53_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1(), 4) ) {
                            alt53=5;
                        }
                        else if ( LA53_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1(), 5) ) {
                            alt53=6;
                        }
                        else if ( LA53_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1(), 6) ) {
                            alt53=7;
                        }


                        switch (alt53) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:3320:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:3320:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:3321:5: {...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleReactiveFallbackNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:3321:117: ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:3322:6: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:3325:9: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:3325:10: {...}? => (otherlv_2= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleReactiveFallbackNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:3325:19: (otherlv_2= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:3325:20: otherlv_2= LeftParenthesis
                    	    {
                    	    otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_2, grammarAccess.getReactiveFallbackNodeAccess().getLeftParenthesisKeyword_1_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:3335:4: ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:3335:4: ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:3336:5: {...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleReactiveFallbackNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:3336:117: ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:3337:6: ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:3340:9: ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:3340:10: {...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleReactiveFallbackNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:3340:19: (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:3340:20: otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) )
                    	    {
                    	    otherlv_3=(Token)match(input,ID,FOLLOW_8); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getReactiveFallbackNodeAccess().getIDKeyword_1_1_0());
                    	    								
                    	    otherlv_4=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getReactiveFallbackNodeAccess().getEqualsSignKeyword_1_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:3348:9: ( (lv_ID_5_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:3349:10: (lv_ID_5_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:3349:10: (lv_ID_5_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:3350:11: lv_ID_5_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getReactiveFallbackNodeAccess().getIDEStringParserRuleCall_1_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_15);
                    	    lv_ID_5_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getReactiveFallbackNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"ID",
                    	    												lv_ID_5_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:3373:4: ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:3373:4: ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:3374:5: {...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleReactiveFallbackNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:3374:117: ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:3375:6: ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:3378:9: ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:3378:10: {...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleReactiveFallbackNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:3378:19: (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:3378:20: otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) )
                    	    {
                    	    otherlv_6=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_6, grammarAccess.getReactiveFallbackNodeAccess().getNameKeyword_1_2_0());
                    	    								
                    	    otherlv_7=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_7, grammarAccess.getReactiveFallbackNodeAccess().getEqualsSignKeyword_1_2_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:3386:9: ( (lv_name_8_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:3387:10: (lv_name_8_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:3387:10: (lv_name_8_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:3388:11: lv_name_8_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getReactiveFallbackNodeAccess().getNameEStringParserRuleCall_1_2_2_0());
                    	    										
                    	    pushFollow(FOLLOW_15);
                    	    lv_name_8_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getReactiveFallbackNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_8_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:3411:4: ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:3411:4: ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:3412:5: {...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleReactiveFallbackNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:3412:117: ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:3413:6: ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:3416:9: ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:3416:10: {...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleReactiveFallbackNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:3416:19: (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:3416:20: otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_9=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_9, grammarAccess.getReactiveFallbackNodeAccess().getParametersKeyword_1_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:3420:9: ( (lv_parameters_10_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:3421:10: (lv_parameters_10_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:3421:10: (lv_parameters_10_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:3422:11: lv_parameters_10_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getReactiveFallbackNodeAccess().getParametersParameterParserRuleCall_1_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_parameters_10_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getReactiveFallbackNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_10_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:3439:9: (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )*
                    	    loop50:
                    	    do {
                    	        int alt50=2;
                    	        int LA50_0 = input.LA(1);

                    	        if ( (LA50_0==Comma) ) {
                    	            alt50=1;
                    	        }


                    	        switch (alt50) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:3440:10: otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_11=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_11, grammarAccess.getReactiveFallbackNodeAccess().getCommaKeyword_1_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:3444:10: ( (lv_parameters_12_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:3445:11: (lv_parameters_12_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:3445:11: (lv_parameters_12_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:3446:12: lv_parameters_12_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getReactiveFallbackNodeAccess().getParametersParameterParserRuleCall_1_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_parameters_12_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getReactiveFallbackNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_12_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop50;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:3470:4: ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:3470:4: ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:3471:5: {...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleReactiveFallbackNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:3471:117: ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:3472:6: ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:3475:9: ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:3475:10: {...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleReactiveFallbackNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:3475:19: (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:3475:20: otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_13=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_13, grammarAccess.getReactiveFallbackNodeAccess().getSatisficesKeyword_1_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:3479:9: ( (lv_satisfices_14_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:3480:10: (lv_satisfices_14_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:3480:10: (lv_satisfices_14_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:3481:11: lv_satisfices_14_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getReactiveFallbackNodeAccess().getSatisficesQualityParserRuleCall_1_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfices_14_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getReactiveFallbackNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_14_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:3498:9: (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )*
                    	    loop51:
                    	    do {
                    	        int alt51=2;
                    	        int LA51_0 = input.LA(1);

                    	        if ( (LA51_0==Comma) ) {
                    	            alt51=1;
                    	        }


                    	        switch (alt51) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:3499:10: otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_15=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_15, grammarAccess.getReactiveFallbackNodeAccess().getCommaKeyword_1_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:3503:10: ( (lv_satisfices_16_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:3504:11: (lv_satisfices_16_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:3504:11: (lv_satisfices_16_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:3505:12: lv_satisfices_16_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getReactiveFallbackNodeAccess().getSatisficesQualityParserRuleCall_1_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfices_16_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getReactiveFallbackNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_16_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop51;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:3529:4: ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:3529:4: ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:3530:5: {...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleReactiveFallbackNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:3530:117: ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:3531:6: ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:3534:9: ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:3534:10: {...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleReactiveFallbackNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:3534:19: (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:3534:20: otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_17=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_17, grammarAccess.getReactiveFallbackNodeAccess().getSatisfiesKeyword_1_5_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:3538:9: ( (lv_satisfies_18_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:3539:10: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:3539:10: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:3540:11: lv_satisfies_18_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getReactiveFallbackNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_5_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfies_18_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getReactiveFallbackNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_18_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:3557:9: (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )*
                    	    loop52:
                    	    do {
                    	        int alt52=2;
                    	        int LA52_0 = input.LA(1);

                    	        if ( (LA52_0==Comma) ) {
                    	            alt52=1;
                    	        }


                    	        switch (alt52) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:3558:10: otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_19=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_19, grammarAccess.getReactiveFallbackNodeAccess().getCommaKeyword_1_5_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:3562:10: ( (lv_satisfies_20_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:3563:11: (lv_satisfies_20_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:3563:11: (lv_satisfies_20_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:3564:12: lv_satisfies_20_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getReactiveFallbackNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_5_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfies_20_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getReactiveFallbackNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_20_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop52;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 7 :
                    	    // InternalQualityBtCppParser.g:3588:4: ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:3588:4: ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:3589:5: {...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1(), 6) ) {
                    	        throw new FailedPredicateException(input, "ruleReactiveFallbackNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1(), 6)");
                    	    }
                    	    // InternalQualityBtCppParser.g:3589:117: ( ({...}? => (otherlv_21= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:3590:6: ({...}? => (otherlv_21= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1(), 6);
                    	    					
                    	    // InternalQualityBtCppParser.g:3593:9: ({...}? => (otherlv_21= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:3593:10: {...}? => (otherlv_21= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleReactiveFallbackNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:3593:19: (otherlv_21= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:3593:20: otherlv_21= RightParenthesis
                    	    {
                    	    otherlv_21=(Token)match(input,RightParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_21, grammarAccess.getReactiveFallbackNodeAccess().getRightParenthesisKeyword_1_6());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt53 >= 1 ) break loop53;
                                EarlyExitException eee =
                                    new EarlyExitException(53, input);
                                throw eee;
                        }
                        cnt53++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1()) ) {
                        throw new FailedPredicateException(input, "ruleReactiveFallbackNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1());
                    				

                    }
                    break;

            }

            this_BEGIN_22=(Token)match(input,RULE_BEGIN,FOLLOW_9); 

            			newLeafNode(this_BEGIN_22, grammarAccess.getReactiveFallbackNodeAccess().getBEGINTerminalRuleCall_2());
            		
            // InternalQualityBtCppParser.g:3615:3: ( (lv_child_23_0= ruleTreeNode ) )
            // InternalQualityBtCppParser.g:3616:4: (lv_child_23_0= ruleTreeNode )
            {
            // InternalQualityBtCppParser.g:3616:4: (lv_child_23_0= ruleTreeNode )
            // InternalQualityBtCppParser.g:3617:5: lv_child_23_0= ruleTreeNode
            {

            					newCompositeNode(grammarAccess.getReactiveFallbackNodeAccess().getChildTreeNodeParserRuleCall_3_0());
            				
            pushFollow(FOLLOW_10);
            lv_child_23_0=ruleTreeNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getReactiveFallbackNodeRule());
            					}
            					add(
            						current,
            						"child",
            						lv_child_23_0,
            						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            // InternalQualityBtCppParser.g:3634:3: ( (lv_child_24_0= ruleTreeNode ) )*
            loop55:
            do {
                int alt55=2;
                int LA55_0 = input.LA(1);

                if ( ((LA55_0>=KeepRunningUntilFailure && LA55_0<=SetBlackboard)||(LA55_0>=ConsumeQueue && LA55_0<=ScriptAction)||LA55_0==WhileDoElse||(LA55_0>=CoroAction && LA55_0<=IfThenElse)||LA55_0==Inverter||(LA55_0>=RunOnce && LA55_0<=Sleep)||LA55_0==Loop||LA55_0==Test||(LA55_0>=M && LA55_0<=HyphenMinusGreaterThanSign)||(LA55_0>=R && LA55_0<=VerticalLineVerticalLine)||LA55_0==QuestionMark) ) {
                    alt55=1;
                }


                switch (alt55) {
            	case 1 :
            	    // InternalQualityBtCppParser.g:3635:4: (lv_child_24_0= ruleTreeNode )
            	    {
            	    // InternalQualityBtCppParser.g:3635:4: (lv_child_24_0= ruleTreeNode )
            	    // InternalQualityBtCppParser.g:3636:5: lv_child_24_0= ruleTreeNode
            	    {

            	    					newCompositeNode(grammarAccess.getReactiveFallbackNodeAccess().getChildTreeNodeParserRuleCall_4_0());
            	    				
            	    pushFollow(FOLLOW_10);
            	    lv_child_24_0=ruleTreeNode();

            	    state._fsp--;


            	    					if (current==null) {
            	    						current = createModelElementForParent(grammarAccess.getReactiveFallbackNodeRule());
            	    					}
            	    					add(
            	    						current,
            	    						"child",
            	    						lv_child_24_0,
            	    						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            	    					afterParserOrEnumRuleCall();
            	    				

            	    }


            	    }
            	    break;

            	default :
            	    break loop55;
                }
            } while (true);

            this_END_25=(Token)match(input,RULE_END,FOLLOW_2); 

            			newLeafNode(this_END_25, grammarAccess.getReactiveFallbackNodeAccess().getENDTerminalRuleCall_5());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReactiveFallbackNode"


    // $ANTLR start "entryRuleWhileDoElseNode"
    // InternalQualityBtCppParser.g:3661:1: entryRuleWhileDoElseNode returns [EObject current=null] : iv_ruleWhileDoElseNode= ruleWhileDoElseNode EOF ;
    public final EObject entryRuleWhileDoElseNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleWhileDoElseNode = null;


        try {
            // InternalQualityBtCppParser.g:3661:56: (iv_ruleWhileDoElseNode= ruleWhileDoElseNode EOF )
            // InternalQualityBtCppParser.g:3662:2: iv_ruleWhileDoElseNode= ruleWhileDoElseNode EOF
            {
             newCompositeNode(grammarAccess.getWhileDoElseNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleWhileDoElseNode=ruleWhileDoElseNode();

            state._fsp--;

             current =iv_ruleWhileDoElseNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleWhileDoElseNode"


    // $ANTLR start "ruleWhileDoElseNode"
    // InternalQualityBtCppParser.g:3668:1: ruleWhileDoElseNode returns [EObject current=null] : (otherlv_0= WhileDoElse ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END ) ;
    public final EObject ruleWhileDoElseNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token this_BEGIN_22=null;
        Token this_END_25=null;
        AntlrDatatypeRuleToken lv_ID_5_0 = null;

        AntlrDatatypeRuleToken lv_name_8_0 = null;

        EObject lv_parameters_10_0 = null;

        EObject lv_parameters_12_0 = null;

        EObject lv_satisfices_14_0 = null;

        EObject lv_satisfices_16_0 = null;

        EObject lv_satisfies_18_0 = null;

        EObject lv_satisfies_20_0 = null;

        EObject lv_child_23_0 = null;

        EObject lv_child_24_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:3674:2: ( (otherlv_0= WhileDoElse ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END ) )
            // InternalQualityBtCppParser.g:3675:2: (otherlv_0= WhileDoElse ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END )
            {
            // InternalQualityBtCppParser.g:3675:2: (otherlv_0= WhileDoElse ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END )
            // InternalQualityBtCppParser.g:3676:3: otherlv_0= WhileDoElse ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END
            {
            otherlv_0=(Token)match(input,WhileDoElse,FOLLOW_15); 

            			newLeafNode(otherlv_0, grammarAccess.getWhileDoElseNodeAccess().getWhileDoElseKeyword_0());
            		
            // InternalQualityBtCppParser.g:3680:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt60=2;
            int LA60_0 = input.LA(1);

            if ( ((LA60_0>=Parameters && LA60_0<=Satisfies)||LA60_0==Name||LA60_0==ID||(LA60_0>=LeftParenthesis && LA60_0<=RightParenthesis)) ) {
                alt60=1;
            }
            switch (alt60) {
                case 1 :
                    // InternalQualityBtCppParser.g:3681:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:3681:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:3682:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1());
                    				
                    // InternalQualityBtCppParser.g:3685:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:3686:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:3686:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+
                    int cnt59=0;
                    loop59:
                    do {
                        int alt59=8;
                        int LA59_0 = input.LA(1);

                        if ( LA59_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1(), 0) ) {
                            alt59=1;
                        }
                        else if ( LA59_0 == ID && getUnorderedGroupHelper().canSelect(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1(), 1) ) {
                            alt59=2;
                        }
                        else if ( LA59_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1(), 2) ) {
                            alt59=3;
                        }
                        else if ( LA59_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1(), 3) ) {
                            alt59=4;
                        }
                        else if ( LA59_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1(), 4) ) {
                            alt59=5;
                        }
                        else if ( LA59_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1(), 5) ) {
                            alt59=6;
                        }
                        else if ( LA59_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1(), 6) ) {
                            alt59=7;
                        }


                        switch (alt59) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:3687:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:3687:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:3688:5: {...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleWhileDoElseNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:3688:112: ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:3689:6: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:3692:9: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:3692:10: {...}? => (otherlv_2= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleWhileDoElseNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:3692:19: (otherlv_2= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:3692:20: otherlv_2= LeftParenthesis
                    	    {
                    	    otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_2, grammarAccess.getWhileDoElseNodeAccess().getLeftParenthesisKeyword_1_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:3702:4: ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:3702:4: ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:3703:5: {...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleWhileDoElseNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:3703:112: ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:3704:6: ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:3707:9: ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:3707:10: {...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleWhileDoElseNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:3707:19: (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:3707:20: otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) )
                    	    {
                    	    otherlv_3=(Token)match(input,ID,FOLLOW_8); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getWhileDoElseNodeAccess().getIDKeyword_1_1_0());
                    	    								
                    	    otherlv_4=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getWhileDoElseNodeAccess().getEqualsSignKeyword_1_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:3715:9: ( (lv_ID_5_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:3716:10: (lv_ID_5_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:3716:10: (lv_ID_5_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:3717:11: lv_ID_5_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getWhileDoElseNodeAccess().getIDEStringParserRuleCall_1_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_15);
                    	    lv_ID_5_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getWhileDoElseNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"ID",
                    	    												lv_ID_5_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:3740:4: ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:3740:4: ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:3741:5: {...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleWhileDoElseNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:3741:112: ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:3742:6: ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:3745:9: ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:3745:10: {...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleWhileDoElseNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:3745:19: (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:3745:20: otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) )
                    	    {
                    	    otherlv_6=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_6, grammarAccess.getWhileDoElseNodeAccess().getNameKeyword_1_2_0());
                    	    								
                    	    otherlv_7=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_7, grammarAccess.getWhileDoElseNodeAccess().getEqualsSignKeyword_1_2_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:3753:9: ( (lv_name_8_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:3754:10: (lv_name_8_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:3754:10: (lv_name_8_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:3755:11: lv_name_8_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getWhileDoElseNodeAccess().getNameEStringParserRuleCall_1_2_2_0());
                    	    										
                    	    pushFollow(FOLLOW_15);
                    	    lv_name_8_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getWhileDoElseNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_8_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:3778:4: ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:3778:4: ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:3779:5: {...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleWhileDoElseNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:3779:112: ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:3780:6: ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:3783:9: ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:3783:10: {...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleWhileDoElseNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:3783:19: (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:3783:20: otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_9=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_9, grammarAccess.getWhileDoElseNodeAccess().getParametersKeyword_1_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:3787:9: ( (lv_parameters_10_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:3788:10: (lv_parameters_10_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:3788:10: (lv_parameters_10_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:3789:11: lv_parameters_10_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getWhileDoElseNodeAccess().getParametersParameterParserRuleCall_1_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_parameters_10_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getWhileDoElseNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_10_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:3806:9: (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )*
                    	    loop56:
                    	    do {
                    	        int alt56=2;
                    	        int LA56_0 = input.LA(1);

                    	        if ( (LA56_0==Comma) ) {
                    	            alt56=1;
                    	        }


                    	        switch (alt56) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:3807:10: otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_11=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_11, grammarAccess.getWhileDoElseNodeAccess().getCommaKeyword_1_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:3811:10: ( (lv_parameters_12_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:3812:11: (lv_parameters_12_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:3812:11: (lv_parameters_12_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:3813:12: lv_parameters_12_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getWhileDoElseNodeAccess().getParametersParameterParserRuleCall_1_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_parameters_12_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getWhileDoElseNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_12_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop56;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:3837:4: ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:3837:4: ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:3838:5: {...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleWhileDoElseNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:3838:112: ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:3839:6: ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:3842:9: ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:3842:10: {...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleWhileDoElseNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:3842:19: (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:3842:20: otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_13=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_13, grammarAccess.getWhileDoElseNodeAccess().getSatisficesKeyword_1_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:3846:9: ( (lv_satisfices_14_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:3847:10: (lv_satisfices_14_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:3847:10: (lv_satisfices_14_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:3848:11: lv_satisfices_14_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getWhileDoElseNodeAccess().getSatisficesQualityParserRuleCall_1_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfices_14_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getWhileDoElseNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_14_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:3865:9: (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )*
                    	    loop57:
                    	    do {
                    	        int alt57=2;
                    	        int LA57_0 = input.LA(1);

                    	        if ( (LA57_0==Comma) ) {
                    	            alt57=1;
                    	        }


                    	        switch (alt57) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:3866:10: otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_15=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_15, grammarAccess.getWhileDoElseNodeAccess().getCommaKeyword_1_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:3870:10: ( (lv_satisfices_16_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:3871:11: (lv_satisfices_16_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:3871:11: (lv_satisfices_16_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:3872:12: lv_satisfices_16_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getWhileDoElseNodeAccess().getSatisficesQualityParserRuleCall_1_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfices_16_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getWhileDoElseNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_16_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop57;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:3896:4: ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:3896:4: ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:3897:5: {...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleWhileDoElseNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:3897:112: ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:3898:6: ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:3901:9: ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:3901:10: {...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleWhileDoElseNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:3901:19: (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:3901:20: otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_17=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_17, grammarAccess.getWhileDoElseNodeAccess().getSatisfiesKeyword_1_5_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:3905:9: ( (lv_satisfies_18_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:3906:10: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:3906:10: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:3907:11: lv_satisfies_18_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getWhileDoElseNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_5_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfies_18_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getWhileDoElseNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_18_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:3924:9: (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )*
                    	    loop58:
                    	    do {
                    	        int alt58=2;
                    	        int LA58_0 = input.LA(1);

                    	        if ( (LA58_0==Comma) ) {
                    	            alt58=1;
                    	        }


                    	        switch (alt58) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:3925:10: otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_19=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_19, grammarAccess.getWhileDoElseNodeAccess().getCommaKeyword_1_5_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:3929:10: ( (lv_satisfies_20_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:3930:11: (lv_satisfies_20_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:3930:11: (lv_satisfies_20_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:3931:12: lv_satisfies_20_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getWhileDoElseNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_5_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfies_20_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getWhileDoElseNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_20_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop58;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 7 :
                    	    // InternalQualityBtCppParser.g:3955:4: ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:3955:4: ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:3956:5: {...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1(), 6) ) {
                    	        throw new FailedPredicateException(input, "ruleWhileDoElseNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1(), 6)");
                    	    }
                    	    // InternalQualityBtCppParser.g:3956:112: ( ({...}? => (otherlv_21= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:3957:6: ({...}? => (otherlv_21= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1(), 6);
                    	    					
                    	    // InternalQualityBtCppParser.g:3960:9: ({...}? => (otherlv_21= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:3960:10: {...}? => (otherlv_21= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleWhileDoElseNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:3960:19: (otherlv_21= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:3960:20: otherlv_21= RightParenthesis
                    	    {
                    	    otherlv_21=(Token)match(input,RightParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_21, grammarAccess.getWhileDoElseNodeAccess().getRightParenthesisKeyword_1_6());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt59 >= 1 ) break loop59;
                                EarlyExitException eee =
                                    new EarlyExitException(59, input);
                                throw eee;
                        }
                        cnt59++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1()) ) {
                        throw new FailedPredicateException(input, "ruleWhileDoElseNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1());
                    				

                    }
                    break;

            }

            this_BEGIN_22=(Token)match(input,RULE_BEGIN,FOLLOW_9); 

            			newLeafNode(this_BEGIN_22, grammarAccess.getWhileDoElseNodeAccess().getBEGINTerminalRuleCall_2());
            		
            // InternalQualityBtCppParser.g:3982:3: ( (lv_child_23_0= ruleTreeNode ) )
            // InternalQualityBtCppParser.g:3983:4: (lv_child_23_0= ruleTreeNode )
            {
            // InternalQualityBtCppParser.g:3983:4: (lv_child_23_0= ruleTreeNode )
            // InternalQualityBtCppParser.g:3984:5: lv_child_23_0= ruleTreeNode
            {

            					newCompositeNode(grammarAccess.getWhileDoElseNodeAccess().getChildTreeNodeParserRuleCall_3_0());
            				
            pushFollow(FOLLOW_10);
            lv_child_23_0=ruleTreeNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getWhileDoElseNodeRule());
            					}
            					add(
            						current,
            						"child",
            						lv_child_23_0,
            						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            // InternalQualityBtCppParser.g:4001:3: ( (lv_child_24_0= ruleTreeNode ) )*
            loop61:
            do {
                int alt61=2;
                int LA61_0 = input.LA(1);

                if ( ((LA61_0>=KeepRunningUntilFailure && LA61_0<=SetBlackboard)||(LA61_0>=ConsumeQueue && LA61_0<=ScriptAction)||LA61_0==WhileDoElse||(LA61_0>=CoroAction && LA61_0<=IfThenElse)||LA61_0==Inverter||(LA61_0>=RunOnce && LA61_0<=Sleep)||LA61_0==Loop||LA61_0==Test||(LA61_0>=M && LA61_0<=HyphenMinusGreaterThanSign)||(LA61_0>=R && LA61_0<=VerticalLineVerticalLine)||LA61_0==QuestionMark) ) {
                    alt61=1;
                }


                switch (alt61) {
            	case 1 :
            	    // InternalQualityBtCppParser.g:4002:4: (lv_child_24_0= ruleTreeNode )
            	    {
            	    // InternalQualityBtCppParser.g:4002:4: (lv_child_24_0= ruleTreeNode )
            	    // InternalQualityBtCppParser.g:4003:5: lv_child_24_0= ruleTreeNode
            	    {

            	    					newCompositeNode(grammarAccess.getWhileDoElseNodeAccess().getChildTreeNodeParserRuleCall_4_0());
            	    				
            	    pushFollow(FOLLOW_10);
            	    lv_child_24_0=ruleTreeNode();

            	    state._fsp--;


            	    					if (current==null) {
            	    						current = createModelElementForParent(grammarAccess.getWhileDoElseNodeRule());
            	    					}
            	    					add(
            	    						current,
            	    						"child",
            	    						lv_child_24_0,
            	    						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            	    					afterParserOrEnumRuleCall();
            	    				

            	    }


            	    }
            	    break;

            	default :
            	    break loop61;
                }
            } while (true);

            this_END_25=(Token)match(input,RULE_END,FOLLOW_2); 

            			newLeafNode(this_END_25, grammarAccess.getWhileDoElseNodeAccess().getENDTerminalRuleCall_5());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleWhileDoElseNode"


    // $ANTLR start "entryRuleReactiveSequenceNode"
    // InternalQualityBtCppParser.g:4028:1: entryRuleReactiveSequenceNode returns [EObject current=null] : iv_ruleReactiveSequenceNode= ruleReactiveSequenceNode EOF ;
    public final EObject entryRuleReactiveSequenceNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReactiveSequenceNode = null;


        try {
            // InternalQualityBtCppParser.g:4028:61: (iv_ruleReactiveSequenceNode= ruleReactiveSequenceNode EOF )
            // InternalQualityBtCppParser.g:4029:2: iv_ruleReactiveSequenceNode= ruleReactiveSequenceNode EOF
            {
             newCompositeNode(grammarAccess.getReactiveSequenceNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleReactiveSequenceNode=ruleReactiveSequenceNode();

            state._fsp--;

             current =iv_ruleReactiveSequenceNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleReactiveSequenceNode"


    // $ANTLR start "ruleReactiveSequenceNode"
    // InternalQualityBtCppParser.g:4035:1: ruleReactiveSequenceNode returns [EObject current=null] : (otherlv_0= R_1 ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END ) ;
    public final EObject ruleReactiveSequenceNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token this_BEGIN_22=null;
        Token this_END_25=null;
        AntlrDatatypeRuleToken lv_ID_5_0 = null;

        AntlrDatatypeRuleToken lv_name_8_0 = null;

        EObject lv_parameters_10_0 = null;

        EObject lv_parameters_12_0 = null;

        EObject lv_satisfices_14_0 = null;

        EObject lv_satisfices_16_0 = null;

        EObject lv_satisfies_18_0 = null;

        EObject lv_satisfies_20_0 = null;

        EObject lv_child_23_0 = null;

        EObject lv_child_24_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:4041:2: ( (otherlv_0= R_1 ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END ) )
            // InternalQualityBtCppParser.g:4042:2: (otherlv_0= R_1 ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END )
            {
            // InternalQualityBtCppParser.g:4042:2: (otherlv_0= R_1 ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END )
            // InternalQualityBtCppParser.g:4043:3: otherlv_0= R_1 ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END
            {
            otherlv_0=(Token)match(input,R_1,FOLLOW_15); 

            			newLeafNode(otherlv_0, grammarAccess.getReactiveSequenceNodeAccess().getRKeyword_0());
            		
            // InternalQualityBtCppParser.g:4047:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt66=2;
            int LA66_0 = input.LA(1);

            if ( ((LA66_0>=Parameters && LA66_0<=Satisfies)||LA66_0==Name||LA66_0==ID||(LA66_0>=LeftParenthesis && LA66_0<=RightParenthesis)) ) {
                alt66=1;
            }
            switch (alt66) {
                case 1 :
                    // InternalQualityBtCppParser.g:4048:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:4048:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:4049:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1());
                    				
                    // InternalQualityBtCppParser.g:4052:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:4053:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:4053:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+
                    int cnt65=0;
                    loop65:
                    do {
                        int alt65=8;
                        int LA65_0 = input.LA(1);

                        if ( LA65_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1(), 0) ) {
                            alt65=1;
                        }
                        else if ( LA65_0 == ID && getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1(), 1) ) {
                            alt65=2;
                        }
                        else if ( LA65_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1(), 2) ) {
                            alt65=3;
                        }
                        else if ( LA65_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1(), 3) ) {
                            alt65=4;
                        }
                        else if ( LA65_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1(), 4) ) {
                            alt65=5;
                        }
                        else if ( LA65_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1(), 5) ) {
                            alt65=6;
                        }
                        else if ( LA65_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1(), 6) ) {
                            alt65=7;
                        }


                        switch (alt65) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:4054:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:4054:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:4055:5: {...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleReactiveSequenceNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:4055:117: ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:4056:6: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:4059:9: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:4059:10: {...}? => (otherlv_2= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleReactiveSequenceNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:4059:19: (otherlv_2= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:4059:20: otherlv_2= LeftParenthesis
                    	    {
                    	    otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_2, grammarAccess.getReactiveSequenceNodeAccess().getLeftParenthesisKeyword_1_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:4069:4: ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:4069:4: ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:4070:5: {...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleReactiveSequenceNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:4070:117: ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:4071:6: ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:4074:9: ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:4074:10: {...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleReactiveSequenceNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:4074:19: (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:4074:20: otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) )
                    	    {
                    	    otherlv_3=(Token)match(input,ID,FOLLOW_8); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getReactiveSequenceNodeAccess().getIDKeyword_1_1_0());
                    	    								
                    	    otherlv_4=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getReactiveSequenceNodeAccess().getEqualsSignKeyword_1_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:4082:9: ( (lv_ID_5_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:4083:10: (lv_ID_5_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:4083:10: (lv_ID_5_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:4084:11: lv_ID_5_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getReactiveSequenceNodeAccess().getIDEStringParserRuleCall_1_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_15);
                    	    lv_ID_5_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getReactiveSequenceNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"ID",
                    	    												lv_ID_5_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:4107:4: ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:4107:4: ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:4108:5: {...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleReactiveSequenceNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:4108:117: ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:4109:6: ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:4112:9: ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:4112:10: {...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleReactiveSequenceNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:4112:19: (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:4112:20: otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) )
                    	    {
                    	    otherlv_6=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_6, grammarAccess.getReactiveSequenceNodeAccess().getNameKeyword_1_2_0());
                    	    								
                    	    otherlv_7=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_7, grammarAccess.getReactiveSequenceNodeAccess().getEqualsSignKeyword_1_2_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:4120:9: ( (lv_name_8_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:4121:10: (lv_name_8_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:4121:10: (lv_name_8_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:4122:11: lv_name_8_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getReactiveSequenceNodeAccess().getNameEStringParserRuleCall_1_2_2_0());
                    	    										
                    	    pushFollow(FOLLOW_15);
                    	    lv_name_8_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getReactiveSequenceNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_8_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:4145:4: ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:4145:4: ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:4146:5: {...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleReactiveSequenceNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:4146:117: ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:4147:6: ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:4150:9: ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:4150:10: {...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleReactiveSequenceNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:4150:19: (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:4150:20: otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_9=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_9, grammarAccess.getReactiveSequenceNodeAccess().getParametersKeyword_1_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:4154:9: ( (lv_parameters_10_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:4155:10: (lv_parameters_10_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:4155:10: (lv_parameters_10_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:4156:11: lv_parameters_10_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getReactiveSequenceNodeAccess().getParametersParameterParserRuleCall_1_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_parameters_10_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getReactiveSequenceNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_10_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:4173:9: (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )*
                    	    loop62:
                    	    do {
                    	        int alt62=2;
                    	        int LA62_0 = input.LA(1);

                    	        if ( (LA62_0==Comma) ) {
                    	            alt62=1;
                    	        }


                    	        switch (alt62) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:4174:10: otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_11=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_11, grammarAccess.getReactiveSequenceNodeAccess().getCommaKeyword_1_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:4178:10: ( (lv_parameters_12_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:4179:11: (lv_parameters_12_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:4179:11: (lv_parameters_12_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:4180:12: lv_parameters_12_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getReactiveSequenceNodeAccess().getParametersParameterParserRuleCall_1_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_parameters_12_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getReactiveSequenceNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_12_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop62;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:4204:4: ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:4204:4: ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:4205:5: {...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleReactiveSequenceNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:4205:117: ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:4206:6: ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:4209:9: ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:4209:10: {...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleReactiveSequenceNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:4209:19: (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:4209:20: otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_13=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_13, grammarAccess.getReactiveSequenceNodeAccess().getSatisficesKeyword_1_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:4213:9: ( (lv_satisfices_14_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:4214:10: (lv_satisfices_14_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:4214:10: (lv_satisfices_14_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:4215:11: lv_satisfices_14_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getReactiveSequenceNodeAccess().getSatisficesQualityParserRuleCall_1_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfices_14_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getReactiveSequenceNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_14_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:4232:9: (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )*
                    	    loop63:
                    	    do {
                    	        int alt63=2;
                    	        int LA63_0 = input.LA(1);

                    	        if ( (LA63_0==Comma) ) {
                    	            alt63=1;
                    	        }


                    	        switch (alt63) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:4233:10: otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_15=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_15, grammarAccess.getReactiveSequenceNodeAccess().getCommaKeyword_1_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:4237:10: ( (lv_satisfices_16_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:4238:11: (lv_satisfices_16_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:4238:11: (lv_satisfices_16_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:4239:12: lv_satisfices_16_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getReactiveSequenceNodeAccess().getSatisficesQualityParserRuleCall_1_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfices_16_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getReactiveSequenceNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_16_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop63;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:4263:4: ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:4263:4: ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:4264:5: {...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleReactiveSequenceNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:4264:117: ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:4265:6: ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:4268:9: ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:4268:10: {...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleReactiveSequenceNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:4268:19: (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:4268:20: otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_17=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_17, grammarAccess.getReactiveSequenceNodeAccess().getSatisfiesKeyword_1_5_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:4272:9: ( (lv_satisfies_18_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:4273:10: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:4273:10: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:4274:11: lv_satisfies_18_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getReactiveSequenceNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_5_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfies_18_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getReactiveSequenceNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_18_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:4291:9: (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )*
                    	    loop64:
                    	    do {
                    	        int alt64=2;
                    	        int LA64_0 = input.LA(1);

                    	        if ( (LA64_0==Comma) ) {
                    	            alt64=1;
                    	        }


                    	        switch (alt64) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:4292:10: otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_19=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_19, grammarAccess.getReactiveSequenceNodeAccess().getCommaKeyword_1_5_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:4296:10: ( (lv_satisfies_20_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:4297:11: (lv_satisfies_20_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:4297:11: (lv_satisfies_20_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:4298:12: lv_satisfies_20_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getReactiveSequenceNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_5_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfies_20_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getReactiveSequenceNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_20_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop64;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 7 :
                    	    // InternalQualityBtCppParser.g:4322:4: ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:4322:4: ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:4323:5: {...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1(), 6) ) {
                    	        throw new FailedPredicateException(input, "ruleReactiveSequenceNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1(), 6)");
                    	    }
                    	    // InternalQualityBtCppParser.g:4323:117: ( ({...}? => (otherlv_21= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:4324:6: ({...}? => (otherlv_21= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1(), 6);
                    	    					
                    	    // InternalQualityBtCppParser.g:4327:9: ({...}? => (otherlv_21= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:4327:10: {...}? => (otherlv_21= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleReactiveSequenceNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:4327:19: (otherlv_21= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:4327:20: otherlv_21= RightParenthesis
                    	    {
                    	    otherlv_21=(Token)match(input,RightParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_21, grammarAccess.getReactiveSequenceNodeAccess().getRightParenthesisKeyword_1_6());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt65 >= 1 ) break loop65;
                                EarlyExitException eee =
                                    new EarlyExitException(65, input);
                                throw eee;
                        }
                        cnt65++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1()) ) {
                        throw new FailedPredicateException(input, "ruleReactiveSequenceNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1());
                    				

                    }
                    break;

            }

            this_BEGIN_22=(Token)match(input,RULE_BEGIN,FOLLOW_9); 

            			newLeafNode(this_BEGIN_22, grammarAccess.getReactiveSequenceNodeAccess().getBEGINTerminalRuleCall_2());
            		
            // InternalQualityBtCppParser.g:4349:3: ( (lv_child_23_0= ruleTreeNode ) )
            // InternalQualityBtCppParser.g:4350:4: (lv_child_23_0= ruleTreeNode )
            {
            // InternalQualityBtCppParser.g:4350:4: (lv_child_23_0= ruleTreeNode )
            // InternalQualityBtCppParser.g:4351:5: lv_child_23_0= ruleTreeNode
            {

            					newCompositeNode(grammarAccess.getReactiveSequenceNodeAccess().getChildTreeNodeParserRuleCall_3_0());
            				
            pushFollow(FOLLOW_10);
            lv_child_23_0=ruleTreeNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getReactiveSequenceNodeRule());
            					}
            					add(
            						current,
            						"child",
            						lv_child_23_0,
            						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            // InternalQualityBtCppParser.g:4368:3: ( (lv_child_24_0= ruleTreeNode ) )*
            loop67:
            do {
                int alt67=2;
                int LA67_0 = input.LA(1);

                if ( ((LA67_0>=KeepRunningUntilFailure && LA67_0<=SetBlackboard)||(LA67_0>=ConsumeQueue && LA67_0<=ScriptAction)||LA67_0==WhileDoElse||(LA67_0>=CoroAction && LA67_0<=IfThenElse)||LA67_0==Inverter||(LA67_0>=RunOnce && LA67_0<=Sleep)||LA67_0==Loop||LA67_0==Test||(LA67_0>=M && LA67_0<=HyphenMinusGreaterThanSign)||(LA67_0>=R && LA67_0<=VerticalLineVerticalLine)||LA67_0==QuestionMark) ) {
                    alt67=1;
                }


                switch (alt67) {
            	case 1 :
            	    // InternalQualityBtCppParser.g:4369:4: (lv_child_24_0= ruleTreeNode )
            	    {
            	    // InternalQualityBtCppParser.g:4369:4: (lv_child_24_0= ruleTreeNode )
            	    // InternalQualityBtCppParser.g:4370:5: lv_child_24_0= ruleTreeNode
            	    {

            	    					newCompositeNode(grammarAccess.getReactiveSequenceNodeAccess().getChildTreeNodeParserRuleCall_4_0());
            	    				
            	    pushFollow(FOLLOW_10);
            	    lv_child_24_0=ruleTreeNode();

            	    state._fsp--;


            	    					if (current==null) {
            	    						current = createModelElementForParent(grammarAccess.getReactiveSequenceNodeRule());
            	    					}
            	    					add(
            	    						current,
            	    						"child",
            	    						lv_child_24_0,
            	    						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            	    					afterParserOrEnumRuleCall();
            	    				

            	    }


            	    }
            	    break;

            	default :
            	    break loop67;
                }
            } while (true);

            this_END_25=(Token)match(input,RULE_END,FOLLOW_2); 

            			newLeafNode(this_END_25, grammarAccess.getReactiveSequenceNodeAccess().getENDTerminalRuleCall_5());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReactiveSequenceNode"


    // $ANTLR start "entryRuleSequenceNode"
    // InternalQualityBtCppParser.g:4395:1: entryRuleSequenceNode returns [EObject current=null] : iv_ruleSequenceNode= ruleSequenceNode EOF ;
    public final EObject entryRuleSequenceNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSequenceNode = null;


        try {
            // InternalQualityBtCppParser.g:4395:53: (iv_ruleSequenceNode= ruleSequenceNode EOF )
            // InternalQualityBtCppParser.g:4396:2: iv_ruleSequenceNode= ruleSequenceNode EOF
            {
             newCompositeNode(grammarAccess.getSequenceNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleSequenceNode=ruleSequenceNode();

            state._fsp--;

             current =iv_ruleSequenceNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSequenceNode"


    // $ANTLR start "ruleSequenceNode"
    // InternalQualityBtCppParser.g:4402:1: ruleSequenceNode returns [EObject current=null] : (otherlv_0= HyphenMinusGreaterThanSign ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END ) ;
    public final EObject ruleSequenceNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token this_BEGIN_22=null;
        Token this_END_25=null;
        AntlrDatatypeRuleToken lv_ID_5_0 = null;

        AntlrDatatypeRuleToken lv_name_8_0 = null;

        EObject lv_parameters_10_0 = null;

        EObject lv_parameters_12_0 = null;

        EObject lv_satisfices_14_0 = null;

        EObject lv_satisfices_16_0 = null;

        EObject lv_satisfies_18_0 = null;

        EObject lv_satisfies_20_0 = null;

        EObject lv_child_23_0 = null;

        EObject lv_child_24_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:4408:2: ( (otherlv_0= HyphenMinusGreaterThanSign ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END ) )
            // InternalQualityBtCppParser.g:4409:2: (otherlv_0= HyphenMinusGreaterThanSign ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END )
            {
            // InternalQualityBtCppParser.g:4409:2: (otherlv_0= HyphenMinusGreaterThanSign ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END )
            // InternalQualityBtCppParser.g:4410:3: otherlv_0= HyphenMinusGreaterThanSign ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END
            {
            otherlv_0=(Token)match(input,HyphenMinusGreaterThanSign,FOLLOW_15); 

            			newLeafNode(otherlv_0, grammarAccess.getSequenceNodeAccess().getHyphenMinusGreaterThanSignKeyword_0());
            		
            // InternalQualityBtCppParser.g:4414:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt72=2;
            int LA72_0 = input.LA(1);

            if ( ((LA72_0>=Parameters && LA72_0<=Satisfies)||LA72_0==Name||LA72_0==ID||(LA72_0>=LeftParenthesis && LA72_0<=RightParenthesis)) ) {
                alt72=1;
            }
            switch (alt72) {
                case 1 :
                    // InternalQualityBtCppParser.g:4415:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:4415:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:4416:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1());
                    				
                    // InternalQualityBtCppParser.g:4419:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:4420:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:4420:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+
                    int cnt71=0;
                    loop71:
                    do {
                        int alt71=8;
                        int LA71_0 = input.LA(1);

                        if ( LA71_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1(), 0) ) {
                            alt71=1;
                        }
                        else if ( LA71_0 == ID && getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1(), 1) ) {
                            alt71=2;
                        }
                        else if ( LA71_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1(), 2) ) {
                            alt71=3;
                        }
                        else if ( LA71_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1(), 3) ) {
                            alt71=4;
                        }
                        else if ( LA71_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1(), 4) ) {
                            alt71=5;
                        }
                        else if ( LA71_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1(), 5) ) {
                            alt71=6;
                        }
                        else if ( LA71_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1(), 6) ) {
                            alt71=7;
                        }


                        switch (alt71) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:4421:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:4421:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:4422:5: {...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleSequenceNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:4422:109: ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:4423:6: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:4426:9: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:4426:10: {...}? => (otherlv_2= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSequenceNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:4426:19: (otherlv_2= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:4426:20: otherlv_2= LeftParenthesis
                    	    {
                    	    otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_2, grammarAccess.getSequenceNodeAccess().getLeftParenthesisKeyword_1_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:4436:4: ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:4436:4: ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:4437:5: {...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleSequenceNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:4437:109: ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:4438:6: ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:4441:9: ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:4441:10: {...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSequenceNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:4441:19: (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:4441:20: otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) )
                    	    {
                    	    otherlv_3=(Token)match(input,ID,FOLLOW_8); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getSequenceNodeAccess().getIDKeyword_1_1_0());
                    	    								
                    	    otherlv_4=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getSequenceNodeAccess().getEqualsSignKeyword_1_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:4449:9: ( (lv_ID_5_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:4450:10: (lv_ID_5_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:4450:10: (lv_ID_5_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:4451:11: lv_ID_5_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getSequenceNodeAccess().getIDEStringParserRuleCall_1_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_15);
                    	    lv_ID_5_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getSequenceNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"ID",
                    	    												lv_ID_5_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:4474:4: ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:4474:4: ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:4475:5: {...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleSequenceNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:4475:109: ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:4476:6: ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:4479:9: ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:4479:10: {...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSequenceNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:4479:19: (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:4479:20: otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) )
                    	    {
                    	    otherlv_6=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_6, grammarAccess.getSequenceNodeAccess().getNameKeyword_1_2_0());
                    	    								
                    	    otherlv_7=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_7, grammarAccess.getSequenceNodeAccess().getEqualsSignKeyword_1_2_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:4487:9: ( (lv_name_8_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:4488:10: (lv_name_8_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:4488:10: (lv_name_8_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:4489:11: lv_name_8_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getSequenceNodeAccess().getNameEStringParserRuleCall_1_2_2_0());
                    	    										
                    	    pushFollow(FOLLOW_15);
                    	    lv_name_8_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getSequenceNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_8_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:4512:4: ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:4512:4: ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:4513:5: {...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleSequenceNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:4513:109: ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:4514:6: ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:4517:9: ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:4517:10: {...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSequenceNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:4517:19: (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:4517:20: otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_9=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_9, grammarAccess.getSequenceNodeAccess().getParametersKeyword_1_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:4521:9: ( (lv_parameters_10_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:4522:10: (lv_parameters_10_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:4522:10: (lv_parameters_10_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:4523:11: lv_parameters_10_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getSequenceNodeAccess().getParametersParameterParserRuleCall_1_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_parameters_10_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getSequenceNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_10_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:4540:9: (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )*
                    	    loop68:
                    	    do {
                    	        int alt68=2;
                    	        int LA68_0 = input.LA(1);

                    	        if ( (LA68_0==Comma) ) {
                    	            alt68=1;
                    	        }


                    	        switch (alt68) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:4541:10: otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_11=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_11, grammarAccess.getSequenceNodeAccess().getCommaKeyword_1_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:4545:10: ( (lv_parameters_12_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:4546:11: (lv_parameters_12_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:4546:11: (lv_parameters_12_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:4547:12: lv_parameters_12_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getSequenceNodeAccess().getParametersParameterParserRuleCall_1_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_parameters_12_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getSequenceNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_12_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop68;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:4571:4: ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:4571:4: ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:4572:5: {...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleSequenceNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:4572:109: ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:4573:6: ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:4576:9: ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:4576:10: {...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSequenceNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:4576:19: (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:4576:20: otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_13=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_13, grammarAccess.getSequenceNodeAccess().getSatisficesKeyword_1_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:4580:9: ( (lv_satisfices_14_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:4581:10: (lv_satisfices_14_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:4581:10: (lv_satisfices_14_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:4582:11: lv_satisfices_14_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getSequenceNodeAccess().getSatisficesQualityParserRuleCall_1_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfices_14_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getSequenceNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_14_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:4599:9: (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )*
                    	    loop69:
                    	    do {
                    	        int alt69=2;
                    	        int LA69_0 = input.LA(1);

                    	        if ( (LA69_0==Comma) ) {
                    	            alt69=1;
                    	        }


                    	        switch (alt69) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:4600:10: otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_15=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_15, grammarAccess.getSequenceNodeAccess().getCommaKeyword_1_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:4604:10: ( (lv_satisfices_16_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:4605:11: (lv_satisfices_16_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:4605:11: (lv_satisfices_16_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:4606:12: lv_satisfices_16_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getSequenceNodeAccess().getSatisficesQualityParserRuleCall_1_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfices_16_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getSequenceNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_16_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop69;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:4630:4: ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:4630:4: ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:4631:5: {...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleSequenceNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:4631:109: ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:4632:6: ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:4635:9: ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:4635:10: {...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSequenceNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:4635:19: (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:4635:20: otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_17=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_17, grammarAccess.getSequenceNodeAccess().getSatisfiesKeyword_1_5_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:4639:9: ( (lv_satisfies_18_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:4640:10: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:4640:10: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:4641:11: lv_satisfies_18_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getSequenceNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_5_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfies_18_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getSequenceNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_18_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:4658:9: (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )*
                    	    loop70:
                    	    do {
                    	        int alt70=2;
                    	        int LA70_0 = input.LA(1);

                    	        if ( (LA70_0==Comma) ) {
                    	            alt70=1;
                    	        }


                    	        switch (alt70) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:4659:10: otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_19=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_19, grammarAccess.getSequenceNodeAccess().getCommaKeyword_1_5_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:4663:10: ( (lv_satisfies_20_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:4664:11: (lv_satisfies_20_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:4664:11: (lv_satisfies_20_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:4665:12: lv_satisfies_20_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getSequenceNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_5_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfies_20_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getSequenceNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_20_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop70;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 7 :
                    	    // InternalQualityBtCppParser.g:4689:4: ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:4689:4: ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:4690:5: {...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1(), 6) ) {
                    	        throw new FailedPredicateException(input, "ruleSequenceNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1(), 6)");
                    	    }
                    	    // InternalQualityBtCppParser.g:4690:109: ( ({...}? => (otherlv_21= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:4691:6: ({...}? => (otherlv_21= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1(), 6);
                    	    					
                    	    // InternalQualityBtCppParser.g:4694:9: ({...}? => (otherlv_21= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:4694:10: {...}? => (otherlv_21= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSequenceNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:4694:19: (otherlv_21= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:4694:20: otherlv_21= RightParenthesis
                    	    {
                    	    otherlv_21=(Token)match(input,RightParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_21, grammarAccess.getSequenceNodeAccess().getRightParenthesisKeyword_1_6());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt71 >= 1 ) break loop71;
                                EarlyExitException eee =
                                    new EarlyExitException(71, input);
                                throw eee;
                        }
                        cnt71++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1()) ) {
                        throw new FailedPredicateException(input, "ruleSequenceNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1());
                    				

                    }
                    break;

            }

            this_BEGIN_22=(Token)match(input,RULE_BEGIN,FOLLOW_9); 

            			newLeafNode(this_BEGIN_22, grammarAccess.getSequenceNodeAccess().getBEGINTerminalRuleCall_2());
            		
            // InternalQualityBtCppParser.g:4716:3: ( (lv_child_23_0= ruleTreeNode ) )
            // InternalQualityBtCppParser.g:4717:4: (lv_child_23_0= ruleTreeNode )
            {
            // InternalQualityBtCppParser.g:4717:4: (lv_child_23_0= ruleTreeNode )
            // InternalQualityBtCppParser.g:4718:5: lv_child_23_0= ruleTreeNode
            {

            					newCompositeNode(grammarAccess.getSequenceNodeAccess().getChildTreeNodeParserRuleCall_3_0());
            				
            pushFollow(FOLLOW_10);
            lv_child_23_0=ruleTreeNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getSequenceNodeRule());
            					}
            					add(
            						current,
            						"child",
            						lv_child_23_0,
            						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            // InternalQualityBtCppParser.g:4735:3: ( (lv_child_24_0= ruleTreeNode ) )*
            loop73:
            do {
                int alt73=2;
                int LA73_0 = input.LA(1);

                if ( ((LA73_0>=KeepRunningUntilFailure && LA73_0<=SetBlackboard)||(LA73_0>=ConsumeQueue && LA73_0<=ScriptAction)||LA73_0==WhileDoElse||(LA73_0>=CoroAction && LA73_0<=IfThenElse)||LA73_0==Inverter||(LA73_0>=RunOnce && LA73_0<=Sleep)||LA73_0==Loop||LA73_0==Test||(LA73_0>=M && LA73_0<=HyphenMinusGreaterThanSign)||(LA73_0>=R && LA73_0<=VerticalLineVerticalLine)||LA73_0==QuestionMark) ) {
                    alt73=1;
                }


                switch (alt73) {
            	case 1 :
            	    // InternalQualityBtCppParser.g:4736:4: (lv_child_24_0= ruleTreeNode )
            	    {
            	    // InternalQualityBtCppParser.g:4736:4: (lv_child_24_0= ruleTreeNode )
            	    // InternalQualityBtCppParser.g:4737:5: lv_child_24_0= ruleTreeNode
            	    {

            	    					newCompositeNode(grammarAccess.getSequenceNodeAccess().getChildTreeNodeParserRuleCall_4_0());
            	    				
            	    pushFollow(FOLLOW_10);
            	    lv_child_24_0=ruleTreeNode();

            	    state._fsp--;


            	    					if (current==null) {
            	    						current = createModelElementForParent(grammarAccess.getSequenceNodeRule());
            	    					}
            	    					add(
            	    						current,
            	    						"child",
            	    						lv_child_24_0,
            	    						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            	    					afterParserOrEnumRuleCall();
            	    				

            	    }


            	    }
            	    break;

            	default :
            	    break loop73;
                }
            } while (true);

            this_END_25=(Token)match(input,RULE_END,FOLLOW_2); 

            			newLeafNode(this_END_25, grammarAccess.getSequenceNodeAccess().getENDTerminalRuleCall_5());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSequenceNode"


    // $ANTLR start "entryRuleTimeoutNode"
    // InternalQualityBtCppParser.g:4762:1: entryRuleTimeoutNode returns [EObject current=null] : iv_ruleTimeoutNode= ruleTimeoutNode EOF ;
    public final EObject entryRuleTimeoutNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTimeoutNode = null;


        try {
            // InternalQualityBtCppParser.g:4762:52: (iv_ruleTimeoutNode= ruleTimeoutNode EOF )
            // InternalQualityBtCppParser.g:4763:2: iv_ruleTimeoutNode= ruleTimeoutNode EOF
            {
             newCompositeNode(grammarAccess.getTimeoutNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleTimeoutNode=ruleTimeoutNode();

            state._fsp--;

             current =iv_ruleTimeoutNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTimeoutNode"


    // $ANTLR start "ruleTimeoutNode"
    // InternalQualityBtCppParser.g:4769:1: ruleTimeoutNode returns [EObject current=null] : (otherlv_0= Timeout ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Msec otherlv_22= EqualsSign ( (lv_msec_23_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_25= RULE_BEGIN ( (lv_child_26_0= ruleTreeNode ) ) this_END_27= RULE_END ) ;
    public final EObject ruleTimeoutNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token otherlv_22=null;
        Token otherlv_24=null;
        Token this_BEGIN_25=null;
        Token this_END_27=null;
        AntlrDatatypeRuleToken lv_ID_5_0 = null;

        AntlrDatatypeRuleToken lv_name_8_0 = null;

        EObject lv_parameters_10_0 = null;

        EObject lv_parameters_12_0 = null;

        EObject lv_satisfices_14_0 = null;

        EObject lv_satisfices_16_0 = null;

        EObject lv_satisfies_18_0 = null;

        EObject lv_satisfies_20_0 = null;

        AntlrDatatypeRuleToken lv_msec_23_0 = null;

        EObject lv_child_26_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:4775:2: ( (otherlv_0= Timeout ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Msec otherlv_22= EqualsSign ( (lv_msec_23_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_25= RULE_BEGIN ( (lv_child_26_0= ruleTreeNode ) ) this_END_27= RULE_END ) )
            // InternalQualityBtCppParser.g:4776:2: (otherlv_0= Timeout ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Msec otherlv_22= EqualsSign ( (lv_msec_23_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_25= RULE_BEGIN ( (lv_child_26_0= ruleTreeNode ) ) this_END_27= RULE_END )
            {
            // InternalQualityBtCppParser.g:4776:2: (otherlv_0= Timeout ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Msec otherlv_22= EqualsSign ( (lv_msec_23_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_25= RULE_BEGIN ( (lv_child_26_0= ruleTreeNode ) ) this_END_27= RULE_END )
            // InternalQualityBtCppParser.g:4777:3: otherlv_0= Timeout ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Msec otherlv_22= EqualsSign ( (lv_msec_23_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_25= RULE_BEGIN ( (lv_child_26_0= ruleTreeNode ) ) this_END_27= RULE_END
            {
            otherlv_0=(Token)match(input,Timeout,FOLLOW_18); 

            			newLeafNode(otherlv_0, grammarAccess.getTimeoutNodeAccess().getTimeoutKeyword_0());
            		
            // InternalQualityBtCppParser.g:4781:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Msec otherlv_22= EqualsSign ( (lv_msec_23_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt78=2;
            int LA78_0 = input.LA(1);

            if ( ((LA78_0>=Parameters && LA78_0<=Satisfies)||(LA78_0>=Msec && LA78_0<=Name)||LA78_0==ID||(LA78_0>=LeftParenthesis && LA78_0<=RightParenthesis)) ) {
                alt78=1;
            }
            switch (alt78) {
                case 1 :
                    // InternalQualityBtCppParser.g:4782:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Msec otherlv_22= EqualsSign ( (lv_msec_23_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:4782:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Msec otherlv_22= EqualsSign ( (lv_msec_23_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:4783:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Msec otherlv_22= EqualsSign ( (lv_msec_23_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1());
                    				
                    // InternalQualityBtCppParser.g:4786:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Msec otherlv_22= EqualsSign ( (lv_msec_23_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:4787:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Msec otherlv_22= EqualsSign ( (lv_msec_23_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:4787:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Msec otherlv_22= EqualsSign ( (lv_msec_23_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+
                    int cnt77=0;
                    loop77:
                    do {
                        int alt77=9;
                        alt77 = dfa77.predict(input);
                        switch (alt77) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:4788:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:4788:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:4789:5: {...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleTimeoutNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:4789:108: ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:4790:6: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:4793:9: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:4793:10: {...}? => (otherlv_2= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleTimeoutNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:4793:19: (otherlv_2= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:4793:20: otherlv_2= LeftParenthesis
                    	    {
                    	    otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_18); 

                    	    									newLeafNode(otherlv_2, grammarAccess.getTimeoutNodeAccess().getLeftParenthesisKeyword_1_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:4803:4: ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:4803:4: ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:4804:5: {...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleTimeoutNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:4804:108: ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:4805:6: ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:4808:9: ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:4808:10: {...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleTimeoutNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:4808:19: (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:4808:20: otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) )
                    	    {
                    	    otherlv_3=(Token)match(input,ID,FOLLOW_8); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getTimeoutNodeAccess().getIDKeyword_1_1_0());
                    	    								
                    	    otherlv_4=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getTimeoutNodeAccess().getEqualsSignKeyword_1_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:4816:9: ( (lv_ID_5_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:4817:10: (lv_ID_5_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:4817:10: (lv_ID_5_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:4818:11: lv_ID_5_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getTimeoutNodeAccess().getIDEStringParserRuleCall_1_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_18);
                    	    lv_ID_5_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getTimeoutNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"ID",
                    	    												lv_ID_5_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:4841:4: ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:4841:4: ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:4842:5: {...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleTimeoutNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:4842:108: ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:4843:6: ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:4846:9: ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:4846:10: {...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleTimeoutNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:4846:19: (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:4846:20: otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) )
                    	    {
                    	    otherlv_6=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_6, grammarAccess.getTimeoutNodeAccess().getNameKeyword_1_2_0());
                    	    								
                    	    otherlv_7=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_7, grammarAccess.getTimeoutNodeAccess().getEqualsSignKeyword_1_2_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:4854:9: ( (lv_name_8_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:4855:10: (lv_name_8_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:4855:10: (lv_name_8_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:4856:11: lv_name_8_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getTimeoutNodeAccess().getNameEStringParserRuleCall_1_2_2_0());
                    	    										
                    	    pushFollow(FOLLOW_18);
                    	    lv_name_8_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getTimeoutNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_8_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:4879:4: ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:4879:4: ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:4880:5: {...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleTimeoutNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:4880:108: ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:4881:6: ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:4884:9: ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:4884:10: {...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleTimeoutNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:4884:19: (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:4884:20: otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_9=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_9, grammarAccess.getTimeoutNodeAccess().getParametersKeyword_1_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:4888:9: ( (lv_parameters_10_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:4889:10: (lv_parameters_10_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:4889:10: (lv_parameters_10_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:4890:11: lv_parameters_10_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getTimeoutNodeAccess().getParametersParameterParserRuleCall_1_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_19);
                    	    lv_parameters_10_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getTimeoutNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_10_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:4907:9: (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )*
                    	    loop74:
                    	    do {
                    	        int alt74=2;
                    	        int LA74_0 = input.LA(1);

                    	        if ( (LA74_0==Comma) ) {
                    	            alt74=1;
                    	        }


                    	        switch (alt74) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:4908:10: otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_11=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_11, grammarAccess.getTimeoutNodeAccess().getCommaKeyword_1_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:4912:10: ( (lv_parameters_12_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:4913:11: (lv_parameters_12_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:4913:11: (lv_parameters_12_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:4914:12: lv_parameters_12_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getTimeoutNodeAccess().getParametersParameterParserRuleCall_1_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_19);
                    	    	    lv_parameters_12_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getTimeoutNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_12_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop74;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:4938:4: ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:4938:4: ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:4939:5: {...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleTimeoutNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:4939:108: ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:4940:6: ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:4943:9: ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:4943:10: {...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleTimeoutNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:4943:19: (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:4943:20: otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_13=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_13, grammarAccess.getTimeoutNodeAccess().getSatisficesKeyword_1_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:4947:9: ( (lv_satisfices_14_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:4948:10: (lv_satisfices_14_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:4948:10: (lv_satisfices_14_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:4949:11: lv_satisfices_14_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getTimeoutNodeAccess().getSatisficesQualityParserRuleCall_1_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_19);
                    	    lv_satisfices_14_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getTimeoutNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_14_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:4966:9: (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )*
                    	    loop75:
                    	    do {
                    	        int alt75=2;
                    	        int LA75_0 = input.LA(1);

                    	        if ( (LA75_0==Comma) ) {
                    	            alt75=1;
                    	        }


                    	        switch (alt75) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:4967:10: otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_15=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_15, grammarAccess.getTimeoutNodeAccess().getCommaKeyword_1_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:4971:10: ( (lv_satisfices_16_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:4972:11: (lv_satisfices_16_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:4972:11: (lv_satisfices_16_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:4973:12: lv_satisfices_16_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getTimeoutNodeAccess().getSatisficesQualityParserRuleCall_1_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_19);
                    	    	    lv_satisfices_16_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getTimeoutNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_16_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop75;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:4997:4: ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:4997:4: ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:4998:5: {...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleTimeoutNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:4998:108: ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:4999:6: ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:5002:9: ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:5002:10: {...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleTimeoutNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:5002:19: (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:5002:20: otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_17=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_17, grammarAccess.getTimeoutNodeAccess().getSatisfiesKeyword_1_5_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:5006:9: ( (lv_satisfies_18_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:5007:10: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:5007:10: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:5008:11: lv_satisfies_18_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getTimeoutNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_5_1_0());
                    	    										
                    	    pushFollow(FOLLOW_19);
                    	    lv_satisfies_18_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getTimeoutNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_18_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:5025:9: (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )*
                    	    loop76:
                    	    do {
                    	        int alt76=2;
                    	        int LA76_0 = input.LA(1);

                    	        if ( (LA76_0==Comma) ) {
                    	            alt76=1;
                    	        }


                    	        switch (alt76) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:5026:10: otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_19=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_19, grammarAccess.getTimeoutNodeAccess().getCommaKeyword_1_5_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:5030:10: ( (lv_satisfies_20_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:5031:11: (lv_satisfies_20_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:5031:11: (lv_satisfies_20_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:5032:12: lv_satisfies_20_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getTimeoutNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_5_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_19);
                    	    	    lv_satisfies_20_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getTimeoutNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_20_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop76;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 7 :
                    	    // InternalQualityBtCppParser.g:5056:4: ({...}? => ( ({...}? => (otherlv_21= Msec otherlv_22= EqualsSign ( (lv_msec_23_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:5056:4: ({...}? => ( ({...}? => (otherlv_21= Msec otherlv_22= EqualsSign ( (lv_msec_23_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:5057:5: {...}? => ( ({...}? => (otherlv_21= Msec otherlv_22= EqualsSign ( (lv_msec_23_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1(), 6) ) {
                    	        throw new FailedPredicateException(input, "ruleTimeoutNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1(), 6)");
                    	    }
                    	    // InternalQualityBtCppParser.g:5057:108: ( ({...}? => (otherlv_21= Msec otherlv_22= EqualsSign ( (lv_msec_23_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:5058:6: ({...}? => (otherlv_21= Msec otherlv_22= EqualsSign ( (lv_msec_23_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1(), 6);
                    	    					
                    	    // InternalQualityBtCppParser.g:5061:9: ({...}? => (otherlv_21= Msec otherlv_22= EqualsSign ( (lv_msec_23_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:5061:10: {...}? => (otherlv_21= Msec otherlv_22= EqualsSign ( (lv_msec_23_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleTimeoutNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:5061:19: (otherlv_21= Msec otherlv_22= EqualsSign ( (lv_msec_23_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:5061:20: otherlv_21= Msec otherlv_22= EqualsSign ( (lv_msec_23_0= ruleEString ) )
                    	    {
                    	    otherlv_21=(Token)match(input,Msec,FOLLOW_8); 

                    	    									newLeafNode(otherlv_21, grammarAccess.getTimeoutNodeAccess().getMsecKeyword_1_6_0());
                    	    								
                    	    otherlv_22=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_22, grammarAccess.getTimeoutNodeAccess().getEqualsSignKeyword_1_6_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:5069:9: ( (lv_msec_23_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:5070:10: (lv_msec_23_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:5070:10: (lv_msec_23_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:5071:11: lv_msec_23_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getTimeoutNodeAccess().getMsecEStringParserRuleCall_1_6_2_0());
                    	    										
                    	    pushFollow(FOLLOW_18);
                    	    lv_msec_23_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getTimeoutNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"msec",
                    	    												lv_msec_23_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 8 :
                    	    // InternalQualityBtCppParser.g:5094:4: ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:5094:4: ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:5095:5: {...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1(), 7) ) {
                    	        throw new FailedPredicateException(input, "ruleTimeoutNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1(), 7)");
                    	    }
                    	    // InternalQualityBtCppParser.g:5095:108: ( ({...}? => (otherlv_24= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:5096:6: ({...}? => (otherlv_24= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1(), 7);
                    	    					
                    	    // InternalQualityBtCppParser.g:5099:9: ({...}? => (otherlv_24= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:5099:10: {...}? => (otherlv_24= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleTimeoutNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:5099:19: (otherlv_24= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:5099:20: otherlv_24= RightParenthesis
                    	    {
                    	    otherlv_24=(Token)match(input,RightParenthesis,FOLLOW_18); 

                    	    									newLeafNode(otherlv_24, grammarAccess.getTimeoutNodeAccess().getRightParenthesisKeyword_1_7());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt77 >= 1 ) break loop77;
                                EarlyExitException eee =
                                    new EarlyExitException(77, input);
                                throw eee;
                        }
                        cnt77++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1()) ) {
                        throw new FailedPredicateException(input, "ruleTimeoutNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1());
                    				

                    }
                    break;

            }

            this_BEGIN_25=(Token)match(input,RULE_BEGIN,FOLLOW_9); 

            			newLeafNode(this_BEGIN_25, grammarAccess.getTimeoutNodeAccess().getBEGINTerminalRuleCall_2());
            		
            // InternalQualityBtCppParser.g:5121:3: ( (lv_child_26_0= ruleTreeNode ) )
            // InternalQualityBtCppParser.g:5122:4: (lv_child_26_0= ruleTreeNode )
            {
            // InternalQualityBtCppParser.g:5122:4: (lv_child_26_0= ruleTreeNode )
            // InternalQualityBtCppParser.g:5123:5: lv_child_26_0= ruleTreeNode
            {

            					newCompositeNode(grammarAccess.getTimeoutNodeAccess().getChildTreeNodeParserRuleCall_3_0());
            				
            pushFollow(FOLLOW_20);
            lv_child_26_0=ruleTreeNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getTimeoutNodeRule());
            					}
            					set(
            						current,
            						"child",
            						lv_child_26_0,
            						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            this_END_27=(Token)match(input,RULE_END,FOLLOW_2); 

            			newLeafNode(this_END_27, grammarAccess.getTimeoutNodeAccess().getENDTerminalRuleCall_4());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTimeoutNode"


    // $ANTLR start "entryRuleKeepRunningUntilFailureNode"
    // InternalQualityBtCppParser.g:5148:1: entryRuleKeepRunningUntilFailureNode returns [EObject current=null] : iv_ruleKeepRunningUntilFailureNode= ruleKeepRunningUntilFailureNode EOF ;
    public final EObject entryRuleKeepRunningUntilFailureNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleKeepRunningUntilFailureNode = null;


        try {
            // InternalQualityBtCppParser.g:5148:68: (iv_ruleKeepRunningUntilFailureNode= ruleKeepRunningUntilFailureNode EOF )
            // InternalQualityBtCppParser.g:5149:2: iv_ruleKeepRunningUntilFailureNode= ruleKeepRunningUntilFailureNode EOF
            {
             newCompositeNode(grammarAccess.getKeepRunningUntilFailureNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleKeepRunningUntilFailureNode=ruleKeepRunningUntilFailureNode();

            state._fsp--;

             current =iv_ruleKeepRunningUntilFailureNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleKeepRunningUntilFailureNode"


    // $ANTLR start "ruleKeepRunningUntilFailureNode"
    // InternalQualityBtCppParser.g:5155:1: ruleKeepRunningUntilFailureNode returns [EObject current=null] : (otherlv_0= KeepRunningUntilFailure ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END ) ;
    public final EObject ruleKeepRunningUntilFailureNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token this_BEGIN_22=null;
        Token this_END_24=null;
        AntlrDatatypeRuleToken lv_ID_5_0 = null;

        AntlrDatatypeRuleToken lv_name_8_0 = null;

        EObject lv_parameters_10_0 = null;

        EObject lv_parameters_12_0 = null;

        EObject lv_satisfices_14_0 = null;

        EObject lv_satisfices_16_0 = null;

        EObject lv_satisfies_18_0 = null;

        EObject lv_satisfies_20_0 = null;

        EObject lv_child_23_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:5161:2: ( (otherlv_0= KeepRunningUntilFailure ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END ) )
            // InternalQualityBtCppParser.g:5162:2: (otherlv_0= KeepRunningUntilFailure ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END )
            {
            // InternalQualityBtCppParser.g:5162:2: (otherlv_0= KeepRunningUntilFailure ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END )
            // InternalQualityBtCppParser.g:5163:3: otherlv_0= KeepRunningUntilFailure ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END
            {
            otherlv_0=(Token)match(input,KeepRunningUntilFailure,FOLLOW_15); 

            			newLeafNode(otherlv_0, grammarAccess.getKeepRunningUntilFailureNodeAccess().getKeepRunningUntilFailureKeyword_0());
            		
            // InternalQualityBtCppParser.g:5167:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt83=2;
            int LA83_0 = input.LA(1);

            if ( ((LA83_0>=Parameters && LA83_0<=Satisfies)||LA83_0==Name||LA83_0==ID||(LA83_0>=LeftParenthesis && LA83_0<=RightParenthesis)) ) {
                alt83=1;
            }
            switch (alt83) {
                case 1 :
                    // InternalQualityBtCppParser.g:5168:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:5168:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:5169:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1());
                    				
                    // InternalQualityBtCppParser.g:5172:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:5173:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:5173:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+
                    int cnt82=0;
                    loop82:
                    do {
                        int alt82=8;
                        int LA82_0 = input.LA(1);

                        if ( LA82_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1(), 0) ) {
                            alt82=1;
                        }
                        else if ( LA82_0 == ID && getUnorderedGroupHelper().canSelect(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1(), 1) ) {
                            alt82=2;
                        }
                        else if ( LA82_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1(), 2) ) {
                            alt82=3;
                        }
                        else if ( LA82_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1(), 3) ) {
                            alt82=4;
                        }
                        else if ( LA82_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1(), 4) ) {
                            alt82=5;
                        }
                        else if ( LA82_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1(), 5) ) {
                            alt82=6;
                        }
                        else if ( LA82_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1(), 6) ) {
                            alt82=7;
                        }


                        switch (alt82) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:5174:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:5174:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:5175:5: {...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleKeepRunningUntilFailureNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:5175:124: ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:5176:6: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:5179:9: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:5179:10: {...}? => (otherlv_2= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleKeepRunningUntilFailureNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:5179:19: (otherlv_2= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:5179:20: otherlv_2= LeftParenthesis
                    	    {
                    	    otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_2, grammarAccess.getKeepRunningUntilFailureNodeAccess().getLeftParenthesisKeyword_1_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:5189:4: ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:5189:4: ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:5190:5: {...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleKeepRunningUntilFailureNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:5190:124: ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:5191:6: ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:5194:9: ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:5194:10: {...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleKeepRunningUntilFailureNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:5194:19: (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:5194:20: otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) )
                    	    {
                    	    otherlv_3=(Token)match(input,ID,FOLLOW_8); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getKeepRunningUntilFailureNodeAccess().getIDKeyword_1_1_0());
                    	    								
                    	    otherlv_4=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getKeepRunningUntilFailureNodeAccess().getEqualsSignKeyword_1_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:5202:9: ( (lv_ID_5_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:5203:10: (lv_ID_5_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:5203:10: (lv_ID_5_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:5204:11: lv_ID_5_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getKeepRunningUntilFailureNodeAccess().getIDEStringParserRuleCall_1_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_15);
                    	    lv_ID_5_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getKeepRunningUntilFailureNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"ID",
                    	    												lv_ID_5_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:5227:4: ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:5227:4: ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:5228:5: {...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleKeepRunningUntilFailureNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:5228:124: ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:5229:6: ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:5232:9: ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:5232:10: {...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleKeepRunningUntilFailureNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:5232:19: (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:5232:20: otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) )
                    	    {
                    	    otherlv_6=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_6, grammarAccess.getKeepRunningUntilFailureNodeAccess().getNameKeyword_1_2_0());
                    	    								
                    	    otherlv_7=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_7, grammarAccess.getKeepRunningUntilFailureNodeAccess().getEqualsSignKeyword_1_2_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:5240:9: ( (lv_name_8_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:5241:10: (lv_name_8_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:5241:10: (lv_name_8_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:5242:11: lv_name_8_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getKeepRunningUntilFailureNodeAccess().getNameEStringParserRuleCall_1_2_2_0());
                    	    										
                    	    pushFollow(FOLLOW_15);
                    	    lv_name_8_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getKeepRunningUntilFailureNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_8_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:5265:4: ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:5265:4: ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:5266:5: {...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleKeepRunningUntilFailureNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:5266:124: ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:5267:6: ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:5270:9: ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:5270:10: {...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleKeepRunningUntilFailureNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:5270:19: (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:5270:20: otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_9=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_9, grammarAccess.getKeepRunningUntilFailureNodeAccess().getParametersKeyword_1_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:5274:9: ( (lv_parameters_10_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:5275:10: (lv_parameters_10_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:5275:10: (lv_parameters_10_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:5276:11: lv_parameters_10_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getKeepRunningUntilFailureNodeAccess().getParametersParameterParserRuleCall_1_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_parameters_10_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getKeepRunningUntilFailureNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_10_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:5293:9: (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )*
                    	    loop79:
                    	    do {
                    	        int alt79=2;
                    	        int LA79_0 = input.LA(1);

                    	        if ( (LA79_0==Comma) ) {
                    	            alt79=1;
                    	        }


                    	        switch (alt79) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:5294:10: otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_11=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_11, grammarAccess.getKeepRunningUntilFailureNodeAccess().getCommaKeyword_1_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:5298:10: ( (lv_parameters_12_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:5299:11: (lv_parameters_12_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:5299:11: (lv_parameters_12_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:5300:12: lv_parameters_12_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getKeepRunningUntilFailureNodeAccess().getParametersParameterParserRuleCall_1_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_parameters_12_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getKeepRunningUntilFailureNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_12_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop79;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:5324:4: ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:5324:4: ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:5325:5: {...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleKeepRunningUntilFailureNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:5325:124: ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:5326:6: ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:5329:9: ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:5329:10: {...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleKeepRunningUntilFailureNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:5329:19: (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:5329:20: otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_13=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_13, grammarAccess.getKeepRunningUntilFailureNodeAccess().getSatisficesKeyword_1_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:5333:9: ( (lv_satisfices_14_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:5334:10: (lv_satisfices_14_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:5334:10: (lv_satisfices_14_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:5335:11: lv_satisfices_14_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getKeepRunningUntilFailureNodeAccess().getSatisficesQualityParserRuleCall_1_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfices_14_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getKeepRunningUntilFailureNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_14_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:5352:9: (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )*
                    	    loop80:
                    	    do {
                    	        int alt80=2;
                    	        int LA80_0 = input.LA(1);

                    	        if ( (LA80_0==Comma) ) {
                    	            alt80=1;
                    	        }


                    	        switch (alt80) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:5353:10: otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_15=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_15, grammarAccess.getKeepRunningUntilFailureNodeAccess().getCommaKeyword_1_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:5357:10: ( (lv_satisfices_16_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:5358:11: (lv_satisfices_16_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:5358:11: (lv_satisfices_16_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:5359:12: lv_satisfices_16_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getKeepRunningUntilFailureNodeAccess().getSatisficesQualityParserRuleCall_1_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfices_16_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getKeepRunningUntilFailureNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_16_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop80;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:5383:4: ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:5383:4: ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:5384:5: {...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleKeepRunningUntilFailureNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:5384:124: ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:5385:6: ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:5388:9: ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:5388:10: {...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleKeepRunningUntilFailureNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:5388:19: (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:5388:20: otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_17=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_17, grammarAccess.getKeepRunningUntilFailureNodeAccess().getSatisfiesKeyword_1_5_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:5392:9: ( (lv_satisfies_18_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:5393:10: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:5393:10: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:5394:11: lv_satisfies_18_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getKeepRunningUntilFailureNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_5_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfies_18_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getKeepRunningUntilFailureNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_18_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:5411:9: (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )*
                    	    loop81:
                    	    do {
                    	        int alt81=2;
                    	        int LA81_0 = input.LA(1);

                    	        if ( (LA81_0==Comma) ) {
                    	            alt81=1;
                    	        }


                    	        switch (alt81) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:5412:10: otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_19=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_19, grammarAccess.getKeepRunningUntilFailureNodeAccess().getCommaKeyword_1_5_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:5416:10: ( (lv_satisfies_20_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:5417:11: (lv_satisfies_20_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:5417:11: (lv_satisfies_20_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:5418:12: lv_satisfies_20_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getKeepRunningUntilFailureNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_5_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfies_20_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getKeepRunningUntilFailureNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_20_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop81;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 7 :
                    	    // InternalQualityBtCppParser.g:5442:4: ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:5442:4: ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:5443:5: {...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1(), 6) ) {
                    	        throw new FailedPredicateException(input, "ruleKeepRunningUntilFailureNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1(), 6)");
                    	    }
                    	    // InternalQualityBtCppParser.g:5443:124: ( ({...}? => (otherlv_21= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:5444:6: ({...}? => (otherlv_21= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1(), 6);
                    	    					
                    	    // InternalQualityBtCppParser.g:5447:9: ({...}? => (otherlv_21= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:5447:10: {...}? => (otherlv_21= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleKeepRunningUntilFailureNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:5447:19: (otherlv_21= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:5447:20: otherlv_21= RightParenthesis
                    	    {
                    	    otherlv_21=(Token)match(input,RightParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_21, grammarAccess.getKeepRunningUntilFailureNodeAccess().getRightParenthesisKeyword_1_6());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt82 >= 1 ) break loop82;
                                EarlyExitException eee =
                                    new EarlyExitException(82, input);
                                throw eee;
                        }
                        cnt82++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1()) ) {
                        throw new FailedPredicateException(input, "ruleKeepRunningUntilFailureNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1());
                    				

                    }
                    break;

            }

            this_BEGIN_22=(Token)match(input,RULE_BEGIN,FOLLOW_9); 

            			newLeafNode(this_BEGIN_22, grammarAccess.getKeepRunningUntilFailureNodeAccess().getBEGINTerminalRuleCall_2());
            		
            // InternalQualityBtCppParser.g:5469:3: ( (lv_child_23_0= ruleTreeNode ) )
            // InternalQualityBtCppParser.g:5470:4: (lv_child_23_0= ruleTreeNode )
            {
            // InternalQualityBtCppParser.g:5470:4: (lv_child_23_0= ruleTreeNode )
            // InternalQualityBtCppParser.g:5471:5: lv_child_23_0= ruleTreeNode
            {

            					newCompositeNode(grammarAccess.getKeepRunningUntilFailureNodeAccess().getChildTreeNodeParserRuleCall_3_0());
            				
            pushFollow(FOLLOW_20);
            lv_child_23_0=ruleTreeNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getKeepRunningUntilFailureNodeRule());
            					}
            					set(
            						current,
            						"child",
            						lv_child_23_0,
            						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            this_END_24=(Token)match(input,RULE_END,FOLLOW_2); 

            			newLeafNode(this_END_24, grammarAccess.getKeepRunningUntilFailureNodeAccess().getENDTerminalRuleCall_4());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleKeepRunningUntilFailureNode"


    // $ANTLR start "entryRuleInverterNode"
    // InternalQualityBtCppParser.g:5496:1: entryRuleInverterNode returns [EObject current=null] : iv_ruleInverterNode= ruleInverterNode EOF ;
    public final EObject entryRuleInverterNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleInverterNode = null;


        try {
            // InternalQualityBtCppParser.g:5496:53: (iv_ruleInverterNode= ruleInverterNode EOF )
            // InternalQualityBtCppParser.g:5497:2: iv_ruleInverterNode= ruleInverterNode EOF
            {
             newCompositeNode(grammarAccess.getInverterNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleInverterNode=ruleInverterNode();

            state._fsp--;

             current =iv_ruleInverterNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInverterNode"


    // $ANTLR start "ruleInverterNode"
    // InternalQualityBtCppParser.g:5503:1: ruleInverterNode returns [EObject current=null] : (otherlv_0= Inverter ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END ) ;
    public final EObject ruleInverterNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token this_BEGIN_22=null;
        Token this_END_24=null;
        AntlrDatatypeRuleToken lv_ID_5_0 = null;

        AntlrDatatypeRuleToken lv_name_8_0 = null;

        EObject lv_parameters_10_0 = null;

        EObject lv_parameters_12_0 = null;

        EObject lv_satisfices_14_0 = null;

        EObject lv_satisfices_16_0 = null;

        EObject lv_satisfies_18_0 = null;

        EObject lv_satisfies_20_0 = null;

        EObject lv_child_23_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:5509:2: ( (otherlv_0= Inverter ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END ) )
            // InternalQualityBtCppParser.g:5510:2: (otherlv_0= Inverter ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END )
            {
            // InternalQualityBtCppParser.g:5510:2: (otherlv_0= Inverter ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END )
            // InternalQualityBtCppParser.g:5511:3: otherlv_0= Inverter ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END
            {
            otherlv_0=(Token)match(input,Inverter,FOLLOW_15); 

            			newLeafNode(otherlv_0, grammarAccess.getInverterNodeAccess().getInverterKeyword_0());
            		
            // InternalQualityBtCppParser.g:5515:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt88=2;
            int LA88_0 = input.LA(1);

            if ( ((LA88_0>=Parameters && LA88_0<=Satisfies)||LA88_0==Name||LA88_0==ID||(LA88_0>=LeftParenthesis && LA88_0<=RightParenthesis)) ) {
                alt88=1;
            }
            switch (alt88) {
                case 1 :
                    // InternalQualityBtCppParser.g:5516:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:5516:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:5517:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1());
                    				
                    // InternalQualityBtCppParser.g:5520:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:5521:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:5521:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+
                    int cnt87=0;
                    loop87:
                    do {
                        int alt87=8;
                        int LA87_0 = input.LA(1);

                        if ( LA87_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1(), 0) ) {
                            alt87=1;
                        }
                        else if ( LA87_0 == ID && getUnorderedGroupHelper().canSelect(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1(), 1) ) {
                            alt87=2;
                        }
                        else if ( LA87_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1(), 2) ) {
                            alt87=3;
                        }
                        else if ( LA87_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1(), 3) ) {
                            alt87=4;
                        }
                        else if ( LA87_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1(), 4) ) {
                            alt87=5;
                        }
                        else if ( LA87_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1(), 5) ) {
                            alt87=6;
                        }
                        else if ( LA87_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1(), 6) ) {
                            alt87=7;
                        }


                        switch (alt87) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:5522:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:5522:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:5523:5: {...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleInverterNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:5523:109: ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:5524:6: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:5527:9: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:5527:10: {...}? => (otherlv_2= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleInverterNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:5527:19: (otherlv_2= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:5527:20: otherlv_2= LeftParenthesis
                    	    {
                    	    otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_2, grammarAccess.getInverterNodeAccess().getLeftParenthesisKeyword_1_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:5537:4: ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:5537:4: ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:5538:5: {...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleInverterNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:5538:109: ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:5539:6: ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:5542:9: ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:5542:10: {...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleInverterNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:5542:19: (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:5542:20: otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) )
                    	    {
                    	    otherlv_3=(Token)match(input,ID,FOLLOW_8); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getInverterNodeAccess().getIDKeyword_1_1_0());
                    	    								
                    	    otherlv_4=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getInverterNodeAccess().getEqualsSignKeyword_1_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:5550:9: ( (lv_ID_5_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:5551:10: (lv_ID_5_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:5551:10: (lv_ID_5_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:5552:11: lv_ID_5_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getInverterNodeAccess().getIDEStringParserRuleCall_1_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_15);
                    	    lv_ID_5_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getInverterNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"ID",
                    	    												lv_ID_5_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:5575:4: ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:5575:4: ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:5576:5: {...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleInverterNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:5576:109: ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:5577:6: ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:5580:9: ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:5580:10: {...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleInverterNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:5580:19: (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:5580:20: otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) )
                    	    {
                    	    otherlv_6=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_6, grammarAccess.getInverterNodeAccess().getNameKeyword_1_2_0());
                    	    								
                    	    otherlv_7=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_7, grammarAccess.getInverterNodeAccess().getEqualsSignKeyword_1_2_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:5588:9: ( (lv_name_8_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:5589:10: (lv_name_8_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:5589:10: (lv_name_8_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:5590:11: lv_name_8_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getInverterNodeAccess().getNameEStringParserRuleCall_1_2_2_0());
                    	    										
                    	    pushFollow(FOLLOW_15);
                    	    lv_name_8_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getInverterNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_8_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:5613:4: ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:5613:4: ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:5614:5: {...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleInverterNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:5614:109: ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:5615:6: ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:5618:9: ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:5618:10: {...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleInverterNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:5618:19: (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:5618:20: otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_9=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_9, grammarAccess.getInverterNodeAccess().getParametersKeyword_1_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:5622:9: ( (lv_parameters_10_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:5623:10: (lv_parameters_10_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:5623:10: (lv_parameters_10_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:5624:11: lv_parameters_10_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getInverterNodeAccess().getParametersParameterParserRuleCall_1_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_parameters_10_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getInverterNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_10_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:5641:9: (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )*
                    	    loop84:
                    	    do {
                    	        int alt84=2;
                    	        int LA84_0 = input.LA(1);

                    	        if ( (LA84_0==Comma) ) {
                    	            alt84=1;
                    	        }


                    	        switch (alt84) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:5642:10: otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_11=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_11, grammarAccess.getInverterNodeAccess().getCommaKeyword_1_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:5646:10: ( (lv_parameters_12_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:5647:11: (lv_parameters_12_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:5647:11: (lv_parameters_12_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:5648:12: lv_parameters_12_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getInverterNodeAccess().getParametersParameterParserRuleCall_1_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_parameters_12_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getInverterNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_12_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop84;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:5672:4: ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:5672:4: ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:5673:5: {...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleInverterNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:5673:109: ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:5674:6: ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:5677:9: ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:5677:10: {...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleInverterNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:5677:19: (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:5677:20: otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_13=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_13, grammarAccess.getInverterNodeAccess().getSatisficesKeyword_1_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:5681:9: ( (lv_satisfices_14_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:5682:10: (lv_satisfices_14_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:5682:10: (lv_satisfices_14_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:5683:11: lv_satisfices_14_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getInverterNodeAccess().getSatisficesQualityParserRuleCall_1_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfices_14_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getInverterNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_14_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:5700:9: (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )*
                    	    loop85:
                    	    do {
                    	        int alt85=2;
                    	        int LA85_0 = input.LA(1);

                    	        if ( (LA85_0==Comma) ) {
                    	            alt85=1;
                    	        }


                    	        switch (alt85) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:5701:10: otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_15=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_15, grammarAccess.getInverterNodeAccess().getCommaKeyword_1_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:5705:10: ( (lv_satisfices_16_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:5706:11: (lv_satisfices_16_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:5706:11: (lv_satisfices_16_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:5707:12: lv_satisfices_16_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getInverterNodeAccess().getSatisficesQualityParserRuleCall_1_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfices_16_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getInverterNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_16_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop85;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:5731:4: ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:5731:4: ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:5732:5: {...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleInverterNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:5732:109: ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:5733:6: ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:5736:9: ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:5736:10: {...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleInverterNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:5736:19: (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:5736:20: otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_17=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_17, grammarAccess.getInverterNodeAccess().getSatisfiesKeyword_1_5_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:5740:9: ( (lv_satisfies_18_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:5741:10: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:5741:10: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:5742:11: lv_satisfies_18_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getInverterNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_5_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfies_18_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getInverterNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_18_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:5759:9: (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )*
                    	    loop86:
                    	    do {
                    	        int alt86=2;
                    	        int LA86_0 = input.LA(1);

                    	        if ( (LA86_0==Comma) ) {
                    	            alt86=1;
                    	        }


                    	        switch (alt86) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:5760:10: otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_19=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_19, grammarAccess.getInverterNodeAccess().getCommaKeyword_1_5_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:5764:10: ( (lv_satisfies_20_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:5765:11: (lv_satisfies_20_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:5765:11: (lv_satisfies_20_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:5766:12: lv_satisfies_20_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getInverterNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_5_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfies_20_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getInverterNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_20_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop86;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 7 :
                    	    // InternalQualityBtCppParser.g:5790:4: ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:5790:4: ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:5791:5: {...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1(), 6) ) {
                    	        throw new FailedPredicateException(input, "ruleInverterNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1(), 6)");
                    	    }
                    	    // InternalQualityBtCppParser.g:5791:109: ( ({...}? => (otherlv_21= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:5792:6: ({...}? => (otherlv_21= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1(), 6);
                    	    					
                    	    // InternalQualityBtCppParser.g:5795:9: ({...}? => (otherlv_21= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:5795:10: {...}? => (otherlv_21= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleInverterNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:5795:19: (otherlv_21= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:5795:20: otherlv_21= RightParenthesis
                    	    {
                    	    otherlv_21=(Token)match(input,RightParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_21, grammarAccess.getInverterNodeAccess().getRightParenthesisKeyword_1_6());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt87 >= 1 ) break loop87;
                                EarlyExitException eee =
                                    new EarlyExitException(87, input);
                                throw eee;
                        }
                        cnt87++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1()) ) {
                        throw new FailedPredicateException(input, "ruleInverterNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1());
                    				

                    }
                    break;

            }

            this_BEGIN_22=(Token)match(input,RULE_BEGIN,FOLLOW_9); 

            			newLeafNode(this_BEGIN_22, grammarAccess.getInverterNodeAccess().getBEGINTerminalRuleCall_2());
            		
            // InternalQualityBtCppParser.g:5817:3: ( (lv_child_23_0= ruleTreeNode ) )
            // InternalQualityBtCppParser.g:5818:4: (lv_child_23_0= ruleTreeNode )
            {
            // InternalQualityBtCppParser.g:5818:4: (lv_child_23_0= ruleTreeNode )
            // InternalQualityBtCppParser.g:5819:5: lv_child_23_0= ruleTreeNode
            {

            					newCompositeNode(grammarAccess.getInverterNodeAccess().getChildTreeNodeParserRuleCall_3_0());
            				
            pushFollow(FOLLOW_20);
            lv_child_23_0=ruleTreeNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getInverterNodeRule());
            					}
            					set(
            						current,
            						"child",
            						lv_child_23_0,
            						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            this_END_24=(Token)match(input,RULE_END,FOLLOW_2); 

            			newLeafNode(this_END_24, grammarAccess.getInverterNodeAccess().getENDTerminalRuleCall_4());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInverterNode"


    // $ANTLR start "entryRuleForceSuccessNode"
    // InternalQualityBtCppParser.g:5844:1: entryRuleForceSuccessNode returns [EObject current=null] : iv_ruleForceSuccessNode= ruleForceSuccessNode EOF ;
    public final EObject entryRuleForceSuccessNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleForceSuccessNode = null;


        try {
            // InternalQualityBtCppParser.g:5844:57: (iv_ruleForceSuccessNode= ruleForceSuccessNode EOF )
            // InternalQualityBtCppParser.g:5845:2: iv_ruleForceSuccessNode= ruleForceSuccessNode EOF
            {
             newCompositeNode(grammarAccess.getForceSuccessNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleForceSuccessNode=ruleForceSuccessNode();

            state._fsp--;

             current =iv_ruleForceSuccessNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleForceSuccessNode"


    // $ANTLR start "ruleForceSuccessNode"
    // InternalQualityBtCppParser.g:5851:1: ruleForceSuccessNode returns [EObject current=null] : (otherlv_0= ForceSuccess ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END ) ;
    public final EObject ruleForceSuccessNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token this_BEGIN_22=null;
        Token this_END_24=null;
        AntlrDatatypeRuleToken lv_ID_5_0 = null;

        AntlrDatatypeRuleToken lv_name_8_0 = null;

        EObject lv_parameters_10_0 = null;

        EObject lv_parameters_12_0 = null;

        EObject lv_satisfices_14_0 = null;

        EObject lv_satisfices_16_0 = null;

        EObject lv_satisfies_18_0 = null;

        EObject lv_satisfies_20_0 = null;

        EObject lv_child_23_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:5857:2: ( (otherlv_0= ForceSuccess ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END ) )
            // InternalQualityBtCppParser.g:5858:2: (otherlv_0= ForceSuccess ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END )
            {
            // InternalQualityBtCppParser.g:5858:2: (otherlv_0= ForceSuccess ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END )
            // InternalQualityBtCppParser.g:5859:3: otherlv_0= ForceSuccess ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END
            {
            otherlv_0=(Token)match(input,ForceSuccess,FOLLOW_15); 

            			newLeafNode(otherlv_0, grammarAccess.getForceSuccessNodeAccess().getForceSuccessKeyword_0());
            		
            // InternalQualityBtCppParser.g:5863:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt93=2;
            int LA93_0 = input.LA(1);

            if ( ((LA93_0>=Parameters && LA93_0<=Satisfies)||LA93_0==Name||LA93_0==ID||(LA93_0>=LeftParenthesis && LA93_0<=RightParenthesis)) ) {
                alt93=1;
            }
            switch (alt93) {
                case 1 :
                    // InternalQualityBtCppParser.g:5864:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:5864:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:5865:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1());
                    				
                    // InternalQualityBtCppParser.g:5868:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:5869:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:5869:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+
                    int cnt92=0;
                    loop92:
                    do {
                        int alt92=8;
                        int LA92_0 = input.LA(1);

                        if ( LA92_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1(), 0) ) {
                            alt92=1;
                        }
                        else if ( LA92_0 == ID && getUnorderedGroupHelper().canSelect(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1(), 1) ) {
                            alt92=2;
                        }
                        else if ( LA92_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1(), 2) ) {
                            alt92=3;
                        }
                        else if ( LA92_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1(), 3) ) {
                            alt92=4;
                        }
                        else if ( LA92_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1(), 4) ) {
                            alt92=5;
                        }
                        else if ( LA92_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1(), 5) ) {
                            alt92=6;
                        }
                        else if ( LA92_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1(), 6) ) {
                            alt92=7;
                        }


                        switch (alt92) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:5870:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:5870:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:5871:5: {...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleForceSuccessNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:5871:113: ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:5872:6: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:5875:9: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:5875:10: {...}? => (otherlv_2= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleForceSuccessNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:5875:19: (otherlv_2= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:5875:20: otherlv_2= LeftParenthesis
                    	    {
                    	    otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_2, grammarAccess.getForceSuccessNodeAccess().getLeftParenthesisKeyword_1_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:5885:4: ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:5885:4: ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:5886:5: {...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleForceSuccessNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:5886:113: ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:5887:6: ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:5890:9: ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:5890:10: {...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleForceSuccessNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:5890:19: (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:5890:20: otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) )
                    	    {
                    	    otherlv_3=(Token)match(input,ID,FOLLOW_8); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getForceSuccessNodeAccess().getIDKeyword_1_1_0());
                    	    								
                    	    otherlv_4=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getForceSuccessNodeAccess().getEqualsSignKeyword_1_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:5898:9: ( (lv_ID_5_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:5899:10: (lv_ID_5_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:5899:10: (lv_ID_5_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:5900:11: lv_ID_5_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getForceSuccessNodeAccess().getIDEStringParserRuleCall_1_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_15);
                    	    lv_ID_5_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getForceSuccessNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"ID",
                    	    												lv_ID_5_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:5923:4: ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:5923:4: ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:5924:5: {...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleForceSuccessNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:5924:113: ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:5925:6: ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:5928:9: ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:5928:10: {...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleForceSuccessNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:5928:19: (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:5928:20: otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) )
                    	    {
                    	    otherlv_6=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_6, grammarAccess.getForceSuccessNodeAccess().getNameKeyword_1_2_0());
                    	    								
                    	    otherlv_7=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_7, grammarAccess.getForceSuccessNodeAccess().getEqualsSignKeyword_1_2_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:5936:9: ( (lv_name_8_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:5937:10: (lv_name_8_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:5937:10: (lv_name_8_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:5938:11: lv_name_8_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getForceSuccessNodeAccess().getNameEStringParserRuleCall_1_2_2_0());
                    	    										
                    	    pushFollow(FOLLOW_15);
                    	    lv_name_8_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getForceSuccessNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_8_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:5961:4: ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:5961:4: ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:5962:5: {...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleForceSuccessNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:5962:113: ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:5963:6: ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:5966:9: ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:5966:10: {...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleForceSuccessNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:5966:19: (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:5966:20: otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_9=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_9, grammarAccess.getForceSuccessNodeAccess().getParametersKeyword_1_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:5970:9: ( (lv_parameters_10_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:5971:10: (lv_parameters_10_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:5971:10: (lv_parameters_10_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:5972:11: lv_parameters_10_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getForceSuccessNodeAccess().getParametersParameterParserRuleCall_1_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_parameters_10_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getForceSuccessNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_10_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:5989:9: (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )*
                    	    loop89:
                    	    do {
                    	        int alt89=2;
                    	        int LA89_0 = input.LA(1);

                    	        if ( (LA89_0==Comma) ) {
                    	            alt89=1;
                    	        }


                    	        switch (alt89) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:5990:10: otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_11=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_11, grammarAccess.getForceSuccessNodeAccess().getCommaKeyword_1_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:5994:10: ( (lv_parameters_12_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:5995:11: (lv_parameters_12_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:5995:11: (lv_parameters_12_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:5996:12: lv_parameters_12_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getForceSuccessNodeAccess().getParametersParameterParserRuleCall_1_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_parameters_12_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getForceSuccessNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_12_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop89;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:6020:4: ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:6020:4: ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:6021:5: {...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleForceSuccessNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:6021:113: ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:6022:6: ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:6025:9: ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:6025:10: {...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleForceSuccessNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:6025:19: (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:6025:20: otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_13=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_13, grammarAccess.getForceSuccessNodeAccess().getSatisficesKeyword_1_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:6029:9: ( (lv_satisfices_14_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:6030:10: (lv_satisfices_14_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:6030:10: (lv_satisfices_14_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:6031:11: lv_satisfices_14_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getForceSuccessNodeAccess().getSatisficesQualityParserRuleCall_1_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfices_14_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getForceSuccessNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_14_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:6048:9: (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )*
                    	    loop90:
                    	    do {
                    	        int alt90=2;
                    	        int LA90_0 = input.LA(1);

                    	        if ( (LA90_0==Comma) ) {
                    	            alt90=1;
                    	        }


                    	        switch (alt90) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:6049:10: otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_15=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_15, grammarAccess.getForceSuccessNodeAccess().getCommaKeyword_1_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:6053:10: ( (lv_satisfices_16_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:6054:11: (lv_satisfices_16_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:6054:11: (lv_satisfices_16_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:6055:12: lv_satisfices_16_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getForceSuccessNodeAccess().getSatisficesQualityParserRuleCall_1_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfices_16_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getForceSuccessNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_16_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop90;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:6079:4: ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:6079:4: ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:6080:5: {...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleForceSuccessNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:6080:113: ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:6081:6: ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:6084:9: ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:6084:10: {...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleForceSuccessNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:6084:19: (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:6084:20: otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_17=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_17, grammarAccess.getForceSuccessNodeAccess().getSatisfiesKeyword_1_5_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:6088:9: ( (lv_satisfies_18_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:6089:10: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:6089:10: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:6090:11: lv_satisfies_18_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getForceSuccessNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_5_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfies_18_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getForceSuccessNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_18_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:6107:9: (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )*
                    	    loop91:
                    	    do {
                    	        int alt91=2;
                    	        int LA91_0 = input.LA(1);

                    	        if ( (LA91_0==Comma) ) {
                    	            alt91=1;
                    	        }


                    	        switch (alt91) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:6108:10: otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_19=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_19, grammarAccess.getForceSuccessNodeAccess().getCommaKeyword_1_5_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:6112:10: ( (lv_satisfies_20_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:6113:11: (lv_satisfies_20_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:6113:11: (lv_satisfies_20_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:6114:12: lv_satisfies_20_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getForceSuccessNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_5_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfies_20_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getForceSuccessNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_20_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop91;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 7 :
                    	    // InternalQualityBtCppParser.g:6138:4: ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:6138:4: ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:6139:5: {...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1(), 6) ) {
                    	        throw new FailedPredicateException(input, "ruleForceSuccessNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1(), 6)");
                    	    }
                    	    // InternalQualityBtCppParser.g:6139:113: ( ({...}? => (otherlv_21= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:6140:6: ({...}? => (otherlv_21= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1(), 6);
                    	    					
                    	    // InternalQualityBtCppParser.g:6143:9: ({...}? => (otherlv_21= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:6143:10: {...}? => (otherlv_21= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleForceSuccessNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:6143:19: (otherlv_21= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:6143:20: otherlv_21= RightParenthesis
                    	    {
                    	    otherlv_21=(Token)match(input,RightParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_21, grammarAccess.getForceSuccessNodeAccess().getRightParenthesisKeyword_1_6());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt92 >= 1 ) break loop92;
                                EarlyExitException eee =
                                    new EarlyExitException(92, input);
                                throw eee;
                        }
                        cnt92++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1()) ) {
                        throw new FailedPredicateException(input, "ruleForceSuccessNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1());
                    				

                    }
                    break;

            }

            this_BEGIN_22=(Token)match(input,RULE_BEGIN,FOLLOW_9); 

            			newLeafNode(this_BEGIN_22, grammarAccess.getForceSuccessNodeAccess().getBEGINTerminalRuleCall_2());
            		
            // InternalQualityBtCppParser.g:6165:3: ( (lv_child_23_0= ruleTreeNode ) )
            // InternalQualityBtCppParser.g:6166:4: (lv_child_23_0= ruleTreeNode )
            {
            // InternalQualityBtCppParser.g:6166:4: (lv_child_23_0= ruleTreeNode )
            // InternalQualityBtCppParser.g:6167:5: lv_child_23_0= ruleTreeNode
            {

            					newCompositeNode(grammarAccess.getForceSuccessNodeAccess().getChildTreeNodeParserRuleCall_3_0());
            				
            pushFollow(FOLLOW_20);
            lv_child_23_0=ruleTreeNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getForceSuccessNodeRule());
            					}
            					set(
            						current,
            						"child",
            						lv_child_23_0,
            						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            this_END_24=(Token)match(input,RULE_END,FOLLOW_2); 

            			newLeafNode(this_END_24, grammarAccess.getForceSuccessNodeAccess().getENDTerminalRuleCall_4());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleForceSuccessNode"


    // $ANTLR start "entryRuleForceFailureNode"
    // InternalQualityBtCppParser.g:6192:1: entryRuleForceFailureNode returns [EObject current=null] : iv_ruleForceFailureNode= ruleForceFailureNode EOF ;
    public final EObject entryRuleForceFailureNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleForceFailureNode = null;


        try {
            // InternalQualityBtCppParser.g:6192:57: (iv_ruleForceFailureNode= ruleForceFailureNode EOF )
            // InternalQualityBtCppParser.g:6193:2: iv_ruleForceFailureNode= ruleForceFailureNode EOF
            {
             newCompositeNode(grammarAccess.getForceFailureNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleForceFailureNode=ruleForceFailureNode();

            state._fsp--;

             current =iv_ruleForceFailureNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleForceFailureNode"


    // $ANTLR start "ruleForceFailureNode"
    // InternalQualityBtCppParser.g:6199:1: ruleForceFailureNode returns [EObject current=null] : (otherlv_0= ForceFailure ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END ) ;
    public final EObject ruleForceFailureNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token this_BEGIN_22=null;
        Token this_END_24=null;
        AntlrDatatypeRuleToken lv_ID_5_0 = null;

        AntlrDatatypeRuleToken lv_name_8_0 = null;

        EObject lv_parameters_10_0 = null;

        EObject lv_parameters_12_0 = null;

        EObject lv_satisfices_14_0 = null;

        EObject lv_satisfices_16_0 = null;

        EObject lv_satisfies_18_0 = null;

        EObject lv_satisfies_20_0 = null;

        EObject lv_child_23_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:6205:2: ( (otherlv_0= ForceFailure ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END ) )
            // InternalQualityBtCppParser.g:6206:2: (otherlv_0= ForceFailure ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END )
            {
            // InternalQualityBtCppParser.g:6206:2: (otherlv_0= ForceFailure ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END )
            // InternalQualityBtCppParser.g:6207:3: otherlv_0= ForceFailure ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END
            {
            otherlv_0=(Token)match(input,ForceFailure,FOLLOW_15); 

            			newLeafNode(otherlv_0, grammarAccess.getForceFailureNodeAccess().getForceFailureKeyword_0());
            		
            // InternalQualityBtCppParser.g:6211:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt98=2;
            int LA98_0 = input.LA(1);

            if ( ((LA98_0>=Parameters && LA98_0<=Satisfies)||LA98_0==Name||LA98_0==ID||(LA98_0>=LeftParenthesis && LA98_0<=RightParenthesis)) ) {
                alt98=1;
            }
            switch (alt98) {
                case 1 :
                    // InternalQualityBtCppParser.g:6212:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:6212:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:6213:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1());
                    				
                    // InternalQualityBtCppParser.g:6216:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:6217:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:6217:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+
                    int cnt97=0;
                    loop97:
                    do {
                        int alt97=8;
                        int LA97_0 = input.LA(1);

                        if ( LA97_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1(), 0) ) {
                            alt97=1;
                        }
                        else if ( LA97_0 == ID && getUnorderedGroupHelper().canSelect(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1(), 1) ) {
                            alt97=2;
                        }
                        else if ( LA97_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1(), 2) ) {
                            alt97=3;
                        }
                        else if ( LA97_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1(), 3) ) {
                            alt97=4;
                        }
                        else if ( LA97_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1(), 4) ) {
                            alt97=5;
                        }
                        else if ( LA97_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1(), 5) ) {
                            alt97=6;
                        }
                        else if ( LA97_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1(), 6) ) {
                            alt97=7;
                        }


                        switch (alt97) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:6218:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:6218:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:6219:5: {...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleForceFailureNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:6219:113: ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:6220:6: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:6223:9: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:6223:10: {...}? => (otherlv_2= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleForceFailureNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:6223:19: (otherlv_2= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:6223:20: otherlv_2= LeftParenthesis
                    	    {
                    	    otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_2, grammarAccess.getForceFailureNodeAccess().getLeftParenthesisKeyword_1_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:6233:4: ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:6233:4: ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:6234:5: {...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleForceFailureNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:6234:113: ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:6235:6: ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:6238:9: ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:6238:10: {...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleForceFailureNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:6238:19: (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:6238:20: otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) )
                    	    {
                    	    otherlv_3=(Token)match(input,ID,FOLLOW_8); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getForceFailureNodeAccess().getIDKeyword_1_1_0());
                    	    								
                    	    otherlv_4=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getForceFailureNodeAccess().getEqualsSignKeyword_1_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:6246:9: ( (lv_ID_5_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:6247:10: (lv_ID_5_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:6247:10: (lv_ID_5_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:6248:11: lv_ID_5_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getForceFailureNodeAccess().getIDEStringParserRuleCall_1_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_15);
                    	    lv_ID_5_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getForceFailureNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"ID",
                    	    												lv_ID_5_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:6271:4: ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:6271:4: ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:6272:5: {...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleForceFailureNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:6272:113: ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:6273:6: ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:6276:9: ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:6276:10: {...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleForceFailureNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:6276:19: (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:6276:20: otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) )
                    	    {
                    	    otherlv_6=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_6, grammarAccess.getForceFailureNodeAccess().getNameKeyword_1_2_0());
                    	    								
                    	    otherlv_7=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_7, grammarAccess.getForceFailureNodeAccess().getEqualsSignKeyword_1_2_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:6284:9: ( (lv_name_8_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:6285:10: (lv_name_8_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:6285:10: (lv_name_8_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:6286:11: lv_name_8_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getForceFailureNodeAccess().getNameEStringParserRuleCall_1_2_2_0());
                    	    										
                    	    pushFollow(FOLLOW_15);
                    	    lv_name_8_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getForceFailureNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_8_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:6309:4: ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:6309:4: ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:6310:5: {...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleForceFailureNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:6310:113: ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:6311:6: ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:6314:9: ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:6314:10: {...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleForceFailureNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:6314:19: (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:6314:20: otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_9=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_9, grammarAccess.getForceFailureNodeAccess().getParametersKeyword_1_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:6318:9: ( (lv_parameters_10_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:6319:10: (lv_parameters_10_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:6319:10: (lv_parameters_10_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:6320:11: lv_parameters_10_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getForceFailureNodeAccess().getParametersParameterParserRuleCall_1_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_parameters_10_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getForceFailureNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_10_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:6337:9: (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )*
                    	    loop94:
                    	    do {
                    	        int alt94=2;
                    	        int LA94_0 = input.LA(1);

                    	        if ( (LA94_0==Comma) ) {
                    	            alt94=1;
                    	        }


                    	        switch (alt94) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:6338:10: otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_11=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_11, grammarAccess.getForceFailureNodeAccess().getCommaKeyword_1_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:6342:10: ( (lv_parameters_12_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:6343:11: (lv_parameters_12_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:6343:11: (lv_parameters_12_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:6344:12: lv_parameters_12_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getForceFailureNodeAccess().getParametersParameterParserRuleCall_1_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_parameters_12_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getForceFailureNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_12_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop94;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:6368:4: ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:6368:4: ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:6369:5: {...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleForceFailureNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:6369:113: ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:6370:6: ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:6373:9: ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:6373:10: {...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleForceFailureNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:6373:19: (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:6373:20: otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_13=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_13, grammarAccess.getForceFailureNodeAccess().getSatisficesKeyword_1_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:6377:9: ( (lv_satisfices_14_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:6378:10: (lv_satisfices_14_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:6378:10: (lv_satisfices_14_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:6379:11: lv_satisfices_14_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getForceFailureNodeAccess().getSatisficesQualityParserRuleCall_1_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfices_14_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getForceFailureNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_14_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:6396:9: (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )*
                    	    loop95:
                    	    do {
                    	        int alt95=2;
                    	        int LA95_0 = input.LA(1);

                    	        if ( (LA95_0==Comma) ) {
                    	            alt95=1;
                    	        }


                    	        switch (alt95) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:6397:10: otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_15=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_15, grammarAccess.getForceFailureNodeAccess().getCommaKeyword_1_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:6401:10: ( (lv_satisfices_16_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:6402:11: (lv_satisfices_16_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:6402:11: (lv_satisfices_16_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:6403:12: lv_satisfices_16_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getForceFailureNodeAccess().getSatisficesQualityParserRuleCall_1_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfices_16_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getForceFailureNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_16_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop95;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:6427:4: ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:6427:4: ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:6428:5: {...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleForceFailureNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:6428:113: ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:6429:6: ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:6432:9: ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:6432:10: {...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleForceFailureNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:6432:19: (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:6432:20: otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_17=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_17, grammarAccess.getForceFailureNodeAccess().getSatisfiesKeyword_1_5_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:6436:9: ( (lv_satisfies_18_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:6437:10: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:6437:10: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:6438:11: lv_satisfies_18_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getForceFailureNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_5_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfies_18_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getForceFailureNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_18_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:6455:9: (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )*
                    	    loop96:
                    	    do {
                    	        int alt96=2;
                    	        int LA96_0 = input.LA(1);

                    	        if ( (LA96_0==Comma) ) {
                    	            alt96=1;
                    	        }


                    	        switch (alt96) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:6456:10: otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_19=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_19, grammarAccess.getForceFailureNodeAccess().getCommaKeyword_1_5_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:6460:10: ( (lv_satisfies_20_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:6461:11: (lv_satisfies_20_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:6461:11: (lv_satisfies_20_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:6462:12: lv_satisfies_20_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getForceFailureNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_5_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfies_20_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getForceFailureNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_20_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop96;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 7 :
                    	    // InternalQualityBtCppParser.g:6486:4: ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:6486:4: ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:6487:5: {...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1(), 6) ) {
                    	        throw new FailedPredicateException(input, "ruleForceFailureNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1(), 6)");
                    	    }
                    	    // InternalQualityBtCppParser.g:6487:113: ( ({...}? => (otherlv_21= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:6488:6: ({...}? => (otherlv_21= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1(), 6);
                    	    					
                    	    // InternalQualityBtCppParser.g:6491:9: ({...}? => (otherlv_21= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:6491:10: {...}? => (otherlv_21= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleForceFailureNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:6491:19: (otherlv_21= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:6491:20: otherlv_21= RightParenthesis
                    	    {
                    	    otherlv_21=(Token)match(input,RightParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_21, grammarAccess.getForceFailureNodeAccess().getRightParenthesisKeyword_1_6());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt97 >= 1 ) break loop97;
                                EarlyExitException eee =
                                    new EarlyExitException(97, input);
                                throw eee;
                        }
                        cnt97++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1()) ) {
                        throw new FailedPredicateException(input, "ruleForceFailureNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1());
                    				

                    }
                    break;

            }

            this_BEGIN_22=(Token)match(input,RULE_BEGIN,FOLLOW_9); 

            			newLeafNode(this_BEGIN_22, grammarAccess.getForceFailureNodeAccess().getBEGINTerminalRuleCall_2());
            		
            // InternalQualityBtCppParser.g:6513:3: ( (lv_child_23_0= ruleTreeNode ) )
            // InternalQualityBtCppParser.g:6514:4: (lv_child_23_0= ruleTreeNode )
            {
            // InternalQualityBtCppParser.g:6514:4: (lv_child_23_0= ruleTreeNode )
            // InternalQualityBtCppParser.g:6515:5: lv_child_23_0= ruleTreeNode
            {

            					newCompositeNode(grammarAccess.getForceFailureNodeAccess().getChildTreeNodeParserRuleCall_3_0());
            				
            pushFollow(FOLLOW_20);
            lv_child_23_0=ruleTreeNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getForceFailureNodeRule());
            					}
            					set(
            						current,
            						"child",
            						lv_child_23_0,
            						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            this_END_24=(Token)match(input,RULE_END,FOLLOW_2); 

            			newLeafNode(this_END_24, grammarAccess.getForceFailureNodeAccess().getENDTerminalRuleCall_4());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleForceFailureNode"


    // $ANTLR start "entryRuleRepeatNode"
    // InternalQualityBtCppParser.g:6540:1: entryRuleRepeatNode returns [EObject current=null] : iv_ruleRepeatNode= ruleRepeatNode EOF ;
    public final EObject entryRuleRepeatNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRepeatNode = null;


        try {
            // InternalQualityBtCppParser.g:6540:51: (iv_ruleRepeatNode= ruleRepeatNode EOF )
            // InternalQualityBtCppParser.g:6541:2: iv_ruleRepeatNode= ruleRepeatNode EOF
            {
             newCompositeNode(grammarAccess.getRepeatNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleRepeatNode=ruleRepeatNode();

            state._fsp--;

             current =iv_ruleRepeatNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRepeatNode"


    // $ANTLR start "ruleRepeatNode"
    // InternalQualityBtCppParser.g:6547:1: ruleRepeatNode returns [EObject current=null] : (otherlv_0= Repeat ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Num_cycles otherlv_22= EqualsSign ( (lv_num_cycles_23_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_25= RULE_BEGIN ( (lv_child_26_0= ruleTreeNode ) ) this_END_27= RULE_END ) ;
    public final EObject ruleRepeatNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token otherlv_22=null;
        Token otherlv_24=null;
        Token this_BEGIN_25=null;
        Token this_END_27=null;
        AntlrDatatypeRuleToken lv_ID_5_0 = null;

        AntlrDatatypeRuleToken lv_name_8_0 = null;

        EObject lv_parameters_10_0 = null;

        EObject lv_parameters_12_0 = null;

        EObject lv_satisfices_14_0 = null;

        EObject lv_satisfices_16_0 = null;

        EObject lv_satisfies_18_0 = null;

        EObject lv_satisfies_20_0 = null;

        AntlrDatatypeRuleToken lv_num_cycles_23_0 = null;

        EObject lv_child_26_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:6553:2: ( (otherlv_0= Repeat ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Num_cycles otherlv_22= EqualsSign ( (lv_num_cycles_23_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_25= RULE_BEGIN ( (lv_child_26_0= ruleTreeNode ) ) this_END_27= RULE_END ) )
            // InternalQualityBtCppParser.g:6554:2: (otherlv_0= Repeat ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Num_cycles otherlv_22= EqualsSign ( (lv_num_cycles_23_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_25= RULE_BEGIN ( (lv_child_26_0= ruleTreeNode ) ) this_END_27= RULE_END )
            {
            // InternalQualityBtCppParser.g:6554:2: (otherlv_0= Repeat ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Num_cycles otherlv_22= EqualsSign ( (lv_num_cycles_23_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_25= RULE_BEGIN ( (lv_child_26_0= ruleTreeNode ) ) this_END_27= RULE_END )
            // InternalQualityBtCppParser.g:6555:3: otherlv_0= Repeat ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Num_cycles otherlv_22= EqualsSign ( (lv_num_cycles_23_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_25= RULE_BEGIN ( (lv_child_26_0= ruleTreeNode ) ) this_END_27= RULE_END
            {
            otherlv_0=(Token)match(input,Repeat,FOLLOW_21); 

            			newLeafNode(otherlv_0, grammarAccess.getRepeatNodeAccess().getRepeatKeyword_0());
            		
            // InternalQualityBtCppParser.g:6559:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Num_cycles otherlv_22= EqualsSign ( (lv_num_cycles_23_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt103=2;
            int LA103_0 = input.LA(1);

            if ( (LA103_0==Num_cycles||(LA103_0>=Parameters && LA103_0<=Satisfies)||LA103_0==Name||LA103_0==ID||(LA103_0>=LeftParenthesis && LA103_0<=RightParenthesis)) ) {
                alt103=1;
            }
            switch (alt103) {
                case 1 :
                    // InternalQualityBtCppParser.g:6560:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Num_cycles otherlv_22= EqualsSign ( (lv_num_cycles_23_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:6560:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Num_cycles otherlv_22= EqualsSign ( (lv_num_cycles_23_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:6561:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Num_cycles otherlv_22= EqualsSign ( (lv_num_cycles_23_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1());
                    				
                    // InternalQualityBtCppParser.g:6564:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Num_cycles otherlv_22= EqualsSign ( (lv_num_cycles_23_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:6565:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Num_cycles otherlv_22= EqualsSign ( (lv_num_cycles_23_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:6565:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Num_cycles otherlv_22= EqualsSign ( (lv_num_cycles_23_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+
                    int cnt102=0;
                    loop102:
                    do {
                        int alt102=9;
                        alt102 = dfa102.predict(input);
                        switch (alt102) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:6566:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:6566:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:6567:5: {...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleRepeatNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:6567:107: ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:6568:6: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:6571:9: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:6571:10: {...}? => (otherlv_2= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleRepeatNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:6571:19: (otherlv_2= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:6571:20: otherlv_2= LeftParenthesis
                    	    {
                    	    otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_21); 

                    	    									newLeafNode(otherlv_2, grammarAccess.getRepeatNodeAccess().getLeftParenthesisKeyword_1_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:6581:4: ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:6581:4: ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:6582:5: {...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleRepeatNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:6582:107: ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:6583:6: ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:6586:9: ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:6586:10: {...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleRepeatNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:6586:19: (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:6586:20: otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) )
                    	    {
                    	    otherlv_3=(Token)match(input,ID,FOLLOW_8); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getRepeatNodeAccess().getIDKeyword_1_1_0());
                    	    								
                    	    otherlv_4=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getRepeatNodeAccess().getEqualsSignKeyword_1_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:6594:9: ( (lv_ID_5_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:6595:10: (lv_ID_5_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:6595:10: (lv_ID_5_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:6596:11: lv_ID_5_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getRepeatNodeAccess().getIDEStringParserRuleCall_1_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_21);
                    	    lv_ID_5_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getRepeatNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"ID",
                    	    												lv_ID_5_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:6619:4: ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:6619:4: ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:6620:5: {...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleRepeatNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:6620:107: ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:6621:6: ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:6624:9: ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:6624:10: {...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleRepeatNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:6624:19: (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:6624:20: otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) )
                    	    {
                    	    otherlv_6=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_6, grammarAccess.getRepeatNodeAccess().getNameKeyword_1_2_0());
                    	    								
                    	    otherlv_7=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_7, grammarAccess.getRepeatNodeAccess().getEqualsSignKeyword_1_2_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:6632:9: ( (lv_name_8_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:6633:10: (lv_name_8_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:6633:10: (lv_name_8_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:6634:11: lv_name_8_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getRepeatNodeAccess().getNameEStringParserRuleCall_1_2_2_0());
                    	    										
                    	    pushFollow(FOLLOW_21);
                    	    lv_name_8_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getRepeatNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_8_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:6657:4: ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:6657:4: ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:6658:5: {...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleRepeatNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:6658:107: ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:6659:6: ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:6662:9: ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:6662:10: {...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleRepeatNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:6662:19: (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:6662:20: otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_9=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_9, grammarAccess.getRepeatNodeAccess().getParametersKeyword_1_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:6666:9: ( (lv_parameters_10_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:6667:10: (lv_parameters_10_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:6667:10: (lv_parameters_10_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:6668:11: lv_parameters_10_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getRepeatNodeAccess().getParametersParameterParserRuleCall_1_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_22);
                    	    lv_parameters_10_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getRepeatNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_10_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:6685:9: (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )*
                    	    loop99:
                    	    do {
                    	        int alt99=2;
                    	        int LA99_0 = input.LA(1);

                    	        if ( (LA99_0==Comma) ) {
                    	            alt99=1;
                    	        }


                    	        switch (alt99) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:6686:10: otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_11=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_11, grammarAccess.getRepeatNodeAccess().getCommaKeyword_1_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:6690:10: ( (lv_parameters_12_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:6691:11: (lv_parameters_12_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:6691:11: (lv_parameters_12_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:6692:12: lv_parameters_12_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getRepeatNodeAccess().getParametersParameterParserRuleCall_1_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_22);
                    	    	    lv_parameters_12_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getRepeatNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_12_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop99;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:6716:4: ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:6716:4: ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:6717:5: {...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleRepeatNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:6717:107: ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:6718:6: ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:6721:9: ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:6721:10: {...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleRepeatNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:6721:19: (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:6721:20: otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_13=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_13, grammarAccess.getRepeatNodeAccess().getSatisficesKeyword_1_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:6725:9: ( (lv_satisfices_14_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:6726:10: (lv_satisfices_14_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:6726:10: (lv_satisfices_14_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:6727:11: lv_satisfices_14_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getRepeatNodeAccess().getSatisficesQualityParserRuleCall_1_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_22);
                    	    lv_satisfices_14_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getRepeatNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_14_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:6744:9: (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )*
                    	    loop100:
                    	    do {
                    	        int alt100=2;
                    	        int LA100_0 = input.LA(1);

                    	        if ( (LA100_0==Comma) ) {
                    	            alt100=1;
                    	        }


                    	        switch (alt100) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:6745:10: otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_15=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_15, grammarAccess.getRepeatNodeAccess().getCommaKeyword_1_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:6749:10: ( (lv_satisfices_16_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:6750:11: (lv_satisfices_16_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:6750:11: (lv_satisfices_16_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:6751:12: lv_satisfices_16_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getRepeatNodeAccess().getSatisficesQualityParserRuleCall_1_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_22);
                    	    	    lv_satisfices_16_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getRepeatNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_16_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop100;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:6775:4: ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:6775:4: ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:6776:5: {...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleRepeatNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:6776:107: ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:6777:6: ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:6780:9: ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:6780:10: {...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleRepeatNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:6780:19: (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:6780:20: otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_17=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_17, grammarAccess.getRepeatNodeAccess().getSatisfiesKeyword_1_5_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:6784:9: ( (lv_satisfies_18_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:6785:10: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:6785:10: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:6786:11: lv_satisfies_18_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getRepeatNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_5_1_0());
                    	    										
                    	    pushFollow(FOLLOW_22);
                    	    lv_satisfies_18_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getRepeatNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_18_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:6803:9: (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )*
                    	    loop101:
                    	    do {
                    	        int alt101=2;
                    	        int LA101_0 = input.LA(1);

                    	        if ( (LA101_0==Comma) ) {
                    	            alt101=1;
                    	        }


                    	        switch (alt101) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:6804:10: otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_19=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_19, grammarAccess.getRepeatNodeAccess().getCommaKeyword_1_5_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:6808:10: ( (lv_satisfies_20_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:6809:11: (lv_satisfies_20_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:6809:11: (lv_satisfies_20_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:6810:12: lv_satisfies_20_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getRepeatNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_5_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_22);
                    	    	    lv_satisfies_20_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getRepeatNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_20_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop101;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 7 :
                    	    // InternalQualityBtCppParser.g:6834:4: ({...}? => ( ({...}? => (otherlv_21= Num_cycles otherlv_22= EqualsSign ( (lv_num_cycles_23_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:6834:4: ({...}? => ( ({...}? => (otherlv_21= Num_cycles otherlv_22= EqualsSign ( (lv_num_cycles_23_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:6835:5: {...}? => ( ({...}? => (otherlv_21= Num_cycles otherlv_22= EqualsSign ( (lv_num_cycles_23_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1(), 6) ) {
                    	        throw new FailedPredicateException(input, "ruleRepeatNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1(), 6)");
                    	    }
                    	    // InternalQualityBtCppParser.g:6835:107: ( ({...}? => (otherlv_21= Num_cycles otherlv_22= EqualsSign ( (lv_num_cycles_23_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:6836:6: ({...}? => (otherlv_21= Num_cycles otherlv_22= EqualsSign ( (lv_num_cycles_23_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1(), 6);
                    	    					
                    	    // InternalQualityBtCppParser.g:6839:9: ({...}? => (otherlv_21= Num_cycles otherlv_22= EqualsSign ( (lv_num_cycles_23_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:6839:10: {...}? => (otherlv_21= Num_cycles otherlv_22= EqualsSign ( (lv_num_cycles_23_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleRepeatNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:6839:19: (otherlv_21= Num_cycles otherlv_22= EqualsSign ( (lv_num_cycles_23_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:6839:20: otherlv_21= Num_cycles otherlv_22= EqualsSign ( (lv_num_cycles_23_0= ruleEString ) )
                    	    {
                    	    otherlv_21=(Token)match(input,Num_cycles,FOLLOW_8); 

                    	    									newLeafNode(otherlv_21, grammarAccess.getRepeatNodeAccess().getNum_cyclesKeyword_1_6_0());
                    	    								
                    	    otherlv_22=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_22, grammarAccess.getRepeatNodeAccess().getEqualsSignKeyword_1_6_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:6847:9: ( (lv_num_cycles_23_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:6848:10: (lv_num_cycles_23_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:6848:10: (lv_num_cycles_23_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:6849:11: lv_num_cycles_23_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getRepeatNodeAccess().getNum_cyclesEStringParserRuleCall_1_6_2_0());
                    	    										
                    	    pushFollow(FOLLOW_21);
                    	    lv_num_cycles_23_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getRepeatNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"num_cycles",
                    	    												lv_num_cycles_23_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 8 :
                    	    // InternalQualityBtCppParser.g:6872:4: ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:6872:4: ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:6873:5: {...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1(), 7) ) {
                    	        throw new FailedPredicateException(input, "ruleRepeatNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1(), 7)");
                    	    }
                    	    // InternalQualityBtCppParser.g:6873:107: ( ({...}? => (otherlv_24= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:6874:6: ({...}? => (otherlv_24= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1(), 7);
                    	    					
                    	    // InternalQualityBtCppParser.g:6877:9: ({...}? => (otherlv_24= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:6877:10: {...}? => (otherlv_24= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleRepeatNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:6877:19: (otherlv_24= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:6877:20: otherlv_24= RightParenthesis
                    	    {
                    	    otherlv_24=(Token)match(input,RightParenthesis,FOLLOW_21); 

                    	    									newLeafNode(otherlv_24, grammarAccess.getRepeatNodeAccess().getRightParenthesisKeyword_1_7());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt102 >= 1 ) break loop102;
                                EarlyExitException eee =
                                    new EarlyExitException(102, input);
                                throw eee;
                        }
                        cnt102++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1()) ) {
                        throw new FailedPredicateException(input, "ruleRepeatNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1());
                    				

                    }
                    break;

            }

            this_BEGIN_25=(Token)match(input,RULE_BEGIN,FOLLOW_9); 

            			newLeafNode(this_BEGIN_25, grammarAccess.getRepeatNodeAccess().getBEGINTerminalRuleCall_2());
            		
            // InternalQualityBtCppParser.g:6899:3: ( (lv_child_26_0= ruleTreeNode ) )
            // InternalQualityBtCppParser.g:6900:4: (lv_child_26_0= ruleTreeNode )
            {
            // InternalQualityBtCppParser.g:6900:4: (lv_child_26_0= ruleTreeNode )
            // InternalQualityBtCppParser.g:6901:5: lv_child_26_0= ruleTreeNode
            {

            					newCompositeNode(grammarAccess.getRepeatNodeAccess().getChildTreeNodeParserRuleCall_3_0());
            				
            pushFollow(FOLLOW_20);
            lv_child_26_0=ruleTreeNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getRepeatNodeRule());
            					}
            					set(
            						current,
            						"child",
            						lv_child_26_0,
            						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            this_END_27=(Token)match(input,RULE_END,FOLLOW_2); 

            			newLeafNode(this_END_27, grammarAccess.getRepeatNodeAccess().getENDTerminalRuleCall_4());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRepeatNode"


    // $ANTLR start "entryRuleSubTree"
    // InternalQualityBtCppParser.g:6926:1: entryRuleSubTree returns [EObject current=null] : iv_ruleSubTree= ruleSubTree EOF ;
    public final EObject entryRuleSubTree() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSubTree = null;


        try {
            // InternalQualityBtCppParser.g:6926:48: (iv_ruleSubTree= ruleSubTree EOF )
            // InternalQualityBtCppParser.g:6927:2: iv_ruleSubTree= ruleSubTree EOF
            {
             newCompositeNode(grammarAccess.getSubTreeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleSubTree=ruleSubTree();

            state._fsp--;

             current =iv_ruleSubTree; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSubTree"


    // $ANTLR start "ruleSubTree"
    // InternalQualityBtCppParser.g:6933:1: ruleSubTree returns [EObject current=null] : ( () otherlv_1= SubTree ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? (this_BEGIN_23= RULE_BEGIN ( (lv_child_24_0= ruleTreeNode ) ) ( (lv_child_25_0= ruleTreeNode ) )* this_END_26= RULE_END )? ) ;
    public final EObject ruleSubTree() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        Token this_BEGIN_23=null;
        Token this_END_26=null;
        AntlrDatatypeRuleToken lv_ID_6_0 = null;

        AntlrDatatypeRuleToken lv_name_9_0 = null;

        EObject lv_parameters_11_0 = null;

        EObject lv_parameters_13_0 = null;

        EObject lv_satisfices_15_0 = null;

        EObject lv_satisfices_17_0 = null;

        EObject lv_satisfies_19_0 = null;

        EObject lv_satisfies_21_0 = null;

        EObject lv_child_24_0 = null;

        EObject lv_child_25_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:6939:2: ( ( () otherlv_1= SubTree ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? (this_BEGIN_23= RULE_BEGIN ( (lv_child_24_0= ruleTreeNode ) ) ( (lv_child_25_0= ruleTreeNode ) )* this_END_26= RULE_END )? ) )
            // InternalQualityBtCppParser.g:6940:2: ( () otherlv_1= SubTree ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? (this_BEGIN_23= RULE_BEGIN ( (lv_child_24_0= ruleTreeNode ) ) ( (lv_child_25_0= ruleTreeNode ) )* this_END_26= RULE_END )? )
            {
            // InternalQualityBtCppParser.g:6940:2: ( () otherlv_1= SubTree ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? (this_BEGIN_23= RULE_BEGIN ( (lv_child_24_0= ruleTreeNode ) ) ( (lv_child_25_0= ruleTreeNode ) )* this_END_26= RULE_END )? )
            // InternalQualityBtCppParser.g:6941:3: () otherlv_1= SubTree ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? (this_BEGIN_23= RULE_BEGIN ( (lv_child_24_0= ruleTreeNode ) ) ( (lv_child_25_0= ruleTreeNode ) )* this_END_26= RULE_END )?
            {
            // InternalQualityBtCppParser.g:6941:3: ()
            // InternalQualityBtCppParser.g:6942:4: 
            {

            				current = forceCreateModelElement(
            					grammarAccess.getSubTreeAccess().getSubTreeAction_0(),
            					current);
            			

            }

            otherlv_1=(Token)match(input,SubTree,FOLLOW_23); 

            			newLeafNode(otherlv_1, grammarAccess.getSubTreeAccess().getSubTreeKeyword_1());
            		
            // InternalQualityBtCppParser.g:6952:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt108=2;
            int LA108_0 = input.LA(1);

            if ( ((LA108_0>=Parameters && LA108_0<=Satisfies)||LA108_0==Name||LA108_0==ID||(LA108_0>=LeftParenthesis && LA108_0<=RightParenthesis)) ) {
                alt108=1;
            }
            switch (alt108) {
                case 1 :
                    // InternalQualityBtCppParser.g:6953:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:6953:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:6954:5: ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getSubTreeAccess().getUnorderedGroup_2());
                    				
                    // InternalQualityBtCppParser.g:6957:5: ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:6958:6: ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:6958:6: ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+
                    int cnt107=0;
                    loop107:
                    do {
                        int alt107=8;
                        int LA107_0 = input.LA(1);

                        if ( LA107_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getSubTreeAccess().getUnorderedGroup_2(), 0) ) {
                            alt107=1;
                        }
                        else if ( LA107_0 == ID && getUnorderedGroupHelper().canSelect(grammarAccess.getSubTreeAccess().getUnorderedGroup_2(), 1) ) {
                            alt107=2;
                        }
                        else if ( LA107_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getSubTreeAccess().getUnorderedGroup_2(), 2) ) {
                            alt107=3;
                        }
                        else if ( LA107_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getSubTreeAccess().getUnorderedGroup_2(), 3) ) {
                            alt107=4;
                        }
                        else if ( LA107_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getSubTreeAccess().getUnorderedGroup_2(), 4) ) {
                            alt107=5;
                        }
                        else if ( LA107_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getSubTreeAccess().getUnorderedGroup_2(), 5) ) {
                            alt107=6;
                        }
                        else if ( LA107_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getSubTreeAccess().getUnorderedGroup_2(), 6) ) {
                            alt107=7;
                        }


                        switch (alt107) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:6959:4: ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:6959:4: ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:6960:5: {...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSubTreeAccess().getUnorderedGroup_2(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleSubTree", "getUnorderedGroupHelper().canSelect(grammarAccess.getSubTreeAccess().getUnorderedGroup_2(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:6960:104: ( ({...}? => (otherlv_3= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:6961:6: ({...}? => (otherlv_3= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSubTreeAccess().getUnorderedGroup_2(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:6964:9: ({...}? => (otherlv_3= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:6964:10: {...}? => (otherlv_3= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSubTree", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:6964:19: (otherlv_3= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:6964:20: otherlv_3= LeftParenthesis
                    	    {
                    	    otherlv_3=(Token)match(input,LeftParenthesis,FOLLOW_23); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getSubTreeAccess().getLeftParenthesisKeyword_2_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSubTreeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:6974:4: ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:6974:4: ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:6975:5: {...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSubTreeAccess().getUnorderedGroup_2(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleSubTree", "getUnorderedGroupHelper().canSelect(grammarAccess.getSubTreeAccess().getUnorderedGroup_2(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:6975:104: ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:6976:6: ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSubTreeAccess().getUnorderedGroup_2(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:6979:9: ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:6979:10: {...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSubTree", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:6979:19: (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:6979:20: otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) )
                    	    {
                    	    otherlv_4=(Token)match(input,ID,FOLLOW_8); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getSubTreeAccess().getIDKeyword_2_1_0());
                    	    								
                    	    otherlv_5=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_5, grammarAccess.getSubTreeAccess().getEqualsSignKeyword_2_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:6987:9: ( (lv_ID_6_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:6988:10: (lv_ID_6_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:6988:10: (lv_ID_6_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:6989:11: lv_ID_6_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getSubTreeAccess().getIDEStringParserRuleCall_2_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_23);
                    	    lv_ID_6_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getSubTreeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"ID",
                    	    												lv_ID_6_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSubTreeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:7012:4: ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:7012:4: ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:7013:5: {...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSubTreeAccess().getUnorderedGroup_2(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleSubTree", "getUnorderedGroupHelper().canSelect(grammarAccess.getSubTreeAccess().getUnorderedGroup_2(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:7013:104: ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:7014:6: ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSubTreeAccess().getUnorderedGroup_2(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:7017:9: ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:7017:10: {...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSubTree", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:7017:19: (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:7017:20: otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) )
                    	    {
                    	    otherlv_7=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_7, grammarAccess.getSubTreeAccess().getNameKeyword_2_2_0());
                    	    								
                    	    otherlv_8=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_8, grammarAccess.getSubTreeAccess().getEqualsSignKeyword_2_2_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:7025:9: ( (lv_name_9_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:7026:10: (lv_name_9_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:7026:10: (lv_name_9_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:7027:11: lv_name_9_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getSubTreeAccess().getNameEStringParserRuleCall_2_2_2_0());
                    	    										
                    	    pushFollow(FOLLOW_23);
                    	    lv_name_9_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getSubTreeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_9_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSubTreeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:7050:4: ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:7050:4: ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:7051:5: {...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSubTreeAccess().getUnorderedGroup_2(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleSubTree", "getUnorderedGroupHelper().canSelect(grammarAccess.getSubTreeAccess().getUnorderedGroup_2(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:7051:104: ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:7052:6: ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSubTreeAccess().getUnorderedGroup_2(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:7055:9: ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:7055:10: {...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSubTree", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:7055:19: (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:7055:20: otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_10=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_10, grammarAccess.getSubTreeAccess().getParametersKeyword_2_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:7059:9: ( (lv_parameters_11_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:7060:10: (lv_parameters_11_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:7060:10: (lv_parameters_11_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:7061:11: lv_parameters_11_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getSubTreeAccess().getParametersParameterParserRuleCall_2_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_24);
                    	    lv_parameters_11_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getSubTreeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_11_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:7078:9: (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )*
                    	    loop104:
                    	    do {
                    	        int alt104=2;
                    	        int LA104_0 = input.LA(1);

                    	        if ( (LA104_0==Comma) ) {
                    	            alt104=1;
                    	        }


                    	        switch (alt104) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:7079:10: otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_12=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_12, grammarAccess.getSubTreeAccess().getCommaKeyword_2_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:7083:10: ( (lv_parameters_13_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:7084:11: (lv_parameters_13_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:7084:11: (lv_parameters_13_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:7085:12: lv_parameters_13_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getSubTreeAccess().getParametersParameterParserRuleCall_2_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_24);
                    	    	    lv_parameters_13_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getSubTreeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_13_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop104;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSubTreeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:7109:4: ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:7109:4: ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:7110:5: {...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSubTreeAccess().getUnorderedGroup_2(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleSubTree", "getUnorderedGroupHelper().canSelect(grammarAccess.getSubTreeAccess().getUnorderedGroup_2(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:7110:104: ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:7111:6: ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSubTreeAccess().getUnorderedGroup_2(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:7114:9: ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:7114:10: {...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSubTree", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:7114:19: (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:7114:20: otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_14=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_14, grammarAccess.getSubTreeAccess().getSatisficesKeyword_2_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:7118:9: ( (lv_satisfices_15_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:7119:10: (lv_satisfices_15_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:7119:10: (lv_satisfices_15_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:7120:11: lv_satisfices_15_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getSubTreeAccess().getSatisficesQualityParserRuleCall_2_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_24);
                    	    lv_satisfices_15_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getSubTreeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_15_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:7137:9: (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )*
                    	    loop105:
                    	    do {
                    	        int alt105=2;
                    	        int LA105_0 = input.LA(1);

                    	        if ( (LA105_0==Comma) ) {
                    	            alt105=1;
                    	        }


                    	        switch (alt105) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:7138:10: otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_16=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_16, grammarAccess.getSubTreeAccess().getCommaKeyword_2_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:7142:10: ( (lv_satisfices_17_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:7143:11: (lv_satisfices_17_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:7143:11: (lv_satisfices_17_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:7144:12: lv_satisfices_17_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getSubTreeAccess().getSatisficesQualityParserRuleCall_2_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_24);
                    	    	    lv_satisfices_17_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getSubTreeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_17_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop105;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSubTreeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:7168:4: ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:7168:4: ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:7169:5: {...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSubTreeAccess().getUnorderedGroup_2(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleSubTree", "getUnorderedGroupHelper().canSelect(grammarAccess.getSubTreeAccess().getUnorderedGroup_2(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:7169:104: ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:7170:6: ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSubTreeAccess().getUnorderedGroup_2(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:7173:9: ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:7173:10: {...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSubTree", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:7173:19: (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:7173:20: otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_18=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_18, grammarAccess.getSubTreeAccess().getSatisfiesKeyword_2_5_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:7177:9: ( (lv_satisfies_19_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:7178:10: (lv_satisfies_19_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:7178:10: (lv_satisfies_19_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:7179:11: lv_satisfies_19_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getSubTreeAccess().getSatisfiesQualityRequirementParserRuleCall_2_5_1_0());
                    	    										
                    	    pushFollow(FOLLOW_24);
                    	    lv_satisfies_19_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getSubTreeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_19_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:7196:9: (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )*
                    	    loop106:
                    	    do {
                    	        int alt106=2;
                    	        int LA106_0 = input.LA(1);

                    	        if ( (LA106_0==Comma) ) {
                    	            alt106=1;
                    	        }


                    	        switch (alt106) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:7197:10: otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_20=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_20, grammarAccess.getSubTreeAccess().getCommaKeyword_2_5_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:7201:10: ( (lv_satisfies_21_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:7202:11: (lv_satisfies_21_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:7202:11: (lv_satisfies_21_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:7203:12: lv_satisfies_21_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getSubTreeAccess().getSatisfiesQualityRequirementParserRuleCall_2_5_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_24);
                    	    	    lv_satisfies_21_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getSubTreeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_21_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop106;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSubTreeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 7 :
                    	    // InternalQualityBtCppParser.g:7227:4: ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:7227:4: ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:7228:5: {...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSubTreeAccess().getUnorderedGroup_2(), 6) ) {
                    	        throw new FailedPredicateException(input, "ruleSubTree", "getUnorderedGroupHelper().canSelect(grammarAccess.getSubTreeAccess().getUnorderedGroup_2(), 6)");
                    	    }
                    	    // InternalQualityBtCppParser.g:7228:104: ( ({...}? => (otherlv_22= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:7229:6: ({...}? => (otherlv_22= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSubTreeAccess().getUnorderedGroup_2(), 6);
                    	    					
                    	    // InternalQualityBtCppParser.g:7232:9: ({...}? => (otherlv_22= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:7232:10: {...}? => (otherlv_22= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSubTree", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:7232:19: (otherlv_22= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:7232:20: otherlv_22= RightParenthesis
                    	    {
                    	    otherlv_22=(Token)match(input,RightParenthesis,FOLLOW_23); 

                    	    									newLeafNode(otherlv_22, grammarAccess.getSubTreeAccess().getRightParenthesisKeyword_2_6());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSubTreeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt107 >= 1 ) break loop107;
                                EarlyExitException eee =
                                    new EarlyExitException(107, input);
                                throw eee;
                        }
                        cnt107++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getSubTreeAccess().getUnorderedGroup_2()) ) {
                        throw new FailedPredicateException(input, "ruleSubTree", "getUnorderedGroupHelper().canLeave(grammarAccess.getSubTreeAccess().getUnorderedGroup_2())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getSubTreeAccess().getUnorderedGroup_2());
                    				

                    }
                    break;

            }

            // InternalQualityBtCppParser.g:7250:3: (this_BEGIN_23= RULE_BEGIN ( (lv_child_24_0= ruleTreeNode ) ) ( (lv_child_25_0= ruleTreeNode ) )* this_END_26= RULE_END )?
            int alt110=2;
            int LA110_0 = input.LA(1);

            if ( (LA110_0==RULE_BEGIN) ) {
                alt110=1;
            }
            switch (alt110) {
                case 1 :
                    // InternalQualityBtCppParser.g:7251:4: this_BEGIN_23= RULE_BEGIN ( (lv_child_24_0= ruleTreeNode ) ) ( (lv_child_25_0= ruleTreeNode ) )* this_END_26= RULE_END
                    {
                    this_BEGIN_23=(Token)match(input,RULE_BEGIN,FOLLOW_9); 

                    				newLeafNode(this_BEGIN_23, grammarAccess.getSubTreeAccess().getBEGINTerminalRuleCall_3_0());
                    			
                    // InternalQualityBtCppParser.g:7255:4: ( (lv_child_24_0= ruleTreeNode ) )
                    // InternalQualityBtCppParser.g:7256:5: (lv_child_24_0= ruleTreeNode )
                    {
                    // InternalQualityBtCppParser.g:7256:5: (lv_child_24_0= ruleTreeNode )
                    // InternalQualityBtCppParser.g:7257:6: lv_child_24_0= ruleTreeNode
                    {

                    						newCompositeNode(grammarAccess.getSubTreeAccess().getChildTreeNodeParserRuleCall_3_1_0());
                    					
                    pushFollow(FOLLOW_10);
                    lv_child_24_0=ruleTreeNode();

                    state._fsp--;


                    						if (current==null) {
                    							current = createModelElementForParent(grammarAccess.getSubTreeRule());
                    						}
                    						add(
                    							current,
                    							"child",
                    							lv_child_24_0,
                    							"org.xtext.btcpp.QualityBtCpp.TreeNode");
                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:7274:4: ( (lv_child_25_0= ruleTreeNode ) )*
                    loop109:
                    do {
                        int alt109=2;
                        int LA109_0 = input.LA(1);

                        if ( ((LA109_0>=KeepRunningUntilFailure && LA109_0<=SetBlackboard)||(LA109_0>=ConsumeQueue && LA109_0<=ScriptAction)||LA109_0==WhileDoElse||(LA109_0>=CoroAction && LA109_0<=IfThenElse)||LA109_0==Inverter||(LA109_0>=RunOnce && LA109_0<=Sleep)||LA109_0==Loop||LA109_0==Test||(LA109_0>=M && LA109_0<=HyphenMinusGreaterThanSign)||(LA109_0>=R && LA109_0<=VerticalLineVerticalLine)||LA109_0==QuestionMark) ) {
                            alt109=1;
                        }


                        switch (alt109) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:7275:5: (lv_child_25_0= ruleTreeNode )
                    	    {
                    	    // InternalQualityBtCppParser.g:7275:5: (lv_child_25_0= ruleTreeNode )
                    	    // InternalQualityBtCppParser.g:7276:6: lv_child_25_0= ruleTreeNode
                    	    {

                    	    						newCompositeNode(grammarAccess.getSubTreeAccess().getChildTreeNodeParserRuleCall_3_2_0());
                    	    					
                    	    pushFollow(FOLLOW_10);
                    	    lv_child_25_0=ruleTreeNode();

                    	    state._fsp--;


                    	    						if (current==null) {
                    	    							current = createModelElementForParent(grammarAccess.getSubTreeRule());
                    	    						}
                    	    						add(
                    	    							current,
                    	    							"child",
                    	    							lv_child_25_0,
                    	    							"org.xtext.btcpp.QualityBtCpp.TreeNode");
                    	    						afterParserOrEnumRuleCall();
                    	    					

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop109;
                        }
                    } while (true);

                    this_END_26=(Token)match(input,RULE_END,FOLLOW_2); 

                    				newLeafNode(this_END_26, grammarAccess.getSubTreeAccess().getENDTerminalRuleCall_3_3());
                    			

                    }
                    break;

            }


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSubTree"


    // $ANTLR start "entryRuleRetryNode"
    // InternalQualityBtCppParser.g:7302:1: entryRuleRetryNode returns [EObject current=null] : iv_ruleRetryNode= ruleRetryNode EOF ;
    public final EObject entryRuleRetryNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRetryNode = null;


        try {
            // InternalQualityBtCppParser.g:7302:50: (iv_ruleRetryNode= ruleRetryNode EOF )
            // InternalQualityBtCppParser.g:7303:2: iv_ruleRetryNode= ruleRetryNode EOF
            {
             newCompositeNode(grammarAccess.getRetryNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleRetryNode=ruleRetryNode();

            state._fsp--;

             current =iv_ruleRetryNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRetryNode"


    // $ANTLR start "ruleRetryNode"
    // InternalQualityBtCppParser.g:7309:1: ruleRetryNode returns [EObject current=null] : (otherlv_0= Retry ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Num_attempts otherlv_22= EqualsSign ( (lv_num_attempts_23_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_25= RULE_BEGIN ( (lv_child_26_0= ruleTreeNode ) ) this_END_27= RULE_END ) ;
    public final EObject ruleRetryNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token otherlv_22=null;
        Token otherlv_24=null;
        Token this_BEGIN_25=null;
        Token this_END_27=null;
        AntlrDatatypeRuleToken lv_ID_5_0 = null;

        AntlrDatatypeRuleToken lv_name_8_0 = null;

        EObject lv_parameters_10_0 = null;

        EObject lv_parameters_12_0 = null;

        EObject lv_satisfices_14_0 = null;

        EObject lv_satisfices_16_0 = null;

        EObject lv_satisfies_18_0 = null;

        EObject lv_satisfies_20_0 = null;

        AntlrDatatypeRuleToken lv_num_attempts_23_0 = null;

        EObject lv_child_26_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:7315:2: ( (otherlv_0= Retry ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Num_attempts otherlv_22= EqualsSign ( (lv_num_attempts_23_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_25= RULE_BEGIN ( (lv_child_26_0= ruleTreeNode ) ) this_END_27= RULE_END ) )
            // InternalQualityBtCppParser.g:7316:2: (otherlv_0= Retry ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Num_attempts otherlv_22= EqualsSign ( (lv_num_attempts_23_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_25= RULE_BEGIN ( (lv_child_26_0= ruleTreeNode ) ) this_END_27= RULE_END )
            {
            // InternalQualityBtCppParser.g:7316:2: (otherlv_0= Retry ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Num_attempts otherlv_22= EqualsSign ( (lv_num_attempts_23_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_25= RULE_BEGIN ( (lv_child_26_0= ruleTreeNode ) ) this_END_27= RULE_END )
            // InternalQualityBtCppParser.g:7317:3: otherlv_0= Retry ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Num_attempts otherlv_22= EqualsSign ( (lv_num_attempts_23_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_25= RULE_BEGIN ( (lv_child_26_0= ruleTreeNode ) ) this_END_27= RULE_END
            {
            otherlv_0=(Token)match(input,Retry,FOLLOW_25); 

            			newLeafNode(otherlv_0, grammarAccess.getRetryNodeAccess().getRetryKeyword_0());
            		
            // InternalQualityBtCppParser.g:7321:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Num_attempts otherlv_22= EqualsSign ( (lv_num_attempts_23_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt115=2;
            int LA115_0 = input.LA(1);

            if ( (LA115_0==Num_attempts||(LA115_0>=Parameters && LA115_0<=Satisfies)||LA115_0==Name||LA115_0==ID||(LA115_0>=LeftParenthesis && LA115_0<=RightParenthesis)) ) {
                alt115=1;
            }
            switch (alt115) {
                case 1 :
                    // InternalQualityBtCppParser.g:7322:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Num_attempts otherlv_22= EqualsSign ( (lv_num_attempts_23_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:7322:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Num_attempts otherlv_22= EqualsSign ( (lv_num_attempts_23_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:7323:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Num_attempts otherlv_22= EqualsSign ( (lv_num_attempts_23_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1());
                    				
                    // InternalQualityBtCppParser.g:7326:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Num_attempts otherlv_22= EqualsSign ( (lv_num_attempts_23_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:7327:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Num_attempts otherlv_22= EqualsSign ( (lv_num_attempts_23_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:7327:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Num_attempts otherlv_22= EqualsSign ( (lv_num_attempts_23_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+
                    int cnt114=0;
                    loop114:
                    do {
                        int alt114=9;
                        alt114 = dfa114.predict(input);
                        switch (alt114) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:7328:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:7328:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:7329:5: {...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleRetryNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:7329:106: ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:7330:6: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:7333:9: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:7333:10: {...}? => (otherlv_2= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleRetryNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:7333:19: (otherlv_2= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:7333:20: otherlv_2= LeftParenthesis
                    	    {
                    	    otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_25); 

                    	    									newLeafNode(otherlv_2, grammarAccess.getRetryNodeAccess().getLeftParenthesisKeyword_1_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:7343:4: ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:7343:4: ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:7344:5: {...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleRetryNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:7344:106: ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:7345:6: ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:7348:9: ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:7348:10: {...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleRetryNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:7348:19: (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:7348:20: otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) )
                    	    {
                    	    otherlv_3=(Token)match(input,ID,FOLLOW_8); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getRetryNodeAccess().getIDKeyword_1_1_0());
                    	    								
                    	    otherlv_4=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getRetryNodeAccess().getEqualsSignKeyword_1_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:7356:9: ( (lv_ID_5_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:7357:10: (lv_ID_5_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:7357:10: (lv_ID_5_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:7358:11: lv_ID_5_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getRetryNodeAccess().getIDEStringParserRuleCall_1_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_25);
                    	    lv_ID_5_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getRetryNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"ID",
                    	    												lv_ID_5_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:7381:4: ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:7381:4: ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:7382:5: {...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleRetryNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:7382:106: ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:7383:6: ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:7386:9: ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:7386:10: {...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleRetryNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:7386:19: (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:7386:20: otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) )
                    	    {
                    	    otherlv_6=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_6, grammarAccess.getRetryNodeAccess().getNameKeyword_1_2_0());
                    	    								
                    	    otherlv_7=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_7, grammarAccess.getRetryNodeAccess().getEqualsSignKeyword_1_2_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:7394:9: ( (lv_name_8_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:7395:10: (lv_name_8_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:7395:10: (lv_name_8_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:7396:11: lv_name_8_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getRetryNodeAccess().getNameEStringParserRuleCall_1_2_2_0());
                    	    										
                    	    pushFollow(FOLLOW_25);
                    	    lv_name_8_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getRetryNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_8_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:7419:4: ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:7419:4: ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:7420:5: {...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleRetryNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:7420:106: ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:7421:6: ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:7424:9: ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:7424:10: {...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleRetryNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:7424:19: (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:7424:20: otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_9=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_9, grammarAccess.getRetryNodeAccess().getParametersKeyword_1_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:7428:9: ( (lv_parameters_10_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:7429:10: (lv_parameters_10_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:7429:10: (lv_parameters_10_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:7430:11: lv_parameters_10_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getRetryNodeAccess().getParametersParameterParserRuleCall_1_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_26);
                    	    lv_parameters_10_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getRetryNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_10_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:7447:9: (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )*
                    	    loop111:
                    	    do {
                    	        int alt111=2;
                    	        int LA111_0 = input.LA(1);

                    	        if ( (LA111_0==Comma) ) {
                    	            alt111=1;
                    	        }


                    	        switch (alt111) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:7448:10: otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_11=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_11, grammarAccess.getRetryNodeAccess().getCommaKeyword_1_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:7452:10: ( (lv_parameters_12_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:7453:11: (lv_parameters_12_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:7453:11: (lv_parameters_12_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:7454:12: lv_parameters_12_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getRetryNodeAccess().getParametersParameterParserRuleCall_1_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_26);
                    	    	    lv_parameters_12_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getRetryNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_12_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop111;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:7478:4: ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:7478:4: ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:7479:5: {...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleRetryNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:7479:106: ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:7480:6: ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:7483:9: ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:7483:10: {...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleRetryNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:7483:19: (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:7483:20: otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_13=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_13, grammarAccess.getRetryNodeAccess().getSatisficesKeyword_1_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:7487:9: ( (lv_satisfices_14_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:7488:10: (lv_satisfices_14_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:7488:10: (lv_satisfices_14_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:7489:11: lv_satisfices_14_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getRetryNodeAccess().getSatisficesQualityParserRuleCall_1_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_26);
                    	    lv_satisfices_14_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getRetryNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_14_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:7506:9: (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )*
                    	    loop112:
                    	    do {
                    	        int alt112=2;
                    	        int LA112_0 = input.LA(1);

                    	        if ( (LA112_0==Comma) ) {
                    	            alt112=1;
                    	        }


                    	        switch (alt112) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:7507:10: otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_15=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_15, grammarAccess.getRetryNodeAccess().getCommaKeyword_1_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:7511:10: ( (lv_satisfices_16_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:7512:11: (lv_satisfices_16_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:7512:11: (lv_satisfices_16_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:7513:12: lv_satisfices_16_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getRetryNodeAccess().getSatisficesQualityParserRuleCall_1_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_26);
                    	    	    lv_satisfices_16_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getRetryNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_16_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop112;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:7537:4: ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:7537:4: ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:7538:5: {...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleRetryNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:7538:106: ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:7539:6: ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:7542:9: ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:7542:10: {...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleRetryNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:7542:19: (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:7542:20: otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_17=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_17, grammarAccess.getRetryNodeAccess().getSatisfiesKeyword_1_5_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:7546:9: ( (lv_satisfies_18_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:7547:10: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:7547:10: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:7548:11: lv_satisfies_18_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getRetryNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_5_1_0());
                    	    										
                    	    pushFollow(FOLLOW_26);
                    	    lv_satisfies_18_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getRetryNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_18_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:7565:9: (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )*
                    	    loop113:
                    	    do {
                    	        int alt113=2;
                    	        int LA113_0 = input.LA(1);

                    	        if ( (LA113_0==Comma) ) {
                    	            alt113=1;
                    	        }


                    	        switch (alt113) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:7566:10: otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_19=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_19, grammarAccess.getRetryNodeAccess().getCommaKeyword_1_5_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:7570:10: ( (lv_satisfies_20_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:7571:11: (lv_satisfies_20_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:7571:11: (lv_satisfies_20_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:7572:12: lv_satisfies_20_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getRetryNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_5_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_26);
                    	    	    lv_satisfies_20_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getRetryNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_20_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop113;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 7 :
                    	    // InternalQualityBtCppParser.g:7596:4: ({...}? => ( ({...}? => (otherlv_21= Num_attempts otherlv_22= EqualsSign ( (lv_num_attempts_23_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:7596:4: ({...}? => ( ({...}? => (otherlv_21= Num_attempts otherlv_22= EqualsSign ( (lv_num_attempts_23_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:7597:5: {...}? => ( ({...}? => (otherlv_21= Num_attempts otherlv_22= EqualsSign ( (lv_num_attempts_23_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1(), 6) ) {
                    	        throw new FailedPredicateException(input, "ruleRetryNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1(), 6)");
                    	    }
                    	    // InternalQualityBtCppParser.g:7597:106: ( ({...}? => (otherlv_21= Num_attempts otherlv_22= EqualsSign ( (lv_num_attempts_23_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:7598:6: ({...}? => (otherlv_21= Num_attempts otherlv_22= EqualsSign ( (lv_num_attempts_23_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1(), 6);
                    	    					
                    	    // InternalQualityBtCppParser.g:7601:9: ({...}? => (otherlv_21= Num_attempts otherlv_22= EqualsSign ( (lv_num_attempts_23_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:7601:10: {...}? => (otherlv_21= Num_attempts otherlv_22= EqualsSign ( (lv_num_attempts_23_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleRetryNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:7601:19: (otherlv_21= Num_attempts otherlv_22= EqualsSign ( (lv_num_attempts_23_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:7601:20: otherlv_21= Num_attempts otherlv_22= EqualsSign ( (lv_num_attempts_23_0= ruleEString ) )
                    	    {
                    	    otherlv_21=(Token)match(input,Num_attempts,FOLLOW_8); 

                    	    									newLeafNode(otherlv_21, grammarAccess.getRetryNodeAccess().getNum_attemptsKeyword_1_6_0());
                    	    								
                    	    otherlv_22=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_22, grammarAccess.getRetryNodeAccess().getEqualsSignKeyword_1_6_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:7609:9: ( (lv_num_attempts_23_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:7610:10: (lv_num_attempts_23_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:7610:10: (lv_num_attempts_23_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:7611:11: lv_num_attempts_23_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getRetryNodeAccess().getNum_attemptsEStringParserRuleCall_1_6_2_0());
                    	    										
                    	    pushFollow(FOLLOW_25);
                    	    lv_num_attempts_23_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getRetryNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"num_attempts",
                    	    												lv_num_attempts_23_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 8 :
                    	    // InternalQualityBtCppParser.g:7634:4: ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:7634:4: ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:7635:5: {...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1(), 7) ) {
                    	        throw new FailedPredicateException(input, "ruleRetryNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1(), 7)");
                    	    }
                    	    // InternalQualityBtCppParser.g:7635:106: ( ({...}? => (otherlv_24= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:7636:6: ({...}? => (otherlv_24= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1(), 7);
                    	    					
                    	    // InternalQualityBtCppParser.g:7639:9: ({...}? => (otherlv_24= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:7639:10: {...}? => (otherlv_24= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleRetryNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:7639:19: (otherlv_24= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:7639:20: otherlv_24= RightParenthesis
                    	    {
                    	    otherlv_24=(Token)match(input,RightParenthesis,FOLLOW_25); 

                    	    									newLeafNode(otherlv_24, grammarAccess.getRetryNodeAccess().getRightParenthesisKeyword_1_7());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt114 >= 1 ) break loop114;
                                EarlyExitException eee =
                                    new EarlyExitException(114, input);
                                throw eee;
                        }
                        cnt114++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1()) ) {
                        throw new FailedPredicateException(input, "ruleRetryNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1());
                    				

                    }
                    break;

            }

            this_BEGIN_25=(Token)match(input,RULE_BEGIN,FOLLOW_9); 

            			newLeafNode(this_BEGIN_25, grammarAccess.getRetryNodeAccess().getBEGINTerminalRuleCall_2());
            		
            // InternalQualityBtCppParser.g:7661:3: ( (lv_child_26_0= ruleTreeNode ) )
            // InternalQualityBtCppParser.g:7662:4: (lv_child_26_0= ruleTreeNode )
            {
            // InternalQualityBtCppParser.g:7662:4: (lv_child_26_0= ruleTreeNode )
            // InternalQualityBtCppParser.g:7663:5: lv_child_26_0= ruleTreeNode
            {

            					newCompositeNode(grammarAccess.getRetryNodeAccess().getChildTreeNodeParserRuleCall_3_0());
            				
            pushFollow(FOLLOW_20);
            lv_child_26_0=ruleTreeNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getRetryNodeRule());
            					}
            					set(
            						current,
            						"child",
            						lv_child_26_0,
            						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            this_END_27=(Token)match(input,RULE_END,FOLLOW_2); 

            			newLeafNode(this_END_27, grammarAccess.getRetryNodeAccess().getENDTerminalRuleCall_4());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRetryNode"


    // $ANTLR start "entryRuleParallelAllNode"
    // InternalQualityBtCppParser.g:7688:1: entryRuleParallelAllNode returns [EObject current=null] : iv_ruleParallelAllNode= ruleParallelAllNode EOF ;
    public final EObject entryRuleParallelAllNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParallelAllNode = null;


        try {
            // InternalQualityBtCppParser.g:7688:56: (iv_ruleParallelAllNode= ruleParallelAllNode EOF )
            // InternalQualityBtCppParser.g:7689:2: iv_ruleParallelAllNode= ruleParallelAllNode EOF
            {
             newCompositeNode(grammarAccess.getParallelAllNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleParallelAllNode=ruleParallelAllNode();

            state._fsp--;

             current =iv_ruleParallelAllNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleParallelAllNode"


    // $ANTLR start "ruleParallelAllNode"
    // InternalQualityBtCppParser.g:7695:1: ruleParallelAllNode returns [EObject current=null] : (otherlv_0= All ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END ) ;
    public final EObject ruleParallelAllNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token this_BEGIN_22=null;
        Token this_END_25=null;
        AntlrDatatypeRuleToken lv_ID_5_0 = null;

        AntlrDatatypeRuleToken lv_name_8_0 = null;

        EObject lv_parameters_10_0 = null;

        EObject lv_parameters_12_0 = null;

        EObject lv_satisfices_14_0 = null;

        EObject lv_satisfices_16_0 = null;

        EObject lv_satisfies_18_0 = null;

        EObject lv_satisfies_20_0 = null;

        EObject lv_child_23_0 = null;

        EObject lv_child_24_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:7701:2: ( (otherlv_0= All ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END ) )
            // InternalQualityBtCppParser.g:7702:2: (otherlv_0= All ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END )
            {
            // InternalQualityBtCppParser.g:7702:2: (otherlv_0= All ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END )
            // InternalQualityBtCppParser.g:7703:3: otherlv_0= All ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END
            {
            otherlv_0=(Token)match(input,All,FOLLOW_15); 

            			newLeafNode(otherlv_0, grammarAccess.getParallelAllNodeAccess().getAllKeyword_0());
            		
            // InternalQualityBtCppParser.g:7707:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt120=2;
            int LA120_0 = input.LA(1);

            if ( ((LA120_0>=Parameters && LA120_0<=Satisfies)||LA120_0==Name||LA120_0==ID||(LA120_0>=LeftParenthesis && LA120_0<=RightParenthesis)) ) {
                alt120=1;
            }
            switch (alt120) {
                case 1 :
                    // InternalQualityBtCppParser.g:7708:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:7708:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:7709:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1());
                    				
                    // InternalQualityBtCppParser.g:7712:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:7713:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:7713:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+
                    int cnt119=0;
                    loop119:
                    do {
                        int alt119=8;
                        int LA119_0 = input.LA(1);

                        if ( LA119_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1(), 0) ) {
                            alt119=1;
                        }
                        else if ( LA119_0 == ID && getUnorderedGroupHelper().canSelect(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1(), 1) ) {
                            alt119=2;
                        }
                        else if ( LA119_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1(), 2) ) {
                            alt119=3;
                        }
                        else if ( LA119_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1(), 3) ) {
                            alt119=4;
                        }
                        else if ( LA119_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1(), 4) ) {
                            alt119=5;
                        }
                        else if ( LA119_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1(), 5) ) {
                            alt119=6;
                        }
                        else if ( LA119_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1(), 6) ) {
                            alt119=7;
                        }


                        switch (alt119) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:7714:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:7714:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:7715:5: {...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleParallelAllNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:7715:112: ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:7716:6: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:7719:9: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:7719:10: {...}? => (otherlv_2= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleParallelAllNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:7719:19: (otherlv_2= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:7719:20: otherlv_2= LeftParenthesis
                    	    {
                    	    otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_2, grammarAccess.getParallelAllNodeAccess().getLeftParenthesisKeyword_1_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:7729:4: ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:7729:4: ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:7730:5: {...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleParallelAllNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:7730:112: ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:7731:6: ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:7734:9: ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:7734:10: {...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleParallelAllNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:7734:19: (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:7734:20: otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) )
                    	    {
                    	    otherlv_3=(Token)match(input,ID,FOLLOW_8); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getParallelAllNodeAccess().getIDKeyword_1_1_0());
                    	    								
                    	    otherlv_4=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getParallelAllNodeAccess().getEqualsSignKeyword_1_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:7742:9: ( (lv_ID_5_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:7743:10: (lv_ID_5_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:7743:10: (lv_ID_5_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:7744:11: lv_ID_5_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getParallelAllNodeAccess().getIDEStringParserRuleCall_1_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_15);
                    	    lv_ID_5_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getParallelAllNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"ID",
                    	    												lv_ID_5_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:7767:4: ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:7767:4: ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:7768:5: {...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleParallelAllNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:7768:112: ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:7769:6: ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:7772:9: ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:7772:10: {...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleParallelAllNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:7772:19: (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:7772:20: otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) )
                    	    {
                    	    otherlv_6=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_6, grammarAccess.getParallelAllNodeAccess().getNameKeyword_1_2_0());
                    	    								
                    	    otherlv_7=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_7, grammarAccess.getParallelAllNodeAccess().getEqualsSignKeyword_1_2_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:7780:9: ( (lv_name_8_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:7781:10: (lv_name_8_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:7781:10: (lv_name_8_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:7782:11: lv_name_8_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getParallelAllNodeAccess().getNameEStringParserRuleCall_1_2_2_0());
                    	    										
                    	    pushFollow(FOLLOW_15);
                    	    lv_name_8_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getParallelAllNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_8_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:7805:4: ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:7805:4: ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:7806:5: {...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleParallelAllNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:7806:112: ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:7807:6: ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:7810:9: ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:7810:10: {...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleParallelAllNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:7810:19: (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:7810:20: otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_9=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_9, grammarAccess.getParallelAllNodeAccess().getParametersKeyword_1_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:7814:9: ( (lv_parameters_10_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:7815:10: (lv_parameters_10_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:7815:10: (lv_parameters_10_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:7816:11: lv_parameters_10_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getParallelAllNodeAccess().getParametersParameterParserRuleCall_1_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_parameters_10_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getParallelAllNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_10_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:7833:9: (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )*
                    	    loop116:
                    	    do {
                    	        int alt116=2;
                    	        int LA116_0 = input.LA(1);

                    	        if ( (LA116_0==Comma) ) {
                    	            alt116=1;
                    	        }


                    	        switch (alt116) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:7834:10: otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_11=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_11, grammarAccess.getParallelAllNodeAccess().getCommaKeyword_1_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:7838:10: ( (lv_parameters_12_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:7839:11: (lv_parameters_12_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:7839:11: (lv_parameters_12_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:7840:12: lv_parameters_12_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getParallelAllNodeAccess().getParametersParameterParserRuleCall_1_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_parameters_12_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getParallelAllNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_12_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop116;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:7864:4: ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:7864:4: ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:7865:5: {...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleParallelAllNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:7865:112: ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:7866:6: ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:7869:9: ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:7869:10: {...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleParallelAllNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:7869:19: (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:7869:20: otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_13=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_13, grammarAccess.getParallelAllNodeAccess().getSatisficesKeyword_1_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:7873:9: ( (lv_satisfices_14_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:7874:10: (lv_satisfices_14_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:7874:10: (lv_satisfices_14_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:7875:11: lv_satisfices_14_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getParallelAllNodeAccess().getSatisficesQualityParserRuleCall_1_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfices_14_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getParallelAllNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_14_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:7892:9: (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )*
                    	    loop117:
                    	    do {
                    	        int alt117=2;
                    	        int LA117_0 = input.LA(1);

                    	        if ( (LA117_0==Comma) ) {
                    	            alt117=1;
                    	        }


                    	        switch (alt117) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:7893:10: otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_15=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_15, grammarAccess.getParallelAllNodeAccess().getCommaKeyword_1_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:7897:10: ( (lv_satisfices_16_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:7898:11: (lv_satisfices_16_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:7898:11: (lv_satisfices_16_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:7899:12: lv_satisfices_16_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getParallelAllNodeAccess().getSatisficesQualityParserRuleCall_1_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfices_16_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getParallelAllNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_16_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop117;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:7923:4: ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:7923:4: ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:7924:5: {...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleParallelAllNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:7924:112: ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:7925:6: ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:7928:9: ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:7928:10: {...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleParallelAllNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:7928:19: (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:7928:20: otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_17=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_17, grammarAccess.getParallelAllNodeAccess().getSatisfiesKeyword_1_5_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:7932:9: ( (lv_satisfies_18_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:7933:10: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:7933:10: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:7934:11: lv_satisfies_18_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getParallelAllNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_5_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfies_18_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getParallelAllNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_18_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:7951:9: (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )*
                    	    loop118:
                    	    do {
                    	        int alt118=2;
                    	        int LA118_0 = input.LA(1);

                    	        if ( (LA118_0==Comma) ) {
                    	            alt118=1;
                    	        }


                    	        switch (alt118) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:7952:10: otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_19=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_19, grammarAccess.getParallelAllNodeAccess().getCommaKeyword_1_5_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:7956:10: ( (lv_satisfies_20_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:7957:11: (lv_satisfies_20_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:7957:11: (lv_satisfies_20_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:7958:12: lv_satisfies_20_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getParallelAllNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_5_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfies_20_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getParallelAllNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_20_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop118;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 7 :
                    	    // InternalQualityBtCppParser.g:7982:4: ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:7982:4: ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:7983:5: {...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1(), 6) ) {
                    	        throw new FailedPredicateException(input, "ruleParallelAllNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1(), 6)");
                    	    }
                    	    // InternalQualityBtCppParser.g:7983:112: ( ({...}? => (otherlv_21= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:7984:6: ({...}? => (otherlv_21= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1(), 6);
                    	    					
                    	    // InternalQualityBtCppParser.g:7987:9: ({...}? => (otherlv_21= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:7987:10: {...}? => (otherlv_21= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleParallelAllNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:7987:19: (otherlv_21= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:7987:20: otherlv_21= RightParenthesis
                    	    {
                    	    otherlv_21=(Token)match(input,RightParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_21, grammarAccess.getParallelAllNodeAccess().getRightParenthesisKeyword_1_6());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt119 >= 1 ) break loop119;
                                EarlyExitException eee =
                                    new EarlyExitException(119, input);
                                throw eee;
                        }
                        cnt119++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1()) ) {
                        throw new FailedPredicateException(input, "ruleParallelAllNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1());
                    				

                    }
                    break;

            }

            this_BEGIN_22=(Token)match(input,RULE_BEGIN,FOLLOW_9); 

            			newLeafNode(this_BEGIN_22, grammarAccess.getParallelAllNodeAccess().getBEGINTerminalRuleCall_2());
            		
            // InternalQualityBtCppParser.g:8009:3: ( (lv_child_23_0= ruleTreeNode ) )
            // InternalQualityBtCppParser.g:8010:4: (lv_child_23_0= ruleTreeNode )
            {
            // InternalQualityBtCppParser.g:8010:4: (lv_child_23_0= ruleTreeNode )
            // InternalQualityBtCppParser.g:8011:5: lv_child_23_0= ruleTreeNode
            {

            					newCompositeNode(grammarAccess.getParallelAllNodeAccess().getChildTreeNodeParserRuleCall_3_0());
            				
            pushFollow(FOLLOW_10);
            lv_child_23_0=ruleTreeNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getParallelAllNodeRule());
            					}
            					add(
            						current,
            						"child",
            						lv_child_23_0,
            						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            // InternalQualityBtCppParser.g:8028:3: ( (lv_child_24_0= ruleTreeNode ) )*
            loop121:
            do {
                int alt121=2;
                int LA121_0 = input.LA(1);

                if ( ((LA121_0>=KeepRunningUntilFailure && LA121_0<=SetBlackboard)||(LA121_0>=ConsumeQueue && LA121_0<=ScriptAction)||LA121_0==WhileDoElse||(LA121_0>=CoroAction && LA121_0<=IfThenElse)||LA121_0==Inverter||(LA121_0>=RunOnce && LA121_0<=Sleep)||LA121_0==Loop||LA121_0==Test||(LA121_0>=M && LA121_0<=HyphenMinusGreaterThanSign)||(LA121_0>=R && LA121_0<=VerticalLineVerticalLine)||LA121_0==QuestionMark) ) {
                    alt121=1;
                }


                switch (alt121) {
            	case 1 :
            	    // InternalQualityBtCppParser.g:8029:4: (lv_child_24_0= ruleTreeNode )
            	    {
            	    // InternalQualityBtCppParser.g:8029:4: (lv_child_24_0= ruleTreeNode )
            	    // InternalQualityBtCppParser.g:8030:5: lv_child_24_0= ruleTreeNode
            	    {

            	    					newCompositeNode(grammarAccess.getParallelAllNodeAccess().getChildTreeNodeParserRuleCall_4_0());
            	    				
            	    pushFollow(FOLLOW_10);
            	    lv_child_24_0=ruleTreeNode();

            	    state._fsp--;


            	    					if (current==null) {
            	    						current = createModelElementForParent(grammarAccess.getParallelAllNodeRule());
            	    					}
            	    					add(
            	    						current,
            	    						"child",
            	    						lv_child_24_0,
            	    						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            	    					afterParserOrEnumRuleCall();
            	    				

            	    }


            	    }
            	    break;

            	default :
            	    break loop121;
                }
            } while (true);

            this_END_25=(Token)match(input,RULE_END,FOLLOW_2); 

            			newLeafNode(this_END_25, grammarAccess.getParallelAllNodeAccess().getENDTerminalRuleCall_5());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleParallelAllNode"


    // $ANTLR start "entryRuleDelayNode"
    // InternalQualityBtCppParser.g:8055:1: entryRuleDelayNode returns [EObject current=null] : iv_ruleDelayNode= ruleDelayNode EOF ;
    public final EObject entryRuleDelayNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDelayNode = null;


        try {
            // InternalQualityBtCppParser.g:8055:50: (iv_ruleDelayNode= ruleDelayNode EOF )
            // InternalQualityBtCppParser.g:8056:2: iv_ruleDelayNode= ruleDelayNode EOF
            {
             newCompositeNode(grammarAccess.getDelayNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleDelayNode=ruleDelayNode();

            state._fsp--;

             current =iv_ruleDelayNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDelayNode"


    // $ANTLR start "ruleDelayNode"
    // InternalQualityBtCppParser.g:8062:1: ruleDelayNode returns [EObject current=null] : (otherlv_0= Delay ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Delay_msec otherlv_10= EqualsSign ( (lv_delay_msec_11_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= Parameters ( (lv_parameters_13_0= ruleParameter ) ) (otherlv_14= Comma ( (lv_parameters_15_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= Satisfices ( (lv_satisfices_17_0= ruleQuality ) ) (otherlv_18= Comma ( (lv_satisfices_19_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Satisfies ( (lv_satisfies_21_0= ruleQualityRequirement ) ) (otherlv_22= Comma ( (lv_satisfies_23_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_25= RULE_BEGIN ( (lv_child_26_0= ruleTreeNode ) ) this_END_27= RULE_END ) ;
    public final EObject ruleDelayNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        Token otherlv_24=null;
        Token this_BEGIN_25=null;
        Token this_END_27=null;
        AntlrDatatypeRuleToken lv_ID_5_0 = null;

        AntlrDatatypeRuleToken lv_name_8_0 = null;

        AntlrDatatypeRuleToken lv_delay_msec_11_0 = null;

        EObject lv_parameters_13_0 = null;

        EObject lv_parameters_15_0 = null;

        EObject lv_satisfices_17_0 = null;

        EObject lv_satisfices_19_0 = null;

        EObject lv_satisfies_21_0 = null;

        EObject lv_satisfies_23_0 = null;

        EObject lv_child_26_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:8068:2: ( (otherlv_0= Delay ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Delay_msec otherlv_10= EqualsSign ( (lv_delay_msec_11_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= Parameters ( (lv_parameters_13_0= ruleParameter ) ) (otherlv_14= Comma ( (lv_parameters_15_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= Satisfices ( (lv_satisfices_17_0= ruleQuality ) ) (otherlv_18= Comma ( (lv_satisfices_19_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Satisfies ( (lv_satisfies_21_0= ruleQualityRequirement ) ) (otherlv_22= Comma ( (lv_satisfies_23_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_25= RULE_BEGIN ( (lv_child_26_0= ruleTreeNode ) ) this_END_27= RULE_END ) )
            // InternalQualityBtCppParser.g:8069:2: (otherlv_0= Delay ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Delay_msec otherlv_10= EqualsSign ( (lv_delay_msec_11_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= Parameters ( (lv_parameters_13_0= ruleParameter ) ) (otherlv_14= Comma ( (lv_parameters_15_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= Satisfices ( (lv_satisfices_17_0= ruleQuality ) ) (otherlv_18= Comma ( (lv_satisfices_19_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Satisfies ( (lv_satisfies_21_0= ruleQualityRequirement ) ) (otherlv_22= Comma ( (lv_satisfies_23_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_25= RULE_BEGIN ( (lv_child_26_0= ruleTreeNode ) ) this_END_27= RULE_END )
            {
            // InternalQualityBtCppParser.g:8069:2: (otherlv_0= Delay ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Delay_msec otherlv_10= EqualsSign ( (lv_delay_msec_11_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= Parameters ( (lv_parameters_13_0= ruleParameter ) ) (otherlv_14= Comma ( (lv_parameters_15_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= Satisfices ( (lv_satisfices_17_0= ruleQuality ) ) (otherlv_18= Comma ( (lv_satisfices_19_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Satisfies ( (lv_satisfies_21_0= ruleQualityRequirement ) ) (otherlv_22= Comma ( (lv_satisfies_23_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_25= RULE_BEGIN ( (lv_child_26_0= ruleTreeNode ) ) this_END_27= RULE_END )
            // InternalQualityBtCppParser.g:8070:3: otherlv_0= Delay ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Delay_msec otherlv_10= EqualsSign ( (lv_delay_msec_11_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= Parameters ( (lv_parameters_13_0= ruleParameter ) ) (otherlv_14= Comma ( (lv_parameters_15_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= Satisfices ( (lv_satisfices_17_0= ruleQuality ) ) (otherlv_18= Comma ( (lv_satisfices_19_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Satisfies ( (lv_satisfies_21_0= ruleQualityRequirement ) ) (otherlv_22= Comma ( (lv_satisfies_23_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_25= RULE_BEGIN ( (lv_child_26_0= ruleTreeNode ) ) this_END_27= RULE_END
            {
            otherlv_0=(Token)match(input,Delay,FOLLOW_27); 

            			newLeafNode(otherlv_0, grammarAccess.getDelayNodeAccess().getDelayKeyword_0());
            		
            // InternalQualityBtCppParser.g:8074:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Delay_msec otherlv_10= EqualsSign ( (lv_delay_msec_11_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= Parameters ( (lv_parameters_13_0= ruleParameter ) ) (otherlv_14= Comma ( (lv_parameters_15_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= Satisfices ( (lv_satisfices_17_0= ruleQuality ) ) (otherlv_18= Comma ( (lv_satisfices_19_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Satisfies ( (lv_satisfies_21_0= ruleQualityRequirement ) ) (otherlv_22= Comma ( (lv_satisfies_23_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt126=2;
            int LA126_0 = input.LA(1);

            if ( (LA126_0==Delay_msec||(LA126_0>=Parameters && LA126_0<=Satisfies)||LA126_0==Name||LA126_0==ID||(LA126_0>=LeftParenthesis && LA126_0<=RightParenthesis)) ) {
                alt126=1;
            }
            switch (alt126) {
                case 1 :
                    // InternalQualityBtCppParser.g:8075:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Delay_msec otherlv_10= EqualsSign ( (lv_delay_msec_11_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= Parameters ( (lv_parameters_13_0= ruleParameter ) ) (otherlv_14= Comma ( (lv_parameters_15_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= Satisfices ( (lv_satisfices_17_0= ruleQuality ) ) (otherlv_18= Comma ( (lv_satisfices_19_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Satisfies ( (lv_satisfies_21_0= ruleQualityRequirement ) ) (otherlv_22= Comma ( (lv_satisfies_23_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:8075:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Delay_msec otherlv_10= EqualsSign ( (lv_delay_msec_11_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= Parameters ( (lv_parameters_13_0= ruleParameter ) ) (otherlv_14= Comma ( (lv_parameters_15_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= Satisfices ( (lv_satisfices_17_0= ruleQuality ) ) (otherlv_18= Comma ( (lv_satisfices_19_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Satisfies ( (lv_satisfies_21_0= ruleQualityRequirement ) ) (otherlv_22= Comma ( (lv_satisfies_23_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:8076:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Delay_msec otherlv_10= EqualsSign ( (lv_delay_msec_11_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= Parameters ( (lv_parameters_13_0= ruleParameter ) ) (otherlv_14= Comma ( (lv_parameters_15_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= Satisfices ( (lv_satisfices_17_0= ruleQuality ) ) (otherlv_18= Comma ( (lv_satisfices_19_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Satisfies ( (lv_satisfies_21_0= ruleQualityRequirement ) ) (otherlv_22= Comma ( (lv_satisfies_23_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1());
                    				
                    // InternalQualityBtCppParser.g:8079:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Delay_msec otherlv_10= EqualsSign ( (lv_delay_msec_11_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= Parameters ( (lv_parameters_13_0= ruleParameter ) ) (otherlv_14= Comma ( (lv_parameters_15_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= Satisfices ( (lv_satisfices_17_0= ruleQuality ) ) (otherlv_18= Comma ( (lv_satisfices_19_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Satisfies ( (lv_satisfies_21_0= ruleQualityRequirement ) ) (otherlv_22= Comma ( (lv_satisfies_23_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:8080:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Delay_msec otherlv_10= EqualsSign ( (lv_delay_msec_11_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= Parameters ( (lv_parameters_13_0= ruleParameter ) ) (otherlv_14= Comma ( (lv_parameters_15_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= Satisfices ( (lv_satisfices_17_0= ruleQuality ) ) (otherlv_18= Comma ( (lv_satisfices_19_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Satisfies ( (lv_satisfies_21_0= ruleQualityRequirement ) ) (otherlv_22= Comma ( (lv_satisfies_23_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:8080:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Delay_msec otherlv_10= EqualsSign ( (lv_delay_msec_11_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= Parameters ( (lv_parameters_13_0= ruleParameter ) ) (otherlv_14= Comma ( (lv_parameters_15_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= Satisfices ( (lv_satisfices_17_0= ruleQuality ) ) (otherlv_18= Comma ( (lv_satisfices_19_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Satisfies ( (lv_satisfies_21_0= ruleQualityRequirement ) ) (otherlv_22= Comma ( (lv_satisfies_23_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+
                    int cnt125=0;
                    loop125:
                    do {
                        int alt125=9;
                        alt125 = dfa125.predict(input);
                        switch (alt125) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:8081:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:8081:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:8082:5: {...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleDelayNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:8082:106: ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:8083:6: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:8086:9: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:8086:10: {...}? => (otherlv_2= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleDelayNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:8086:19: (otherlv_2= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:8086:20: otherlv_2= LeftParenthesis
                    	    {
                    	    otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_27); 

                    	    									newLeafNode(otherlv_2, grammarAccess.getDelayNodeAccess().getLeftParenthesisKeyword_1_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:8096:4: ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:8096:4: ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:8097:5: {...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleDelayNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:8097:106: ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:8098:6: ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:8101:9: ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:8101:10: {...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleDelayNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:8101:19: (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:8101:20: otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) )
                    	    {
                    	    otherlv_3=(Token)match(input,ID,FOLLOW_8); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getDelayNodeAccess().getIDKeyword_1_1_0());
                    	    								
                    	    otherlv_4=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getDelayNodeAccess().getEqualsSignKeyword_1_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:8109:9: ( (lv_ID_5_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:8110:10: (lv_ID_5_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:8110:10: (lv_ID_5_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:8111:11: lv_ID_5_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getDelayNodeAccess().getIDEStringParserRuleCall_1_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_27);
                    	    lv_ID_5_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getDelayNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"ID",
                    	    												lv_ID_5_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:8134:4: ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:8134:4: ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:8135:5: {...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleDelayNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:8135:106: ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:8136:6: ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:8139:9: ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:8139:10: {...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleDelayNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:8139:19: (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:8139:20: otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) )
                    	    {
                    	    otherlv_6=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_6, grammarAccess.getDelayNodeAccess().getNameKeyword_1_2_0());
                    	    								
                    	    otherlv_7=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_7, grammarAccess.getDelayNodeAccess().getEqualsSignKeyword_1_2_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:8147:9: ( (lv_name_8_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:8148:10: (lv_name_8_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:8148:10: (lv_name_8_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:8149:11: lv_name_8_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getDelayNodeAccess().getNameEStringParserRuleCall_1_2_2_0());
                    	    										
                    	    pushFollow(FOLLOW_27);
                    	    lv_name_8_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getDelayNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_8_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:8172:4: ({...}? => ( ({...}? => (otherlv_9= Delay_msec otherlv_10= EqualsSign ( (lv_delay_msec_11_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:8172:4: ({...}? => ( ({...}? => (otherlv_9= Delay_msec otherlv_10= EqualsSign ( (lv_delay_msec_11_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:8173:5: {...}? => ( ({...}? => (otherlv_9= Delay_msec otherlv_10= EqualsSign ( (lv_delay_msec_11_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleDelayNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:8173:106: ( ({...}? => (otherlv_9= Delay_msec otherlv_10= EqualsSign ( (lv_delay_msec_11_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:8174:6: ({...}? => (otherlv_9= Delay_msec otherlv_10= EqualsSign ( (lv_delay_msec_11_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:8177:9: ({...}? => (otherlv_9= Delay_msec otherlv_10= EqualsSign ( (lv_delay_msec_11_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:8177:10: {...}? => (otherlv_9= Delay_msec otherlv_10= EqualsSign ( (lv_delay_msec_11_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleDelayNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:8177:19: (otherlv_9= Delay_msec otherlv_10= EqualsSign ( (lv_delay_msec_11_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:8177:20: otherlv_9= Delay_msec otherlv_10= EqualsSign ( (lv_delay_msec_11_0= ruleEString ) )
                    	    {
                    	    otherlv_9=(Token)match(input,Delay_msec,FOLLOW_8); 

                    	    									newLeafNode(otherlv_9, grammarAccess.getDelayNodeAccess().getDelay_msecKeyword_1_3_0());
                    	    								
                    	    otherlv_10=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_10, grammarAccess.getDelayNodeAccess().getEqualsSignKeyword_1_3_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:8185:9: ( (lv_delay_msec_11_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:8186:10: (lv_delay_msec_11_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:8186:10: (lv_delay_msec_11_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:8187:11: lv_delay_msec_11_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getDelayNodeAccess().getDelay_msecEStringParserRuleCall_1_3_2_0());
                    	    										
                    	    pushFollow(FOLLOW_27);
                    	    lv_delay_msec_11_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getDelayNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"delay_msec",
                    	    												lv_delay_msec_11_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:8210:4: ({...}? => ( ({...}? => (otherlv_12= Parameters ( (lv_parameters_13_0= ruleParameter ) ) (otherlv_14= Comma ( (lv_parameters_15_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:8210:4: ({...}? => ( ({...}? => (otherlv_12= Parameters ( (lv_parameters_13_0= ruleParameter ) ) (otherlv_14= Comma ( (lv_parameters_15_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:8211:5: {...}? => ( ({...}? => (otherlv_12= Parameters ( (lv_parameters_13_0= ruleParameter ) ) (otherlv_14= Comma ( (lv_parameters_15_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleDelayNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:8211:106: ( ({...}? => (otherlv_12= Parameters ( (lv_parameters_13_0= ruleParameter ) ) (otherlv_14= Comma ( (lv_parameters_15_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:8212:6: ({...}? => (otherlv_12= Parameters ( (lv_parameters_13_0= ruleParameter ) ) (otherlv_14= Comma ( (lv_parameters_15_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:8215:9: ({...}? => (otherlv_12= Parameters ( (lv_parameters_13_0= ruleParameter ) ) (otherlv_14= Comma ( (lv_parameters_15_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:8215:10: {...}? => (otherlv_12= Parameters ( (lv_parameters_13_0= ruleParameter ) ) (otherlv_14= Comma ( (lv_parameters_15_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleDelayNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:8215:19: (otherlv_12= Parameters ( (lv_parameters_13_0= ruleParameter ) ) (otherlv_14= Comma ( (lv_parameters_15_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:8215:20: otherlv_12= Parameters ( (lv_parameters_13_0= ruleParameter ) ) (otherlv_14= Comma ( (lv_parameters_15_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_12=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_12, grammarAccess.getDelayNodeAccess().getParametersKeyword_1_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:8219:9: ( (lv_parameters_13_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:8220:10: (lv_parameters_13_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:8220:10: (lv_parameters_13_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:8221:11: lv_parameters_13_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getDelayNodeAccess().getParametersParameterParserRuleCall_1_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_28);
                    	    lv_parameters_13_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getDelayNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_13_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:8238:9: (otherlv_14= Comma ( (lv_parameters_15_0= ruleParameter ) ) )*
                    	    loop122:
                    	    do {
                    	        int alt122=2;
                    	        int LA122_0 = input.LA(1);

                    	        if ( (LA122_0==Comma) ) {
                    	            alt122=1;
                    	        }


                    	        switch (alt122) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:8239:10: otherlv_14= Comma ( (lv_parameters_15_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_14=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_14, grammarAccess.getDelayNodeAccess().getCommaKeyword_1_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:8243:10: ( (lv_parameters_15_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:8244:11: (lv_parameters_15_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:8244:11: (lv_parameters_15_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:8245:12: lv_parameters_15_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getDelayNodeAccess().getParametersParameterParserRuleCall_1_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_28);
                    	    	    lv_parameters_15_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getDelayNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_15_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop122;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:8269:4: ({...}? => ( ({...}? => (otherlv_16= Satisfices ( (lv_satisfices_17_0= ruleQuality ) ) (otherlv_18= Comma ( (lv_satisfices_19_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:8269:4: ({...}? => ( ({...}? => (otherlv_16= Satisfices ( (lv_satisfices_17_0= ruleQuality ) ) (otherlv_18= Comma ( (lv_satisfices_19_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:8270:5: {...}? => ( ({...}? => (otherlv_16= Satisfices ( (lv_satisfices_17_0= ruleQuality ) ) (otherlv_18= Comma ( (lv_satisfices_19_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleDelayNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:8270:106: ( ({...}? => (otherlv_16= Satisfices ( (lv_satisfices_17_0= ruleQuality ) ) (otherlv_18= Comma ( (lv_satisfices_19_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:8271:6: ({...}? => (otherlv_16= Satisfices ( (lv_satisfices_17_0= ruleQuality ) ) (otherlv_18= Comma ( (lv_satisfices_19_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:8274:9: ({...}? => (otherlv_16= Satisfices ( (lv_satisfices_17_0= ruleQuality ) ) (otherlv_18= Comma ( (lv_satisfices_19_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:8274:10: {...}? => (otherlv_16= Satisfices ( (lv_satisfices_17_0= ruleQuality ) ) (otherlv_18= Comma ( (lv_satisfices_19_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleDelayNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:8274:19: (otherlv_16= Satisfices ( (lv_satisfices_17_0= ruleQuality ) ) (otherlv_18= Comma ( (lv_satisfices_19_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:8274:20: otherlv_16= Satisfices ( (lv_satisfices_17_0= ruleQuality ) ) (otherlv_18= Comma ( (lv_satisfices_19_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_16=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_16, grammarAccess.getDelayNodeAccess().getSatisficesKeyword_1_5_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:8278:9: ( (lv_satisfices_17_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:8279:10: (lv_satisfices_17_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:8279:10: (lv_satisfices_17_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:8280:11: lv_satisfices_17_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getDelayNodeAccess().getSatisficesQualityParserRuleCall_1_5_1_0());
                    	    										
                    	    pushFollow(FOLLOW_28);
                    	    lv_satisfices_17_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getDelayNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_17_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:8297:9: (otherlv_18= Comma ( (lv_satisfices_19_0= ruleQuality ) ) )*
                    	    loop123:
                    	    do {
                    	        int alt123=2;
                    	        int LA123_0 = input.LA(1);

                    	        if ( (LA123_0==Comma) ) {
                    	            alt123=1;
                    	        }


                    	        switch (alt123) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:8298:10: otherlv_18= Comma ( (lv_satisfices_19_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_18=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_18, grammarAccess.getDelayNodeAccess().getCommaKeyword_1_5_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:8302:10: ( (lv_satisfices_19_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:8303:11: (lv_satisfices_19_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:8303:11: (lv_satisfices_19_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:8304:12: lv_satisfices_19_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getDelayNodeAccess().getSatisficesQualityParserRuleCall_1_5_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_28);
                    	    	    lv_satisfices_19_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getDelayNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_19_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop123;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 7 :
                    	    // InternalQualityBtCppParser.g:8328:4: ({...}? => ( ({...}? => (otherlv_20= Satisfies ( (lv_satisfies_21_0= ruleQualityRequirement ) ) (otherlv_22= Comma ( (lv_satisfies_23_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:8328:4: ({...}? => ( ({...}? => (otherlv_20= Satisfies ( (lv_satisfies_21_0= ruleQualityRequirement ) ) (otherlv_22= Comma ( (lv_satisfies_23_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:8329:5: {...}? => ( ({...}? => (otherlv_20= Satisfies ( (lv_satisfies_21_0= ruleQualityRequirement ) ) (otherlv_22= Comma ( (lv_satisfies_23_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1(), 6) ) {
                    	        throw new FailedPredicateException(input, "ruleDelayNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1(), 6)");
                    	    }
                    	    // InternalQualityBtCppParser.g:8329:106: ( ({...}? => (otherlv_20= Satisfies ( (lv_satisfies_21_0= ruleQualityRequirement ) ) (otherlv_22= Comma ( (lv_satisfies_23_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:8330:6: ({...}? => (otherlv_20= Satisfies ( (lv_satisfies_21_0= ruleQualityRequirement ) ) (otherlv_22= Comma ( (lv_satisfies_23_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1(), 6);
                    	    					
                    	    // InternalQualityBtCppParser.g:8333:9: ({...}? => (otherlv_20= Satisfies ( (lv_satisfies_21_0= ruleQualityRequirement ) ) (otherlv_22= Comma ( (lv_satisfies_23_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:8333:10: {...}? => (otherlv_20= Satisfies ( (lv_satisfies_21_0= ruleQualityRequirement ) ) (otherlv_22= Comma ( (lv_satisfies_23_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleDelayNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:8333:19: (otherlv_20= Satisfies ( (lv_satisfies_21_0= ruleQualityRequirement ) ) (otherlv_22= Comma ( (lv_satisfies_23_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:8333:20: otherlv_20= Satisfies ( (lv_satisfies_21_0= ruleQualityRequirement ) ) (otherlv_22= Comma ( (lv_satisfies_23_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_20=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_20, grammarAccess.getDelayNodeAccess().getSatisfiesKeyword_1_6_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:8337:9: ( (lv_satisfies_21_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:8338:10: (lv_satisfies_21_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:8338:10: (lv_satisfies_21_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:8339:11: lv_satisfies_21_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getDelayNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_6_1_0());
                    	    										
                    	    pushFollow(FOLLOW_28);
                    	    lv_satisfies_21_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getDelayNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_21_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:8356:9: (otherlv_22= Comma ( (lv_satisfies_23_0= ruleQualityRequirement ) ) )*
                    	    loop124:
                    	    do {
                    	        int alt124=2;
                    	        int LA124_0 = input.LA(1);

                    	        if ( (LA124_0==Comma) ) {
                    	            alt124=1;
                    	        }


                    	        switch (alt124) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:8357:10: otherlv_22= Comma ( (lv_satisfies_23_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_22=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_22, grammarAccess.getDelayNodeAccess().getCommaKeyword_1_6_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:8361:10: ( (lv_satisfies_23_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:8362:11: (lv_satisfies_23_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:8362:11: (lv_satisfies_23_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:8363:12: lv_satisfies_23_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getDelayNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_6_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_28);
                    	    	    lv_satisfies_23_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getDelayNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_23_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop124;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 8 :
                    	    // InternalQualityBtCppParser.g:8387:4: ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:8387:4: ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:8388:5: {...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1(), 7) ) {
                    	        throw new FailedPredicateException(input, "ruleDelayNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1(), 7)");
                    	    }
                    	    // InternalQualityBtCppParser.g:8388:106: ( ({...}? => (otherlv_24= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:8389:6: ({...}? => (otherlv_24= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1(), 7);
                    	    					
                    	    // InternalQualityBtCppParser.g:8392:9: ({...}? => (otherlv_24= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:8392:10: {...}? => (otherlv_24= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleDelayNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:8392:19: (otherlv_24= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:8392:20: otherlv_24= RightParenthesis
                    	    {
                    	    otherlv_24=(Token)match(input,RightParenthesis,FOLLOW_27); 

                    	    									newLeafNode(otherlv_24, grammarAccess.getDelayNodeAccess().getRightParenthesisKeyword_1_7());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt125 >= 1 ) break loop125;
                                EarlyExitException eee =
                                    new EarlyExitException(125, input);
                                throw eee;
                        }
                        cnt125++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1()) ) {
                        throw new FailedPredicateException(input, "ruleDelayNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1());
                    				

                    }
                    break;

            }

            this_BEGIN_25=(Token)match(input,RULE_BEGIN,FOLLOW_9); 

            			newLeafNode(this_BEGIN_25, grammarAccess.getDelayNodeAccess().getBEGINTerminalRuleCall_2());
            		
            // InternalQualityBtCppParser.g:8414:3: ( (lv_child_26_0= ruleTreeNode ) )
            // InternalQualityBtCppParser.g:8415:4: (lv_child_26_0= ruleTreeNode )
            {
            // InternalQualityBtCppParser.g:8415:4: (lv_child_26_0= ruleTreeNode )
            // InternalQualityBtCppParser.g:8416:5: lv_child_26_0= ruleTreeNode
            {

            					newCompositeNode(grammarAccess.getDelayNodeAccess().getChildTreeNodeParserRuleCall_3_0());
            				
            pushFollow(FOLLOW_20);
            lv_child_26_0=ruleTreeNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getDelayNodeRule());
            					}
            					set(
            						current,
            						"child",
            						lv_child_26_0,
            						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            this_END_27=(Token)match(input,RULE_END,FOLLOW_2); 

            			newLeafNode(this_END_27, grammarAccess.getDelayNodeAccess().getENDTerminalRuleCall_4());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDelayNode"


    // $ANTLR start "entryRulePreconditionNode"
    // InternalQualityBtCppParser.g:8441:1: entryRulePreconditionNode returns [EObject current=null] : iv_rulePreconditionNode= rulePreconditionNode EOF ;
    public final EObject entryRulePreconditionNode() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePreconditionNode = null;


        try {
            // InternalQualityBtCppParser.g:8441:57: (iv_rulePreconditionNode= rulePreconditionNode EOF )
            // InternalQualityBtCppParser.g:8442:2: iv_rulePreconditionNode= rulePreconditionNode EOF
            {
             newCompositeNode(grammarAccess.getPreconditionNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_rulePreconditionNode=rulePreconditionNode();

            state._fsp--;

             current =iv_rulePreconditionNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePreconditionNode"


    // $ANTLR start "rulePreconditionNode"
    // InternalQualityBtCppParser.g:8448:1: rulePreconditionNode returns [EObject current=null] : (otherlv_0= Precondition ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END ) ;
    public final EObject rulePreconditionNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token this_BEGIN_22=null;
        Token this_END_24=null;
        AntlrDatatypeRuleToken lv_ID_5_0 = null;

        AntlrDatatypeRuleToken lv_name_8_0 = null;

        EObject lv_parameters_10_0 = null;

        EObject lv_parameters_12_0 = null;

        EObject lv_satisfices_14_0 = null;

        EObject lv_satisfices_16_0 = null;

        EObject lv_satisfies_18_0 = null;

        EObject lv_satisfies_20_0 = null;

        EObject lv_child_23_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:8454:2: ( (otherlv_0= Precondition ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END ) )
            // InternalQualityBtCppParser.g:8455:2: (otherlv_0= Precondition ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END )
            {
            // InternalQualityBtCppParser.g:8455:2: (otherlv_0= Precondition ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END )
            // InternalQualityBtCppParser.g:8456:3: otherlv_0= Precondition ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END
            {
            otherlv_0=(Token)match(input,Precondition,FOLLOW_15); 

            			newLeafNode(otherlv_0, grammarAccess.getPreconditionNodeAccess().getPreconditionKeyword_0());
            		
            // InternalQualityBtCppParser.g:8460:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt131=2;
            int LA131_0 = input.LA(1);

            if ( ((LA131_0>=Parameters && LA131_0<=Satisfies)||LA131_0==Name||LA131_0==ID||(LA131_0>=LeftParenthesis && LA131_0<=RightParenthesis)) ) {
                alt131=1;
            }
            switch (alt131) {
                case 1 :
                    // InternalQualityBtCppParser.g:8461:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:8461:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:8462:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1());
                    				
                    // InternalQualityBtCppParser.g:8465:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:8466:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:8466:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+
                    int cnt130=0;
                    loop130:
                    do {
                        int alt130=8;
                        int LA130_0 = input.LA(1);

                        if ( LA130_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1(), 0) ) {
                            alt130=1;
                        }
                        else if ( LA130_0 == ID && getUnorderedGroupHelper().canSelect(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1(), 1) ) {
                            alt130=2;
                        }
                        else if ( LA130_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1(), 2) ) {
                            alt130=3;
                        }
                        else if ( LA130_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1(), 3) ) {
                            alt130=4;
                        }
                        else if ( LA130_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1(), 4) ) {
                            alt130=5;
                        }
                        else if ( LA130_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1(), 5) ) {
                            alt130=6;
                        }
                        else if ( LA130_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1(), 6) ) {
                            alt130=7;
                        }


                        switch (alt130) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:8467:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:8467:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:8468:5: {...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1(), 0) ) {
                    	        throw new FailedPredicateException(input, "rulePreconditionNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:8468:113: ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:8469:6: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:8472:9: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:8472:10: {...}? => (otherlv_2= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "rulePreconditionNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:8472:19: (otherlv_2= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:8472:20: otherlv_2= LeftParenthesis
                    	    {
                    	    otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_2, grammarAccess.getPreconditionNodeAccess().getLeftParenthesisKeyword_1_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:8482:4: ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:8482:4: ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:8483:5: {...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1(), 1) ) {
                    	        throw new FailedPredicateException(input, "rulePreconditionNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:8483:113: ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:8484:6: ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:8487:9: ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:8487:10: {...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "rulePreconditionNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:8487:19: (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:8487:20: otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) )
                    	    {
                    	    otherlv_3=(Token)match(input,ID,FOLLOW_8); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getPreconditionNodeAccess().getIDKeyword_1_1_0());
                    	    								
                    	    otherlv_4=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getPreconditionNodeAccess().getEqualsSignKeyword_1_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:8495:9: ( (lv_ID_5_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:8496:10: (lv_ID_5_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:8496:10: (lv_ID_5_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:8497:11: lv_ID_5_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getPreconditionNodeAccess().getIDEStringParserRuleCall_1_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_15);
                    	    lv_ID_5_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getPreconditionNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"ID",
                    	    												lv_ID_5_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:8520:4: ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:8520:4: ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:8521:5: {...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1(), 2) ) {
                    	        throw new FailedPredicateException(input, "rulePreconditionNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:8521:113: ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:8522:6: ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:8525:9: ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:8525:10: {...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "rulePreconditionNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:8525:19: (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:8525:20: otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) )
                    	    {
                    	    otherlv_6=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_6, grammarAccess.getPreconditionNodeAccess().getNameKeyword_1_2_0());
                    	    								
                    	    otherlv_7=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_7, grammarAccess.getPreconditionNodeAccess().getEqualsSignKeyword_1_2_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:8533:9: ( (lv_name_8_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:8534:10: (lv_name_8_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:8534:10: (lv_name_8_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:8535:11: lv_name_8_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getPreconditionNodeAccess().getNameEStringParserRuleCall_1_2_2_0());
                    	    										
                    	    pushFollow(FOLLOW_15);
                    	    lv_name_8_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getPreconditionNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_8_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:8558:4: ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:8558:4: ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:8559:5: {...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1(), 3) ) {
                    	        throw new FailedPredicateException(input, "rulePreconditionNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:8559:113: ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:8560:6: ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:8563:9: ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:8563:10: {...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "rulePreconditionNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:8563:19: (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:8563:20: otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_9=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_9, grammarAccess.getPreconditionNodeAccess().getParametersKeyword_1_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:8567:9: ( (lv_parameters_10_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:8568:10: (lv_parameters_10_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:8568:10: (lv_parameters_10_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:8569:11: lv_parameters_10_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getPreconditionNodeAccess().getParametersParameterParserRuleCall_1_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_parameters_10_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getPreconditionNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_10_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:8586:9: (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )*
                    	    loop127:
                    	    do {
                    	        int alt127=2;
                    	        int LA127_0 = input.LA(1);

                    	        if ( (LA127_0==Comma) ) {
                    	            alt127=1;
                    	        }


                    	        switch (alt127) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:8587:10: otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_11=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_11, grammarAccess.getPreconditionNodeAccess().getCommaKeyword_1_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:8591:10: ( (lv_parameters_12_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:8592:11: (lv_parameters_12_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:8592:11: (lv_parameters_12_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:8593:12: lv_parameters_12_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getPreconditionNodeAccess().getParametersParameterParserRuleCall_1_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_parameters_12_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getPreconditionNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_12_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop127;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:8617:4: ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:8617:4: ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:8618:5: {...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1(), 4) ) {
                    	        throw new FailedPredicateException(input, "rulePreconditionNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:8618:113: ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:8619:6: ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:8622:9: ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:8622:10: {...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "rulePreconditionNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:8622:19: (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:8622:20: otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_13=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_13, grammarAccess.getPreconditionNodeAccess().getSatisficesKeyword_1_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:8626:9: ( (lv_satisfices_14_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:8627:10: (lv_satisfices_14_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:8627:10: (lv_satisfices_14_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:8628:11: lv_satisfices_14_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getPreconditionNodeAccess().getSatisficesQualityParserRuleCall_1_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfices_14_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getPreconditionNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_14_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:8645:9: (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )*
                    	    loop128:
                    	    do {
                    	        int alt128=2;
                    	        int LA128_0 = input.LA(1);

                    	        if ( (LA128_0==Comma) ) {
                    	            alt128=1;
                    	        }


                    	        switch (alt128) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:8646:10: otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_15=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_15, grammarAccess.getPreconditionNodeAccess().getCommaKeyword_1_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:8650:10: ( (lv_satisfices_16_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:8651:11: (lv_satisfices_16_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:8651:11: (lv_satisfices_16_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:8652:12: lv_satisfices_16_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getPreconditionNodeAccess().getSatisficesQualityParserRuleCall_1_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfices_16_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getPreconditionNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_16_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop128;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:8676:4: ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:8676:4: ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:8677:5: {...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1(), 5) ) {
                    	        throw new FailedPredicateException(input, "rulePreconditionNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:8677:113: ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:8678:6: ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:8681:9: ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:8681:10: {...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "rulePreconditionNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:8681:19: (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:8681:20: otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_17=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_17, grammarAccess.getPreconditionNodeAccess().getSatisfiesKeyword_1_5_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:8685:9: ( (lv_satisfies_18_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:8686:10: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:8686:10: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:8687:11: lv_satisfies_18_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getPreconditionNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_5_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfies_18_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getPreconditionNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_18_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:8704:9: (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )*
                    	    loop129:
                    	    do {
                    	        int alt129=2;
                    	        int LA129_0 = input.LA(1);

                    	        if ( (LA129_0==Comma) ) {
                    	            alt129=1;
                    	        }


                    	        switch (alt129) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:8705:10: otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_19=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_19, grammarAccess.getPreconditionNodeAccess().getCommaKeyword_1_5_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:8709:10: ( (lv_satisfies_20_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:8710:11: (lv_satisfies_20_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:8710:11: (lv_satisfies_20_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:8711:12: lv_satisfies_20_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getPreconditionNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_5_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfies_20_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getPreconditionNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_20_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop129;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 7 :
                    	    // InternalQualityBtCppParser.g:8735:4: ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:8735:4: ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:8736:5: {...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1(), 6) ) {
                    	        throw new FailedPredicateException(input, "rulePreconditionNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1(), 6)");
                    	    }
                    	    // InternalQualityBtCppParser.g:8736:113: ( ({...}? => (otherlv_21= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:8737:6: ({...}? => (otherlv_21= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1(), 6);
                    	    					
                    	    // InternalQualityBtCppParser.g:8740:9: ({...}? => (otherlv_21= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:8740:10: {...}? => (otherlv_21= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "rulePreconditionNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:8740:19: (otherlv_21= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:8740:20: otherlv_21= RightParenthesis
                    	    {
                    	    otherlv_21=(Token)match(input,RightParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_21, grammarAccess.getPreconditionNodeAccess().getRightParenthesisKeyword_1_6());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt130 >= 1 ) break loop130;
                                EarlyExitException eee =
                                    new EarlyExitException(130, input);
                                throw eee;
                        }
                        cnt130++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1()) ) {
                        throw new FailedPredicateException(input, "rulePreconditionNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1());
                    				

                    }
                    break;

            }

            this_BEGIN_22=(Token)match(input,RULE_BEGIN,FOLLOW_9); 

            			newLeafNode(this_BEGIN_22, grammarAccess.getPreconditionNodeAccess().getBEGINTerminalRuleCall_2());
            		
            // InternalQualityBtCppParser.g:8762:3: ( (lv_child_23_0= ruleTreeNode ) )
            // InternalQualityBtCppParser.g:8763:4: (lv_child_23_0= ruleTreeNode )
            {
            // InternalQualityBtCppParser.g:8763:4: (lv_child_23_0= ruleTreeNode )
            // InternalQualityBtCppParser.g:8764:5: lv_child_23_0= ruleTreeNode
            {

            					newCompositeNode(grammarAccess.getPreconditionNodeAccess().getChildTreeNodeParserRuleCall_3_0());
            				
            pushFollow(FOLLOW_20);
            lv_child_23_0=ruleTreeNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getPreconditionNodeRule());
            					}
            					set(
            						current,
            						"child",
            						lv_child_23_0,
            						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            this_END_24=(Token)match(input,RULE_END,FOLLOW_2); 

            			newLeafNode(this_END_24, grammarAccess.getPreconditionNodeAccess().getENDTerminalRuleCall_4());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePreconditionNode"


    // $ANTLR start "entryRuleEntryUpdatedDecoratorNode"
    // InternalQualityBtCppParser.g:8789:1: entryRuleEntryUpdatedDecoratorNode returns [EObject current=null] : iv_ruleEntryUpdatedDecoratorNode= ruleEntryUpdatedDecoratorNode EOF ;
    public final EObject entryRuleEntryUpdatedDecoratorNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEntryUpdatedDecoratorNode = null;


        try {
            // InternalQualityBtCppParser.g:8789:66: (iv_ruleEntryUpdatedDecoratorNode= ruleEntryUpdatedDecoratorNode EOF )
            // InternalQualityBtCppParser.g:8790:2: iv_ruleEntryUpdatedDecoratorNode= ruleEntryUpdatedDecoratorNode EOF
            {
             newCompositeNode(grammarAccess.getEntryUpdatedDecoratorNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleEntryUpdatedDecoratorNode=ruleEntryUpdatedDecoratorNode();

            state._fsp--;

             current =iv_ruleEntryUpdatedDecoratorNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEntryUpdatedDecoratorNode"


    // $ANTLR start "ruleEntryUpdatedDecoratorNode"
    // InternalQualityBtCppParser.g:8796:1: ruleEntryUpdatedDecoratorNode returns [EObject current=null] : (otherlv_0= EntryUpdatedDecorator ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END ) ;
    public final EObject ruleEntryUpdatedDecoratorNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token this_BEGIN_22=null;
        Token this_END_24=null;
        AntlrDatatypeRuleToken lv_ID_5_0 = null;

        AntlrDatatypeRuleToken lv_name_8_0 = null;

        EObject lv_parameters_10_0 = null;

        EObject lv_parameters_12_0 = null;

        EObject lv_satisfices_14_0 = null;

        EObject lv_satisfices_16_0 = null;

        EObject lv_satisfies_18_0 = null;

        EObject lv_satisfies_20_0 = null;

        EObject lv_child_23_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:8802:2: ( (otherlv_0= EntryUpdatedDecorator ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END ) )
            // InternalQualityBtCppParser.g:8803:2: (otherlv_0= EntryUpdatedDecorator ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END )
            {
            // InternalQualityBtCppParser.g:8803:2: (otherlv_0= EntryUpdatedDecorator ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END )
            // InternalQualityBtCppParser.g:8804:3: otherlv_0= EntryUpdatedDecorator ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END
            {
            otherlv_0=(Token)match(input,EntryUpdatedDecorator,FOLLOW_15); 

            			newLeafNode(otherlv_0, grammarAccess.getEntryUpdatedDecoratorNodeAccess().getEntryUpdatedDecoratorKeyword_0());
            		
            // InternalQualityBtCppParser.g:8808:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt136=2;
            int LA136_0 = input.LA(1);

            if ( ((LA136_0>=Parameters && LA136_0<=Satisfies)||LA136_0==Name||LA136_0==ID||(LA136_0>=LeftParenthesis && LA136_0<=RightParenthesis)) ) {
                alt136=1;
            }
            switch (alt136) {
                case 1 :
                    // InternalQualityBtCppParser.g:8809:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:8809:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:8810:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1());
                    				
                    // InternalQualityBtCppParser.g:8813:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:8814:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:8814:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+
                    int cnt135=0;
                    loop135:
                    do {
                        int alt135=8;
                        int LA135_0 = input.LA(1);

                        if ( LA135_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1(), 0) ) {
                            alt135=1;
                        }
                        else if ( LA135_0 == ID && getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1(), 1) ) {
                            alt135=2;
                        }
                        else if ( LA135_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1(), 2) ) {
                            alt135=3;
                        }
                        else if ( LA135_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1(), 3) ) {
                            alt135=4;
                        }
                        else if ( LA135_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1(), 4) ) {
                            alt135=5;
                        }
                        else if ( LA135_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1(), 5) ) {
                            alt135=6;
                        }
                        else if ( LA135_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1(), 6) ) {
                            alt135=7;
                        }


                        switch (alt135) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:8815:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:8815:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:8816:5: {...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleEntryUpdatedDecoratorNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:8816:122: ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:8817:6: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:8820:9: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:8820:10: {...}? => (otherlv_2= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleEntryUpdatedDecoratorNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:8820:19: (otherlv_2= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:8820:20: otherlv_2= LeftParenthesis
                    	    {
                    	    otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_2, grammarAccess.getEntryUpdatedDecoratorNodeAccess().getLeftParenthesisKeyword_1_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:8830:4: ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:8830:4: ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:8831:5: {...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleEntryUpdatedDecoratorNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:8831:122: ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:8832:6: ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:8835:9: ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:8835:10: {...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleEntryUpdatedDecoratorNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:8835:19: (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:8835:20: otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) )
                    	    {
                    	    otherlv_3=(Token)match(input,ID,FOLLOW_8); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getEntryUpdatedDecoratorNodeAccess().getIDKeyword_1_1_0());
                    	    								
                    	    otherlv_4=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getEntryUpdatedDecoratorNodeAccess().getEqualsSignKeyword_1_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:8843:9: ( (lv_ID_5_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:8844:10: (lv_ID_5_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:8844:10: (lv_ID_5_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:8845:11: lv_ID_5_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getIDEStringParserRuleCall_1_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_15);
                    	    lv_ID_5_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getEntryUpdatedDecoratorNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"ID",
                    	    												lv_ID_5_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:8868:4: ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:8868:4: ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:8869:5: {...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleEntryUpdatedDecoratorNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:8869:122: ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:8870:6: ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:8873:9: ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:8873:10: {...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleEntryUpdatedDecoratorNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:8873:19: (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:8873:20: otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) )
                    	    {
                    	    otherlv_6=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_6, grammarAccess.getEntryUpdatedDecoratorNodeAccess().getNameKeyword_1_2_0());
                    	    								
                    	    otherlv_7=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_7, grammarAccess.getEntryUpdatedDecoratorNodeAccess().getEqualsSignKeyword_1_2_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:8881:9: ( (lv_name_8_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:8882:10: (lv_name_8_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:8882:10: (lv_name_8_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:8883:11: lv_name_8_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getNameEStringParserRuleCall_1_2_2_0());
                    	    										
                    	    pushFollow(FOLLOW_15);
                    	    lv_name_8_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getEntryUpdatedDecoratorNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_8_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:8906:4: ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:8906:4: ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:8907:5: {...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleEntryUpdatedDecoratorNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:8907:122: ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:8908:6: ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:8911:9: ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:8911:10: {...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleEntryUpdatedDecoratorNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:8911:19: (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:8911:20: otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_9=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_9, grammarAccess.getEntryUpdatedDecoratorNodeAccess().getParametersKeyword_1_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:8915:9: ( (lv_parameters_10_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:8916:10: (lv_parameters_10_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:8916:10: (lv_parameters_10_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:8917:11: lv_parameters_10_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getParametersParameterParserRuleCall_1_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_parameters_10_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getEntryUpdatedDecoratorNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_10_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:8934:9: (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )*
                    	    loop132:
                    	    do {
                    	        int alt132=2;
                    	        int LA132_0 = input.LA(1);

                    	        if ( (LA132_0==Comma) ) {
                    	            alt132=1;
                    	        }


                    	        switch (alt132) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:8935:10: otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_11=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_11, grammarAccess.getEntryUpdatedDecoratorNodeAccess().getCommaKeyword_1_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:8939:10: ( (lv_parameters_12_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:8940:11: (lv_parameters_12_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:8940:11: (lv_parameters_12_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:8941:12: lv_parameters_12_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getParametersParameterParserRuleCall_1_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_parameters_12_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getEntryUpdatedDecoratorNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_12_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop132;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:8965:4: ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:8965:4: ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:8966:5: {...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleEntryUpdatedDecoratorNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:8966:122: ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:8967:6: ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:8970:9: ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:8970:10: {...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleEntryUpdatedDecoratorNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:8970:19: (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:8970:20: otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_13=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_13, grammarAccess.getEntryUpdatedDecoratorNodeAccess().getSatisficesKeyword_1_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:8974:9: ( (lv_satisfices_14_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:8975:10: (lv_satisfices_14_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:8975:10: (lv_satisfices_14_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:8976:11: lv_satisfices_14_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getSatisficesQualityParserRuleCall_1_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfices_14_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getEntryUpdatedDecoratorNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_14_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:8993:9: (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )*
                    	    loop133:
                    	    do {
                    	        int alt133=2;
                    	        int LA133_0 = input.LA(1);

                    	        if ( (LA133_0==Comma) ) {
                    	            alt133=1;
                    	        }


                    	        switch (alt133) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:8994:10: otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_15=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_15, grammarAccess.getEntryUpdatedDecoratorNodeAccess().getCommaKeyword_1_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:8998:10: ( (lv_satisfices_16_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:8999:11: (lv_satisfices_16_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:8999:11: (lv_satisfices_16_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:9000:12: lv_satisfices_16_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getSatisficesQualityParserRuleCall_1_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfices_16_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getEntryUpdatedDecoratorNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_16_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop133;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:9024:4: ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:9024:4: ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:9025:5: {...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleEntryUpdatedDecoratorNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:9025:122: ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:9026:6: ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:9029:9: ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:9029:10: {...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleEntryUpdatedDecoratorNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:9029:19: (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:9029:20: otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_17=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_17, grammarAccess.getEntryUpdatedDecoratorNodeAccess().getSatisfiesKeyword_1_5_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:9033:9: ( (lv_satisfies_18_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:9034:10: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:9034:10: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:9035:11: lv_satisfies_18_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_5_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfies_18_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getEntryUpdatedDecoratorNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_18_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:9052:9: (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )*
                    	    loop134:
                    	    do {
                    	        int alt134=2;
                    	        int LA134_0 = input.LA(1);

                    	        if ( (LA134_0==Comma) ) {
                    	            alt134=1;
                    	        }


                    	        switch (alt134) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:9053:10: otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_19=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_19, grammarAccess.getEntryUpdatedDecoratorNodeAccess().getCommaKeyword_1_5_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:9057:10: ( (lv_satisfies_20_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:9058:11: (lv_satisfies_20_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:9058:11: (lv_satisfies_20_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:9059:12: lv_satisfies_20_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_5_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfies_20_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getEntryUpdatedDecoratorNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_20_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop134;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 7 :
                    	    // InternalQualityBtCppParser.g:9083:4: ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:9083:4: ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:9084:5: {...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1(), 6) ) {
                    	        throw new FailedPredicateException(input, "ruleEntryUpdatedDecoratorNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1(), 6)");
                    	    }
                    	    // InternalQualityBtCppParser.g:9084:122: ( ({...}? => (otherlv_21= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:9085:6: ({...}? => (otherlv_21= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1(), 6);
                    	    					
                    	    // InternalQualityBtCppParser.g:9088:9: ({...}? => (otherlv_21= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:9088:10: {...}? => (otherlv_21= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleEntryUpdatedDecoratorNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:9088:19: (otherlv_21= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:9088:20: otherlv_21= RightParenthesis
                    	    {
                    	    otherlv_21=(Token)match(input,RightParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_21, grammarAccess.getEntryUpdatedDecoratorNodeAccess().getRightParenthesisKeyword_1_6());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt135 >= 1 ) break loop135;
                                EarlyExitException eee =
                                    new EarlyExitException(135, input);
                                throw eee;
                        }
                        cnt135++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1()) ) {
                        throw new FailedPredicateException(input, "ruleEntryUpdatedDecoratorNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1());
                    				

                    }
                    break;

            }

            this_BEGIN_22=(Token)match(input,RULE_BEGIN,FOLLOW_9); 

            			newLeafNode(this_BEGIN_22, grammarAccess.getEntryUpdatedDecoratorNodeAccess().getBEGINTerminalRuleCall_2());
            		
            // InternalQualityBtCppParser.g:9110:3: ( (lv_child_23_0= ruleTreeNode ) )
            // InternalQualityBtCppParser.g:9111:4: (lv_child_23_0= ruleTreeNode )
            {
            // InternalQualityBtCppParser.g:9111:4: (lv_child_23_0= ruleTreeNode )
            // InternalQualityBtCppParser.g:9112:5: lv_child_23_0= ruleTreeNode
            {

            					newCompositeNode(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getChildTreeNodeParserRuleCall_3_0());
            				
            pushFollow(FOLLOW_20);
            lv_child_23_0=ruleTreeNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getEntryUpdatedDecoratorNodeRule());
            					}
            					set(
            						current,
            						"child",
            						lv_child_23_0,
            						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            this_END_24=(Token)match(input,RULE_END,FOLLOW_2); 

            			newLeafNode(this_END_24, grammarAccess.getEntryUpdatedDecoratorNodeAccess().getENDTerminalRuleCall_4());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEntryUpdatedDecoratorNode"


    // $ANTLR start "entryRuleRunOnceNode"
    // InternalQualityBtCppParser.g:9137:1: entryRuleRunOnceNode returns [EObject current=null] : iv_ruleRunOnceNode= ruleRunOnceNode EOF ;
    public final EObject entryRuleRunOnceNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRunOnceNode = null;


        try {
            // InternalQualityBtCppParser.g:9137:52: (iv_ruleRunOnceNode= ruleRunOnceNode EOF )
            // InternalQualityBtCppParser.g:9138:2: iv_ruleRunOnceNode= ruleRunOnceNode EOF
            {
             newCompositeNode(grammarAccess.getRunOnceNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleRunOnceNode=ruleRunOnceNode();

            state._fsp--;

             current =iv_ruleRunOnceNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRunOnceNode"


    // $ANTLR start "ruleRunOnceNode"
    // InternalQualityBtCppParser.g:9144:1: ruleRunOnceNode returns [EObject current=null] : (otherlv_0= RunOnce ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END ) ;
    public final EObject ruleRunOnceNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token this_BEGIN_22=null;
        Token this_END_24=null;
        AntlrDatatypeRuleToken lv_ID_5_0 = null;

        AntlrDatatypeRuleToken lv_name_8_0 = null;

        EObject lv_parameters_10_0 = null;

        EObject lv_parameters_12_0 = null;

        EObject lv_satisfices_14_0 = null;

        EObject lv_satisfices_16_0 = null;

        EObject lv_satisfies_18_0 = null;

        EObject lv_satisfies_20_0 = null;

        EObject lv_child_23_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:9150:2: ( (otherlv_0= RunOnce ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END ) )
            // InternalQualityBtCppParser.g:9151:2: (otherlv_0= RunOnce ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END )
            {
            // InternalQualityBtCppParser.g:9151:2: (otherlv_0= RunOnce ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END )
            // InternalQualityBtCppParser.g:9152:3: otherlv_0= RunOnce ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END
            {
            otherlv_0=(Token)match(input,RunOnce,FOLLOW_15); 

            			newLeafNode(otherlv_0, grammarAccess.getRunOnceNodeAccess().getRunOnceKeyword_0());
            		
            // InternalQualityBtCppParser.g:9156:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt141=2;
            int LA141_0 = input.LA(1);

            if ( ((LA141_0>=Parameters && LA141_0<=Satisfies)||LA141_0==Name||LA141_0==ID||(LA141_0>=LeftParenthesis && LA141_0<=RightParenthesis)) ) {
                alt141=1;
            }
            switch (alt141) {
                case 1 :
                    // InternalQualityBtCppParser.g:9157:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:9157:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:9158:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1());
                    				
                    // InternalQualityBtCppParser.g:9161:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:9162:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:9162:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+
                    int cnt140=0;
                    loop140:
                    do {
                        int alt140=8;
                        int LA140_0 = input.LA(1);

                        if ( LA140_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1(), 0) ) {
                            alt140=1;
                        }
                        else if ( LA140_0 == ID && getUnorderedGroupHelper().canSelect(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1(), 1) ) {
                            alt140=2;
                        }
                        else if ( LA140_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1(), 2) ) {
                            alt140=3;
                        }
                        else if ( LA140_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1(), 3) ) {
                            alt140=4;
                        }
                        else if ( LA140_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1(), 4) ) {
                            alt140=5;
                        }
                        else if ( LA140_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1(), 5) ) {
                            alt140=6;
                        }
                        else if ( LA140_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1(), 6) ) {
                            alt140=7;
                        }


                        switch (alt140) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:9163:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:9163:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:9164:5: {...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleRunOnceNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:9164:108: ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:9165:6: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:9168:9: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:9168:10: {...}? => (otherlv_2= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleRunOnceNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:9168:19: (otherlv_2= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:9168:20: otherlv_2= LeftParenthesis
                    	    {
                    	    otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_2, grammarAccess.getRunOnceNodeAccess().getLeftParenthesisKeyword_1_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:9178:4: ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:9178:4: ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:9179:5: {...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleRunOnceNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:9179:108: ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:9180:6: ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:9183:9: ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:9183:10: {...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleRunOnceNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:9183:19: (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:9183:20: otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) )
                    	    {
                    	    otherlv_3=(Token)match(input,ID,FOLLOW_8); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getRunOnceNodeAccess().getIDKeyword_1_1_0());
                    	    								
                    	    otherlv_4=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getRunOnceNodeAccess().getEqualsSignKeyword_1_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:9191:9: ( (lv_ID_5_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:9192:10: (lv_ID_5_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:9192:10: (lv_ID_5_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:9193:11: lv_ID_5_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getRunOnceNodeAccess().getIDEStringParserRuleCall_1_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_15);
                    	    lv_ID_5_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getRunOnceNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"ID",
                    	    												lv_ID_5_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:9216:4: ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:9216:4: ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:9217:5: {...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleRunOnceNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:9217:108: ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:9218:6: ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:9221:9: ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:9221:10: {...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleRunOnceNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:9221:19: (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:9221:20: otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) )
                    	    {
                    	    otherlv_6=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_6, grammarAccess.getRunOnceNodeAccess().getNameKeyword_1_2_0());
                    	    								
                    	    otherlv_7=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_7, grammarAccess.getRunOnceNodeAccess().getEqualsSignKeyword_1_2_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:9229:9: ( (lv_name_8_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:9230:10: (lv_name_8_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:9230:10: (lv_name_8_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:9231:11: lv_name_8_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getRunOnceNodeAccess().getNameEStringParserRuleCall_1_2_2_0());
                    	    										
                    	    pushFollow(FOLLOW_15);
                    	    lv_name_8_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getRunOnceNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_8_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:9254:4: ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:9254:4: ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:9255:5: {...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleRunOnceNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:9255:108: ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:9256:6: ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:9259:9: ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:9259:10: {...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleRunOnceNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:9259:19: (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:9259:20: otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_9=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_9, grammarAccess.getRunOnceNodeAccess().getParametersKeyword_1_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:9263:9: ( (lv_parameters_10_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:9264:10: (lv_parameters_10_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:9264:10: (lv_parameters_10_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:9265:11: lv_parameters_10_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getRunOnceNodeAccess().getParametersParameterParserRuleCall_1_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_parameters_10_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getRunOnceNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_10_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:9282:9: (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )*
                    	    loop137:
                    	    do {
                    	        int alt137=2;
                    	        int LA137_0 = input.LA(1);

                    	        if ( (LA137_0==Comma) ) {
                    	            alt137=1;
                    	        }


                    	        switch (alt137) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:9283:10: otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_11=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_11, grammarAccess.getRunOnceNodeAccess().getCommaKeyword_1_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:9287:10: ( (lv_parameters_12_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:9288:11: (lv_parameters_12_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:9288:11: (lv_parameters_12_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:9289:12: lv_parameters_12_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getRunOnceNodeAccess().getParametersParameterParserRuleCall_1_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_parameters_12_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getRunOnceNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_12_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop137;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:9313:4: ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:9313:4: ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:9314:5: {...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleRunOnceNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:9314:108: ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:9315:6: ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:9318:9: ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:9318:10: {...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleRunOnceNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:9318:19: (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:9318:20: otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_13=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_13, grammarAccess.getRunOnceNodeAccess().getSatisficesKeyword_1_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:9322:9: ( (lv_satisfices_14_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:9323:10: (lv_satisfices_14_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:9323:10: (lv_satisfices_14_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:9324:11: lv_satisfices_14_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getRunOnceNodeAccess().getSatisficesQualityParserRuleCall_1_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfices_14_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getRunOnceNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_14_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:9341:9: (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )*
                    	    loop138:
                    	    do {
                    	        int alt138=2;
                    	        int LA138_0 = input.LA(1);

                    	        if ( (LA138_0==Comma) ) {
                    	            alt138=1;
                    	        }


                    	        switch (alt138) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:9342:10: otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_15=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_15, grammarAccess.getRunOnceNodeAccess().getCommaKeyword_1_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:9346:10: ( (lv_satisfices_16_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:9347:11: (lv_satisfices_16_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:9347:11: (lv_satisfices_16_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:9348:12: lv_satisfices_16_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getRunOnceNodeAccess().getSatisficesQualityParserRuleCall_1_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfices_16_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getRunOnceNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_16_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop138;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:9372:4: ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:9372:4: ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:9373:5: {...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleRunOnceNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:9373:108: ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:9374:6: ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:9377:9: ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:9377:10: {...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleRunOnceNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:9377:19: (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:9377:20: otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_17=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_17, grammarAccess.getRunOnceNodeAccess().getSatisfiesKeyword_1_5_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:9381:9: ( (lv_satisfies_18_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:9382:10: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:9382:10: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:9383:11: lv_satisfies_18_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getRunOnceNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_5_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfies_18_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getRunOnceNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_18_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:9400:9: (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )*
                    	    loop139:
                    	    do {
                    	        int alt139=2;
                    	        int LA139_0 = input.LA(1);

                    	        if ( (LA139_0==Comma) ) {
                    	            alt139=1;
                    	        }


                    	        switch (alt139) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:9401:10: otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_19=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_19, grammarAccess.getRunOnceNodeAccess().getCommaKeyword_1_5_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:9405:10: ( (lv_satisfies_20_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:9406:11: (lv_satisfies_20_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:9406:11: (lv_satisfies_20_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:9407:12: lv_satisfies_20_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getRunOnceNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_5_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfies_20_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getRunOnceNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_20_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop139;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 7 :
                    	    // InternalQualityBtCppParser.g:9431:4: ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:9431:4: ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:9432:5: {...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1(), 6) ) {
                    	        throw new FailedPredicateException(input, "ruleRunOnceNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1(), 6)");
                    	    }
                    	    // InternalQualityBtCppParser.g:9432:108: ( ({...}? => (otherlv_21= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:9433:6: ({...}? => (otherlv_21= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1(), 6);
                    	    					
                    	    // InternalQualityBtCppParser.g:9436:9: ({...}? => (otherlv_21= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:9436:10: {...}? => (otherlv_21= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleRunOnceNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:9436:19: (otherlv_21= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:9436:20: otherlv_21= RightParenthesis
                    	    {
                    	    otherlv_21=(Token)match(input,RightParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_21, grammarAccess.getRunOnceNodeAccess().getRightParenthesisKeyword_1_6());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt140 >= 1 ) break loop140;
                                EarlyExitException eee =
                                    new EarlyExitException(140, input);
                                throw eee;
                        }
                        cnt140++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1()) ) {
                        throw new FailedPredicateException(input, "ruleRunOnceNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1());
                    				

                    }
                    break;

            }

            this_BEGIN_22=(Token)match(input,RULE_BEGIN,FOLLOW_9); 

            			newLeafNode(this_BEGIN_22, grammarAccess.getRunOnceNodeAccess().getBEGINTerminalRuleCall_2());
            		
            // InternalQualityBtCppParser.g:9458:3: ( (lv_child_23_0= ruleTreeNode ) )
            // InternalQualityBtCppParser.g:9459:4: (lv_child_23_0= ruleTreeNode )
            {
            // InternalQualityBtCppParser.g:9459:4: (lv_child_23_0= ruleTreeNode )
            // InternalQualityBtCppParser.g:9460:5: lv_child_23_0= ruleTreeNode
            {

            					newCompositeNode(grammarAccess.getRunOnceNodeAccess().getChildTreeNodeParserRuleCall_3_0());
            				
            pushFollow(FOLLOW_20);
            lv_child_23_0=ruleTreeNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getRunOnceNodeRule());
            					}
            					set(
            						current,
            						"child",
            						lv_child_23_0,
            						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            this_END_24=(Token)match(input,RULE_END,FOLLOW_2); 

            			newLeafNode(this_END_24, grammarAccess.getRunOnceNodeAccess().getENDTerminalRuleCall_4());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRunOnceNode"


    // $ANTLR start "entryRuleLoopNode"
    // InternalQualityBtCppParser.g:9485:1: entryRuleLoopNode returns [EObject current=null] : iv_ruleLoopNode= ruleLoopNode EOF ;
    public final EObject entryRuleLoopNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLoopNode = null;


        try {
            // InternalQualityBtCppParser.g:9485:49: (iv_ruleLoopNode= ruleLoopNode EOF )
            // InternalQualityBtCppParser.g:9486:2: iv_ruleLoopNode= ruleLoopNode EOF
            {
             newCompositeNode(grammarAccess.getLoopNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleLoopNode=ruleLoopNode();

            state._fsp--;

             current =iv_ruleLoopNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLoopNode"


    // $ANTLR start "ruleLoopNode"
    // InternalQualityBtCppParser.g:9492:1: ruleLoopNode returns [EObject current=null] : (otherlv_0= Loop ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END ) ;
    public final EObject ruleLoopNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token this_BEGIN_22=null;
        Token this_END_24=null;
        AntlrDatatypeRuleToken lv_ID_5_0 = null;

        AntlrDatatypeRuleToken lv_name_8_0 = null;

        EObject lv_parameters_10_0 = null;

        EObject lv_parameters_12_0 = null;

        EObject lv_satisfices_14_0 = null;

        EObject lv_satisfices_16_0 = null;

        EObject lv_satisfies_18_0 = null;

        EObject lv_satisfies_20_0 = null;

        EObject lv_child_23_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:9498:2: ( (otherlv_0= Loop ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END ) )
            // InternalQualityBtCppParser.g:9499:2: (otherlv_0= Loop ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END )
            {
            // InternalQualityBtCppParser.g:9499:2: (otherlv_0= Loop ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END )
            // InternalQualityBtCppParser.g:9500:3: otherlv_0= Loop ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END
            {
            otherlv_0=(Token)match(input,Loop,FOLLOW_15); 

            			newLeafNode(otherlv_0, grammarAccess.getLoopNodeAccess().getLoopKeyword_0());
            		
            // InternalQualityBtCppParser.g:9504:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt146=2;
            int LA146_0 = input.LA(1);

            if ( ((LA146_0>=Parameters && LA146_0<=Satisfies)||LA146_0==Name||LA146_0==ID||(LA146_0>=LeftParenthesis && LA146_0<=RightParenthesis)) ) {
                alt146=1;
            }
            switch (alt146) {
                case 1 :
                    // InternalQualityBtCppParser.g:9505:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:9505:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:9506:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1());
                    				
                    // InternalQualityBtCppParser.g:9509:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:9510:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:9510:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+
                    int cnt145=0;
                    loop145:
                    do {
                        int alt145=8;
                        int LA145_0 = input.LA(1);

                        if ( LA145_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1(), 0) ) {
                            alt145=1;
                        }
                        else if ( LA145_0 == ID && getUnorderedGroupHelper().canSelect(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1(), 1) ) {
                            alt145=2;
                        }
                        else if ( LA145_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1(), 2) ) {
                            alt145=3;
                        }
                        else if ( LA145_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1(), 3) ) {
                            alt145=4;
                        }
                        else if ( LA145_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1(), 4) ) {
                            alt145=5;
                        }
                        else if ( LA145_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1(), 5) ) {
                            alt145=6;
                        }
                        else if ( LA145_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1(), 6) ) {
                            alt145=7;
                        }


                        switch (alt145) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:9511:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:9511:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:9512:5: {...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleLoopNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:9512:105: ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:9513:6: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:9516:9: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:9516:10: {...}? => (otherlv_2= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleLoopNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:9516:19: (otherlv_2= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:9516:20: otherlv_2= LeftParenthesis
                    	    {
                    	    otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_2, grammarAccess.getLoopNodeAccess().getLeftParenthesisKeyword_1_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:9526:4: ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:9526:4: ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:9527:5: {...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleLoopNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:9527:105: ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:9528:6: ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:9531:9: ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:9531:10: {...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleLoopNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:9531:19: (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:9531:20: otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) )
                    	    {
                    	    otherlv_3=(Token)match(input,ID,FOLLOW_8); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getLoopNodeAccess().getIDKeyword_1_1_0());
                    	    								
                    	    otherlv_4=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getLoopNodeAccess().getEqualsSignKeyword_1_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:9539:9: ( (lv_ID_5_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:9540:10: (lv_ID_5_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:9540:10: (lv_ID_5_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:9541:11: lv_ID_5_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getLoopNodeAccess().getIDEStringParserRuleCall_1_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_15);
                    	    lv_ID_5_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getLoopNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"ID",
                    	    												lv_ID_5_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:9564:4: ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:9564:4: ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:9565:5: {...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleLoopNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:9565:105: ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:9566:6: ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:9569:9: ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:9569:10: {...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleLoopNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:9569:19: (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:9569:20: otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) )
                    	    {
                    	    otherlv_6=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_6, grammarAccess.getLoopNodeAccess().getNameKeyword_1_2_0());
                    	    								
                    	    otherlv_7=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_7, grammarAccess.getLoopNodeAccess().getEqualsSignKeyword_1_2_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:9577:9: ( (lv_name_8_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:9578:10: (lv_name_8_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:9578:10: (lv_name_8_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:9579:11: lv_name_8_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getLoopNodeAccess().getNameEStringParserRuleCall_1_2_2_0());
                    	    										
                    	    pushFollow(FOLLOW_15);
                    	    lv_name_8_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getLoopNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_8_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:9602:4: ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:9602:4: ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:9603:5: {...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleLoopNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:9603:105: ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:9604:6: ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:9607:9: ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:9607:10: {...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleLoopNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:9607:19: (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:9607:20: otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_9=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_9, grammarAccess.getLoopNodeAccess().getParametersKeyword_1_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:9611:9: ( (lv_parameters_10_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:9612:10: (lv_parameters_10_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:9612:10: (lv_parameters_10_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:9613:11: lv_parameters_10_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getLoopNodeAccess().getParametersParameterParserRuleCall_1_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_parameters_10_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getLoopNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_10_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:9630:9: (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )*
                    	    loop142:
                    	    do {
                    	        int alt142=2;
                    	        int LA142_0 = input.LA(1);

                    	        if ( (LA142_0==Comma) ) {
                    	            alt142=1;
                    	        }


                    	        switch (alt142) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:9631:10: otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_11=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_11, grammarAccess.getLoopNodeAccess().getCommaKeyword_1_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:9635:10: ( (lv_parameters_12_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:9636:11: (lv_parameters_12_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:9636:11: (lv_parameters_12_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:9637:12: lv_parameters_12_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getLoopNodeAccess().getParametersParameterParserRuleCall_1_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_parameters_12_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getLoopNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_12_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop142;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:9661:4: ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:9661:4: ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:9662:5: {...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleLoopNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:9662:105: ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:9663:6: ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:9666:9: ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:9666:10: {...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleLoopNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:9666:19: (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:9666:20: otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_13=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_13, grammarAccess.getLoopNodeAccess().getSatisficesKeyword_1_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:9670:9: ( (lv_satisfices_14_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:9671:10: (lv_satisfices_14_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:9671:10: (lv_satisfices_14_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:9672:11: lv_satisfices_14_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getLoopNodeAccess().getSatisficesQualityParserRuleCall_1_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfices_14_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getLoopNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_14_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:9689:9: (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )*
                    	    loop143:
                    	    do {
                    	        int alt143=2;
                    	        int LA143_0 = input.LA(1);

                    	        if ( (LA143_0==Comma) ) {
                    	            alt143=1;
                    	        }


                    	        switch (alt143) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:9690:10: otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_15=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_15, grammarAccess.getLoopNodeAccess().getCommaKeyword_1_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:9694:10: ( (lv_satisfices_16_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:9695:11: (lv_satisfices_16_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:9695:11: (lv_satisfices_16_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:9696:12: lv_satisfices_16_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getLoopNodeAccess().getSatisficesQualityParserRuleCall_1_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfices_16_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getLoopNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_16_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop143;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:9720:4: ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:9720:4: ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:9721:5: {...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleLoopNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:9721:105: ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:9722:6: ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:9725:9: ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:9725:10: {...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleLoopNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:9725:19: (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:9725:20: otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_17=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_17, grammarAccess.getLoopNodeAccess().getSatisfiesKeyword_1_5_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:9729:9: ( (lv_satisfies_18_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:9730:10: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:9730:10: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:9731:11: lv_satisfies_18_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getLoopNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_5_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfies_18_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getLoopNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_18_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:9748:9: (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )*
                    	    loop144:
                    	    do {
                    	        int alt144=2;
                    	        int LA144_0 = input.LA(1);

                    	        if ( (LA144_0==Comma) ) {
                    	            alt144=1;
                    	        }


                    	        switch (alt144) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:9749:10: otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_19=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_19, grammarAccess.getLoopNodeAccess().getCommaKeyword_1_5_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:9753:10: ( (lv_satisfies_20_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:9754:11: (lv_satisfies_20_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:9754:11: (lv_satisfies_20_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:9755:12: lv_satisfies_20_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getLoopNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_5_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfies_20_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getLoopNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_20_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop144;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 7 :
                    	    // InternalQualityBtCppParser.g:9779:4: ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:9779:4: ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:9780:5: {...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1(), 6) ) {
                    	        throw new FailedPredicateException(input, "ruleLoopNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1(), 6)");
                    	    }
                    	    // InternalQualityBtCppParser.g:9780:105: ( ({...}? => (otherlv_21= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:9781:6: ({...}? => (otherlv_21= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1(), 6);
                    	    					
                    	    // InternalQualityBtCppParser.g:9784:9: ({...}? => (otherlv_21= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:9784:10: {...}? => (otherlv_21= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleLoopNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:9784:19: (otherlv_21= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:9784:20: otherlv_21= RightParenthesis
                    	    {
                    	    otherlv_21=(Token)match(input,RightParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_21, grammarAccess.getLoopNodeAccess().getRightParenthesisKeyword_1_6());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt145 >= 1 ) break loop145;
                                EarlyExitException eee =
                                    new EarlyExitException(145, input);
                                throw eee;
                        }
                        cnt145++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1()) ) {
                        throw new FailedPredicateException(input, "ruleLoopNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1());
                    				

                    }
                    break;

            }

            this_BEGIN_22=(Token)match(input,RULE_BEGIN,FOLLOW_9); 

            			newLeafNode(this_BEGIN_22, grammarAccess.getLoopNodeAccess().getBEGINTerminalRuleCall_2());
            		
            // InternalQualityBtCppParser.g:9806:3: ( (lv_child_23_0= ruleTreeNode ) )
            // InternalQualityBtCppParser.g:9807:4: (lv_child_23_0= ruleTreeNode )
            {
            // InternalQualityBtCppParser.g:9807:4: (lv_child_23_0= ruleTreeNode )
            // InternalQualityBtCppParser.g:9808:5: lv_child_23_0= ruleTreeNode
            {

            					newCompositeNode(grammarAccess.getLoopNodeAccess().getChildTreeNodeParserRuleCall_3_0());
            				
            pushFollow(FOLLOW_20);
            lv_child_23_0=ruleTreeNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getLoopNodeRule());
            					}
            					set(
            						current,
            						"child",
            						lv_child_23_0,
            						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            this_END_24=(Token)match(input,RULE_END,FOLLOW_2); 

            			newLeafNode(this_END_24, grammarAccess.getLoopNodeAccess().getENDTerminalRuleCall_4());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLoopNode"


    // $ANTLR start "entryRuleConsumeQueueNode"
    // InternalQualityBtCppParser.g:9833:1: entryRuleConsumeQueueNode returns [EObject current=null] : iv_ruleConsumeQueueNode= ruleConsumeQueueNode EOF ;
    public final EObject entryRuleConsumeQueueNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConsumeQueueNode = null;


        try {
            // InternalQualityBtCppParser.g:9833:57: (iv_ruleConsumeQueueNode= ruleConsumeQueueNode EOF )
            // InternalQualityBtCppParser.g:9834:2: iv_ruleConsumeQueueNode= ruleConsumeQueueNode EOF
            {
             newCompositeNode(grammarAccess.getConsumeQueueNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleConsumeQueueNode=ruleConsumeQueueNode();

            state._fsp--;

             current =iv_ruleConsumeQueueNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConsumeQueueNode"


    // $ANTLR start "ruleConsumeQueueNode"
    // InternalQualityBtCppParser.g:9840:1: ruleConsumeQueueNode returns [EObject current=null] : (otherlv_0= ConsumeQueue ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END ) ;
    public final EObject ruleConsumeQueueNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token this_BEGIN_22=null;
        Token this_END_24=null;
        AntlrDatatypeRuleToken lv_ID_5_0 = null;

        AntlrDatatypeRuleToken lv_name_8_0 = null;

        EObject lv_parameters_10_0 = null;

        EObject lv_parameters_12_0 = null;

        EObject lv_satisfices_14_0 = null;

        EObject lv_satisfices_16_0 = null;

        EObject lv_satisfies_18_0 = null;

        EObject lv_satisfies_20_0 = null;

        EObject lv_child_23_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:9846:2: ( (otherlv_0= ConsumeQueue ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END ) )
            // InternalQualityBtCppParser.g:9847:2: (otherlv_0= ConsumeQueue ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END )
            {
            // InternalQualityBtCppParser.g:9847:2: (otherlv_0= ConsumeQueue ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END )
            // InternalQualityBtCppParser.g:9848:3: otherlv_0= ConsumeQueue ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END
            {
            otherlv_0=(Token)match(input,ConsumeQueue,FOLLOW_15); 

            			newLeafNode(otherlv_0, grammarAccess.getConsumeQueueNodeAccess().getConsumeQueueKeyword_0());
            		
            // InternalQualityBtCppParser.g:9852:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt151=2;
            int LA151_0 = input.LA(1);

            if ( ((LA151_0>=Parameters && LA151_0<=Satisfies)||LA151_0==Name||LA151_0==ID||(LA151_0>=LeftParenthesis && LA151_0<=RightParenthesis)) ) {
                alt151=1;
            }
            switch (alt151) {
                case 1 :
                    // InternalQualityBtCppParser.g:9853:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:9853:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:9854:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1());
                    				
                    // InternalQualityBtCppParser.g:9857:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:9858:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:9858:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+
                    int cnt150=0;
                    loop150:
                    do {
                        int alt150=8;
                        int LA150_0 = input.LA(1);

                        if ( LA150_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1(), 0) ) {
                            alt150=1;
                        }
                        else if ( LA150_0 == ID && getUnorderedGroupHelper().canSelect(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1(), 1) ) {
                            alt150=2;
                        }
                        else if ( LA150_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1(), 2) ) {
                            alt150=3;
                        }
                        else if ( LA150_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1(), 3) ) {
                            alt150=4;
                        }
                        else if ( LA150_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1(), 4) ) {
                            alt150=5;
                        }
                        else if ( LA150_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1(), 5) ) {
                            alt150=6;
                        }
                        else if ( LA150_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1(), 6) ) {
                            alt150=7;
                        }


                        switch (alt150) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:9859:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:9859:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:9860:5: {...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleConsumeQueueNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:9860:113: ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:9861:6: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:9864:9: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:9864:10: {...}? => (otherlv_2= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleConsumeQueueNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:9864:19: (otherlv_2= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:9864:20: otherlv_2= LeftParenthesis
                    	    {
                    	    otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_2, grammarAccess.getConsumeQueueNodeAccess().getLeftParenthesisKeyword_1_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:9874:4: ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:9874:4: ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:9875:5: {...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleConsumeQueueNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:9875:113: ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:9876:6: ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:9879:9: ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:9879:10: {...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleConsumeQueueNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:9879:19: (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:9879:20: otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) )
                    	    {
                    	    otherlv_3=(Token)match(input,ID,FOLLOW_8); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getConsumeQueueNodeAccess().getIDKeyword_1_1_0());
                    	    								
                    	    otherlv_4=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getConsumeQueueNodeAccess().getEqualsSignKeyword_1_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:9887:9: ( (lv_ID_5_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:9888:10: (lv_ID_5_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:9888:10: (lv_ID_5_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:9889:11: lv_ID_5_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getConsumeQueueNodeAccess().getIDEStringParserRuleCall_1_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_15);
                    	    lv_ID_5_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getConsumeQueueNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"ID",
                    	    												lv_ID_5_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:9912:4: ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:9912:4: ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:9913:5: {...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleConsumeQueueNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:9913:113: ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:9914:6: ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:9917:9: ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:9917:10: {...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleConsumeQueueNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:9917:19: (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:9917:20: otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) )
                    	    {
                    	    otherlv_6=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_6, grammarAccess.getConsumeQueueNodeAccess().getNameKeyword_1_2_0());
                    	    								
                    	    otherlv_7=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_7, grammarAccess.getConsumeQueueNodeAccess().getEqualsSignKeyword_1_2_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:9925:9: ( (lv_name_8_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:9926:10: (lv_name_8_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:9926:10: (lv_name_8_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:9927:11: lv_name_8_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getConsumeQueueNodeAccess().getNameEStringParserRuleCall_1_2_2_0());
                    	    										
                    	    pushFollow(FOLLOW_15);
                    	    lv_name_8_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getConsumeQueueNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_8_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:9950:4: ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:9950:4: ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:9951:5: {...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleConsumeQueueNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:9951:113: ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:9952:6: ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:9955:9: ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:9955:10: {...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleConsumeQueueNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:9955:19: (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:9955:20: otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_9=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_9, grammarAccess.getConsumeQueueNodeAccess().getParametersKeyword_1_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:9959:9: ( (lv_parameters_10_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:9960:10: (lv_parameters_10_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:9960:10: (lv_parameters_10_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:9961:11: lv_parameters_10_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getConsumeQueueNodeAccess().getParametersParameterParserRuleCall_1_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_parameters_10_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getConsumeQueueNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_10_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:9978:9: (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )*
                    	    loop147:
                    	    do {
                    	        int alt147=2;
                    	        int LA147_0 = input.LA(1);

                    	        if ( (LA147_0==Comma) ) {
                    	            alt147=1;
                    	        }


                    	        switch (alt147) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:9979:10: otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_11=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_11, grammarAccess.getConsumeQueueNodeAccess().getCommaKeyword_1_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:9983:10: ( (lv_parameters_12_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:9984:11: (lv_parameters_12_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:9984:11: (lv_parameters_12_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:9985:12: lv_parameters_12_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getConsumeQueueNodeAccess().getParametersParameterParserRuleCall_1_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_parameters_12_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getConsumeQueueNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_12_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop147;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:10009:4: ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:10009:4: ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:10010:5: {...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleConsumeQueueNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:10010:113: ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:10011:6: ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:10014:9: ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:10014:10: {...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleConsumeQueueNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:10014:19: (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:10014:20: otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_13=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_13, grammarAccess.getConsumeQueueNodeAccess().getSatisficesKeyword_1_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:10018:9: ( (lv_satisfices_14_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:10019:10: (lv_satisfices_14_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:10019:10: (lv_satisfices_14_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:10020:11: lv_satisfices_14_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getConsumeQueueNodeAccess().getSatisficesQualityParserRuleCall_1_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfices_14_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getConsumeQueueNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_14_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:10037:9: (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )*
                    	    loop148:
                    	    do {
                    	        int alt148=2;
                    	        int LA148_0 = input.LA(1);

                    	        if ( (LA148_0==Comma) ) {
                    	            alt148=1;
                    	        }


                    	        switch (alt148) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:10038:10: otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_15=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_15, grammarAccess.getConsumeQueueNodeAccess().getCommaKeyword_1_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:10042:10: ( (lv_satisfices_16_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:10043:11: (lv_satisfices_16_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:10043:11: (lv_satisfices_16_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:10044:12: lv_satisfices_16_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getConsumeQueueNodeAccess().getSatisficesQualityParserRuleCall_1_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfices_16_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getConsumeQueueNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_16_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop148;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:10068:4: ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:10068:4: ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:10069:5: {...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleConsumeQueueNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:10069:113: ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:10070:6: ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:10073:9: ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:10073:10: {...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleConsumeQueueNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:10073:19: (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:10073:20: otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_17=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_17, grammarAccess.getConsumeQueueNodeAccess().getSatisfiesKeyword_1_5_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:10077:9: ( (lv_satisfies_18_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:10078:10: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:10078:10: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:10079:11: lv_satisfies_18_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getConsumeQueueNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_5_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfies_18_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getConsumeQueueNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_18_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:10096:9: (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )*
                    	    loop149:
                    	    do {
                    	        int alt149=2;
                    	        int LA149_0 = input.LA(1);

                    	        if ( (LA149_0==Comma) ) {
                    	            alt149=1;
                    	        }


                    	        switch (alt149) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:10097:10: otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_19=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_19, grammarAccess.getConsumeQueueNodeAccess().getCommaKeyword_1_5_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:10101:10: ( (lv_satisfies_20_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:10102:11: (lv_satisfies_20_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:10102:11: (lv_satisfies_20_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:10103:12: lv_satisfies_20_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getConsumeQueueNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_5_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfies_20_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getConsumeQueueNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_20_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop149;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 7 :
                    	    // InternalQualityBtCppParser.g:10127:4: ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:10127:4: ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:10128:5: {...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1(), 6) ) {
                    	        throw new FailedPredicateException(input, "ruleConsumeQueueNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1(), 6)");
                    	    }
                    	    // InternalQualityBtCppParser.g:10128:113: ( ({...}? => (otherlv_21= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:10129:6: ({...}? => (otherlv_21= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1(), 6);
                    	    					
                    	    // InternalQualityBtCppParser.g:10132:9: ({...}? => (otherlv_21= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:10132:10: {...}? => (otherlv_21= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleConsumeQueueNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:10132:19: (otherlv_21= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:10132:20: otherlv_21= RightParenthesis
                    	    {
                    	    otherlv_21=(Token)match(input,RightParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_21, grammarAccess.getConsumeQueueNodeAccess().getRightParenthesisKeyword_1_6());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt150 >= 1 ) break loop150;
                                EarlyExitException eee =
                                    new EarlyExitException(150, input);
                                throw eee;
                        }
                        cnt150++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1()) ) {
                        throw new FailedPredicateException(input, "ruleConsumeQueueNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1());
                    				

                    }
                    break;

            }

            this_BEGIN_22=(Token)match(input,RULE_BEGIN,FOLLOW_9); 

            			newLeafNode(this_BEGIN_22, grammarAccess.getConsumeQueueNodeAccess().getBEGINTerminalRuleCall_2());
            		
            // InternalQualityBtCppParser.g:10154:3: ( (lv_child_23_0= ruleTreeNode ) )
            // InternalQualityBtCppParser.g:10155:4: (lv_child_23_0= ruleTreeNode )
            {
            // InternalQualityBtCppParser.g:10155:4: (lv_child_23_0= ruleTreeNode )
            // InternalQualityBtCppParser.g:10156:5: lv_child_23_0= ruleTreeNode
            {

            					newCompositeNode(grammarAccess.getConsumeQueueNodeAccess().getChildTreeNodeParserRuleCall_3_0());
            				
            pushFollow(FOLLOW_20);
            lv_child_23_0=ruleTreeNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getConsumeQueueNodeRule());
            					}
            					set(
            						current,
            						"child",
            						lv_child_23_0,
            						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            this_END_24=(Token)match(input,RULE_END,FOLLOW_2); 

            			newLeafNode(this_END_24, grammarAccess.getConsumeQueueNodeAccess().getENDTerminalRuleCall_4());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConsumeQueueNode"


    // $ANTLR start "entryRuleScriptNode"
    // InternalQualityBtCppParser.g:10181:1: entryRuleScriptNode returns [EObject current=null] : iv_ruleScriptNode= ruleScriptNode EOF ;
    public final EObject entryRuleScriptNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleScriptNode = null;


        try {
            // InternalQualityBtCppParser.g:10181:51: (iv_ruleScriptNode= ruleScriptNode EOF )
            // InternalQualityBtCppParser.g:10182:2: iv_ruleScriptNode= ruleScriptNode EOF
            {
             newCompositeNode(grammarAccess.getScriptNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleScriptNode=ruleScriptNode();

            state._fsp--;

             current =iv_ruleScriptNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleScriptNode"


    // $ANTLR start "ruleScriptNode"
    // InternalQualityBtCppParser.g:10188:1: ruleScriptNode returns [EObject current=null] : ( () otherlv_1= ScriptAction ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? ) ;
    public final EObject ruleScriptNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        AntlrDatatypeRuleToken lv_ID_6_0 = null;

        AntlrDatatypeRuleToken lv_name_9_0 = null;

        EObject lv_parameters_11_0 = null;

        EObject lv_parameters_13_0 = null;

        EObject lv_satisfices_15_0 = null;

        EObject lv_satisfices_17_0 = null;

        EObject lv_satisfies_19_0 = null;

        EObject lv_satisfies_21_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:10194:2: ( ( () otherlv_1= ScriptAction ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? ) )
            // InternalQualityBtCppParser.g:10195:2: ( () otherlv_1= ScriptAction ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? )
            {
            // InternalQualityBtCppParser.g:10195:2: ( () otherlv_1= ScriptAction ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? )
            // InternalQualityBtCppParser.g:10196:3: () otherlv_1= ScriptAction ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            {
            // InternalQualityBtCppParser.g:10196:3: ()
            // InternalQualityBtCppParser.g:10197:4: 
            {

            				current = forceCreateModelElement(
            					grammarAccess.getScriptNodeAccess().getScriptNodeAction_0(),
            					current);
            			

            }

            otherlv_1=(Token)match(input,ScriptAction,FOLLOW_29); 

            			newLeafNode(otherlv_1, grammarAccess.getScriptNodeAccess().getScriptActionKeyword_1());
            		
            // InternalQualityBtCppParser.g:10207:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt156=2;
            int LA156_0 = input.LA(1);

            if ( ((LA156_0>=Parameters && LA156_0<=Satisfies)||LA156_0==Name||LA156_0==ID||(LA156_0>=LeftParenthesis && LA156_0<=RightParenthesis)) ) {
                alt156=1;
            }
            switch (alt156) {
                case 1 :
                    // InternalQualityBtCppParser.g:10208:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:10208:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:10209:5: ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2());
                    				
                    // InternalQualityBtCppParser.g:10212:5: ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:10213:6: ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:10213:6: ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+
                    int cnt155=0;
                    loop155:
                    do {
                        int alt155=8;
                        int LA155_0 = input.LA(1);

                        if ( LA155_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2(), 0) ) {
                            alt155=1;
                        }
                        else if ( LA155_0 == ID && getUnorderedGroupHelper().canSelect(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2(), 1) ) {
                            alt155=2;
                        }
                        else if ( LA155_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2(), 2) ) {
                            alt155=3;
                        }
                        else if ( LA155_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2(), 3) ) {
                            alt155=4;
                        }
                        else if ( LA155_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2(), 4) ) {
                            alt155=5;
                        }
                        else if ( LA155_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2(), 5) ) {
                            alt155=6;
                        }
                        else if ( LA155_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2(), 6) ) {
                            alt155=7;
                        }


                        switch (alt155) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:10214:4: ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:10214:4: ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:10215:5: {...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleScriptNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:10215:107: ( ({...}? => (otherlv_3= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:10216:6: ({...}? => (otherlv_3= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:10219:9: ({...}? => (otherlv_3= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:10219:10: {...}? => (otherlv_3= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleScriptNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:10219:19: (otherlv_3= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:10219:20: otherlv_3= LeftParenthesis
                    	    {
                    	    otherlv_3=(Token)match(input,LeftParenthesis,FOLLOW_29); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getScriptNodeAccess().getLeftParenthesisKeyword_2_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:10229:4: ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:10229:4: ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:10230:5: {...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleScriptNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:10230:107: ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:10231:6: ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:10234:9: ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:10234:10: {...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleScriptNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:10234:19: (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:10234:20: otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) )
                    	    {
                    	    otherlv_4=(Token)match(input,ID,FOLLOW_8); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getScriptNodeAccess().getIDKeyword_2_1_0());
                    	    								
                    	    otherlv_5=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_5, grammarAccess.getScriptNodeAccess().getEqualsSignKeyword_2_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:10242:9: ( (lv_ID_6_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:10243:10: (lv_ID_6_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:10243:10: (lv_ID_6_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:10244:11: lv_ID_6_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getScriptNodeAccess().getIDEStringParserRuleCall_2_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_29);
                    	    lv_ID_6_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getScriptNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"ID",
                    	    												lv_ID_6_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:10267:4: ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:10267:4: ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:10268:5: {...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleScriptNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:10268:107: ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:10269:6: ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:10272:9: ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:10272:10: {...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleScriptNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:10272:19: (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:10272:20: otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) )
                    	    {
                    	    otherlv_7=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_7, grammarAccess.getScriptNodeAccess().getNameKeyword_2_2_0());
                    	    								
                    	    otherlv_8=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_8, grammarAccess.getScriptNodeAccess().getEqualsSignKeyword_2_2_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:10280:9: ( (lv_name_9_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:10281:10: (lv_name_9_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:10281:10: (lv_name_9_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:10282:11: lv_name_9_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getScriptNodeAccess().getNameEStringParserRuleCall_2_2_2_0());
                    	    										
                    	    pushFollow(FOLLOW_29);
                    	    lv_name_9_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getScriptNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_9_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:10305:4: ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:10305:4: ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:10306:5: {...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleScriptNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:10306:107: ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:10307:6: ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:10310:9: ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:10310:10: {...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleScriptNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:10310:19: (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:10310:20: otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_10=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_10, grammarAccess.getScriptNodeAccess().getParametersKeyword_2_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:10314:9: ( (lv_parameters_11_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:10315:10: (lv_parameters_11_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:10315:10: (lv_parameters_11_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:10316:11: lv_parameters_11_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getScriptNodeAccess().getParametersParameterParserRuleCall_2_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_30);
                    	    lv_parameters_11_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getScriptNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_11_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:10333:9: (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )*
                    	    loop152:
                    	    do {
                    	        int alt152=2;
                    	        int LA152_0 = input.LA(1);

                    	        if ( (LA152_0==Comma) ) {
                    	            alt152=1;
                    	        }


                    	        switch (alt152) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:10334:10: otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_12=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_12, grammarAccess.getScriptNodeAccess().getCommaKeyword_2_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:10338:10: ( (lv_parameters_13_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:10339:11: (lv_parameters_13_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:10339:11: (lv_parameters_13_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:10340:12: lv_parameters_13_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getScriptNodeAccess().getParametersParameterParserRuleCall_2_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_30);
                    	    	    lv_parameters_13_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getScriptNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_13_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop152;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:10364:4: ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:10364:4: ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:10365:5: {...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleScriptNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:10365:107: ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:10366:6: ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:10369:9: ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:10369:10: {...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleScriptNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:10369:19: (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:10369:20: otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_14=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_14, grammarAccess.getScriptNodeAccess().getSatisficesKeyword_2_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:10373:9: ( (lv_satisfices_15_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:10374:10: (lv_satisfices_15_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:10374:10: (lv_satisfices_15_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:10375:11: lv_satisfices_15_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getScriptNodeAccess().getSatisficesQualityParserRuleCall_2_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_30);
                    	    lv_satisfices_15_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getScriptNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_15_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:10392:9: (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )*
                    	    loop153:
                    	    do {
                    	        int alt153=2;
                    	        int LA153_0 = input.LA(1);

                    	        if ( (LA153_0==Comma) ) {
                    	            alt153=1;
                    	        }


                    	        switch (alt153) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:10393:10: otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_16=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_16, grammarAccess.getScriptNodeAccess().getCommaKeyword_2_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:10397:10: ( (lv_satisfices_17_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:10398:11: (lv_satisfices_17_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:10398:11: (lv_satisfices_17_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:10399:12: lv_satisfices_17_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getScriptNodeAccess().getSatisficesQualityParserRuleCall_2_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_30);
                    	    	    lv_satisfices_17_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getScriptNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_17_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop153;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:10423:4: ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:10423:4: ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:10424:5: {...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleScriptNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:10424:107: ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:10425:6: ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:10428:9: ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:10428:10: {...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleScriptNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:10428:19: (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:10428:20: otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_18=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_18, grammarAccess.getScriptNodeAccess().getSatisfiesKeyword_2_5_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:10432:9: ( (lv_satisfies_19_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:10433:10: (lv_satisfies_19_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:10433:10: (lv_satisfies_19_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:10434:11: lv_satisfies_19_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getScriptNodeAccess().getSatisfiesQualityRequirementParserRuleCall_2_5_1_0());
                    	    										
                    	    pushFollow(FOLLOW_30);
                    	    lv_satisfies_19_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getScriptNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_19_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:10451:9: (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )*
                    	    loop154:
                    	    do {
                    	        int alt154=2;
                    	        int LA154_0 = input.LA(1);

                    	        if ( (LA154_0==Comma) ) {
                    	            alt154=1;
                    	        }


                    	        switch (alt154) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:10452:10: otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_20=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_20, grammarAccess.getScriptNodeAccess().getCommaKeyword_2_5_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:10456:10: ( (lv_satisfies_21_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:10457:11: (lv_satisfies_21_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:10457:11: (lv_satisfies_21_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:10458:12: lv_satisfies_21_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getScriptNodeAccess().getSatisfiesQualityRequirementParserRuleCall_2_5_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_30);
                    	    	    lv_satisfies_21_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getScriptNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_21_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop154;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 7 :
                    	    // InternalQualityBtCppParser.g:10482:4: ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:10482:4: ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:10483:5: {...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2(), 6) ) {
                    	        throw new FailedPredicateException(input, "ruleScriptNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2(), 6)");
                    	    }
                    	    // InternalQualityBtCppParser.g:10483:107: ( ({...}? => (otherlv_22= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:10484:6: ({...}? => (otherlv_22= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2(), 6);
                    	    					
                    	    // InternalQualityBtCppParser.g:10487:9: ({...}? => (otherlv_22= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:10487:10: {...}? => (otherlv_22= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleScriptNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:10487:19: (otherlv_22= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:10487:20: otherlv_22= RightParenthesis
                    	    {
                    	    otherlv_22=(Token)match(input,RightParenthesis,FOLLOW_29); 

                    	    									newLeafNode(otherlv_22, grammarAccess.getScriptNodeAccess().getRightParenthesisKeyword_2_6());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt155 >= 1 ) break loop155;
                                EarlyExitException eee =
                                    new EarlyExitException(155, input);
                                throw eee;
                        }
                        cnt155++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2()) ) {
                        throw new FailedPredicateException(input, "ruleScriptNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2());
                    				

                    }
                    break;

            }


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleScriptNode"


    // $ANTLR start "entryRuleScriptConditionNode"
    // InternalQualityBtCppParser.g:10509:1: entryRuleScriptConditionNode returns [EObject current=null] : iv_ruleScriptConditionNode= ruleScriptConditionNode EOF ;
    public final EObject entryRuleScriptConditionNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleScriptConditionNode = null;


        try {
            // InternalQualityBtCppParser.g:10509:60: (iv_ruleScriptConditionNode= ruleScriptConditionNode EOF )
            // InternalQualityBtCppParser.g:10510:2: iv_ruleScriptConditionNode= ruleScriptConditionNode EOF
            {
             newCompositeNode(grammarAccess.getScriptConditionNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleScriptConditionNode=ruleScriptConditionNode();

            state._fsp--;

             current =iv_ruleScriptConditionNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleScriptConditionNode"


    // $ANTLR start "ruleScriptConditionNode"
    // InternalQualityBtCppParser.g:10516:1: ruleScriptConditionNode returns [EObject current=null] : ( () otherlv_1= ScriptCondition ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? ) ;
    public final EObject ruleScriptConditionNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        AntlrDatatypeRuleToken lv_ID_6_0 = null;

        AntlrDatatypeRuleToken lv_name_9_0 = null;

        EObject lv_parameters_11_0 = null;

        EObject lv_parameters_13_0 = null;

        EObject lv_satisfices_15_0 = null;

        EObject lv_satisfices_17_0 = null;

        EObject lv_satisfies_19_0 = null;

        EObject lv_satisfies_21_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:10522:2: ( ( () otherlv_1= ScriptCondition ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? ) )
            // InternalQualityBtCppParser.g:10523:2: ( () otherlv_1= ScriptCondition ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? )
            {
            // InternalQualityBtCppParser.g:10523:2: ( () otherlv_1= ScriptCondition ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? )
            // InternalQualityBtCppParser.g:10524:3: () otherlv_1= ScriptCondition ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            {
            // InternalQualityBtCppParser.g:10524:3: ()
            // InternalQualityBtCppParser.g:10525:4: 
            {

            				current = forceCreateModelElement(
            					grammarAccess.getScriptConditionNodeAccess().getScriptConditionNodeAction_0(),
            					current);
            			

            }

            otherlv_1=(Token)match(input,ScriptCondition,FOLLOW_29); 

            			newLeafNode(otherlv_1, grammarAccess.getScriptConditionNodeAccess().getScriptConditionKeyword_1());
            		
            // InternalQualityBtCppParser.g:10535:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt161=2;
            int LA161_0 = input.LA(1);

            if ( ((LA161_0>=Parameters && LA161_0<=Satisfies)||LA161_0==Name||LA161_0==ID||(LA161_0>=LeftParenthesis && LA161_0<=RightParenthesis)) ) {
                alt161=1;
            }
            switch (alt161) {
                case 1 :
                    // InternalQualityBtCppParser.g:10536:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:10536:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:10537:5: ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2());
                    				
                    // InternalQualityBtCppParser.g:10540:5: ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:10541:6: ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:10541:6: ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+
                    int cnt160=0;
                    loop160:
                    do {
                        int alt160=8;
                        int LA160_0 = input.LA(1);

                        if ( LA160_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2(), 0) ) {
                            alt160=1;
                        }
                        else if ( LA160_0 == ID && getUnorderedGroupHelper().canSelect(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2(), 1) ) {
                            alt160=2;
                        }
                        else if ( LA160_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2(), 2) ) {
                            alt160=3;
                        }
                        else if ( LA160_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2(), 3) ) {
                            alt160=4;
                        }
                        else if ( LA160_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2(), 4) ) {
                            alt160=5;
                        }
                        else if ( LA160_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2(), 5) ) {
                            alt160=6;
                        }
                        else if ( LA160_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2(), 6) ) {
                            alt160=7;
                        }


                        switch (alt160) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:10542:4: ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:10542:4: ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:10543:5: {...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleScriptConditionNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:10543:116: ( ({...}? => (otherlv_3= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:10544:6: ({...}? => (otherlv_3= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:10547:9: ({...}? => (otherlv_3= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:10547:10: {...}? => (otherlv_3= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleScriptConditionNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:10547:19: (otherlv_3= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:10547:20: otherlv_3= LeftParenthesis
                    	    {
                    	    otherlv_3=(Token)match(input,LeftParenthesis,FOLLOW_29); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getScriptConditionNodeAccess().getLeftParenthesisKeyword_2_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:10557:4: ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:10557:4: ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:10558:5: {...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleScriptConditionNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:10558:116: ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:10559:6: ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:10562:9: ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:10562:10: {...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleScriptConditionNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:10562:19: (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:10562:20: otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) )
                    	    {
                    	    otherlv_4=(Token)match(input,ID,FOLLOW_8); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getScriptConditionNodeAccess().getIDKeyword_2_1_0());
                    	    								
                    	    otherlv_5=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_5, grammarAccess.getScriptConditionNodeAccess().getEqualsSignKeyword_2_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:10570:9: ( (lv_ID_6_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:10571:10: (lv_ID_6_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:10571:10: (lv_ID_6_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:10572:11: lv_ID_6_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getScriptConditionNodeAccess().getIDEStringParserRuleCall_2_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_29);
                    	    lv_ID_6_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getScriptConditionNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"ID",
                    	    												lv_ID_6_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:10595:4: ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:10595:4: ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:10596:5: {...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleScriptConditionNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:10596:116: ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:10597:6: ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:10600:9: ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:10600:10: {...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleScriptConditionNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:10600:19: (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:10600:20: otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) )
                    	    {
                    	    otherlv_7=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_7, grammarAccess.getScriptConditionNodeAccess().getNameKeyword_2_2_0());
                    	    								
                    	    otherlv_8=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_8, grammarAccess.getScriptConditionNodeAccess().getEqualsSignKeyword_2_2_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:10608:9: ( (lv_name_9_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:10609:10: (lv_name_9_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:10609:10: (lv_name_9_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:10610:11: lv_name_9_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getScriptConditionNodeAccess().getNameEStringParserRuleCall_2_2_2_0());
                    	    										
                    	    pushFollow(FOLLOW_29);
                    	    lv_name_9_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getScriptConditionNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_9_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:10633:4: ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:10633:4: ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:10634:5: {...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleScriptConditionNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:10634:116: ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:10635:6: ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:10638:9: ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:10638:10: {...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleScriptConditionNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:10638:19: (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:10638:20: otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_10=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_10, grammarAccess.getScriptConditionNodeAccess().getParametersKeyword_2_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:10642:9: ( (lv_parameters_11_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:10643:10: (lv_parameters_11_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:10643:10: (lv_parameters_11_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:10644:11: lv_parameters_11_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getScriptConditionNodeAccess().getParametersParameterParserRuleCall_2_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_30);
                    	    lv_parameters_11_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getScriptConditionNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_11_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:10661:9: (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )*
                    	    loop157:
                    	    do {
                    	        int alt157=2;
                    	        int LA157_0 = input.LA(1);

                    	        if ( (LA157_0==Comma) ) {
                    	            alt157=1;
                    	        }


                    	        switch (alt157) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:10662:10: otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_12=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_12, grammarAccess.getScriptConditionNodeAccess().getCommaKeyword_2_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:10666:10: ( (lv_parameters_13_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:10667:11: (lv_parameters_13_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:10667:11: (lv_parameters_13_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:10668:12: lv_parameters_13_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getScriptConditionNodeAccess().getParametersParameterParserRuleCall_2_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_30);
                    	    	    lv_parameters_13_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getScriptConditionNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_13_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop157;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:10692:4: ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:10692:4: ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:10693:5: {...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleScriptConditionNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:10693:116: ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:10694:6: ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:10697:9: ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:10697:10: {...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleScriptConditionNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:10697:19: (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:10697:20: otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_14=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_14, grammarAccess.getScriptConditionNodeAccess().getSatisficesKeyword_2_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:10701:9: ( (lv_satisfices_15_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:10702:10: (lv_satisfices_15_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:10702:10: (lv_satisfices_15_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:10703:11: lv_satisfices_15_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getScriptConditionNodeAccess().getSatisficesQualityParserRuleCall_2_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_30);
                    	    lv_satisfices_15_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getScriptConditionNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_15_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:10720:9: (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )*
                    	    loop158:
                    	    do {
                    	        int alt158=2;
                    	        int LA158_0 = input.LA(1);

                    	        if ( (LA158_0==Comma) ) {
                    	            alt158=1;
                    	        }


                    	        switch (alt158) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:10721:10: otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_16=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_16, grammarAccess.getScriptConditionNodeAccess().getCommaKeyword_2_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:10725:10: ( (lv_satisfices_17_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:10726:11: (lv_satisfices_17_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:10726:11: (lv_satisfices_17_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:10727:12: lv_satisfices_17_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getScriptConditionNodeAccess().getSatisficesQualityParserRuleCall_2_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_30);
                    	    	    lv_satisfices_17_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getScriptConditionNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_17_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop158;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:10751:4: ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:10751:4: ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:10752:5: {...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleScriptConditionNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:10752:116: ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:10753:6: ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:10756:9: ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:10756:10: {...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleScriptConditionNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:10756:19: (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:10756:20: otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_18=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_18, grammarAccess.getScriptConditionNodeAccess().getSatisfiesKeyword_2_5_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:10760:9: ( (lv_satisfies_19_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:10761:10: (lv_satisfies_19_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:10761:10: (lv_satisfies_19_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:10762:11: lv_satisfies_19_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getScriptConditionNodeAccess().getSatisfiesQualityRequirementParserRuleCall_2_5_1_0());
                    	    										
                    	    pushFollow(FOLLOW_30);
                    	    lv_satisfies_19_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getScriptConditionNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_19_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:10779:9: (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )*
                    	    loop159:
                    	    do {
                    	        int alt159=2;
                    	        int LA159_0 = input.LA(1);

                    	        if ( (LA159_0==Comma) ) {
                    	            alt159=1;
                    	        }


                    	        switch (alt159) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:10780:10: otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_20=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_20, grammarAccess.getScriptConditionNodeAccess().getCommaKeyword_2_5_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:10784:10: ( (lv_satisfies_21_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:10785:11: (lv_satisfies_21_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:10785:11: (lv_satisfies_21_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:10786:12: lv_satisfies_21_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getScriptConditionNodeAccess().getSatisfiesQualityRequirementParserRuleCall_2_5_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_30);
                    	    	    lv_satisfies_21_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getScriptConditionNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_21_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop159;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 7 :
                    	    // InternalQualityBtCppParser.g:10810:4: ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:10810:4: ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:10811:5: {...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2(), 6) ) {
                    	        throw new FailedPredicateException(input, "ruleScriptConditionNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2(), 6)");
                    	    }
                    	    // InternalQualityBtCppParser.g:10811:116: ( ({...}? => (otherlv_22= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:10812:6: ({...}? => (otherlv_22= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2(), 6);
                    	    					
                    	    // InternalQualityBtCppParser.g:10815:9: ({...}? => (otherlv_22= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:10815:10: {...}? => (otherlv_22= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleScriptConditionNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:10815:19: (otherlv_22= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:10815:20: otherlv_22= RightParenthesis
                    	    {
                    	    otherlv_22=(Token)match(input,RightParenthesis,FOLLOW_29); 

                    	    									newLeafNode(otherlv_22, grammarAccess.getScriptConditionNodeAccess().getRightParenthesisKeyword_2_6());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt160 >= 1 ) break loop160;
                                EarlyExitException eee =
                                    new EarlyExitException(160, input);
                                throw eee;
                        }
                        cnt160++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2()) ) {
                        throw new FailedPredicateException(input, "ruleScriptConditionNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2());
                    				

                    }
                    break;

            }


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleScriptConditionNode"


    // $ANTLR start "entryRuleAlwaysFailureNode"
    // InternalQualityBtCppParser.g:10837:1: entryRuleAlwaysFailureNode returns [EObject current=null] : iv_ruleAlwaysFailureNode= ruleAlwaysFailureNode EOF ;
    public final EObject entryRuleAlwaysFailureNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAlwaysFailureNode = null;


        try {
            // InternalQualityBtCppParser.g:10837:58: (iv_ruleAlwaysFailureNode= ruleAlwaysFailureNode EOF )
            // InternalQualityBtCppParser.g:10838:2: iv_ruleAlwaysFailureNode= ruleAlwaysFailureNode EOF
            {
             newCompositeNode(grammarAccess.getAlwaysFailureNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleAlwaysFailureNode=ruleAlwaysFailureNode();

            state._fsp--;

             current =iv_ruleAlwaysFailureNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAlwaysFailureNode"


    // $ANTLR start "ruleAlwaysFailureNode"
    // InternalQualityBtCppParser.g:10844:1: ruleAlwaysFailureNode returns [EObject current=null] : ( () otherlv_1= AlwaysFailure ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? ) ;
    public final EObject ruleAlwaysFailureNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        AntlrDatatypeRuleToken lv_ID_6_0 = null;

        AntlrDatatypeRuleToken lv_name_9_0 = null;

        EObject lv_parameters_11_0 = null;

        EObject lv_parameters_13_0 = null;

        EObject lv_satisfices_15_0 = null;

        EObject lv_satisfices_17_0 = null;

        EObject lv_satisfies_19_0 = null;

        EObject lv_satisfies_21_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:10850:2: ( ( () otherlv_1= AlwaysFailure ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? ) )
            // InternalQualityBtCppParser.g:10851:2: ( () otherlv_1= AlwaysFailure ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? )
            {
            // InternalQualityBtCppParser.g:10851:2: ( () otherlv_1= AlwaysFailure ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? )
            // InternalQualityBtCppParser.g:10852:3: () otherlv_1= AlwaysFailure ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            {
            // InternalQualityBtCppParser.g:10852:3: ()
            // InternalQualityBtCppParser.g:10853:4: 
            {

            				current = forceCreateModelElement(
            					grammarAccess.getAlwaysFailureNodeAccess().getAlwaysFailureNodeAction_0(),
            					current);
            			

            }

            otherlv_1=(Token)match(input,AlwaysFailure,FOLLOW_29); 

            			newLeafNode(otherlv_1, grammarAccess.getAlwaysFailureNodeAccess().getAlwaysFailureKeyword_1());
            		
            // InternalQualityBtCppParser.g:10863:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt166=2;
            int LA166_0 = input.LA(1);

            if ( ((LA166_0>=Parameters && LA166_0<=Satisfies)||LA166_0==Name||LA166_0==ID||(LA166_0>=LeftParenthesis && LA166_0<=RightParenthesis)) ) {
                alt166=1;
            }
            switch (alt166) {
                case 1 :
                    // InternalQualityBtCppParser.g:10864:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:10864:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:10865:5: ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2());
                    				
                    // InternalQualityBtCppParser.g:10868:5: ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:10869:6: ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:10869:6: ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+
                    int cnt165=0;
                    loop165:
                    do {
                        int alt165=8;
                        int LA165_0 = input.LA(1);

                        if ( LA165_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2(), 0) ) {
                            alt165=1;
                        }
                        else if ( LA165_0 == ID && getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2(), 1) ) {
                            alt165=2;
                        }
                        else if ( LA165_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2(), 2) ) {
                            alt165=3;
                        }
                        else if ( LA165_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2(), 3) ) {
                            alt165=4;
                        }
                        else if ( LA165_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2(), 4) ) {
                            alt165=5;
                        }
                        else if ( LA165_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2(), 5) ) {
                            alt165=6;
                        }
                        else if ( LA165_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2(), 6) ) {
                            alt165=7;
                        }


                        switch (alt165) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:10870:4: ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:10870:4: ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:10871:5: {...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleAlwaysFailureNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:10871:114: ( ({...}? => (otherlv_3= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:10872:6: ({...}? => (otherlv_3= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:10875:9: ({...}? => (otherlv_3= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:10875:10: {...}? => (otherlv_3= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleAlwaysFailureNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:10875:19: (otherlv_3= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:10875:20: otherlv_3= LeftParenthesis
                    	    {
                    	    otherlv_3=(Token)match(input,LeftParenthesis,FOLLOW_29); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getAlwaysFailureNodeAccess().getLeftParenthesisKeyword_2_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:10885:4: ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:10885:4: ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:10886:5: {...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleAlwaysFailureNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:10886:114: ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:10887:6: ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:10890:9: ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:10890:10: {...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleAlwaysFailureNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:10890:19: (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:10890:20: otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) )
                    	    {
                    	    otherlv_4=(Token)match(input,ID,FOLLOW_8); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getAlwaysFailureNodeAccess().getIDKeyword_2_1_0());
                    	    								
                    	    otherlv_5=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_5, grammarAccess.getAlwaysFailureNodeAccess().getEqualsSignKeyword_2_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:10898:9: ( (lv_ID_6_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:10899:10: (lv_ID_6_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:10899:10: (lv_ID_6_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:10900:11: lv_ID_6_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getAlwaysFailureNodeAccess().getIDEStringParserRuleCall_2_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_29);
                    	    lv_ID_6_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getAlwaysFailureNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"ID",
                    	    												lv_ID_6_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:10923:4: ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:10923:4: ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:10924:5: {...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleAlwaysFailureNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:10924:114: ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:10925:6: ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:10928:9: ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:10928:10: {...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleAlwaysFailureNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:10928:19: (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:10928:20: otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) )
                    	    {
                    	    otherlv_7=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_7, grammarAccess.getAlwaysFailureNodeAccess().getNameKeyword_2_2_0());
                    	    								
                    	    otherlv_8=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_8, grammarAccess.getAlwaysFailureNodeAccess().getEqualsSignKeyword_2_2_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:10936:9: ( (lv_name_9_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:10937:10: (lv_name_9_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:10937:10: (lv_name_9_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:10938:11: lv_name_9_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getAlwaysFailureNodeAccess().getNameEStringParserRuleCall_2_2_2_0());
                    	    										
                    	    pushFollow(FOLLOW_29);
                    	    lv_name_9_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getAlwaysFailureNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_9_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:10961:4: ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:10961:4: ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:10962:5: {...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleAlwaysFailureNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:10962:114: ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:10963:6: ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:10966:9: ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:10966:10: {...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleAlwaysFailureNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:10966:19: (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:10966:20: otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_10=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_10, grammarAccess.getAlwaysFailureNodeAccess().getParametersKeyword_2_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:10970:9: ( (lv_parameters_11_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:10971:10: (lv_parameters_11_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:10971:10: (lv_parameters_11_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:10972:11: lv_parameters_11_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getAlwaysFailureNodeAccess().getParametersParameterParserRuleCall_2_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_30);
                    	    lv_parameters_11_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getAlwaysFailureNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_11_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:10989:9: (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )*
                    	    loop162:
                    	    do {
                    	        int alt162=2;
                    	        int LA162_0 = input.LA(1);

                    	        if ( (LA162_0==Comma) ) {
                    	            alt162=1;
                    	        }


                    	        switch (alt162) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:10990:10: otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_12=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_12, grammarAccess.getAlwaysFailureNodeAccess().getCommaKeyword_2_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:10994:10: ( (lv_parameters_13_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:10995:11: (lv_parameters_13_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:10995:11: (lv_parameters_13_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:10996:12: lv_parameters_13_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getAlwaysFailureNodeAccess().getParametersParameterParserRuleCall_2_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_30);
                    	    	    lv_parameters_13_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getAlwaysFailureNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_13_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop162;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:11020:4: ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:11020:4: ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:11021:5: {...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleAlwaysFailureNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:11021:114: ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:11022:6: ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:11025:9: ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:11025:10: {...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleAlwaysFailureNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:11025:19: (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:11025:20: otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_14=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_14, grammarAccess.getAlwaysFailureNodeAccess().getSatisficesKeyword_2_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:11029:9: ( (lv_satisfices_15_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:11030:10: (lv_satisfices_15_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:11030:10: (lv_satisfices_15_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:11031:11: lv_satisfices_15_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getAlwaysFailureNodeAccess().getSatisficesQualityParserRuleCall_2_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_30);
                    	    lv_satisfices_15_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getAlwaysFailureNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_15_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:11048:9: (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )*
                    	    loop163:
                    	    do {
                    	        int alt163=2;
                    	        int LA163_0 = input.LA(1);

                    	        if ( (LA163_0==Comma) ) {
                    	            alt163=1;
                    	        }


                    	        switch (alt163) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:11049:10: otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_16=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_16, grammarAccess.getAlwaysFailureNodeAccess().getCommaKeyword_2_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:11053:10: ( (lv_satisfices_17_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:11054:11: (lv_satisfices_17_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:11054:11: (lv_satisfices_17_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:11055:12: lv_satisfices_17_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getAlwaysFailureNodeAccess().getSatisficesQualityParserRuleCall_2_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_30);
                    	    	    lv_satisfices_17_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getAlwaysFailureNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_17_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop163;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:11079:4: ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:11079:4: ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:11080:5: {...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleAlwaysFailureNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:11080:114: ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:11081:6: ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:11084:9: ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:11084:10: {...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleAlwaysFailureNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:11084:19: (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:11084:20: otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_18=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_18, grammarAccess.getAlwaysFailureNodeAccess().getSatisfiesKeyword_2_5_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:11088:9: ( (lv_satisfies_19_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:11089:10: (lv_satisfies_19_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:11089:10: (lv_satisfies_19_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:11090:11: lv_satisfies_19_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getAlwaysFailureNodeAccess().getSatisfiesQualityRequirementParserRuleCall_2_5_1_0());
                    	    										
                    	    pushFollow(FOLLOW_30);
                    	    lv_satisfies_19_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getAlwaysFailureNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_19_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:11107:9: (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )*
                    	    loop164:
                    	    do {
                    	        int alt164=2;
                    	        int LA164_0 = input.LA(1);

                    	        if ( (LA164_0==Comma) ) {
                    	            alt164=1;
                    	        }


                    	        switch (alt164) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:11108:10: otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_20=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_20, grammarAccess.getAlwaysFailureNodeAccess().getCommaKeyword_2_5_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:11112:10: ( (lv_satisfies_21_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:11113:11: (lv_satisfies_21_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:11113:11: (lv_satisfies_21_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:11114:12: lv_satisfies_21_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getAlwaysFailureNodeAccess().getSatisfiesQualityRequirementParserRuleCall_2_5_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_30);
                    	    	    lv_satisfies_21_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getAlwaysFailureNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_21_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop164;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 7 :
                    	    // InternalQualityBtCppParser.g:11138:4: ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:11138:4: ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:11139:5: {...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2(), 6) ) {
                    	        throw new FailedPredicateException(input, "ruleAlwaysFailureNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2(), 6)");
                    	    }
                    	    // InternalQualityBtCppParser.g:11139:114: ( ({...}? => (otherlv_22= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:11140:6: ({...}? => (otherlv_22= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2(), 6);
                    	    					
                    	    // InternalQualityBtCppParser.g:11143:9: ({...}? => (otherlv_22= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:11143:10: {...}? => (otherlv_22= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleAlwaysFailureNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:11143:19: (otherlv_22= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:11143:20: otherlv_22= RightParenthesis
                    	    {
                    	    otherlv_22=(Token)match(input,RightParenthesis,FOLLOW_29); 

                    	    									newLeafNode(otherlv_22, grammarAccess.getAlwaysFailureNodeAccess().getRightParenthesisKeyword_2_6());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt165 >= 1 ) break loop165;
                                EarlyExitException eee =
                                    new EarlyExitException(165, input);
                                throw eee;
                        }
                        cnt165++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2()) ) {
                        throw new FailedPredicateException(input, "ruleAlwaysFailureNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2());
                    				

                    }
                    break;

            }


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAlwaysFailureNode"


    // $ANTLR start "entryRuleAlwaysSuccessNode"
    // InternalQualityBtCppParser.g:11165:1: entryRuleAlwaysSuccessNode returns [EObject current=null] : iv_ruleAlwaysSuccessNode= ruleAlwaysSuccessNode EOF ;
    public final EObject entryRuleAlwaysSuccessNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAlwaysSuccessNode = null;


        try {
            // InternalQualityBtCppParser.g:11165:58: (iv_ruleAlwaysSuccessNode= ruleAlwaysSuccessNode EOF )
            // InternalQualityBtCppParser.g:11166:2: iv_ruleAlwaysSuccessNode= ruleAlwaysSuccessNode EOF
            {
             newCompositeNode(grammarAccess.getAlwaysSuccessNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleAlwaysSuccessNode=ruleAlwaysSuccessNode();

            state._fsp--;

             current =iv_ruleAlwaysSuccessNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAlwaysSuccessNode"


    // $ANTLR start "ruleAlwaysSuccessNode"
    // InternalQualityBtCppParser.g:11172:1: ruleAlwaysSuccessNode returns [EObject current=null] : ( () otherlv_1= AlwaysSuccess ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? ) ;
    public final EObject ruleAlwaysSuccessNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        AntlrDatatypeRuleToken lv_ID_6_0 = null;

        AntlrDatatypeRuleToken lv_name_9_0 = null;

        EObject lv_parameters_11_0 = null;

        EObject lv_parameters_13_0 = null;

        EObject lv_satisfices_15_0 = null;

        EObject lv_satisfices_17_0 = null;

        EObject lv_satisfies_19_0 = null;

        EObject lv_satisfies_21_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:11178:2: ( ( () otherlv_1= AlwaysSuccess ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? ) )
            // InternalQualityBtCppParser.g:11179:2: ( () otherlv_1= AlwaysSuccess ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? )
            {
            // InternalQualityBtCppParser.g:11179:2: ( () otherlv_1= AlwaysSuccess ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? )
            // InternalQualityBtCppParser.g:11180:3: () otherlv_1= AlwaysSuccess ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            {
            // InternalQualityBtCppParser.g:11180:3: ()
            // InternalQualityBtCppParser.g:11181:4: 
            {

            				current = forceCreateModelElement(
            					grammarAccess.getAlwaysSuccessNodeAccess().getAlwaysSuccessNodeAction_0(),
            					current);
            			

            }

            otherlv_1=(Token)match(input,AlwaysSuccess,FOLLOW_29); 

            			newLeafNode(otherlv_1, grammarAccess.getAlwaysSuccessNodeAccess().getAlwaysSuccessKeyword_1());
            		
            // InternalQualityBtCppParser.g:11191:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt171=2;
            int LA171_0 = input.LA(1);

            if ( ((LA171_0>=Parameters && LA171_0<=Satisfies)||LA171_0==Name||LA171_0==ID||(LA171_0>=LeftParenthesis && LA171_0<=RightParenthesis)) ) {
                alt171=1;
            }
            switch (alt171) {
                case 1 :
                    // InternalQualityBtCppParser.g:11192:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:11192:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:11193:5: ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2());
                    				
                    // InternalQualityBtCppParser.g:11196:5: ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:11197:6: ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:11197:6: ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+
                    int cnt170=0;
                    loop170:
                    do {
                        int alt170=8;
                        int LA170_0 = input.LA(1);

                        if ( LA170_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2(), 0) ) {
                            alt170=1;
                        }
                        else if ( LA170_0 == ID && getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2(), 1) ) {
                            alt170=2;
                        }
                        else if ( LA170_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2(), 2) ) {
                            alt170=3;
                        }
                        else if ( LA170_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2(), 3) ) {
                            alt170=4;
                        }
                        else if ( LA170_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2(), 4) ) {
                            alt170=5;
                        }
                        else if ( LA170_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2(), 5) ) {
                            alt170=6;
                        }
                        else if ( LA170_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2(), 6) ) {
                            alt170=7;
                        }


                        switch (alt170) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:11198:4: ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:11198:4: ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:11199:5: {...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleAlwaysSuccessNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:11199:114: ( ({...}? => (otherlv_3= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:11200:6: ({...}? => (otherlv_3= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:11203:9: ({...}? => (otherlv_3= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:11203:10: {...}? => (otherlv_3= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleAlwaysSuccessNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:11203:19: (otherlv_3= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:11203:20: otherlv_3= LeftParenthesis
                    	    {
                    	    otherlv_3=(Token)match(input,LeftParenthesis,FOLLOW_29); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getAlwaysSuccessNodeAccess().getLeftParenthesisKeyword_2_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:11213:4: ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:11213:4: ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:11214:5: {...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleAlwaysSuccessNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:11214:114: ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:11215:6: ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:11218:9: ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:11218:10: {...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleAlwaysSuccessNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:11218:19: (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:11218:20: otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) )
                    	    {
                    	    otherlv_4=(Token)match(input,ID,FOLLOW_8); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getAlwaysSuccessNodeAccess().getIDKeyword_2_1_0());
                    	    								
                    	    otherlv_5=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_5, grammarAccess.getAlwaysSuccessNodeAccess().getEqualsSignKeyword_2_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:11226:9: ( (lv_ID_6_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:11227:10: (lv_ID_6_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:11227:10: (lv_ID_6_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:11228:11: lv_ID_6_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getAlwaysSuccessNodeAccess().getIDEStringParserRuleCall_2_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_29);
                    	    lv_ID_6_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getAlwaysSuccessNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"ID",
                    	    												lv_ID_6_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:11251:4: ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:11251:4: ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:11252:5: {...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleAlwaysSuccessNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:11252:114: ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:11253:6: ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:11256:9: ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:11256:10: {...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleAlwaysSuccessNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:11256:19: (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:11256:20: otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) )
                    	    {
                    	    otherlv_7=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_7, grammarAccess.getAlwaysSuccessNodeAccess().getNameKeyword_2_2_0());
                    	    								
                    	    otherlv_8=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_8, grammarAccess.getAlwaysSuccessNodeAccess().getEqualsSignKeyword_2_2_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:11264:9: ( (lv_name_9_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:11265:10: (lv_name_9_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:11265:10: (lv_name_9_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:11266:11: lv_name_9_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getAlwaysSuccessNodeAccess().getNameEStringParserRuleCall_2_2_2_0());
                    	    										
                    	    pushFollow(FOLLOW_29);
                    	    lv_name_9_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getAlwaysSuccessNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_9_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:11289:4: ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:11289:4: ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:11290:5: {...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleAlwaysSuccessNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:11290:114: ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:11291:6: ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:11294:9: ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:11294:10: {...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleAlwaysSuccessNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:11294:19: (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:11294:20: otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_10=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_10, grammarAccess.getAlwaysSuccessNodeAccess().getParametersKeyword_2_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:11298:9: ( (lv_parameters_11_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:11299:10: (lv_parameters_11_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:11299:10: (lv_parameters_11_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:11300:11: lv_parameters_11_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getAlwaysSuccessNodeAccess().getParametersParameterParserRuleCall_2_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_30);
                    	    lv_parameters_11_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getAlwaysSuccessNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_11_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:11317:9: (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )*
                    	    loop167:
                    	    do {
                    	        int alt167=2;
                    	        int LA167_0 = input.LA(1);

                    	        if ( (LA167_0==Comma) ) {
                    	            alt167=1;
                    	        }


                    	        switch (alt167) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:11318:10: otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_12=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_12, grammarAccess.getAlwaysSuccessNodeAccess().getCommaKeyword_2_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:11322:10: ( (lv_parameters_13_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:11323:11: (lv_parameters_13_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:11323:11: (lv_parameters_13_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:11324:12: lv_parameters_13_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getAlwaysSuccessNodeAccess().getParametersParameterParserRuleCall_2_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_30);
                    	    	    lv_parameters_13_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getAlwaysSuccessNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_13_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop167;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:11348:4: ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:11348:4: ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:11349:5: {...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleAlwaysSuccessNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:11349:114: ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:11350:6: ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:11353:9: ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:11353:10: {...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleAlwaysSuccessNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:11353:19: (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:11353:20: otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_14=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_14, grammarAccess.getAlwaysSuccessNodeAccess().getSatisficesKeyword_2_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:11357:9: ( (lv_satisfices_15_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:11358:10: (lv_satisfices_15_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:11358:10: (lv_satisfices_15_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:11359:11: lv_satisfices_15_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getAlwaysSuccessNodeAccess().getSatisficesQualityParserRuleCall_2_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_30);
                    	    lv_satisfices_15_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getAlwaysSuccessNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_15_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:11376:9: (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )*
                    	    loop168:
                    	    do {
                    	        int alt168=2;
                    	        int LA168_0 = input.LA(1);

                    	        if ( (LA168_0==Comma) ) {
                    	            alt168=1;
                    	        }


                    	        switch (alt168) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:11377:10: otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_16=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_16, grammarAccess.getAlwaysSuccessNodeAccess().getCommaKeyword_2_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:11381:10: ( (lv_satisfices_17_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:11382:11: (lv_satisfices_17_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:11382:11: (lv_satisfices_17_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:11383:12: lv_satisfices_17_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getAlwaysSuccessNodeAccess().getSatisficesQualityParserRuleCall_2_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_30);
                    	    	    lv_satisfices_17_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getAlwaysSuccessNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_17_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop168;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:11407:4: ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:11407:4: ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:11408:5: {...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleAlwaysSuccessNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:11408:114: ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:11409:6: ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:11412:9: ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:11412:10: {...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleAlwaysSuccessNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:11412:19: (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:11412:20: otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_18=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_18, grammarAccess.getAlwaysSuccessNodeAccess().getSatisfiesKeyword_2_5_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:11416:9: ( (lv_satisfies_19_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:11417:10: (lv_satisfies_19_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:11417:10: (lv_satisfies_19_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:11418:11: lv_satisfies_19_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getAlwaysSuccessNodeAccess().getSatisfiesQualityRequirementParserRuleCall_2_5_1_0());
                    	    										
                    	    pushFollow(FOLLOW_30);
                    	    lv_satisfies_19_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getAlwaysSuccessNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_19_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:11435:9: (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )*
                    	    loop169:
                    	    do {
                    	        int alt169=2;
                    	        int LA169_0 = input.LA(1);

                    	        if ( (LA169_0==Comma) ) {
                    	            alt169=1;
                    	        }


                    	        switch (alt169) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:11436:10: otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_20=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_20, grammarAccess.getAlwaysSuccessNodeAccess().getCommaKeyword_2_5_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:11440:10: ( (lv_satisfies_21_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:11441:11: (lv_satisfies_21_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:11441:11: (lv_satisfies_21_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:11442:12: lv_satisfies_21_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getAlwaysSuccessNodeAccess().getSatisfiesQualityRequirementParserRuleCall_2_5_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_30);
                    	    	    lv_satisfies_21_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getAlwaysSuccessNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_21_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop169;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 7 :
                    	    // InternalQualityBtCppParser.g:11466:4: ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:11466:4: ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:11467:5: {...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2(), 6) ) {
                    	        throw new FailedPredicateException(input, "ruleAlwaysSuccessNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2(), 6)");
                    	    }
                    	    // InternalQualityBtCppParser.g:11467:114: ( ({...}? => (otherlv_22= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:11468:6: ({...}? => (otherlv_22= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2(), 6);
                    	    					
                    	    // InternalQualityBtCppParser.g:11471:9: ({...}? => (otherlv_22= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:11471:10: {...}? => (otherlv_22= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleAlwaysSuccessNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:11471:19: (otherlv_22= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:11471:20: otherlv_22= RightParenthesis
                    	    {
                    	    otherlv_22=(Token)match(input,RightParenthesis,FOLLOW_29); 

                    	    									newLeafNode(otherlv_22, grammarAccess.getAlwaysSuccessNodeAccess().getRightParenthesisKeyword_2_6());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt170 >= 1 ) break loop170;
                                EarlyExitException eee =
                                    new EarlyExitException(170, input);
                                throw eee;
                        }
                        cnt170++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2()) ) {
                        throw new FailedPredicateException(input, "ruleAlwaysSuccessNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2());
                    				

                    }
                    break;

            }


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAlwaysSuccessNode"


    // $ANTLR start "entryRuleSetBlackboardNode"
    // InternalQualityBtCppParser.g:11493:1: entryRuleSetBlackboardNode returns [EObject current=null] : iv_ruleSetBlackboardNode= ruleSetBlackboardNode EOF ;
    public final EObject entryRuleSetBlackboardNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSetBlackboardNode = null;


        try {
            // InternalQualityBtCppParser.g:11493:58: (iv_ruleSetBlackboardNode= ruleSetBlackboardNode EOF )
            // InternalQualityBtCppParser.g:11494:2: iv_ruleSetBlackboardNode= ruleSetBlackboardNode EOF
            {
             newCompositeNode(grammarAccess.getSetBlackboardNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleSetBlackboardNode=ruleSetBlackboardNode();

            state._fsp--;

             current =iv_ruleSetBlackboardNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSetBlackboardNode"


    // $ANTLR start "ruleSetBlackboardNode"
    // InternalQualityBtCppParser.g:11500:1: ruleSetBlackboardNode returns [EObject current=null] : ( () otherlv_1= SetBlackboard ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Value otherlv_11= EqualsSign ( (lv_value_12_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Output_key otherlv_14= EqualsSign ( (lv_output_key_15_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= Parameters ( (lv_parameters_17_0= ruleParameter ) ) (otherlv_18= Comma ( (lv_parameters_19_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Satisfices ( (lv_satisfices_21_0= ruleQuality ) ) (otherlv_22= Comma ( (lv_satisfices_23_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= Satisfies ( (lv_satisfies_25_0= ruleQualityRequirement ) ) (otherlv_26= Comma ( (lv_satisfies_27_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= RightParenthesis ) ) ) ) )+ {...}?) ) )? ) ;
    public final EObject ruleSetBlackboardNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        Token otherlv_24=null;
        Token otherlv_26=null;
        Token otherlv_28=null;
        AntlrDatatypeRuleToken lv_ID_6_0 = null;

        AntlrDatatypeRuleToken lv_name_9_0 = null;

        AntlrDatatypeRuleToken lv_value_12_0 = null;

        AntlrDatatypeRuleToken lv_output_key_15_0 = null;

        EObject lv_parameters_17_0 = null;

        EObject lv_parameters_19_0 = null;

        EObject lv_satisfices_21_0 = null;

        EObject lv_satisfices_23_0 = null;

        EObject lv_satisfies_25_0 = null;

        EObject lv_satisfies_27_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:11506:2: ( ( () otherlv_1= SetBlackboard ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Value otherlv_11= EqualsSign ( (lv_value_12_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Output_key otherlv_14= EqualsSign ( (lv_output_key_15_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= Parameters ( (lv_parameters_17_0= ruleParameter ) ) (otherlv_18= Comma ( (lv_parameters_19_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Satisfices ( (lv_satisfices_21_0= ruleQuality ) ) (otherlv_22= Comma ( (lv_satisfices_23_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= Satisfies ( (lv_satisfies_25_0= ruleQualityRequirement ) ) (otherlv_26= Comma ( (lv_satisfies_27_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= RightParenthesis ) ) ) ) )+ {...}?) ) )? ) )
            // InternalQualityBtCppParser.g:11507:2: ( () otherlv_1= SetBlackboard ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Value otherlv_11= EqualsSign ( (lv_value_12_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Output_key otherlv_14= EqualsSign ( (lv_output_key_15_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= Parameters ( (lv_parameters_17_0= ruleParameter ) ) (otherlv_18= Comma ( (lv_parameters_19_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Satisfices ( (lv_satisfices_21_0= ruleQuality ) ) (otherlv_22= Comma ( (lv_satisfices_23_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= Satisfies ( (lv_satisfies_25_0= ruleQualityRequirement ) ) (otherlv_26= Comma ( (lv_satisfies_27_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= RightParenthesis ) ) ) ) )+ {...}?) ) )? )
            {
            // InternalQualityBtCppParser.g:11507:2: ( () otherlv_1= SetBlackboard ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Value otherlv_11= EqualsSign ( (lv_value_12_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Output_key otherlv_14= EqualsSign ( (lv_output_key_15_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= Parameters ( (lv_parameters_17_0= ruleParameter ) ) (otherlv_18= Comma ( (lv_parameters_19_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Satisfices ( (lv_satisfices_21_0= ruleQuality ) ) (otherlv_22= Comma ( (lv_satisfices_23_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= Satisfies ( (lv_satisfies_25_0= ruleQualityRequirement ) ) (otherlv_26= Comma ( (lv_satisfies_27_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= RightParenthesis ) ) ) ) )+ {...}?) ) )? )
            // InternalQualityBtCppParser.g:11508:3: () otherlv_1= SetBlackboard ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Value otherlv_11= EqualsSign ( (lv_value_12_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Output_key otherlv_14= EqualsSign ( (lv_output_key_15_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= Parameters ( (lv_parameters_17_0= ruleParameter ) ) (otherlv_18= Comma ( (lv_parameters_19_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Satisfices ( (lv_satisfices_21_0= ruleQuality ) ) (otherlv_22= Comma ( (lv_satisfices_23_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= Satisfies ( (lv_satisfies_25_0= ruleQualityRequirement ) ) (otherlv_26= Comma ( (lv_satisfies_27_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            {
            // InternalQualityBtCppParser.g:11508:3: ()
            // InternalQualityBtCppParser.g:11509:4: 
            {

            				current = forceCreateModelElement(
            					grammarAccess.getSetBlackboardNodeAccess().getSetBlackboardNodeAction_0(),
            					current);
            			

            }

            otherlv_1=(Token)match(input,SetBlackboard,FOLLOW_31); 

            			newLeafNode(otherlv_1, grammarAccess.getSetBlackboardNodeAccess().getSetBlackboardKeyword_1());
            		
            // InternalQualityBtCppParser.g:11519:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Value otherlv_11= EqualsSign ( (lv_value_12_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Output_key otherlv_14= EqualsSign ( (lv_output_key_15_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= Parameters ( (lv_parameters_17_0= ruleParameter ) ) (otherlv_18= Comma ( (lv_parameters_19_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Satisfices ( (lv_satisfices_21_0= ruleQuality ) ) (otherlv_22= Comma ( (lv_satisfices_23_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= Satisfies ( (lv_satisfies_25_0= ruleQualityRequirement ) ) (otherlv_26= Comma ( (lv_satisfies_27_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt176=2;
            int LA176_0 = input.LA(1);

            if ( ((LA176_0>=Output_key && LA176_0<=Satisfies)||LA176_0==Value||LA176_0==Name||LA176_0==ID||(LA176_0>=LeftParenthesis && LA176_0<=RightParenthesis)) ) {
                alt176=1;
            }
            switch (alt176) {
                case 1 :
                    // InternalQualityBtCppParser.g:11520:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Value otherlv_11= EqualsSign ( (lv_value_12_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Output_key otherlv_14= EqualsSign ( (lv_output_key_15_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= Parameters ( (lv_parameters_17_0= ruleParameter ) ) (otherlv_18= Comma ( (lv_parameters_19_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Satisfices ( (lv_satisfices_21_0= ruleQuality ) ) (otherlv_22= Comma ( (lv_satisfices_23_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= Satisfies ( (lv_satisfies_25_0= ruleQualityRequirement ) ) (otherlv_26= Comma ( (lv_satisfies_27_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:11520:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Value otherlv_11= EqualsSign ( (lv_value_12_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Output_key otherlv_14= EqualsSign ( (lv_output_key_15_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= Parameters ( (lv_parameters_17_0= ruleParameter ) ) (otherlv_18= Comma ( (lv_parameters_19_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Satisfices ( (lv_satisfices_21_0= ruleQuality ) ) (otherlv_22= Comma ( (lv_satisfices_23_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= Satisfies ( (lv_satisfies_25_0= ruleQualityRequirement ) ) (otherlv_26= Comma ( (lv_satisfies_27_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:11521:5: ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Value otherlv_11= EqualsSign ( (lv_value_12_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Output_key otherlv_14= EqualsSign ( (lv_output_key_15_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= Parameters ( (lv_parameters_17_0= ruleParameter ) ) (otherlv_18= Comma ( (lv_parameters_19_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Satisfices ( (lv_satisfices_21_0= ruleQuality ) ) (otherlv_22= Comma ( (lv_satisfices_23_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= Satisfies ( (lv_satisfies_25_0= ruleQualityRequirement ) ) (otherlv_26= Comma ( (lv_satisfies_27_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2());
                    				
                    // InternalQualityBtCppParser.g:11524:5: ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Value otherlv_11= EqualsSign ( (lv_value_12_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Output_key otherlv_14= EqualsSign ( (lv_output_key_15_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= Parameters ( (lv_parameters_17_0= ruleParameter ) ) (otherlv_18= Comma ( (lv_parameters_19_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Satisfices ( (lv_satisfices_21_0= ruleQuality ) ) (otherlv_22= Comma ( (lv_satisfices_23_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= Satisfies ( (lv_satisfies_25_0= ruleQualityRequirement ) ) (otherlv_26= Comma ( (lv_satisfies_27_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:11525:6: ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Value otherlv_11= EqualsSign ( (lv_value_12_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Output_key otherlv_14= EqualsSign ( (lv_output_key_15_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= Parameters ( (lv_parameters_17_0= ruleParameter ) ) (otherlv_18= Comma ( (lv_parameters_19_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Satisfices ( (lv_satisfices_21_0= ruleQuality ) ) (otherlv_22= Comma ( (lv_satisfices_23_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= Satisfies ( (lv_satisfies_25_0= ruleQualityRequirement ) ) (otherlv_26= Comma ( (lv_satisfies_27_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:11525:6: ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Value otherlv_11= EqualsSign ( (lv_value_12_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Output_key otherlv_14= EqualsSign ( (lv_output_key_15_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= Parameters ( (lv_parameters_17_0= ruleParameter ) ) (otherlv_18= Comma ( (lv_parameters_19_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Satisfices ( (lv_satisfices_21_0= ruleQuality ) ) (otherlv_22= Comma ( (lv_satisfices_23_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= Satisfies ( (lv_satisfies_25_0= ruleQualityRequirement ) ) (otherlv_26= Comma ( (lv_satisfies_27_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= RightParenthesis ) ) ) ) )+
                    int cnt175=0;
                    loop175:
                    do {
                        int alt175=10;
                        alt175 = dfa175.predict(input);
                        switch (alt175) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:11526:4: ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:11526:4: ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:11527:5: {...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleSetBlackboardNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:11527:114: ( ({...}? => (otherlv_3= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:11528:6: ({...}? => (otherlv_3= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:11531:9: ({...}? => (otherlv_3= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:11531:10: {...}? => (otherlv_3= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSetBlackboardNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:11531:19: (otherlv_3= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:11531:20: otherlv_3= LeftParenthesis
                    	    {
                    	    otherlv_3=(Token)match(input,LeftParenthesis,FOLLOW_31); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getSetBlackboardNodeAccess().getLeftParenthesisKeyword_2_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:11541:4: ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:11541:4: ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:11542:5: {...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleSetBlackboardNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:11542:114: ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:11543:6: ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:11546:9: ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:11546:10: {...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSetBlackboardNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:11546:19: (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:11546:20: otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) )
                    	    {
                    	    otherlv_4=(Token)match(input,ID,FOLLOW_8); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getSetBlackboardNodeAccess().getIDKeyword_2_1_0());
                    	    								
                    	    otherlv_5=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_5, grammarAccess.getSetBlackboardNodeAccess().getEqualsSignKeyword_2_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:11554:9: ( (lv_ID_6_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:11555:10: (lv_ID_6_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:11555:10: (lv_ID_6_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:11556:11: lv_ID_6_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getSetBlackboardNodeAccess().getIDEStringParserRuleCall_2_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_31);
                    	    lv_ID_6_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getSetBlackboardNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"ID",
                    	    												lv_ID_6_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:11579:4: ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:11579:4: ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:11580:5: {...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleSetBlackboardNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:11580:114: ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:11581:6: ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:11584:9: ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:11584:10: {...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSetBlackboardNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:11584:19: (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:11584:20: otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) )
                    	    {
                    	    otherlv_7=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_7, grammarAccess.getSetBlackboardNodeAccess().getNameKeyword_2_2_0());
                    	    								
                    	    otherlv_8=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_8, grammarAccess.getSetBlackboardNodeAccess().getEqualsSignKeyword_2_2_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:11592:9: ( (lv_name_9_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:11593:10: (lv_name_9_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:11593:10: (lv_name_9_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:11594:11: lv_name_9_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getSetBlackboardNodeAccess().getNameEStringParserRuleCall_2_2_2_0());
                    	    										
                    	    pushFollow(FOLLOW_31);
                    	    lv_name_9_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getSetBlackboardNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_9_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:11617:4: ({...}? => ( ({...}? => (otherlv_10= Value otherlv_11= EqualsSign ( (lv_value_12_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:11617:4: ({...}? => ( ({...}? => (otherlv_10= Value otherlv_11= EqualsSign ( (lv_value_12_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:11618:5: {...}? => ( ({...}? => (otherlv_10= Value otherlv_11= EqualsSign ( (lv_value_12_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleSetBlackboardNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:11618:114: ( ({...}? => (otherlv_10= Value otherlv_11= EqualsSign ( (lv_value_12_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:11619:6: ({...}? => (otherlv_10= Value otherlv_11= EqualsSign ( (lv_value_12_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:11622:9: ({...}? => (otherlv_10= Value otherlv_11= EqualsSign ( (lv_value_12_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:11622:10: {...}? => (otherlv_10= Value otherlv_11= EqualsSign ( (lv_value_12_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSetBlackboardNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:11622:19: (otherlv_10= Value otherlv_11= EqualsSign ( (lv_value_12_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:11622:20: otherlv_10= Value otherlv_11= EqualsSign ( (lv_value_12_0= ruleEString ) )
                    	    {
                    	    otherlv_10=(Token)match(input,Value,FOLLOW_8); 

                    	    									newLeafNode(otherlv_10, grammarAccess.getSetBlackboardNodeAccess().getValueKeyword_2_3_0());
                    	    								
                    	    otherlv_11=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_11, grammarAccess.getSetBlackboardNodeAccess().getEqualsSignKeyword_2_3_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:11630:9: ( (lv_value_12_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:11631:10: (lv_value_12_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:11631:10: (lv_value_12_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:11632:11: lv_value_12_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getSetBlackboardNodeAccess().getValueEStringParserRuleCall_2_3_2_0());
                    	    										
                    	    pushFollow(FOLLOW_31);
                    	    lv_value_12_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getSetBlackboardNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"value",
                    	    												lv_value_12_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:11655:4: ({...}? => ( ({...}? => (otherlv_13= Output_key otherlv_14= EqualsSign ( (lv_output_key_15_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:11655:4: ({...}? => ( ({...}? => (otherlv_13= Output_key otherlv_14= EqualsSign ( (lv_output_key_15_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:11656:5: {...}? => ( ({...}? => (otherlv_13= Output_key otherlv_14= EqualsSign ( (lv_output_key_15_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleSetBlackboardNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:11656:114: ( ({...}? => (otherlv_13= Output_key otherlv_14= EqualsSign ( (lv_output_key_15_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:11657:6: ({...}? => (otherlv_13= Output_key otherlv_14= EqualsSign ( (lv_output_key_15_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:11660:9: ({...}? => (otherlv_13= Output_key otherlv_14= EqualsSign ( (lv_output_key_15_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:11660:10: {...}? => (otherlv_13= Output_key otherlv_14= EqualsSign ( (lv_output_key_15_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSetBlackboardNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:11660:19: (otherlv_13= Output_key otherlv_14= EqualsSign ( (lv_output_key_15_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:11660:20: otherlv_13= Output_key otherlv_14= EqualsSign ( (lv_output_key_15_0= ruleEString ) )
                    	    {
                    	    otherlv_13=(Token)match(input,Output_key,FOLLOW_8); 

                    	    									newLeafNode(otherlv_13, grammarAccess.getSetBlackboardNodeAccess().getOutput_keyKeyword_2_4_0());
                    	    								
                    	    otherlv_14=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_14, grammarAccess.getSetBlackboardNodeAccess().getEqualsSignKeyword_2_4_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:11668:9: ( (lv_output_key_15_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:11669:10: (lv_output_key_15_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:11669:10: (lv_output_key_15_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:11670:11: lv_output_key_15_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getSetBlackboardNodeAccess().getOutput_keyEStringParserRuleCall_2_4_2_0());
                    	    										
                    	    pushFollow(FOLLOW_31);
                    	    lv_output_key_15_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getSetBlackboardNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"output_key",
                    	    												lv_output_key_15_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:11693:4: ({...}? => ( ({...}? => (otherlv_16= Parameters ( (lv_parameters_17_0= ruleParameter ) ) (otherlv_18= Comma ( (lv_parameters_19_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:11693:4: ({...}? => ( ({...}? => (otherlv_16= Parameters ( (lv_parameters_17_0= ruleParameter ) ) (otherlv_18= Comma ( (lv_parameters_19_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:11694:5: {...}? => ( ({...}? => (otherlv_16= Parameters ( (lv_parameters_17_0= ruleParameter ) ) (otherlv_18= Comma ( (lv_parameters_19_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleSetBlackboardNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:11694:114: ( ({...}? => (otherlv_16= Parameters ( (lv_parameters_17_0= ruleParameter ) ) (otherlv_18= Comma ( (lv_parameters_19_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:11695:6: ({...}? => (otherlv_16= Parameters ( (lv_parameters_17_0= ruleParameter ) ) (otherlv_18= Comma ( (lv_parameters_19_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:11698:9: ({...}? => (otherlv_16= Parameters ( (lv_parameters_17_0= ruleParameter ) ) (otherlv_18= Comma ( (lv_parameters_19_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:11698:10: {...}? => (otherlv_16= Parameters ( (lv_parameters_17_0= ruleParameter ) ) (otherlv_18= Comma ( (lv_parameters_19_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSetBlackboardNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:11698:19: (otherlv_16= Parameters ( (lv_parameters_17_0= ruleParameter ) ) (otherlv_18= Comma ( (lv_parameters_19_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:11698:20: otherlv_16= Parameters ( (lv_parameters_17_0= ruleParameter ) ) (otherlv_18= Comma ( (lv_parameters_19_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_16=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_16, grammarAccess.getSetBlackboardNodeAccess().getParametersKeyword_2_5_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:11702:9: ( (lv_parameters_17_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:11703:10: (lv_parameters_17_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:11703:10: (lv_parameters_17_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:11704:11: lv_parameters_17_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getSetBlackboardNodeAccess().getParametersParameterParserRuleCall_2_5_1_0());
                    	    										
                    	    pushFollow(FOLLOW_32);
                    	    lv_parameters_17_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getSetBlackboardNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_17_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:11721:9: (otherlv_18= Comma ( (lv_parameters_19_0= ruleParameter ) ) )*
                    	    loop172:
                    	    do {
                    	        int alt172=2;
                    	        int LA172_0 = input.LA(1);

                    	        if ( (LA172_0==Comma) ) {
                    	            alt172=1;
                    	        }


                    	        switch (alt172) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:11722:10: otherlv_18= Comma ( (lv_parameters_19_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_18=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_18, grammarAccess.getSetBlackboardNodeAccess().getCommaKeyword_2_5_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:11726:10: ( (lv_parameters_19_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:11727:11: (lv_parameters_19_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:11727:11: (lv_parameters_19_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:11728:12: lv_parameters_19_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getSetBlackboardNodeAccess().getParametersParameterParserRuleCall_2_5_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_32);
                    	    	    lv_parameters_19_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getSetBlackboardNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_19_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop172;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 7 :
                    	    // InternalQualityBtCppParser.g:11752:4: ({...}? => ( ({...}? => (otherlv_20= Satisfices ( (lv_satisfices_21_0= ruleQuality ) ) (otherlv_22= Comma ( (lv_satisfices_23_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:11752:4: ({...}? => ( ({...}? => (otherlv_20= Satisfices ( (lv_satisfices_21_0= ruleQuality ) ) (otherlv_22= Comma ( (lv_satisfices_23_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:11753:5: {...}? => ( ({...}? => (otherlv_20= Satisfices ( (lv_satisfices_21_0= ruleQuality ) ) (otherlv_22= Comma ( (lv_satisfices_23_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 6) ) {
                    	        throw new FailedPredicateException(input, "ruleSetBlackboardNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 6)");
                    	    }
                    	    // InternalQualityBtCppParser.g:11753:114: ( ({...}? => (otherlv_20= Satisfices ( (lv_satisfices_21_0= ruleQuality ) ) (otherlv_22= Comma ( (lv_satisfices_23_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:11754:6: ({...}? => (otherlv_20= Satisfices ( (lv_satisfices_21_0= ruleQuality ) ) (otherlv_22= Comma ( (lv_satisfices_23_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 6);
                    	    					
                    	    // InternalQualityBtCppParser.g:11757:9: ({...}? => (otherlv_20= Satisfices ( (lv_satisfices_21_0= ruleQuality ) ) (otherlv_22= Comma ( (lv_satisfices_23_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:11757:10: {...}? => (otherlv_20= Satisfices ( (lv_satisfices_21_0= ruleQuality ) ) (otherlv_22= Comma ( (lv_satisfices_23_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSetBlackboardNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:11757:19: (otherlv_20= Satisfices ( (lv_satisfices_21_0= ruleQuality ) ) (otherlv_22= Comma ( (lv_satisfices_23_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:11757:20: otherlv_20= Satisfices ( (lv_satisfices_21_0= ruleQuality ) ) (otherlv_22= Comma ( (lv_satisfices_23_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_20=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_20, grammarAccess.getSetBlackboardNodeAccess().getSatisficesKeyword_2_6_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:11761:9: ( (lv_satisfices_21_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:11762:10: (lv_satisfices_21_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:11762:10: (lv_satisfices_21_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:11763:11: lv_satisfices_21_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getSetBlackboardNodeAccess().getSatisficesQualityParserRuleCall_2_6_1_0());
                    	    										
                    	    pushFollow(FOLLOW_32);
                    	    lv_satisfices_21_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getSetBlackboardNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_21_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:11780:9: (otherlv_22= Comma ( (lv_satisfices_23_0= ruleQuality ) ) )*
                    	    loop173:
                    	    do {
                    	        int alt173=2;
                    	        int LA173_0 = input.LA(1);

                    	        if ( (LA173_0==Comma) ) {
                    	            alt173=1;
                    	        }


                    	        switch (alt173) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:11781:10: otherlv_22= Comma ( (lv_satisfices_23_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_22=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_22, grammarAccess.getSetBlackboardNodeAccess().getCommaKeyword_2_6_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:11785:10: ( (lv_satisfices_23_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:11786:11: (lv_satisfices_23_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:11786:11: (lv_satisfices_23_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:11787:12: lv_satisfices_23_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getSetBlackboardNodeAccess().getSatisficesQualityParserRuleCall_2_6_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_32);
                    	    	    lv_satisfices_23_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getSetBlackboardNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_23_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop173;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 8 :
                    	    // InternalQualityBtCppParser.g:11811:4: ({...}? => ( ({...}? => (otherlv_24= Satisfies ( (lv_satisfies_25_0= ruleQualityRequirement ) ) (otherlv_26= Comma ( (lv_satisfies_27_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:11811:4: ({...}? => ( ({...}? => (otherlv_24= Satisfies ( (lv_satisfies_25_0= ruleQualityRequirement ) ) (otherlv_26= Comma ( (lv_satisfies_27_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:11812:5: {...}? => ( ({...}? => (otherlv_24= Satisfies ( (lv_satisfies_25_0= ruleQualityRequirement ) ) (otherlv_26= Comma ( (lv_satisfies_27_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 7) ) {
                    	        throw new FailedPredicateException(input, "ruleSetBlackboardNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 7)");
                    	    }
                    	    // InternalQualityBtCppParser.g:11812:114: ( ({...}? => (otherlv_24= Satisfies ( (lv_satisfies_25_0= ruleQualityRequirement ) ) (otherlv_26= Comma ( (lv_satisfies_27_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:11813:6: ({...}? => (otherlv_24= Satisfies ( (lv_satisfies_25_0= ruleQualityRequirement ) ) (otherlv_26= Comma ( (lv_satisfies_27_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 7);
                    	    					
                    	    // InternalQualityBtCppParser.g:11816:9: ({...}? => (otherlv_24= Satisfies ( (lv_satisfies_25_0= ruleQualityRequirement ) ) (otherlv_26= Comma ( (lv_satisfies_27_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:11816:10: {...}? => (otherlv_24= Satisfies ( (lv_satisfies_25_0= ruleQualityRequirement ) ) (otherlv_26= Comma ( (lv_satisfies_27_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSetBlackboardNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:11816:19: (otherlv_24= Satisfies ( (lv_satisfies_25_0= ruleQualityRequirement ) ) (otherlv_26= Comma ( (lv_satisfies_27_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:11816:20: otherlv_24= Satisfies ( (lv_satisfies_25_0= ruleQualityRequirement ) ) (otherlv_26= Comma ( (lv_satisfies_27_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_24=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_24, grammarAccess.getSetBlackboardNodeAccess().getSatisfiesKeyword_2_7_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:11820:9: ( (lv_satisfies_25_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:11821:10: (lv_satisfies_25_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:11821:10: (lv_satisfies_25_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:11822:11: lv_satisfies_25_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getSetBlackboardNodeAccess().getSatisfiesQualityRequirementParserRuleCall_2_7_1_0());
                    	    										
                    	    pushFollow(FOLLOW_32);
                    	    lv_satisfies_25_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getSetBlackboardNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_25_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:11839:9: (otherlv_26= Comma ( (lv_satisfies_27_0= ruleQualityRequirement ) ) )*
                    	    loop174:
                    	    do {
                    	        int alt174=2;
                    	        int LA174_0 = input.LA(1);

                    	        if ( (LA174_0==Comma) ) {
                    	            alt174=1;
                    	        }


                    	        switch (alt174) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:11840:10: otherlv_26= Comma ( (lv_satisfies_27_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_26=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_26, grammarAccess.getSetBlackboardNodeAccess().getCommaKeyword_2_7_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:11844:10: ( (lv_satisfies_27_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:11845:11: (lv_satisfies_27_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:11845:11: (lv_satisfies_27_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:11846:12: lv_satisfies_27_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getSetBlackboardNodeAccess().getSatisfiesQualityRequirementParserRuleCall_2_7_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_32);
                    	    	    lv_satisfies_27_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getSetBlackboardNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_27_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop174;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 9 :
                    	    // InternalQualityBtCppParser.g:11870:4: ({...}? => ( ({...}? => (otherlv_28= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:11870:4: ({...}? => ( ({...}? => (otherlv_28= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:11871:5: {...}? => ( ({...}? => (otherlv_28= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 8) ) {
                    	        throw new FailedPredicateException(input, "ruleSetBlackboardNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 8)");
                    	    }
                    	    // InternalQualityBtCppParser.g:11871:114: ( ({...}? => (otherlv_28= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:11872:6: ({...}? => (otherlv_28= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 8);
                    	    					
                    	    // InternalQualityBtCppParser.g:11875:9: ({...}? => (otherlv_28= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:11875:10: {...}? => (otherlv_28= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSetBlackboardNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:11875:19: (otherlv_28= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:11875:20: otherlv_28= RightParenthesis
                    	    {
                    	    otherlv_28=(Token)match(input,RightParenthesis,FOLLOW_31); 

                    	    									newLeafNode(otherlv_28, grammarAccess.getSetBlackboardNodeAccess().getRightParenthesisKeyword_2_8());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt175 >= 1 ) break loop175;
                                EarlyExitException eee =
                                    new EarlyExitException(175, input);
                                throw eee;
                        }
                        cnt175++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2()) ) {
                        throw new FailedPredicateException(input, "ruleSetBlackboardNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2());
                    				

                    }
                    break;

            }


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSetBlackboardNode"


    // $ANTLR start "entryRuleTestNode"
    // InternalQualityBtCppParser.g:11897:1: entryRuleTestNode returns [EObject current=null] : iv_ruleTestNode= ruleTestNode EOF ;
    public final EObject entryRuleTestNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTestNode = null;


        try {
            // InternalQualityBtCppParser.g:11897:49: (iv_ruleTestNode= ruleTestNode EOF )
            // InternalQualityBtCppParser.g:11898:2: iv_ruleTestNode= ruleTestNode EOF
            {
             newCompositeNode(grammarAccess.getTestNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleTestNode=ruleTestNode();

            state._fsp--;

             current =iv_ruleTestNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTestNode"


    // $ANTLR start "ruleTestNode"
    // InternalQualityBtCppParser.g:11904:1: ruleTestNode returns [EObject current=null] : ( () otherlv_1= Test ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? ) ;
    public final EObject ruleTestNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        AntlrDatatypeRuleToken lv_ID_6_0 = null;

        AntlrDatatypeRuleToken lv_name_9_0 = null;

        EObject lv_parameters_11_0 = null;

        EObject lv_parameters_13_0 = null;

        EObject lv_satisfices_15_0 = null;

        EObject lv_satisfices_17_0 = null;

        EObject lv_satisfies_19_0 = null;

        EObject lv_satisfies_21_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:11910:2: ( ( () otherlv_1= Test ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? ) )
            // InternalQualityBtCppParser.g:11911:2: ( () otherlv_1= Test ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? )
            {
            // InternalQualityBtCppParser.g:11911:2: ( () otherlv_1= Test ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? )
            // InternalQualityBtCppParser.g:11912:3: () otherlv_1= Test ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            {
            // InternalQualityBtCppParser.g:11912:3: ()
            // InternalQualityBtCppParser.g:11913:4: 
            {

            				current = forceCreateModelElement(
            					grammarAccess.getTestNodeAccess().getTestNodeAction_0(),
            					current);
            			

            }

            otherlv_1=(Token)match(input,Test,FOLLOW_29); 

            			newLeafNode(otherlv_1, grammarAccess.getTestNodeAccess().getTestKeyword_1());
            		
            // InternalQualityBtCppParser.g:11923:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt181=2;
            int LA181_0 = input.LA(1);

            if ( ((LA181_0>=Parameters && LA181_0<=Satisfies)||LA181_0==Name||LA181_0==ID||(LA181_0>=LeftParenthesis && LA181_0<=RightParenthesis)) ) {
                alt181=1;
            }
            switch (alt181) {
                case 1 :
                    // InternalQualityBtCppParser.g:11924:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:11924:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:11925:5: ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getTestNodeAccess().getUnorderedGroup_2());
                    				
                    // InternalQualityBtCppParser.g:11928:5: ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:11929:6: ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:11929:6: ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+
                    int cnt180=0;
                    loop180:
                    do {
                        int alt180=8;
                        int LA180_0 = input.LA(1);

                        if ( LA180_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getTestNodeAccess().getUnorderedGroup_2(), 0) ) {
                            alt180=1;
                        }
                        else if ( LA180_0 == ID && getUnorderedGroupHelper().canSelect(grammarAccess.getTestNodeAccess().getUnorderedGroup_2(), 1) ) {
                            alt180=2;
                        }
                        else if ( LA180_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getTestNodeAccess().getUnorderedGroup_2(), 2) ) {
                            alt180=3;
                        }
                        else if ( LA180_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getTestNodeAccess().getUnorderedGroup_2(), 3) ) {
                            alt180=4;
                        }
                        else if ( LA180_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getTestNodeAccess().getUnorderedGroup_2(), 4) ) {
                            alt180=5;
                        }
                        else if ( LA180_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getTestNodeAccess().getUnorderedGroup_2(), 5) ) {
                            alt180=6;
                        }
                        else if ( LA180_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getTestNodeAccess().getUnorderedGroup_2(), 6) ) {
                            alt180=7;
                        }


                        switch (alt180) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:11930:4: ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:11930:4: ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:11931:5: {...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getTestNodeAccess().getUnorderedGroup_2(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleTestNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getTestNodeAccess().getUnorderedGroup_2(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:11931:105: ( ({...}? => (otherlv_3= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:11932:6: ({...}? => (otherlv_3= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getTestNodeAccess().getUnorderedGroup_2(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:11935:9: ({...}? => (otherlv_3= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:11935:10: {...}? => (otherlv_3= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleTestNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:11935:19: (otherlv_3= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:11935:20: otherlv_3= LeftParenthesis
                    	    {
                    	    otherlv_3=(Token)match(input,LeftParenthesis,FOLLOW_29); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getTestNodeAccess().getLeftParenthesisKeyword_2_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTestNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:11945:4: ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:11945:4: ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:11946:5: {...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getTestNodeAccess().getUnorderedGroup_2(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleTestNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getTestNodeAccess().getUnorderedGroup_2(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:11946:105: ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:11947:6: ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getTestNodeAccess().getUnorderedGroup_2(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:11950:9: ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:11950:10: {...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleTestNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:11950:19: (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:11950:20: otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) )
                    	    {
                    	    otherlv_4=(Token)match(input,ID,FOLLOW_8); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getTestNodeAccess().getIDKeyword_2_1_0());
                    	    								
                    	    otherlv_5=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_5, grammarAccess.getTestNodeAccess().getEqualsSignKeyword_2_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:11958:9: ( (lv_ID_6_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:11959:10: (lv_ID_6_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:11959:10: (lv_ID_6_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:11960:11: lv_ID_6_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getTestNodeAccess().getIDEStringParserRuleCall_2_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_29);
                    	    lv_ID_6_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getTestNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"ID",
                    	    												lv_ID_6_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTestNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:11983:4: ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:11983:4: ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:11984:5: {...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getTestNodeAccess().getUnorderedGroup_2(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleTestNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getTestNodeAccess().getUnorderedGroup_2(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:11984:105: ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:11985:6: ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getTestNodeAccess().getUnorderedGroup_2(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:11988:9: ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:11988:10: {...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleTestNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:11988:19: (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:11988:20: otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) )
                    	    {
                    	    otherlv_7=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_7, grammarAccess.getTestNodeAccess().getNameKeyword_2_2_0());
                    	    								
                    	    otherlv_8=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_8, grammarAccess.getTestNodeAccess().getEqualsSignKeyword_2_2_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:11996:9: ( (lv_name_9_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:11997:10: (lv_name_9_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:11997:10: (lv_name_9_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:11998:11: lv_name_9_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getTestNodeAccess().getNameEStringParserRuleCall_2_2_2_0());
                    	    										
                    	    pushFollow(FOLLOW_29);
                    	    lv_name_9_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getTestNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_9_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTestNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:12021:4: ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:12021:4: ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:12022:5: {...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getTestNodeAccess().getUnorderedGroup_2(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleTestNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getTestNodeAccess().getUnorderedGroup_2(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:12022:105: ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:12023:6: ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getTestNodeAccess().getUnorderedGroup_2(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:12026:9: ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:12026:10: {...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleTestNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:12026:19: (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:12026:20: otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_10=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_10, grammarAccess.getTestNodeAccess().getParametersKeyword_2_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:12030:9: ( (lv_parameters_11_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:12031:10: (lv_parameters_11_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:12031:10: (lv_parameters_11_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:12032:11: lv_parameters_11_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getTestNodeAccess().getParametersParameterParserRuleCall_2_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_30);
                    	    lv_parameters_11_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getTestNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_11_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:12049:9: (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )*
                    	    loop177:
                    	    do {
                    	        int alt177=2;
                    	        int LA177_0 = input.LA(1);

                    	        if ( (LA177_0==Comma) ) {
                    	            alt177=1;
                    	        }


                    	        switch (alt177) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:12050:10: otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_12=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_12, grammarAccess.getTestNodeAccess().getCommaKeyword_2_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:12054:10: ( (lv_parameters_13_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:12055:11: (lv_parameters_13_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:12055:11: (lv_parameters_13_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:12056:12: lv_parameters_13_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getTestNodeAccess().getParametersParameterParserRuleCall_2_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_30);
                    	    	    lv_parameters_13_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getTestNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_13_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop177;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTestNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:12080:4: ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:12080:4: ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:12081:5: {...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getTestNodeAccess().getUnorderedGroup_2(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleTestNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getTestNodeAccess().getUnorderedGroup_2(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:12081:105: ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:12082:6: ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getTestNodeAccess().getUnorderedGroup_2(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:12085:9: ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:12085:10: {...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleTestNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:12085:19: (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:12085:20: otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_14=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_14, grammarAccess.getTestNodeAccess().getSatisficesKeyword_2_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:12089:9: ( (lv_satisfices_15_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:12090:10: (lv_satisfices_15_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:12090:10: (lv_satisfices_15_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:12091:11: lv_satisfices_15_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getTestNodeAccess().getSatisficesQualityParserRuleCall_2_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_30);
                    	    lv_satisfices_15_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getTestNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_15_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:12108:9: (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )*
                    	    loop178:
                    	    do {
                    	        int alt178=2;
                    	        int LA178_0 = input.LA(1);

                    	        if ( (LA178_0==Comma) ) {
                    	            alt178=1;
                    	        }


                    	        switch (alt178) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:12109:10: otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_16=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_16, grammarAccess.getTestNodeAccess().getCommaKeyword_2_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:12113:10: ( (lv_satisfices_17_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:12114:11: (lv_satisfices_17_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:12114:11: (lv_satisfices_17_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:12115:12: lv_satisfices_17_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getTestNodeAccess().getSatisficesQualityParserRuleCall_2_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_30);
                    	    	    lv_satisfices_17_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getTestNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_17_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop178;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTestNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:12139:4: ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:12139:4: ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:12140:5: {...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getTestNodeAccess().getUnorderedGroup_2(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleTestNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getTestNodeAccess().getUnorderedGroup_2(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:12140:105: ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:12141:6: ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getTestNodeAccess().getUnorderedGroup_2(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:12144:9: ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:12144:10: {...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleTestNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:12144:19: (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:12144:20: otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_18=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_18, grammarAccess.getTestNodeAccess().getSatisfiesKeyword_2_5_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:12148:9: ( (lv_satisfies_19_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:12149:10: (lv_satisfies_19_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:12149:10: (lv_satisfies_19_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:12150:11: lv_satisfies_19_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getTestNodeAccess().getSatisfiesQualityRequirementParserRuleCall_2_5_1_0());
                    	    										
                    	    pushFollow(FOLLOW_30);
                    	    lv_satisfies_19_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getTestNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_19_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:12167:9: (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )*
                    	    loop179:
                    	    do {
                    	        int alt179=2;
                    	        int LA179_0 = input.LA(1);

                    	        if ( (LA179_0==Comma) ) {
                    	            alt179=1;
                    	        }


                    	        switch (alt179) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:12168:10: otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_20=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_20, grammarAccess.getTestNodeAccess().getCommaKeyword_2_5_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:12172:10: ( (lv_satisfies_21_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:12173:11: (lv_satisfies_21_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:12173:11: (lv_satisfies_21_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:12174:12: lv_satisfies_21_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getTestNodeAccess().getSatisfiesQualityRequirementParserRuleCall_2_5_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_30);
                    	    	    lv_satisfies_21_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getTestNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_21_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop179;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTestNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 7 :
                    	    // InternalQualityBtCppParser.g:12198:4: ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:12198:4: ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:12199:5: {...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getTestNodeAccess().getUnorderedGroup_2(), 6) ) {
                    	        throw new FailedPredicateException(input, "ruleTestNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getTestNodeAccess().getUnorderedGroup_2(), 6)");
                    	    }
                    	    // InternalQualityBtCppParser.g:12199:105: ( ({...}? => (otherlv_22= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:12200:6: ({...}? => (otherlv_22= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getTestNodeAccess().getUnorderedGroup_2(), 6);
                    	    					
                    	    // InternalQualityBtCppParser.g:12203:9: ({...}? => (otherlv_22= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:12203:10: {...}? => (otherlv_22= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleTestNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:12203:19: (otherlv_22= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:12203:20: otherlv_22= RightParenthesis
                    	    {
                    	    otherlv_22=(Token)match(input,RightParenthesis,FOLLOW_29); 

                    	    									newLeafNode(otherlv_22, grammarAccess.getTestNodeAccess().getRightParenthesisKeyword_2_6());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTestNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt180 >= 1 ) break loop180;
                                EarlyExitException eee =
                                    new EarlyExitException(180, input);
                                throw eee;
                        }
                        cnt180++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getTestNodeAccess().getUnorderedGroup_2()) ) {
                        throw new FailedPredicateException(input, "ruleTestNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getTestNodeAccess().getUnorderedGroup_2())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getTestNodeAccess().getUnorderedGroup_2());
                    				

                    }
                    break;

            }


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTestNode"


    // $ANTLR start "entryRuleEntryUpdatedActionNode"
    // InternalQualityBtCppParser.g:12225:1: entryRuleEntryUpdatedActionNode returns [EObject current=null] : iv_ruleEntryUpdatedActionNode= ruleEntryUpdatedActionNode EOF ;
    public final EObject entryRuleEntryUpdatedActionNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEntryUpdatedActionNode = null;


        try {
            // InternalQualityBtCppParser.g:12225:63: (iv_ruleEntryUpdatedActionNode= ruleEntryUpdatedActionNode EOF )
            // InternalQualityBtCppParser.g:12226:2: iv_ruleEntryUpdatedActionNode= ruleEntryUpdatedActionNode EOF
            {
             newCompositeNode(grammarAccess.getEntryUpdatedActionNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleEntryUpdatedActionNode=ruleEntryUpdatedActionNode();

            state._fsp--;

             current =iv_ruleEntryUpdatedActionNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEntryUpdatedActionNode"


    // $ANTLR start "ruleEntryUpdatedActionNode"
    // InternalQualityBtCppParser.g:12232:1: ruleEntryUpdatedActionNode returns [EObject current=null] : ( () otherlv_1= EntryUpdatedAction ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? ) ;
    public final EObject ruleEntryUpdatedActionNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        AntlrDatatypeRuleToken lv_ID_6_0 = null;

        AntlrDatatypeRuleToken lv_name_9_0 = null;

        EObject lv_parameters_11_0 = null;

        EObject lv_parameters_13_0 = null;

        EObject lv_satisfices_15_0 = null;

        EObject lv_satisfices_17_0 = null;

        EObject lv_satisfies_19_0 = null;

        EObject lv_satisfies_21_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:12238:2: ( ( () otherlv_1= EntryUpdatedAction ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? ) )
            // InternalQualityBtCppParser.g:12239:2: ( () otherlv_1= EntryUpdatedAction ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? )
            {
            // InternalQualityBtCppParser.g:12239:2: ( () otherlv_1= EntryUpdatedAction ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? )
            // InternalQualityBtCppParser.g:12240:3: () otherlv_1= EntryUpdatedAction ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            {
            // InternalQualityBtCppParser.g:12240:3: ()
            // InternalQualityBtCppParser.g:12241:4: 
            {

            				current = forceCreateModelElement(
            					grammarAccess.getEntryUpdatedActionNodeAccess().getEntryUpdatedActionNodeAction_0(),
            					current);
            			

            }

            otherlv_1=(Token)match(input,EntryUpdatedAction,FOLLOW_29); 

            			newLeafNode(otherlv_1, grammarAccess.getEntryUpdatedActionNodeAccess().getEntryUpdatedActionKeyword_1());
            		
            // InternalQualityBtCppParser.g:12251:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt186=2;
            int LA186_0 = input.LA(1);

            if ( ((LA186_0>=Parameters && LA186_0<=Satisfies)||LA186_0==Name||LA186_0==ID||(LA186_0>=LeftParenthesis && LA186_0<=RightParenthesis)) ) {
                alt186=1;
            }
            switch (alt186) {
                case 1 :
                    // InternalQualityBtCppParser.g:12252:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:12252:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:12253:5: ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2());
                    				
                    // InternalQualityBtCppParser.g:12256:5: ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:12257:6: ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:12257:6: ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+
                    int cnt185=0;
                    loop185:
                    do {
                        int alt185=8;
                        int LA185_0 = input.LA(1);

                        if ( LA185_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2(), 0) ) {
                            alt185=1;
                        }
                        else if ( LA185_0 == ID && getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2(), 1) ) {
                            alt185=2;
                        }
                        else if ( LA185_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2(), 2) ) {
                            alt185=3;
                        }
                        else if ( LA185_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2(), 3) ) {
                            alt185=4;
                        }
                        else if ( LA185_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2(), 4) ) {
                            alt185=5;
                        }
                        else if ( LA185_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2(), 5) ) {
                            alt185=6;
                        }
                        else if ( LA185_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2(), 6) ) {
                            alt185=7;
                        }


                        switch (alt185) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:12258:4: ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:12258:4: ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:12259:5: {...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleEntryUpdatedActionNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:12259:119: ( ({...}? => (otherlv_3= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:12260:6: ({...}? => (otherlv_3= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:12263:9: ({...}? => (otherlv_3= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:12263:10: {...}? => (otherlv_3= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleEntryUpdatedActionNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:12263:19: (otherlv_3= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:12263:20: otherlv_3= LeftParenthesis
                    	    {
                    	    otherlv_3=(Token)match(input,LeftParenthesis,FOLLOW_29); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getEntryUpdatedActionNodeAccess().getLeftParenthesisKeyword_2_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:12273:4: ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:12273:4: ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:12274:5: {...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleEntryUpdatedActionNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:12274:119: ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:12275:6: ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:12278:9: ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:12278:10: {...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleEntryUpdatedActionNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:12278:19: (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:12278:20: otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) )
                    	    {
                    	    otherlv_4=(Token)match(input,ID,FOLLOW_8); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getEntryUpdatedActionNodeAccess().getIDKeyword_2_1_0());
                    	    								
                    	    otherlv_5=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_5, grammarAccess.getEntryUpdatedActionNodeAccess().getEqualsSignKeyword_2_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:12286:9: ( (lv_ID_6_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:12287:10: (lv_ID_6_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:12287:10: (lv_ID_6_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:12288:11: lv_ID_6_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getEntryUpdatedActionNodeAccess().getIDEStringParserRuleCall_2_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_29);
                    	    lv_ID_6_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getEntryUpdatedActionNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"ID",
                    	    												lv_ID_6_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:12311:4: ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:12311:4: ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:12312:5: {...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleEntryUpdatedActionNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:12312:119: ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:12313:6: ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:12316:9: ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:12316:10: {...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleEntryUpdatedActionNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:12316:19: (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:12316:20: otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) )
                    	    {
                    	    otherlv_7=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_7, grammarAccess.getEntryUpdatedActionNodeAccess().getNameKeyword_2_2_0());
                    	    								
                    	    otherlv_8=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_8, grammarAccess.getEntryUpdatedActionNodeAccess().getEqualsSignKeyword_2_2_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:12324:9: ( (lv_name_9_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:12325:10: (lv_name_9_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:12325:10: (lv_name_9_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:12326:11: lv_name_9_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getEntryUpdatedActionNodeAccess().getNameEStringParserRuleCall_2_2_2_0());
                    	    										
                    	    pushFollow(FOLLOW_29);
                    	    lv_name_9_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getEntryUpdatedActionNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_9_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:12349:4: ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:12349:4: ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:12350:5: {...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleEntryUpdatedActionNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:12350:119: ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:12351:6: ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:12354:9: ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:12354:10: {...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleEntryUpdatedActionNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:12354:19: (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:12354:20: otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_10=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_10, grammarAccess.getEntryUpdatedActionNodeAccess().getParametersKeyword_2_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:12358:9: ( (lv_parameters_11_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:12359:10: (lv_parameters_11_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:12359:10: (lv_parameters_11_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:12360:11: lv_parameters_11_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getEntryUpdatedActionNodeAccess().getParametersParameterParserRuleCall_2_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_30);
                    	    lv_parameters_11_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getEntryUpdatedActionNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_11_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:12377:9: (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )*
                    	    loop182:
                    	    do {
                    	        int alt182=2;
                    	        int LA182_0 = input.LA(1);

                    	        if ( (LA182_0==Comma) ) {
                    	            alt182=1;
                    	        }


                    	        switch (alt182) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:12378:10: otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_12=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_12, grammarAccess.getEntryUpdatedActionNodeAccess().getCommaKeyword_2_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:12382:10: ( (lv_parameters_13_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:12383:11: (lv_parameters_13_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:12383:11: (lv_parameters_13_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:12384:12: lv_parameters_13_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getEntryUpdatedActionNodeAccess().getParametersParameterParserRuleCall_2_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_30);
                    	    	    lv_parameters_13_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getEntryUpdatedActionNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_13_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop182;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:12408:4: ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:12408:4: ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:12409:5: {...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleEntryUpdatedActionNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:12409:119: ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:12410:6: ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:12413:9: ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:12413:10: {...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleEntryUpdatedActionNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:12413:19: (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:12413:20: otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_14=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_14, grammarAccess.getEntryUpdatedActionNodeAccess().getSatisficesKeyword_2_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:12417:9: ( (lv_satisfices_15_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:12418:10: (lv_satisfices_15_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:12418:10: (lv_satisfices_15_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:12419:11: lv_satisfices_15_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getEntryUpdatedActionNodeAccess().getSatisficesQualityParserRuleCall_2_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_30);
                    	    lv_satisfices_15_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getEntryUpdatedActionNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_15_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:12436:9: (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )*
                    	    loop183:
                    	    do {
                    	        int alt183=2;
                    	        int LA183_0 = input.LA(1);

                    	        if ( (LA183_0==Comma) ) {
                    	            alt183=1;
                    	        }


                    	        switch (alt183) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:12437:10: otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_16=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_16, grammarAccess.getEntryUpdatedActionNodeAccess().getCommaKeyword_2_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:12441:10: ( (lv_satisfices_17_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:12442:11: (lv_satisfices_17_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:12442:11: (lv_satisfices_17_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:12443:12: lv_satisfices_17_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getEntryUpdatedActionNodeAccess().getSatisficesQualityParserRuleCall_2_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_30);
                    	    	    lv_satisfices_17_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getEntryUpdatedActionNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_17_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop183;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:12467:4: ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:12467:4: ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:12468:5: {...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleEntryUpdatedActionNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:12468:119: ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:12469:6: ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:12472:9: ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:12472:10: {...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleEntryUpdatedActionNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:12472:19: (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:12472:20: otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_18=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_18, grammarAccess.getEntryUpdatedActionNodeAccess().getSatisfiesKeyword_2_5_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:12476:9: ( (lv_satisfies_19_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:12477:10: (lv_satisfies_19_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:12477:10: (lv_satisfies_19_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:12478:11: lv_satisfies_19_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getEntryUpdatedActionNodeAccess().getSatisfiesQualityRequirementParserRuleCall_2_5_1_0());
                    	    										
                    	    pushFollow(FOLLOW_30);
                    	    lv_satisfies_19_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getEntryUpdatedActionNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_19_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:12495:9: (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )*
                    	    loop184:
                    	    do {
                    	        int alt184=2;
                    	        int LA184_0 = input.LA(1);

                    	        if ( (LA184_0==Comma) ) {
                    	            alt184=1;
                    	        }


                    	        switch (alt184) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:12496:10: otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_20=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_20, grammarAccess.getEntryUpdatedActionNodeAccess().getCommaKeyword_2_5_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:12500:10: ( (lv_satisfies_21_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:12501:11: (lv_satisfies_21_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:12501:11: (lv_satisfies_21_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:12502:12: lv_satisfies_21_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getEntryUpdatedActionNodeAccess().getSatisfiesQualityRequirementParserRuleCall_2_5_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_30);
                    	    	    lv_satisfies_21_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getEntryUpdatedActionNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_21_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop184;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 7 :
                    	    // InternalQualityBtCppParser.g:12526:4: ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:12526:4: ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:12527:5: {...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2(), 6) ) {
                    	        throw new FailedPredicateException(input, "ruleEntryUpdatedActionNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2(), 6)");
                    	    }
                    	    // InternalQualityBtCppParser.g:12527:119: ( ({...}? => (otherlv_22= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:12528:6: ({...}? => (otherlv_22= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2(), 6);
                    	    					
                    	    // InternalQualityBtCppParser.g:12531:9: ({...}? => (otherlv_22= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:12531:10: {...}? => (otherlv_22= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleEntryUpdatedActionNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:12531:19: (otherlv_22= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:12531:20: otherlv_22= RightParenthesis
                    	    {
                    	    otherlv_22=(Token)match(input,RightParenthesis,FOLLOW_29); 

                    	    									newLeafNode(otherlv_22, grammarAccess.getEntryUpdatedActionNodeAccess().getRightParenthesisKeyword_2_6());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt185 >= 1 ) break loop185;
                                EarlyExitException eee =
                                    new EarlyExitException(185, input);
                                throw eee;
                        }
                        cnt185++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2()) ) {
                        throw new FailedPredicateException(input, "ruleEntryUpdatedActionNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2());
                    				

                    }
                    break;

            }


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEntryUpdatedActionNode"


    // $ANTLR start "entryRuleUnsetBlackboardNode"
    // InternalQualityBtCppParser.g:12553:1: entryRuleUnsetBlackboardNode returns [EObject current=null] : iv_ruleUnsetBlackboardNode= ruleUnsetBlackboardNode EOF ;
    public final EObject entryRuleUnsetBlackboardNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUnsetBlackboardNode = null;


        try {
            // InternalQualityBtCppParser.g:12553:60: (iv_ruleUnsetBlackboardNode= ruleUnsetBlackboardNode EOF )
            // InternalQualityBtCppParser.g:12554:2: iv_ruleUnsetBlackboardNode= ruleUnsetBlackboardNode EOF
            {
             newCompositeNode(grammarAccess.getUnsetBlackboardNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleUnsetBlackboardNode=ruleUnsetBlackboardNode();

            state._fsp--;

             current =iv_ruleUnsetBlackboardNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUnsetBlackboardNode"


    // $ANTLR start "ruleUnsetBlackboardNode"
    // InternalQualityBtCppParser.g:12560:1: ruleUnsetBlackboardNode returns [EObject current=null] : ( () otherlv_1= UnsetBlackboard ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? ) ;
    public final EObject ruleUnsetBlackboardNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        AntlrDatatypeRuleToken lv_ID_6_0 = null;

        AntlrDatatypeRuleToken lv_name_9_0 = null;

        EObject lv_parameters_11_0 = null;

        EObject lv_parameters_13_0 = null;

        EObject lv_satisfices_15_0 = null;

        EObject lv_satisfices_17_0 = null;

        EObject lv_satisfies_19_0 = null;

        EObject lv_satisfies_21_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:12566:2: ( ( () otherlv_1= UnsetBlackboard ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? ) )
            // InternalQualityBtCppParser.g:12567:2: ( () otherlv_1= UnsetBlackboard ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? )
            {
            // InternalQualityBtCppParser.g:12567:2: ( () otherlv_1= UnsetBlackboard ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? )
            // InternalQualityBtCppParser.g:12568:3: () otherlv_1= UnsetBlackboard ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            {
            // InternalQualityBtCppParser.g:12568:3: ()
            // InternalQualityBtCppParser.g:12569:4: 
            {

            				current = forceCreateModelElement(
            					grammarAccess.getUnsetBlackboardNodeAccess().getUnsetBlackboardNodeAction_0(),
            					current);
            			

            }

            otherlv_1=(Token)match(input,UnsetBlackboard,FOLLOW_29); 

            			newLeafNode(otherlv_1, grammarAccess.getUnsetBlackboardNodeAccess().getUnsetBlackboardKeyword_1());
            		
            // InternalQualityBtCppParser.g:12579:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt191=2;
            int LA191_0 = input.LA(1);

            if ( ((LA191_0>=Parameters && LA191_0<=Satisfies)||LA191_0==Name||LA191_0==ID||(LA191_0>=LeftParenthesis && LA191_0<=RightParenthesis)) ) {
                alt191=1;
            }
            switch (alt191) {
                case 1 :
                    // InternalQualityBtCppParser.g:12580:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:12580:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:12581:5: ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2());
                    				
                    // InternalQualityBtCppParser.g:12584:5: ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:12585:6: ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:12585:6: ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+
                    int cnt190=0;
                    loop190:
                    do {
                        int alt190=8;
                        int LA190_0 = input.LA(1);

                        if ( LA190_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2(), 0) ) {
                            alt190=1;
                        }
                        else if ( LA190_0 == ID && getUnorderedGroupHelper().canSelect(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2(), 1) ) {
                            alt190=2;
                        }
                        else if ( LA190_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2(), 2) ) {
                            alt190=3;
                        }
                        else if ( LA190_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2(), 3) ) {
                            alt190=4;
                        }
                        else if ( LA190_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2(), 4) ) {
                            alt190=5;
                        }
                        else if ( LA190_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2(), 5) ) {
                            alt190=6;
                        }
                        else if ( LA190_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2(), 6) ) {
                            alt190=7;
                        }


                        switch (alt190) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:12586:4: ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:12586:4: ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:12587:5: {...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleUnsetBlackboardNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:12587:116: ( ({...}? => (otherlv_3= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:12588:6: ({...}? => (otherlv_3= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:12591:9: ({...}? => (otherlv_3= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:12591:10: {...}? => (otherlv_3= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleUnsetBlackboardNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:12591:19: (otherlv_3= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:12591:20: otherlv_3= LeftParenthesis
                    	    {
                    	    otherlv_3=(Token)match(input,LeftParenthesis,FOLLOW_29); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getUnsetBlackboardNodeAccess().getLeftParenthesisKeyword_2_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:12601:4: ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:12601:4: ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:12602:5: {...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleUnsetBlackboardNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:12602:116: ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:12603:6: ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:12606:9: ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:12606:10: {...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleUnsetBlackboardNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:12606:19: (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:12606:20: otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) )
                    	    {
                    	    otherlv_4=(Token)match(input,ID,FOLLOW_8); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getUnsetBlackboardNodeAccess().getIDKeyword_2_1_0());
                    	    								
                    	    otherlv_5=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_5, grammarAccess.getUnsetBlackboardNodeAccess().getEqualsSignKeyword_2_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:12614:9: ( (lv_ID_6_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:12615:10: (lv_ID_6_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:12615:10: (lv_ID_6_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:12616:11: lv_ID_6_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getUnsetBlackboardNodeAccess().getIDEStringParserRuleCall_2_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_29);
                    	    lv_ID_6_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getUnsetBlackboardNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"ID",
                    	    												lv_ID_6_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:12639:4: ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:12639:4: ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:12640:5: {...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleUnsetBlackboardNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:12640:116: ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:12641:6: ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:12644:9: ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:12644:10: {...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleUnsetBlackboardNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:12644:19: (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:12644:20: otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) )
                    	    {
                    	    otherlv_7=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_7, grammarAccess.getUnsetBlackboardNodeAccess().getNameKeyword_2_2_0());
                    	    								
                    	    otherlv_8=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_8, grammarAccess.getUnsetBlackboardNodeAccess().getEqualsSignKeyword_2_2_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:12652:9: ( (lv_name_9_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:12653:10: (lv_name_9_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:12653:10: (lv_name_9_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:12654:11: lv_name_9_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getUnsetBlackboardNodeAccess().getNameEStringParserRuleCall_2_2_2_0());
                    	    										
                    	    pushFollow(FOLLOW_29);
                    	    lv_name_9_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getUnsetBlackboardNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_9_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:12677:4: ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:12677:4: ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:12678:5: {...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleUnsetBlackboardNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:12678:116: ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:12679:6: ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:12682:9: ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:12682:10: {...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleUnsetBlackboardNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:12682:19: (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:12682:20: otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_10=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_10, grammarAccess.getUnsetBlackboardNodeAccess().getParametersKeyword_2_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:12686:9: ( (lv_parameters_11_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:12687:10: (lv_parameters_11_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:12687:10: (lv_parameters_11_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:12688:11: lv_parameters_11_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getUnsetBlackboardNodeAccess().getParametersParameterParserRuleCall_2_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_30);
                    	    lv_parameters_11_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getUnsetBlackboardNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_11_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:12705:9: (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )*
                    	    loop187:
                    	    do {
                    	        int alt187=2;
                    	        int LA187_0 = input.LA(1);

                    	        if ( (LA187_0==Comma) ) {
                    	            alt187=1;
                    	        }


                    	        switch (alt187) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:12706:10: otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_12=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_12, grammarAccess.getUnsetBlackboardNodeAccess().getCommaKeyword_2_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:12710:10: ( (lv_parameters_13_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:12711:11: (lv_parameters_13_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:12711:11: (lv_parameters_13_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:12712:12: lv_parameters_13_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getUnsetBlackboardNodeAccess().getParametersParameterParserRuleCall_2_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_30);
                    	    	    lv_parameters_13_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getUnsetBlackboardNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_13_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop187;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:12736:4: ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:12736:4: ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:12737:5: {...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleUnsetBlackboardNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:12737:116: ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:12738:6: ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:12741:9: ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:12741:10: {...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleUnsetBlackboardNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:12741:19: (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:12741:20: otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_14=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_14, grammarAccess.getUnsetBlackboardNodeAccess().getSatisficesKeyword_2_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:12745:9: ( (lv_satisfices_15_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:12746:10: (lv_satisfices_15_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:12746:10: (lv_satisfices_15_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:12747:11: lv_satisfices_15_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getUnsetBlackboardNodeAccess().getSatisficesQualityParserRuleCall_2_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_30);
                    	    lv_satisfices_15_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getUnsetBlackboardNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_15_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:12764:9: (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )*
                    	    loop188:
                    	    do {
                    	        int alt188=2;
                    	        int LA188_0 = input.LA(1);

                    	        if ( (LA188_0==Comma) ) {
                    	            alt188=1;
                    	        }


                    	        switch (alt188) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:12765:10: otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_16=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_16, grammarAccess.getUnsetBlackboardNodeAccess().getCommaKeyword_2_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:12769:10: ( (lv_satisfices_17_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:12770:11: (lv_satisfices_17_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:12770:11: (lv_satisfices_17_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:12771:12: lv_satisfices_17_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getUnsetBlackboardNodeAccess().getSatisficesQualityParserRuleCall_2_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_30);
                    	    	    lv_satisfices_17_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getUnsetBlackboardNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_17_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop188;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:12795:4: ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:12795:4: ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:12796:5: {...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleUnsetBlackboardNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:12796:116: ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:12797:6: ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:12800:9: ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:12800:10: {...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleUnsetBlackboardNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:12800:19: (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:12800:20: otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_18=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_18, grammarAccess.getUnsetBlackboardNodeAccess().getSatisfiesKeyword_2_5_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:12804:9: ( (lv_satisfies_19_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:12805:10: (lv_satisfies_19_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:12805:10: (lv_satisfies_19_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:12806:11: lv_satisfies_19_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getUnsetBlackboardNodeAccess().getSatisfiesQualityRequirementParserRuleCall_2_5_1_0());
                    	    										
                    	    pushFollow(FOLLOW_30);
                    	    lv_satisfies_19_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getUnsetBlackboardNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_19_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:12823:9: (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )*
                    	    loop189:
                    	    do {
                    	        int alt189=2;
                    	        int LA189_0 = input.LA(1);

                    	        if ( (LA189_0==Comma) ) {
                    	            alt189=1;
                    	        }


                    	        switch (alt189) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:12824:10: otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_20=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_20, grammarAccess.getUnsetBlackboardNodeAccess().getCommaKeyword_2_5_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:12828:10: ( (lv_satisfies_21_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:12829:11: (lv_satisfies_21_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:12829:11: (lv_satisfies_21_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:12830:12: lv_satisfies_21_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getUnsetBlackboardNodeAccess().getSatisfiesQualityRequirementParserRuleCall_2_5_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_30);
                    	    	    lv_satisfies_21_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getUnsetBlackboardNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_21_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop189;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 7 :
                    	    // InternalQualityBtCppParser.g:12854:4: ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:12854:4: ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:12855:5: {...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2(), 6) ) {
                    	        throw new FailedPredicateException(input, "ruleUnsetBlackboardNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2(), 6)");
                    	    }
                    	    // InternalQualityBtCppParser.g:12855:116: ( ({...}? => (otherlv_22= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:12856:6: ({...}? => (otherlv_22= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2(), 6);
                    	    					
                    	    // InternalQualityBtCppParser.g:12859:9: ({...}? => (otherlv_22= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:12859:10: {...}? => (otherlv_22= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleUnsetBlackboardNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:12859:19: (otherlv_22= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:12859:20: otherlv_22= RightParenthesis
                    	    {
                    	    otherlv_22=(Token)match(input,RightParenthesis,FOLLOW_29); 

                    	    									newLeafNode(otherlv_22, grammarAccess.getUnsetBlackboardNodeAccess().getRightParenthesisKeyword_2_6());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt190 >= 1 ) break loop190;
                                EarlyExitException eee =
                                    new EarlyExitException(190, input);
                                throw eee;
                        }
                        cnt190++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2()) ) {
                        throw new FailedPredicateException(input, "ruleUnsetBlackboardNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2());
                    				

                    }
                    break;

            }


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUnsetBlackboardNode"


    // $ANTLR start "entryRuleThreadedActionNode"
    // InternalQualityBtCppParser.g:12881:1: entryRuleThreadedActionNode returns [EObject current=null] : iv_ruleThreadedActionNode= ruleThreadedActionNode EOF ;
    public final EObject entryRuleThreadedActionNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleThreadedActionNode = null;


        try {
            // InternalQualityBtCppParser.g:12881:59: (iv_ruleThreadedActionNode= ruleThreadedActionNode EOF )
            // InternalQualityBtCppParser.g:12882:2: iv_ruleThreadedActionNode= ruleThreadedActionNode EOF
            {
             newCompositeNode(grammarAccess.getThreadedActionNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleThreadedActionNode=ruleThreadedActionNode();

            state._fsp--;

             current =iv_ruleThreadedActionNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleThreadedActionNode"


    // $ANTLR start "ruleThreadedActionNode"
    // InternalQualityBtCppParser.g:12888:1: ruleThreadedActionNode returns [EObject current=null] : ( () otherlv_1= ThreadedAction ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? ) ;
    public final EObject ruleThreadedActionNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        AntlrDatatypeRuleToken lv_ID_6_0 = null;

        AntlrDatatypeRuleToken lv_name_9_0 = null;

        EObject lv_parameters_11_0 = null;

        EObject lv_parameters_13_0 = null;

        EObject lv_satisfices_15_0 = null;

        EObject lv_satisfices_17_0 = null;

        EObject lv_satisfies_19_0 = null;

        EObject lv_satisfies_21_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:12894:2: ( ( () otherlv_1= ThreadedAction ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? ) )
            // InternalQualityBtCppParser.g:12895:2: ( () otherlv_1= ThreadedAction ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? )
            {
            // InternalQualityBtCppParser.g:12895:2: ( () otherlv_1= ThreadedAction ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? )
            // InternalQualityBtCppParser.g:12896:3: () otherlv_1= ThreadedAction ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            {
            // InternalQualityBtCppParser.g:12896:3: ()
            // InternalQualityBtCppParser.g:12897:4: 
            {

            				current = forceCreateModelElement(
            					grammarAccess.getThreadedActionNodeAccess().getThreadedActionNodeAction_0(),
            					current);
            			

            }

            otherlv_1=(Token)match(input,ThreadedAction,FOLLOW_29); 

            			newLeafNode(otherlv_1, grammarAccess.getThreadedActionNodeAccess().getThreadedActionKeyword_1());
            		
            // InternalQualityBtCppParser.g:12907:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt196=2;
            int LA196_0 = input.LA(1);

            if ( ((LA196_0>=Parameters && LA196_0<=Satisfies)||LA196_0==Name||LA196_0==ID||(LA196_0>=LeftParenthesis && LA196_0<=RightParenthesis)) ) {
                alt196=1;
            }
            switch (alt196) {
                case 1 :
                    // InternalQualityBtCppParser.g:12908:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:12908:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:12909:5: ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2());
                    				
                    // InternalQualityBtCppParser.g:12912:5: ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:12913:6: ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:12913:6: ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+
                    int cnt195=0;
                    loop195:
                    do {
                        int alt195=8;
                        int LA195_0 = input.LA(1);

                        if ( LA195_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2(), 0) ) {
                            alt195=1;
                        }
                        else if ( LA195_0 == ID && getUnorderedGroupHelper().canSelect(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2(), 1) ) {
                            alt195=2;
                        }
                        else if ( LA195_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2(), 2) ) {
                            alt195=3;
                        }
                        else if ( LA195_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2(), 3) ) {
                            alt195=4;
                        }
                        else if ( LA195_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2(), 4) ) {
                            alt195=5;
                        }
                        else if ( LA195_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2(), 5) ) {
                            alt195=6;
                        }
                        else if ( LA195_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2(), 6) ) {
                            alt195=7;
                        }


                        switch (alt195) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:12914:4: ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:12914:4: ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:12915:5: {...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleThreadedActionNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:12915:115: ( ({...}? => (otherlv_3= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:12916:6: ({...}? => (otherlv_3= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:12919:9: ({...}? => (otherlv_3= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:12919:10: {...}? => (otherlv_3= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleThreadedActionNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:12919:19: (otherlv_3= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:12919:20: otherlv_3= LeftParenthesis
                    	    {
                    	    otherlv_3=(Token)match(input,LeftParenthesis,FOLLOW_29); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getThreadedActionNodeAccess().getLeftParenthesisKeyword_2_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:12929:4: ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:12929:4: ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:12930:5: {...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleThreadedActionNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:12930:115: ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:12931:6: ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:12934:9: ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:12934:10: {...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleThreadedActionNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:12934:19: (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:12934:20: otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) )
                    	    {
                    	    otherlv_4=(Token)match(input,ID,FOLLOW_8); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getThreadedActionNodeAccess().getIDKeyword_2_1_0());
                    	    								
                    	    otherlv_5=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_5, grammarAccess.getThreadedActionNodeAccess().getEqualsSignKeyword_2_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:12942:9: ( (lv_ID_6_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:12943:10: (lv_ID_6_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:12943:10: (lv_ID_6_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:12944:11: lv_ID_6_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getThreadedActionNodeAccess().getIDEStringParserRuleCall_2_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_29);
                    	    lv_ID_6_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getThreadedActionNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"ID",
                    	    												lv_ID_6_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:12967:4: ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:12967:4: ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:12968:5: {...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleThreadedActionNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:12968:115: ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:12969:6: ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:12972:9: ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:12972:10: {...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleThreadedActionNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:12972:19: (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:12972:20: otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) )
                    	    {
                    	    otherlv_7=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_7, grammarAccess.getThreadedActionNodeAccess().getNameKeyword_2_2_0());
                    	    								
                    	    otherlv_8=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_8, grammarAccess.getThreadedActionNodeAccess().getEqualsSignKeyword_2_2_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:12980:9: ( (lv_name_9_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:12981:10: (lv_name_9_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:12981:10: (lv_name_9_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:12982:11: lv_name_9_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getThreadedActionNodeAccess().getNameEStringParserRuleCall_2_2_2_0());
                    	    										
                    	    pushFollow(FOLLOW_29);
                    	    lv_name_9_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getThreadedActionNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_9_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:13005:4: ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:13005:4: ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:13006:5: {...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleThreadedActionNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:13006:115: ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:13007:6: ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:13010:9: ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:13010:10: {...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleThreadedActionNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:13010:19: (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:13010:20: otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_10=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_10, grammarAccess.getThreadedActionNodeAccess().getParametersKeyword_2_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:13014:9: ( (lv_parameters_11_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:13015:10: (lv_parameters_11_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:13015:10: (lv_parameters_11_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:13016:11: lv_parameters_11_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getThreadedActionNodeAccess().getParametersParameterParserRuleCall_2_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_30);
                    	    lv_parameters_11_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getThreadedActionNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_11_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:13033:9: (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )*
                    	    loop192:
                    	    do {
                    	        int alt192=2;
                    	        int LA192_0 = input.LA(1);

                    	        if ( (LA192_0==Comma) ) {
                    	            alt192=1;
                    	        }


                    	        switch (alt192) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:13034:10: otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_12=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_12, grammarAccess.getThreadedActionNodeAccess().getCommaKeyword_2_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:13038:10: ( (lv_parameters_13_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:13039:11: (lv_parameters_13_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:13039:11: (lv_parameters_13_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:13040:12: lv_parameters_13_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getThreadedActionNodeAccess().getParametersParameterParserRuleCall_2_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_30);
                    	    	    lv_parameters_13_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getThreadedActionNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_13_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop192;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:13064:4: ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:13064:4: ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:13065:5: {...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleThreadedActionNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:13065:115: ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:13066:6: ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:13069:9: ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:13069:10: {...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleThreadedActionNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:13069:19: (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:13069:20: otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_14=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_14, grammarAccess.getThreadedActionNodeAccess().getSatisficesKeyword_2_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:13073:9: ( (lv_satisfices_15_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:13074:10: (lv_satisfices_15_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:13074:10: (lv_satisfices_15_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:13075:11: lv_satisfices_15_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getThreadedActionNodeAccess().getSatisficesQualityParserRuleCall_2_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_30);
                    	    lv_satisfices_15_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getThreadedActionNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_15_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:13092:9: (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )*
                    	    loop193:
                    	    do {
                    	        int alt193=2;
                    	        int LA193_0 = input.LA(1);

                    	        if ( (LA193_0==Comma) ) {
                    	            alt193=1;
                    	        }


                    	        switch (alt193) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:13093:10: otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_16=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_16, grammarAccess.getThreadedActionNodeAccess().getCommaKeyword_2_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:13097:10: ( (lv_satisfices_17_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:13098:11: (lv_satisfices_17_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:13098:11: (lv_satisfices_17_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:13099:12: lv_satisfices_17_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getThreadedActionNodeAccess().getSatisficesQualityParserRuleCall_2_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_30);
                    	    	    lv_satisfices_17_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getThreadedActionNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_17_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop193;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:13123:4: ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:13123:4: ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:13124:5: {...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleThreadedActionNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:13124:115: ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:13125:6: ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:13128:9: ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:13128:10: {...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleThreadedActionNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:13128:19: (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:13128:20: otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_18=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_18, grammarAccess.getThreadedActionNodeAccess().getSatisfiesKeyword_2_5_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:13132:9: ( (lv_satisfies_19_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:13133:10: (lv_satisfies_19_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:13133:10: (lv_satisfies_19_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:13134:11: lv_satisfies_19_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getThreadedActionNodeAccess().getSatisfiesQualityRequirementParserRuleCall_2_5_1_0());
                    	    										
                    	    pushFollow(FOLLOW_30);
                    	    lv_satisfies_19_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getThreadedActionNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_19_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:13151:9: (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )*
                    	    loop194:
                    	    do {
                    	        int alt194=2;
                    	        int LA194_0 = input.LA(1);

                    	        if ( (LA194_0==Comma) ) {
                    	            alt194=1;
                    	        }


                    	        switch (alt194) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:13152:10: otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_20=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_20, grammarAccess.getThreadedActionNodeAccess().getCommaKeyword_2_5_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:13156:10: ( (lv_satisfies_21_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:13157:11: (lv_satisfies_21_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:13157:11: (lv_satisfies_21_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:13158:12: lv_satisfies_21_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getThreadedActionNodeAccess().getSatisfiesQualityRequirementParserRuleCall_2_5_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_30);
                    	    	    lv_satisfies_21_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getThreadedActionNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_21_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop194;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 7 :
                    	    // InternalQualityBtCppParser.g:13182:4: ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:13182:4: ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:13183:5: {...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2(), 6) ) {
                    	        throw new FailedPredicateException(input, "ruleThreadedActionNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2(), 6)");
                    	    }
                    	    // InternalQualityBtCppParser.g:13183:115: ( ({...}? => (otherlv_22= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:13184:6: ({...}? => (otherlv_22= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2(), 6);
                    	    					
                    	    // InternalQualityBtCppParser.g:13187:9: ({...}? => (otherlv_22= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:13187:10: {...}? => (otherlv_22= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleThreadedActionNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:13187:19: (otherlv_22= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:13187:20: otherlv_22= RightParenthesis
                    	    {
                    	    otherlv_22=(Token)match(input,RightParenthesis,FOLLOW_29); 

                    	    									newLeafNode(otherlv_22, grammarAccess.getThreadedActionNodeAccess().getRightParenthesisKeyword_2_6());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt195 >= 1 ) break loop195;
                                EarlyExitException eee =
                                    new EarlyExitException(195, input);
                                throw eee;
                        }
                        cnt195++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2()) ) {
                        throw new FailedPredicateException(input, "ruleThreadedActionNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2());
                    				

                    }
                    break;

            }


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleThreadedActionNode"


    // $ANTLR start "entryRuleCoroActionNode"
    // InternalQualityBtCppParser.g:13209:1: entryRuleCoroActionNode returns [EObject current=null] : iv_ruleCoroActionNode= ruleCoroActionNode EOF ;
    public final EObject entryRuleCoroActionNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCoroActionNode = null;


        try {
            // InternalQualityBtCppParser.g:13209:55: (iv_ruleCoroActionNode= ruleCoroActionNode EOF )
            // InternalQualityBtCppParser.g:13210:2: iv_ruleCoroActionNode= ruleCoroActionNode EOF
            {
             newCompositeNode(grammarAccess.getCoroActionNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleCoroActionNode=ruleCoroActionNode();

            state._fsp--;

             current =iv_ruleCoroActionNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCoroActionNode"


    // $ANTLR start "ruleCoroActionNode"
    // InternalQualityBtCppParser.g:13216:1: ruleCoroActionNode returns [EObject current=null] : ( () otherlv_1= CoroAction ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? ) ;
    public final EObject ruleCoroActionNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        AntlrDatatypeRuleToken lv_ID_6_0 = null;

        AntlrDatatypeRuleToken lv_name_9_0 = null;

        EObject lv_parameters_11_0 = null;

        EObject lv_parameters_13_0 = null;

        EObject lv_satisfices_15_0 = null;

        EObject lv_satisfices_17_0 = null;

        EObject lv_satisfies_19_0 = null;

        EObject lv_satisfies_21_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:13222:2: ( ( () otherlv_1= CoroAction ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? ) )
            // InternalQualityBtCppParser.g:13223:2: ( () otherlv_1= CoroAction ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? )
            {
            // InternalQualityBtCppParser.g:13223:2: ( () otherlv_1= CoroAction ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? )
            // InternalQualityBtCppParser.g:13224:3: () otherlv_1= CoroAction ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            {
            // InternalQualityBtCppParser.g:13224:3: ()
            // InternalQualityBtCppParser.g:13225:4: 
            {

            				current = forceCreateModelElement(
            					grammarAccess.getCoroActionNodeAccess().getCoroActionNodeAction_0(),
            					current);
            			

            }

            otherlv_1=(Token)match(input,CoroAction,FOLLOW_29); 

            			newLeafNode(otherlv_1, grammarAccess.getCoroActionNodeAccess().getCoroActionKeyword_1());
            		
            // InternalQualityBtCppParser.g:13235:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt201=2;
            int LA201_0 = input.LA(1);

            if ( ((LA201_0>=Parameters && LA201_0<=Satisfies)||LA201_0==Name||LA201_0==ID||(LA201_0>=LeftParenthesis && LA201_0<=RightParenthesis)) ) {
                alt201=1;
            }
            switch (alt201) {
                case 1 :
                    // InternalQualityBtCppParser.g:13236:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:13236:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:13237:5: ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2());
                    				
                    // InternalQualityBtCppParser.g:13240:5: ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:13241:6: ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:13241:6: ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+
                    int cnt200=0;
                    loop200:
                    do {
                        int alt200=8;
                        int LA200_0 = input.LA(1);

                        if ( LA200_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2(), 0) ) {
                            alt200=1;
                        }
                        else if ( LA200_0 == ID && getUnorderedGroupHelper().canSelect(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2(), 1) ) {
                            alt200=2;
                        }
                        else if ( LA200_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2(), 2) ) {
                            alt200=3;
                        }
                        else if ( LA200_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2(), 3) ) {
                            alt200=4;
                        }
                        else if ( LA200_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2(), 4) ) {
                            alt200=5;
                        }
                        else if ( LA200_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2(), 5) ) {
                            alt200=6;
                        }
                        else if ( LA200_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2(), 6) ) {
                            alt200=7;
                        }


                        switch (alt200) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:13242:4: ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:13242:4: ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:13243:5: {...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleCoroActionNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:13243:111: ( ({...}? => (otherlv_3= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:13244:6: ({...}? => (otherlv_3= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:13247:9: ({...}? => (otherlv_3= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:13247:10: {...}? => (otherlv_3= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleCoroActionNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:13247:19: (otherlv_3= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:13247:20: otherlv_3= LeftParenthesis
                    	    {
                    	    otherlv_3=(Token)match(input,LeftParenthesis,FOLLOW_29); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getCoroActionNodeAccess().getLeftParenthesisKeyword_2_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:13257:4: ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:13257:4: ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:13258:5: {...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleCoroActionNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:13258:111: ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:13259:6: ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:13262:9: ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:13262:10: {...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleCoroActionNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:13262:19: (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:13262:20: otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) )
                    	    {
                    	    otherlv_4=(Token)match(input,ID,FOLLOW_8); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getCoroActionNodeAccess().getIDKeyword_2_1_0());
                    	    								
                    	    otherlv_5=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_5, grammarAccess.getCoroActionNodeAccess().getEqualsSignKeyword_2_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:13270:9: ( (lv_ID_6_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:13271:10: (lv_ID_6_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:13271:10: (lv_ID_6_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:13272:11: lv_ID_6_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getCoroActionNodeAccess().getIDEStringParserRuleCall_2_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_29);
                    	    lv_ID_6_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getCoroActionNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"ID",
                    	    												lv_ID_6_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:13295:4: ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:13295:4: ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:13296:5: {...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleCoroActionNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:13296:111: ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:13297:6: ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:13300:9: ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:13300:10: {...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleCoroActionNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:13300:19: (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:13300:20: otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) )
                    	    {
                    	    otherlv_7=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_7, grammarAccess.getCoroActionNodeAccess().getNameKeyword_2_2_0());
                    	    								
                    	    otherlv_8=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_8, grammarAccess.getCoroActionNodeAccess().getEqualsSignKeyword_2_2_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:13308:9: ( (lv_name_9_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:13309:10: (lv_name_9_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:13309:10: (lv_name_9_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:13310:11: lv_name_9_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getCoroActionNodeAccess().getNameEStringParserRuleCall_2_2_2_0());
                    	    										
                    	    pushFollow(FOLLOW_29);
                    	    lv_name_9_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getCoroActionNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_9_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:13333:4: ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:13333:4: ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:13334:5: {...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleCoroActionNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:13334:111: ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:13335:6: ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:13338:9: ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:13338:10: {...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleCoroActionNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:13338:19: (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:13338:20: otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_10=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_10, grammarAccess.getCoroActionNodeAccess().getParametersKeyword_2_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:13342:9: ( (lv_parameters_11_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:13343:10: (lv_parameters_11_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:13343:10: (lv_parameters_11_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:13344:11: lv_parameters_11_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getCoroActionNodeAccess().getParametersParameterParserRuleCall_2_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_30);
                    	    lv_parameters_11_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getCoroActionNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_11_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:13361:9: (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )*
                    	    loop197:
                    	    do {
                    	        int alt197=2;
                    	        int LA197_0 = input.LA(1);

                    	        if ( (LA197_0==Comma) ) {
                    	            alt197=1;
                    	        }


                    	        switch (alt197) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:13362:10: otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_12=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_12, grammarAccess.getCoroActionNodeAccess().getCommaKeyword_2_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:13366:10: ( (lv_parameters_13_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:13367:11: (lv_parameters_13_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:13367:11: (lv_parameters_13_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:13368:12: lv_parameters_13_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getCoroActionNodeAccess().getParametersParameterParserRuleCall_2_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_30);
                    	    	    lv_parameters_13_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getCoroActionNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_13_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop197;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:13392:4: ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:13392:4: ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:13393:5: {...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleCoroActionNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:13393:111: ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:13394:6: ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:13397:9: ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:13397:10: {...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleCoroActionNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:13397:19: (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:13397:20: otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_14=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_14, grammarAccess.getCoroActionNodeAccess().getSatisficesKeyword_2_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:13401:9: ( (lv_satisfices_15_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:13402:10: (lv_satisfices_15_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:13402:10: (lv_satisfices_15_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:13403:11: lv_satisfices_15_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getCoroActionNodeAccess().getSatisficesQualityParserRuleCall_2_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_30);
                    	    lv_satisfices_15_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getCoroActionNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_15_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:13420:9: (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )*
                    	    loop198:
                    	    do {
                    	        int alt198=2;
                    	        int LA198_0 = input.LA(1);

                    	        if ( (LA198_0==Comma) ) {
                    	            alt198=1;
                    	        }


                    	        switch (alt198) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:13421:10: otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_16=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_16, grammarAccess.getCoroActionNodeAccess().getCommaKeyword_2_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:13425:10: ( (lv_satisfices_17_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:13426:11: (lv_satisfices_17_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:13426:11: (lv_satisfices_17_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:13427:12: lv_satisfices_17_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getCoroActionNodeAccess().getSatisficesQualityParserRuleCall_2_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_30);
                    	    	    lv_satisfices_17_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getCoroActionNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_17_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop198;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:13451:4: ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:13451:4: ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:13452:5: {...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleCoroActionNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:13452:111: ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:13453:6: ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:13456:9: ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:13456:10: {...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleCoroActionNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:13456:19: (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:13456:20: otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_18=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_18, grammarAccess.getCoroActionNodeAccess().getSatisfiesKeyword_2_5_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:13460:9: ( (lv_satisfies_19_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:13461:10: (lv_satisfies_19_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:13461:10: (lv_satisfies_19_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:13462:11: lv_satisfies_19_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getCoroActionNodeAccess().getSatisfiesQualityRequirementParserRuleCall_2_5_1_0());
                    	    										
                    	    pushFollow(FOLLOW_30);
                    	    lv_satisfies_19_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getCoroActionNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_19_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:13479:9: (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )*
                    	    loop199:
                    	    do {
                    	        int alt199=2;
                    	        int LA199_0 = input.LA(1);

                    	        if ( (LA199_0==Comma) ) {
                    	            alt199=1;
                    	        }


                    	        switch (alt199) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:13480:10: otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_20=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_20, grammarAccess.getCoroActionNodeAccess().getCommaKeyword_2_5_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:13484:10: ( (lv_satisfies_21_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:13485:11: (lv_satisfies_21_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:13485:11: (lv_satisfies_21_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:13486:12: lv_satisfies_21_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getCoroActionNodeAccess().getSatisfiesQualityRequirementParserRuleCall_2_5_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_30);
                    	    	    lv_satisfies_21_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getCoroActionNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_21_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop199;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 7 :
                    	    // InternalQualityBtCppParser.g:13510:4: ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:13510:4: ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:13511:5: {...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2(), 6) ) {
                    	        throw new FailedPredicateException(input, "ruleCoroActionNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2(), 6)");
                    	    }
                    	    // InternalQualityBtCppParser.g:13511:111: ( ({...}? => (otherlv_22= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:13512:6: ({...}? => (otherlv_22= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2(), 6);
                    	    					
                    	    // InternalQualityBtCppParser.g:13515:9: ({...}? => (otherlv_22= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:13515:10: {...}? => (otherlv_22= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleCoroActionNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:13515:19: (otherlv_22= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:13515:20: otherlv_22= RightParenthesis
                    	    {
                    	    otherlv_22=(Token)match(input,RightParenthesis,FOLLOW_29); 

                    	    									newLeafNode(otherlv_22, grammarAccess.getCoroActionNodeAccess().getRightParenthesisKeyword_2_6());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt200 >= 1 ) break loop200;
                                EarlyExitException eee =
                                    new EarlyExitException(200, input);
                                throw eee;
                        }
                        cnt200++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2()) ) {
                        throw new FailedPredicateException(input, "ruleCoroActionNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2());
                    				

                    }
                    break;

            }


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCoroActionNode"


    // $ANTLR start "entryRuleSleepNode"
    // InternalQualityBtCppParser.g:13537:1: entryRuleSleepNode returns [EObject current=null] : iv_ruleSleepNode= ruleSleepNode EOF ;
    public final EObject entryRuleSleepNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSleepNode = null;


        try {
            // InternalQualityBtCppParser.g:13537:50: (iv_ruleSleepNode= ruleSleepNode EOF )
            // InternalQualityBtCppParser.g:13538:2: iv_ruleSleepNode= ruleSleepNode EOF
            {
             newCompositeNode(grammarAccess.getSleepNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleSleepNode=ruleSleepNode();

            state._fsp--;

             current =iv_ruleSleepNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSleepNode"


    // $ANTLR start "ruleSleepNode"
    // InternalQualityBtCppParser.g:13544:1: ruleSleepNode returns [EObject current=null] : ( () otherlv_1= Sleep ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? ) ;
    public final EObject ruleSleepNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        AntlrDatatypeRuleToken lv_ID_6_0 = null;

        AntlrDatatypeRuleToken lv_name_9_0 = null;

        EObject lv_parameters_11_0 = null;

        EObject lv_parameters_13_0 = null;

        EObject lv_satisfices_15_0 = null;

        EObject lv_satisfices_17_0 = null;

        EObject lv_satisfies_19_0 = null;

        EObject lv_satisfies_21_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:13550:2: ( ( () otherlv_1= Sleep ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? ) )
            // InternalQualityBtCppParser.g:13551:2: ( () otherlv_1= Sleep ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? )
            {
            // InternalQualityBtCppParser.g:13551:2: ( () otherlv_1= Sleep ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? )
            // InternalQualityBtCppParser.g:13552:3: () otherlv_1= Sleep ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            {
            // InternalQualityBtCppParser.g:13552:3: ()
            // InternalQualityBtCppParser.g:13553:4: 
            {

            				current = forceCreateModelElement(
            					grammarAccess.getSleepNodeAccess().getSleepNodeAction_0(),
            					current);
            			

            }

            otherlv_1=(Token)match(input,Sleep,FOLLOW_29); 

            			newLeafNode(otherlv_1, grammarAccess.getSleepNodeAccess().getSleepKeyword_1());
            		
            // InternalQualityBtCppParser.g:13563:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt206=2;
            int LA206_0 = input.LA(1);

            if ( ((LA206_0>=Parameters && LA206_0<=Satisfies)||LA206_0==Name||LA206_0==ID||(LA206_0>=LeftParenthesis && LA206_0<=RightParenthesis)) ) {
                alt206=1;
            }
            switch (alt206) {
                case 1 :
                    // InternalQualityBtCppParser.g:13564:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:13564:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:13565:5: ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2());
                    				
                    // InternalQualityBtCppParser.g:13568:5: ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:13569:6: ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:13569:6: ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+
                    int cnt205=0;
                    loop205:
                    do {
                        int alt205=8;
                        int LA205_0 = input.LA(1);

                        if ( LA205_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2(), 0) ) {
                            alt205=1;
                        }
                        else if ( LA205_0 == ID && getUnorderedGroupHelper().canSelect(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2(), 1) ) {
                            alt205=2;
                        }
                        else if ( LA205_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2(), 2) ) {
                            alt205=3;
                        }
                        else if ( LA205_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2(), 3) ) {
                            alt205=4;
                        }
                        else if ( LA205_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2(), 4) ) {
                            alt205=5;
                        }
                        else if ( LA205_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2(), 5) ) {
                            alt205=6;
                        }
                        else if ( LA205_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2(), 6) ) {
                            alt205=7;
                        }


                        switch (alt205) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:13570:4: ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:13570:4: ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:13571:5: {...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleSleepNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:13571:106: ( ({...}? => (otherlv_3= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:13572:6: ({...}? => (otherlv_3= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:13575:9: ({...}? => (otherlv_3= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:13575:10: {...}? => (otherlv_3= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSleepNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:13575:19: (otherlv_3= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:13575:20: otherlv_3= LeftParenthesis
                    	    {
                    	    otherlv_3=(Token)match(input,LeftParenthesis,FOLLOW_29); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getSleepNodeAccess().getLeftParenthesisKeyword_2_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:13585:4: ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:13585:4: ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:13586:5: {...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleSleepNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:13586:106: ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:13587:6: ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:13590:9: ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:13590:10: {...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSleepNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:13590:19: (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:13590:20: otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) )
                    	    {
                    	    otherlv_4=(Token)match(input,ID,FOLLOW_8); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getSleepNodeAccess().getIDKeyword_2_1_0());
                    	    								
                    	    otherlv_5=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_5, grammarAccess.getSleepNodeAccess().getEqualsSignKeyword_2_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:13598:9: ( (lv_ID_6_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:13599:10: (lv_ID_6_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:13599:10: (lv_ID_6_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:13600:11: lv_ID_6_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getSleepNodeAccess().getIDEStringParserRuleCall_2_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_29);
                    	    lv_ID_6_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getSleepNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"ID",
                    	    												lv_ID_6_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:13623:4: ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:13623:4: ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:13624:5: {...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleSleepNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:13624:106: ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:13625:6: ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:13628:9: ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:13628:10: {...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSleepNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:13628:19: (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:13628:20: otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) )
                    	    {
                    	    otherlv_7=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_7, grammarAccess.getSleepNodeAccess().getNameKeyword_2_2_0());
                    	    								
                    	    otherlv_8=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_8, grammarAccess.getSleepNodeAccess().getEqualsSignKeyword_2_2_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:13636:9: ( (lv_name_9_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:13637:10: (lv_name_9_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:13637:10: (lv_name_9_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:13638:11: lv_name_9_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getSleepNodeAccess().getNameEStringParserRuleCall_2_2_2_0());
                    	    										
                    	    pushFollow(FOLLOW_29);
                    	    lv_name_9_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getSleepNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_9_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:13661:4: ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:13661:4: ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:13662:5: {...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleSleepNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:13662:106: ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:13663:6: ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:13666:9: ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:13666:10: {...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSleepNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:13666:19: (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:13666:20: otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_10=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_10, grammarAccess.getSleepNodeAccess().getParametersKeyword_2_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:13670:9: ( (lv_parameters_11_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:13671:10: (lv_parameters_11_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:13671:10: (lv_parameters_11_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:13672:11: lv_parameters_11_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getSleepNodeAccess().getParametersParameterParserRuleCall_2_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_30);
                    	    lv_parameters_11_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getSleepNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_11_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:13689:9: (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )*
                    	    loop202:
                    	    do {
                    	        int alt202=2;
                    	        int LA202_0 = input.LA(1);

                    	        if ( (LA202_0==Comma) ) {
                    	            alt202=1;
                    	        }


                    	        switch (alt202) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:13690:10: otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_12=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_12, grammarAccess.getSleepNodeAccess().getCommaKeyword_2_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:13694:10: ( (lv_parameters_13_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:13695:11: (lv_parameters_13_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:13695:11: (lv_parameters_13_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:13696:12: lv_parameters_13_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getSleepNodeAccess().getParametersParameterParserRuleCall_2_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_30);
                    	    	    lv_parameters_13_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getSleepNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_13_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop202;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:13720:4: ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:13720:4: ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:13721:5: {...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleSleepNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:13721:106: ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:13722:6: ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:13725:9: ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:13725:10: {...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSleepNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:13725:19: (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:13725:20: otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_14=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_14, grammarAccess.getSleepNodeAccess().getSatisficesKeyword_2_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:13729:9: ( (lv_satisfices_15_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:13730:10: (lv_satisfices_15_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:13730:10: (lv_satisfices_15_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:13731:11: lv_satisfices_15_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getSleepNodeAccess().getSatisficesQualityParserRuleCall_2_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_30);
                    	    lv_satisfices_15_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getSleepNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_15_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:13748:9: (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )*
                    	    loop203:
                    	    do {
                    	        int alt203=2;
                    	        int LA203_0 = input.LA(1);

                    	        if ( (LA203_0==Comma) ) {
                    	            alt203=1;
                    	        }


                    	        switch (alt203) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:13749:10: otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_16=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_16, grammarAccess.getSleepNodeAccess().getCommaKeyword_2_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:13753:10: ( (lv_satisfices_17_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:13754:11: (lv_satisfices_17_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:13754:11: (lv_satisfices_17_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:13755:12: lv_satisfices_17_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getSleepNodeAccess().getSatisficesQualityParserRuleCall_2_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_30);
                    	    	    lv_satisfices_17_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getSleepNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_17_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop203;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:13779:4: ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:13779:4: ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:13780:5: {...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleSleepNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:13780:106: ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:13781:6: ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:13784:9: ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:13784:10: {...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSleepNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:13784:19: (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:13784:20: otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_18=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_18, grammarAccess.getSleepNodeAccess().getSatisfiesKeyword_2_5_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:13788:9: ( (lv_satisfies_19_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:13789:10: (lv_satisfies_19_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:13789:10: (lv_satisfies_19_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:13790:11: lv_satisfies_19_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getSleepNodeAccess().getSatisfiesQualityRequirementParserRuleCall_2_5_1_0());
                    	    										
                    	    pushFollow(FOLLOW_30);
                    	    lv_satisfies_19_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getSleepNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_19_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:13807:9: (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )*
                    	    loop204:
                    	    do {
                    	        int alt204=2;
                    	        int LA204_0 = input.LA(1);

                    	        if ( (LA204_0==Comma) ) {
                    	            alt204=1;
                    	        }


                    	        switch (alt204) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:13808:10: otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_20=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_20, grammarAccess.getSleepNodeAccess().getCommaKeyword_2_5_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:13812:10: ( (lv_satisfies_21_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:13813:11: (lv_satisfies_21_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:13813:11: (lv_satisfies_21_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:13814:12: lv_satisfies_21_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getSleepNodeAccess().getSatisfiesQualityRequirementParserRuleCall_2_5_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_30);
                    	    	    lv_satisfies_21_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getSleepNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_21_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop204;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 7 :
                    	    // InternalQualityBtCppParser.g:13838:4: ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:13838:4: ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:13839:5: {...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2(), 6) ) {
                    	        throw new FailedPredicateException(input, "ruleSleepNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2(), 6)");
                    	    }
                    	    // InternalQualityBtCppParser.g:13839:106: ( ({...}? => (otherlv_22= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:13840:6: ({...}? => (otherlv_22= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2(), 6);
                    	    					
                    	    // InternalQualityBtCppParser.g:13843:9: ({...}? => (otherlv_22= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:13843:10: {...}? => (otherlv_22= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSleepNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:13843:19: (otherlv_22= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:13843:20: otherlv_22= RightParenthesis
                    	    {
                    	    otherlv_22=(Token)match(input,RightParenthesis,FOLLOW_29); 

                    	    									newLeafNode(otherlv_22, grammarAccess.getSleepNodeAccess().getRightParenthesisKeyword_2_6());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt205 >= 1 ) break loop205;
                                EarlyExitException eee =
                                    new EarlyExitException(205, input);
                                throw eee;
                        }
                        cnt205++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2()) ) {
                        throw new FailedPredicateException(input, "ruleSleepNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2());
                    				

                    }
                    break;

            }


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSleepNode"


    // $ANTLR start "entryRulePopFromQueueNode"
    // InternalQualityBtCppParser.g:13865:1: entryRulePopFromQueueNode returns [EObject current=null] : iv_rulePopFromQueueNode= rulePopFromQueueNode EOF ;
    public final EObject entryRulePopFromQueueNode() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePopFromQueueNode = null;


        try {
            // InternalQualityBtCppParser.g:13865:57: (iv_rulePopFromQueueNode= rulePopFromQueueNode EOF )
            // InternalQualityBtCppParser.g:13866:2: iv_rulePopFromQueueNode= rulePopFromQueueNode EOF
            {
             newCompositeNode(grammarAccess.getPopFromQueueNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_rulePopFromQueueNode=rulePopFromQueueNode();

            state._fsp--;

             current =iv_rulePopFromQueueNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePopFromQueueNode"


    // $ANTLR start "rulePopFromQueueNode"
    // InternalQualityBtCppParser.g:13872:1: rulePopFromQueueNode returns [EObject current=null] : ( () otherlv_1= PopFromQueue ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? ) ;
    public final EObject rulePopFromQueueNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        AntlrDatatypeRuleToken lv_ID_6_0 = null;

        AntlrDatatypeRuleToken lv_name_9_0 = null;

        EObject lv_parameters_11_0 = null;

        EObject lv_parameters_13_0 = null;

        EObject lv_satisfices_15_0 = null;

        EObject lv_satisfices_17_0 = null;

        EObject lv_satisfies_19_0 = null;

        EObject lv_satisfies_21_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:13878:2: ( ( () otherlv_1= PopFromQueue ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? ) )
            // InternalQualityBtCppParser.g:13879:2: ( () otherlv_1= PopFromQueue ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? )
            {
            // InternalQualityBtCppParser.g:13879:2: ( () otherlv_1= PopFromQueue ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? )
            // InternalQualityBtCppParser.g:13880:3: () otherlv_1= PopFromQueue ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            {
            // InternalQualityBtCppParser.g:13880:3: ()
            // InternalQualityBtCppParser.g:13881:4: 
            {

            				current = forceCreateModelElement(
            					grammarAccess.getPopFromQueueNodeAccess().getPopFromQueueNodeAction_0(),
            					current);
            			

            }

            otherlv_1=(Token)match(input,PopFromQueue,FOLLOW_29); 

            			newLeafNode(otherlv_1, grammarAccess.getPopFromQueueNodeAccess().getPopFromQueueKeyword_1());
            		
            // InternalQualityBtCppParser.g:13891:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt211=2;
            int LA211_0 = input.LA(1);

            if ( ((LA211_0>=Parameters && LA211_0<=Satisfies)||LA211_0==Name||LA211_0==ID||(LA211_0>=LeftParenthesis && LA211_0<=RightParenthesis)) ) {
                alt211=1;
            }
            switch (alt211) {
                case 1 :
                    // InternalQualityBtCppParser.g:13892:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:13892:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:13893:5: ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2());
                    				
                    // InternalQualityBtCppParser.g:13896:5: ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:13897:6: ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:13897:6: ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+
                    int cnt210=0;
                    loop210:
                    do {
                        int alt210=8;
                        int LA210_0 = input.LA(1);

                        if ( LA210_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2(), 0) ) {
                            alt210=1;
                        }
                        else if ( LA210_0 == ID && getUnorderedGroupHelper().canSelect(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2(), 1) ) {
                            alt210=2;
                        }
                        else if ( LA210_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2(), 2) ) {
                            alt210=3;
                        }
                        else if ( LA210_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2(), 3) ) {
                            alt210=4;
                        }
                        else if ( LA210_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2(), 4) ) {
                            alt210=5;
                        }
                        else if ( LA210_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2(), 5) ) {
                            alt210=6;
                        }
                        else if ( LA210_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2(), 6) ) {
                            alt210=7;
                        }


                        switch (alt210) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:13898:4: ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:13898:4: ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:13899:5: {...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2(), 0) ) {
                    	        throw new FailedPredicateException(input, "rulePopFromQueueNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:13899:113: ( ({...}? => (otherlv_3= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:13900:6: ({...}? => (otherlv_3= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:13903:9: ({...}? => (otherlv_3= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:13903:10: {...}? => (otherlv_3= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "rulePopFromQueueNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:13903:19: (otherlv_3= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:13903:20: otherlv_3= LeftParenthesis
                    	    {
                    	    otherlv_3=(Token)match(input,LeftParenthesis,FOLLOW_29); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getPopFromQueueNodeAccess().getLeftParenthesisKeyword_2_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:13913:4: ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:13913:4: ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:13914:5: {...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2(), 1) ) {
                    	        throw new FailedPredicateException(input, "rulePopFromQueueNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:13914:113: ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:13915:6: ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:13918:9: ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:13918:10: {...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "rulePopFromQueueNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:13918:19: (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:13918:20: otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) )
                    	    {
                    	    otherlv_4=(Token)match(input,ID,FOLLOW_8); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getPopFromQueueNodeAccess().getIDKeyword_2_1_0());
                    	    								
                    	    otherlv_5=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_5, grammarAccess.getPopFromQueueNodeAccess().getEqualsSignKeyword_2_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:13926:9: ( (lv_ID_6_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:13927:10: (lv_ID_6_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:13927:10: (lv_ID_6_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:13928:11: lv_ID_6_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getPopFromQueueNodeAccess().getIDEStringParserRuleCall_2_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_29);
                    	    lv_ID_6_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getPopFromQueueNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"ID",
                    	    												lv_ID_6_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:13951:4: ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:13951:4: ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:13952:5: {...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2(), 2) ) {
                    	        throw new FailedPredicateException(input, "rulePopFromQueueNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:13952:113: ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:13953:6: ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:13956:9: ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:13956:10: {...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "rulePopFromQueueNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:13956:19: (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:13956:20: otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) )
                    	    {
                    	    otherlv_7=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_7, grammarAccess.getPopFromQueueNodeAccess().getNameKeyword_2_2_0());
                    	    								
                    	    otherlv_8=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_8, grammarAccess.getPopFromQueueNodeAccess().getEqualsSignKeyword_2_2_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:13964:9: ( (lv_name_9_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:13965:10: (lv_name_9_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:13965:10: (lv_name_9_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:13966:11: lv_name_9_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getPopFromQueueNodeAccess().getNameEStringParserRuleCall_2_2_2_0());
                    	    										
                    	    pushFollow(FOLLOW_29);
                    	    lv_name_9_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getPopFromQueueNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_9_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:13989:4: ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:13989:4: ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:13990:5: {...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2(), 3) ) {
                    	        throw new FailedPredicateException(input, "rulePopFromQueueNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:13990:113: ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:13991:6: ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:13994:9: ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:13994:10: {...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "rulePopFromQueueNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:13994:19: (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:13994:20: otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_10=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_10, grammarAccess.getPopFromQueueNodeAccess().getParametersKeyword_2_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:13998:9: ( (lv_parameters_11_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:13999:10: (lv_parameters_11_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:13999:10: (lv_parameters_11_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:14000:11: lv_parameters_11_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getPopFromQueueNodeAccess().getParametersParameterParserRuleCall_2_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_30);
                    	    lv_parameters_11_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getPopFromQueueNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_11_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:14017:9: (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )*
                    	    loop207:
                    	    do {
                    	        int alt207=2;
                    	        int LA207_0 = input.LA(1);

                    	        if ( (LA207_0==Comma) ) {
                    	            alt207=1;
                    	        }


                    	        switch (alt207) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:14018:10: otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_12=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_12, grammarAccess.getPopFromQueueNodeAccess().getCommaKeyword_2_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:14022:10: ( (lv_parameters_13_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:14023:11: (lv_parameters_13_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:14023:11: (lv_parameters_13_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:14024:12: lv_parameters_13_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getPopFromQueueNodeAccess().getParametersParameterParserRuleCall_2_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_30);
                    	    	    lv_parameters_13_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getPopFromQueueNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_13_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop207;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:14048:4: ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:14048:4: ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:14049:5: {...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2(), 4) ) {
                    	        throw new FailedPredicateException(input, "rulePopFromQueueNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:14049:113: ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:14050:6: ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:14053:9: ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:14053:10: {...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "rulePopFromQueueNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:14053:19: (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:14053:20: otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_14=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_14, grammarAccess.getPopFromQueueNodeAccess().getSatisficesKeyword_2_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:14057:9: ( (lv_satisfices_15_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:14058:10: (lv_satisfices_15_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:14058:10: (lv_satisfices_15_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:14059:11: lv_satisfices_15_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getPopFromQueueNodeAccess().getSatisficesQualityParserRuleCall_2_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_30);
                    	    lv_satisfices_15_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getPopFromQueueNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_15_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:14076:9: (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )*
                    	    loop208:
                    	    do {
                    	        int alt208=2;
                    	        int LA208_0 = input.LA(1);

                    	        if ( (LA208_0==Comma) ) {
                    	            alt208=1;
                    	        }


                    	        switch (alt208) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:14077:10: otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_16=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_16, grammarAccess.getPopFromQueueNodeAccess().getCommaKeyword_2_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:14081:10: ( (lv_satisfices_17_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:14082:11: (lv_satisfices_17_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:14082:11: (lv_satisfices_17_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:14083:12: lv_satisfices_17_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getPopFromQueueNodeAccess().getSatisficesQualityParserRuleCall_2_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_30);
                    	    	    lv_satisfices_17_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getPopFromQueueNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_17_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop208;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:14107:4: ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:14107:4: ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:14108:5: {...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2(), 5) ) {
                    	        throw new FailedPredicateException(input, "rulePopFromQueueNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:14108:113: ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:14109:6: ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:14112:9: ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:14112:10: {...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "rulePopFromQueueNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:14112:19: (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:14112:20: otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_18=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_18, grammarAccess.getPopFromQueueNodeAccess().getSatisfiesKeyword_2_5_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:14116:9: ( (lv_satisfies_19_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:14117:10: (lv_satisfies_19_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:14117:10: (lv_satisfies_19_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:14118:11: lv_satisfies_19_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getPopFromQueueNodeAccess().getSatisfiesQualityRequirementParserRuleCall_2_5_1_0());
                    	    										
                    	    pushFollow(FOLLOW_30);
                    	    lv_satisfies_19_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getPopFromQueueNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_19_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:14135:9: (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )*
                    	    loop209:
                    	    do {
                    	        int alt209=2;
                    	        int LA209_0 = input.LA(1);

                    	        if ( (LA209_0==Comma) ) {
                    	            alt209=1;
                    	        }


                    	        switch (alt209) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:14136:10: otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_20=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_20, grammarAccess.getPopFromQueueNodeAccess().getCommaKeyword_2_5_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:14140:10: ( (lv_satisfies_21_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:14141:11: (lv_satisfies_21_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:14141:11: (lv_satisfies_21_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:14142:12: lv_satisfies_21_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getPopFromQueueNodeAccess().getSatisfiesQualityRequirementParserRuleCall_2_5_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_30);
                    	    	    lv_satisfies_21_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getPopFromQueueNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_21_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop209;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 7 :
                    	    // InternalQualityBtCppParser.g:14166:4: ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:14166:4: ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:14167:5: {...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2(), 6) ) {
                    	        throw new FailedPredicateException(input, "rulePopFromQueueNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2(), 6)");
                    	    }
                    	    // InternalQualityBtCppParser.g:14167:113: ( ({...}? => (otherlv_22= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:14168:6: ({...}? => (otherlv_22= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2(), 6);
                    	    					
                    	    // InternalQualityBtCppParser.g:14171:9: ({...}? => (otherlv_22= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:14171:10: {...}? => (otherlv_22= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "rulePopFromQueueNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:14171:19: (otherlv_22= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:14171:20: otherlv_22= RightParenthesis
                    	    {
                    	    otherlv_22=(Token)match(input,RightParenthesis,FOLLOW_29); 

                    	    									newLeafNode(otherlv_22, grammarAccess.getPopFromQueueNodeAccess().getRightParenthesisKeyword_2_6());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt210 >= 1 ) break loop210;
                                EarlyExitException eee =
                                    new EarlyExitException(210, input);
                                throw eee;
                        }
                        cnt210++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2()) ) {
                        throw new FailedPredicateException(input, "rulePopFromQueueNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2());
                    				

                    }
                    break;

            }


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePopFromQueueNode"

    // Delegated rules


    protected DFA77 dfa77 = new DFA77(this);
    protected DFA102 dfa102 = new DFA102(this);
    protected DFA114 dfa114 = new DFA114(this);
    protected DFA125 dfa125 = new DFA125(this);
    protected DFA175 dfa175 = new DFA175(this);
    static final String dfa_1s = "\12\uffff";
    static final String dfa_2s = "\1\36\11\uffff";
    static final String dfa_3s = "\1\76\11\uffff";
    static final String dfa_4s = "\1\uffff\1\11\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10";
    static final String dfa_5s = "\1\0\11\uffff}>";
    static final String[] dfa_6s = {
            "\1\5\1\6\1\7\17\uffff\1\10\1\4\3\uffff\1\3\2\uffff\1\2\1\11\4\uffff\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final char[] dfa_2 = DFA.unpackEncodedStringToUnsignedChars(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final short[] dfa_4 = DFA.unpackEncodedString(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[][] dfa_6 = unpackEncodedStringArray(dfa_6s);

    class DFA77 extends DFA {

        public DFA77(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 77;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_3;
            this.accept = dfa_4;
            this.special = dfa_5;
            this.transition = dfa_6;
        }
        public String getDescription() {
            return "()+ loopback of 4787:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Msec otherlv_22= EqualsSign ( (lv_msec_23_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA77_0 = input.LA(1);

                         
                        int index77_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA77_0==RULE_BEGIN) ) {s = 1;}

                        else if ( LA77_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1(), 0) ) {s = 2;}

                        else if ( LA77_0 == ID && getUnorderedGroupHelper().canSelect(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1(), 1) ) {s = 3;}

                        else if ( LA77_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1(), 2) ) {s = 4;}

                        else if ( LA77_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1(), 3) ) {s = 5;}

                        else if ( LA77_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1(), 4) ) {s = 6;}

                        else if ( LA77_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1(), 5) ) {s = 7;}

                        else if ( LA77_0 == Msec && getUnorderedGroupHelper().canSelect(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1(), 6) ) {s = 8;}

                        else if ( LA77_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1(), 7) ) {s = 9;}

                         
                        input.seek(index77_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 77, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_7s = "\1\34\11\uffff";
    static final String[] dfa_8s = {
            "\1\10\1\uffff\1\5\1\6\1\7\20\uffff\1\4\3\uffff\1\3\2\uffff\1\2\1\11\4\uffff\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_7 = DFA.unpackEncodedStringToUnsignedChars(dfa_7s);
    static final short[][] dfa_8 = unpackEncodedStringArray(dfa_8s);

    class DFA102 extends DFA {

        public DFA102(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 102;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_7;
            this.max = dfa_3;
            this.accept = dfa_4;
            this.special = dfa_5;
            this.transition = dfa_8;
        }
        public String getDescription() {
            return "()+ loopback of 6565:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Num_cycles otherlv_22= EqualsSign ( (lv_num_cycles_23_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA102_0 = input.LA(1);

                         
                        int index102_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA102_0==RULE_BEGIN) ) {s = 1;}

                        else if ( LA102_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1(), 0) ) {s = 2;}

                        else if ( LA102_0 == ID && getUnorderedGroupHelper().canSelect(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1(), 1) ) {s = 3;}

                        else if ( LA102_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1(), 2) ) {s = 4;}

                        else if ( LA102_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1(), 3) ) {s = 5;}

                        else if ( LA102_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1(), 4) ) {s = 6;}

                        else if ( LA102_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1(), 5) ) {s = 7;}

                        else if ( LA102_0 == Num_cycles && getUnorderedGroupHelper().canSelect(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1(), 6) ) {s = 8;}

                        else if ( LA102_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1(), 7) ) {s = 9;}

                         
                        input.seek(index102_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 102, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_9s = "\1\25\11\uffff";
    static final String[] dfa_10s = {
            "\1\10\10\uffff\1\5\1\6\1\7\20\uffff\1\4\3\uffff\1\3\2\uffff\1\2\1\11\4\uffff\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final short[][] dfa_10 = unpackEncodedStringArray(dfa_10s);

    class DFA114 extends DFA {

        public DFA114(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 114;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_9;
            this.max = dfa_3;
            this.accept = dfa_4;
            this.special = dfa_5;
            this.transition = dfa_10;
        }
        public String getDescription() {
            return "()+ loopback of 7327:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Num_attempts otherlv_22= EqualsSign ( (lv_num_attempts_23_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA114_0 = input.LA(1);

                         
                        int index114_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA114_0==RULE_BEGIN) ) {s = 1;}

                        else if ( LA114_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1(), 0) ) {s = 2;}

                        else if ( LA114_0 == ID && getUnorderedGroupHelper().canSelect(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1(), 1) ) {s = 3;}

                        else if ( LA114_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1(), 2) ) {s = 4;}

                        else if ( LA114_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1(), 3) ) {s = 5;}

                        else if ( LA114_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1(), 4) ) {s = 6;}

                        else if ( LA114_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1(), 5) ) {s = 7;}

                        else if ( LA114_0 == Num_attempts && getUnorderedGroupHelper().canSelect(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1(), 6) ) {s = 8;}

                        else if ( LA114_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1(), 7) ) {s = 9;}

                         
                        input.seek(index114_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 114, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_11s = "\1\33\11\uffff";
    static final String[] dfa_12s = {
            "\1\5\2\uffff\1\6\1\7\1\10\20\uffff\1\4\3\uffff\1\3\2\uffff\1\2\1\11\4\uffff\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_11 = DFA.unpackEncodedStringToUnsignedChars(dfa_11s);
    static final short[][] dfa_12 = unpackEncodedStringArray(dfa_12s);

    class DFA125 extends DFA {

        public DFA125(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 125;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_11;
            this.max = dfa_3;
            this.accept = dfa_4;
            this.special = dfa_5;
            this.transition = dfa_12;
        }
        public String getDescription() {
            return "()+ loopback of 8080:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Delay_msec otherlv_10= EqualsSign ( (lv_delay_msec_11_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= Parameters ( (lv_parameters_13_0= ruleParameter ) ) (otherlv_14= Comma ( (lv_parameters_15_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= Satisfices ( (lv_satisfices_17_0= ruleQuality ) ) (otherlv_18= Comma ( (lv_satisfices_19_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Satisfies ( (lv_satisfies_21_0= ruleQualityRequirement ) ) (otherlv_22= Comma ( (lv_satisfies_23_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA125_0 = input.LA(1);

                         
                        int index125_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA125_0==RULE_BEGIN) ) {s = 1;}

                        else if ( LA125_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1(), 0) ) {s = 2;}

                        else if ( LA125_0 == ID && getUnorderedGroupHelper().canSelect(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1(), 1) ) {s = 3;}

                        else if ( LA125_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1(), 2) ) {s = 4;}

                        else if ( LA125_0 == Delay_msec && getUnorderedGroupHelper().canSelect(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1(), 3) ) {s = 5;}

                        else if ( LA125_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1(), 4) ) {s = 6;}

                        else if ( LA125_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1(), 5) ) {s = 7;}

                        else if ( LA125_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1(), 6) ) {s = 8;}

                        else if ( LA125_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1(), 7) ) {s = 9;}

                         
                        input.seek(index125_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 125, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_13s = "\13\uffff";
    static final String dfa_14s = "\1\1\12\uffff";
    static final String dfa_15s = "\1\4\12\uffff";
    static final String dfa_16s = "\1\77\12\uffff";
    static final String dfa_17s = "\1\uffff\1\12\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11";
    static final String dfa_18s = "\1\0\12\uffff}>";
    static final String[] dfa_19s = {
            "\12\1\1\uffff\6\1\1\uffff\1\1\1\uffff\2\1\3\uffff\1\6\1\7\1\10\1\11\1\1\1\uffff\11\1\1\5\1\1\1\uffff\1\1\1\uffff\1\4\3\1\1\3\2\1\1\2\1\12\2\uffff\1\1\2\uffff\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_13 = DFA.unpackEncodedString(dfa_13s);
    static final short[] dfa_14 = DFA.unpackEncodedString(dfa_14s);
    static final char[] dfa_15 = DFA.unpackEncodedStringToUnsignedChars(dfa_15s);
    static final char[] dfa_16 = DFA.unpackEncodedStringToUnsignedChars(dfa_16s);
    static final short[] dfa_17 = DFA.unpackEncodedString(dfa_17s);
    static final short[] dfa_18 = DFA.unpackEncodedString(dfa_18s);
    static final short[][] dfa_19 = unpackEncodedStringArray(dfa_19s);

    class DFA175 extends DFA {

        public DFA175(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 175;
            this.eot = dfa_13;
            this.eof = dfa_14;
            this.min = dfa_15;
            this.max = dfa_16;
            this.accept = dfa_17;
            this.special = dfa_18;
            this.transition = dfa_19;
        }
        public String getDescription() {
            return "()+ loopback of 11525:6: ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Value otherlv_11= EqualsSign ( (lv_value_12_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Output_key otherlv_14= EqualsSign ( (lv_output_key_15_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= Parameters ( (lv_parameters_17_0= ruleParameter ) ) (otherlv_18= Comma ( (lv_parameters_19_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Satisfices ( (lv_satisfices_21_0= ruleQuality ) ) (otherlv_22= Comma ( (lv_satisfices_23_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= Satisfies ( (lv_satisfies_25_0= ruleQualityRequirement ) ) (otherlv_26= Comma ( (lv_satisfies_27_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= RightParenthesis ) ) ) ) )+";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA175_0 = input.LA(1);

                         
                        int index175_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA175_0==EOF||(LA175_0>=KeepRunningUntilFailure && LA175_0<=SetBlackboard)||(LA175_0>=ConsumeQueue && LA175_0<=ScriptAction)||LA175_0==WhileDoElse||(LA175_0>=CoroAction && LA175_0<=IfThenElse)||LA175_0==Inverter||(LA175_0>=RunOnce && LA175_0<=Sleep)||LA175_0==Loop||LA175_0==Test||(LA175_0>=M && LA175_0<=HyphenMinusGreaterThanSign)||(LA175_0>=R && LA175_0<=VerticalLineVerticalLine)||LA175_0==QuestionMark||LA175_0==RULE_END) ) {s = 1;}

                        else if ( LA175_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 0) ) {s = 2;}

                        else if ( LA175_0 == ID && getUnorderedGroupHelper().canSelect(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 1) ) {s = 3;}

                        else if ( LA175_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 2) ) {s = 4;}

                        else if ( LA175_0 == Value && getUnorderedGroupHelper().canSelect(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 3) ) {s = 5;}

                        else if ( LA175_0 == Output_key && getUnorderedGroupHelper().canSelect(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 4) ) {s = 6;}

                        else if ( LA175_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 5) ) {s = 7;}

                        else if ( LA175_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 6) ) {s = 8;}

                        else if ( LA175_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 7) ) {s = 9;}

                        else if ( LA175_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 8) ) {s = 10;}

                         
                        input.seek(index175_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 175, _s, input);
            error(nvae);
            throw nvae;
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000005L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x4000000000000000L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x8000000000004000L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0020000000000000L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0800000000000000L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x10DCAFFA035FBFF0L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x90DCAFFA035FBFF0L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0100000000000002L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0600000000000000L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x43220001C0000000L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x47220001C0000000L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x43230001C0000000L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x47230001C0000000L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x8000000000000000L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x43220001D0000000L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x47220001D0000000L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x43220001C0000002L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x47220001C0000002L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x43220001C0200000L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x47220001C0200000L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x43220001C8000000L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x47220001C8000000L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x03220001C0000002L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x07220001C0000002L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x03221001E0000002L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x07221001E0000002L});

}
