package org.xtext.btcpp.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.btcpp.services.QualityBtCppGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;

@SuppressWarnings("all")
public class InternalQualityBtCppParser extends AbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "KeepRunningUntilFailureNode", "EntryUpdatedDecoratorNode", "EntryUpdatedActionNode", "SequenceWithMemoryNode", "ReactiveFallbackNode", "ReactiveSequenceNode", "ScriptConditionNode", "UnsetBlackboardNode", "ManualSelectorNode", "ThreadedActionNode", "AlwaysSuccessNode", "SetBlackboardNode", "ConsumeQueueNode", "ForceFailureNode", "ForceSuccessNode", "PopFromQueueNode", "PreconditionNode", "ParallelAllNode", "WhileDoElseNode", "CoroActionNode", "IfThenElseNode", "AlwaysFailure", "FallbackNode", "InverterNode", "ParallelNode", "SequenceNode", "Behaviortree", "Num_attempts", "RunOnceNode", "TimeoutNode", "Description", "RepeatNode", "ScriptNode", "SwitchNode", "Delay_msec", "Num_cycles", "Output_key", "Parameters", "Qualityreq", "Satisfices", "DelayNode", "RetryNode", "SleepNode", "Satisfies", "LoopNode", "TestNode", "Quality", "SubTree", "Child", "Value", "Msec", "Name", "Root", "ID", "LeftParenthesis", "RightParenthesis", "Comma", "EqualsSign", "LeftCurlyBracket", "RightCurlyBracket", "RULE_NL", "RULE_BEGIN", "RULE_END", "RULE_ID", "RULE_INT", "RULE_STRING", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER"
    };
    public static final int LoopNode=48;
    public static final int ForceSuccessNode=18;
    public static final int RULE_BEGIN=65;
    public static final int Delay_msec=38;
    public static final int SubTree=51;
    public static final int ManualSelectorNode=12;
    public static final int ParallelAllNode=21;
    public static final int PreconditionNode=20;
    public static final int ForceFailureNode=17;
    public static final int Name=55;
    public static final int LeftParenthesis=58;
    public static final int AlwaysFailure=25;
    public static final int ParallelNode=28;
    public static final int ScriptConditionNode=10;
    public static final int PopFromQueueNode=19;
    public static final int ID=57;
    public static final int Child=52;
    public static final int EntryUpdatedActionNode=6;
    public static final int Parameters=41;
    public static final int Root=56;
    public static final int RULE_ID=67;
    public static final int Satisfies=47;
    public static final int Output_key=40;
    public static final int RightParenthesis=59;
    public static final int TestNode=49;
    public static final int ScriptNode=36;
    public static final int RepeatNode=35;
    public static final int ReactiveFallbackNode=8;
    public static final int RULE_INT=68;
    public static final int Value=53;
    public static final int RULE_ML_COMMENT=70;
    public static final int ThreadedActionNode=13;
    public static final int IfThenElseNode=24;
    public static final int Msec=54;
    public static final int RetryNode=45;
    public static final int RULE_END=66;
    public static final int Description=34;
    public static final int EntryUpdatedDecoratorNode=5;
    public static final int TimeoutNode=33;
    public static final int AlwaysSuccessNode=14;
    public static final int RULE_STRING=69;
    public static final int RULE_SL_COMMENT=71;
    public static final int CoroActionNode=23;
    public static final int Comma=60;
    public static final int EqualsSign=61;
    public static final int Num_attempts=31;
    public static final int Quality=50;
    public static final int KeepRunningUntilFailureNode=4;
    public static final int FallbackNode=26;
    public static final int RightCurlyBracket=63;
    public static final int EOF=-1;
    public static final int InverterNode=27;
    public static final int Qualityreq=42;
    public static final int UnsetBlackboardNode=11;
    public static final int SequenceWithMemoryNode=7;
    public static final int RULE_WS=72;
    public static final int RunOnceNode=32;
    public static final int LeftCurlyBracket=62;
    public static final int ReactiveSequenceNode=9;
    public static final int RULE_ANY_OTHER=73;
    public static final int SwitchNode=37;
    public static final int SequenceNode=29;
    public static final int WhileDoElseNode=22;
    public static final int ConsumeQueueNode=16;
    public static final int SleepNode=46;
    public static final int SetBlackboardNode=15;
    public static final int Num_cycles=39;
    public static final int Behaviortree=30;
    public static final int RULE_NL=64;
    public static final int DelayNode=44;
    public static final int Satisfices=43;

    // delegates
    // delegators


        public InternalQualityBtCppParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalQualityBtCppParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalQualityBtCppParser.tokenNames; }
    public String getGrammarFileName() { return "InternalQualityBtCppParser.g"; }



     	private QualityBtCppGrammarAccess grammarAccess;

        public InternalQualityBtCppParser(TokenStream input, QualityBtCppGrammarAccess grammarAccess) {
            this(input);
            this.grammarAccess = grammarAccess;
            registerRules(grammarAccess.getGrammar());
        }

        @Override
        protected String getFirstRuleName() {
        	return "Root";
       	}

       	@Override
       	protected QualityBtCppGrammarAccess getGrammarAccess() {
       		return grammarAccess;
       	}




    // $ANTLR start "entryRuleRoot"
    // InternalQualityBtCppParser.g:57:1: entryRuleRoot returns [EObject current=null] : iv_ruleRoot= ruleRoot EOF ;
    public final EObject entryRuleRoot() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRoot = null;


        try {
            // InternalQualityBtCppParser.g:57:45: (iv_ruleRoot= ruleRoot EOF )
            // InternalQualityBtCppParser.g:58:2: iv_ruleRoot= ruleRoot EOF
            {
             newCompositeNode(grammarAccess.getRootRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleRoot=ruleRoot();

            state._fsp--;

             current =iv_ruleRoot; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRoot"


    // $ANTLR start "ruleRoot"
    // InternalQualityBtCppParser.g:64:1: ruleRoot returns [EObject current=null] : (otherlv_0= Root ( (lv_main_tree_to_execute_1_0= ruleEString ) ) this_BEGIN_2= RULE_BEGIN ( (lv_behaviortrees_3_0= ruleBehaviorTree ) ) ( (lv_behaviortrees_4_0= ruleBehaviorTree ) )* this_END_5= RULE_END ) ;
    public final EObject ruleRoot() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token this_BEGIN_2=null;
        Token this_END_5=null;
        AntlrDatatypeRuleToken lv_main_tree_to_execute_1_0 = null;

        EObject lv_behaviortrees_3_0 = null;

        EObject lv_behaviortrees_4_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:70:2: ( (otherlv_0= Root ( (lv_main_tree_to_execute_1_0= ruleEString ) ) this_BEGIN_2= RULE_BEGIN ( (lv_behaviortrees_3_0= ruleBehaviorTree ) ) ( (lv_behaviortrees_4_0= ruleBehaviorTree ) )* this_END_5= RULE_END ) )
            // InternalQualityBtCppParser.g:71:2: (otherlv_0= Root ( (lv_main_tree_to_execute_1_0= ruleEString ) ) this_BEGIN_2= RULE_BEGIN ( (lv_behaviortrees_3_0= ruleBehaviorTree ) ) ( (lv_behaviortrees_4_0= ruleBehaviorTree ) )* this_END_5= RULE_END )
            {
            // InternalQualityBtCppParser.g:71:2: (otherlv_0= Root ( (lv_main_tree_to_execute_1_0= ruleEString ) ) this_BEGIN_2= RULE_BEGIN ( (lv_behaviortrees_3_0= ruleBehaviorTree ) ) ( (lv_behaviortrees_4_0= ruleBehaviorTree ) )* this_END_5= RULE_END )
            // InternalQualityBtCppParser.g:72:3: otherlv_0= Root ( (lv_main_tree_to_execute_1_0= ruleEString ) ) this_BEGIN_2= RULE_BEGIN ( (lv_behaviortrees_3_0= ruleBehaviorTree ) ) ( (lv_behaviortrees_4_0= ruleBehaviorTree ) )* this_END_5= RULE_END
            {
            otherlv_0=(Token)match(input,Root,FOLLOW_3); 

            			newLeafNode(otherlv_0, grammarAccess.getRootAccess().getRootKeyword_0());
            		
            // InternalQualityBtCppParser.g:76:3: ( (lv_main_tree_to_execute_1_0= ruleEString ) )
            // InternalQualityBtCppParser.g:77:4: (lv_main_tree_to_execute_1_0= ruleEString )
            {
            // InternalQualityBtCppParser.g:77:4: (lv_main_tree_to_execute_1_0= ruleEString )
            // InternalQualityBtCppParser.g:78:5: lv_main_tree_to_execute_1_0= ruleEString
            {

            					newCompositeNode(grammarAccess.getRootAccess().getMain_tree_to_executeEStringParserRuleCall_1_0());
            				
            pushFollow(FOLLOW_4);
            lv_main_tree_to_execute_1_0=ruleEString();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getRootRule());
            					}
            					set(
            						current,
            						"main_tree_to_execute",
            						lv_main_tree_to_execute_1_0,
            						"org.xtext.btcpp.QualityBtCpp.EString");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            this_BEGIN_2=(Token)match(input,RULE_BEGIN,FOLLOW_5); 

            			newLeafNode(this_BEGIN_2, grammarAccess.getRootAccess().getBEGINTerminalRuleCall_2());
            		
            // InternalQualityBtCppParser.g:99:3: ( (lv_behaviortrees_3_0= ruleBehaviorTree ) )
            // InternalQualityBtCppParser.g:100:4: (lv_behaviortrees_3_0= ruleBehaviorTree )
            {
            // InternalQualityBtCppParser.g:100:4: (lv_behaviortrees_3_0= ruleBehaviorTree )
            // InternalQualityBtCppParser.g:101:5: lv_behaviortrees_3_0= ruleBehaviorTree
            {

            					newCompositeNode(grammarAccess.getRootAccess().getBehaviortreesBehaviorTreeParserRuleCall_3_0());
            				
            pushFollow(FOLLOW_6);
            lv_behaviortrees_3_0=ruleBehaviorTree();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getRootRule());
            					}
            					add(
            						current,
            						"behaviortrees",
            						lv_behaviortrees_3_0,
            						"org.xtext.btcpp.QualityBtCpp.BehaviorTree");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            // InternalQualityBtCppParser.g:118:3: ( (lv_behaviortrees_4_0= ruleBehaviorTree ) )*
            loop1:
            do {
                int alt1=2;
                int LA1_0 = input.LA(1);

                if ( (LA1_0==Behaviortree) ) {
                    alt1=1;
                }


                switch (alt1) {
            	case 1 :
            	    // InternalQualityBtCppParser.g:119:4: (lv_behaviortrees_4_0= ruleBehaviorTree )
            	    {
            	    // InternalQualityBtCppParser.g:119:4: (lv_behaviortrees_4_0= ruleBehaviorTree )
            	    // InternalQualityBtCppParser.g:120:5: lv_behaviortrees_4_0= ruleBehaviorTree
            	    {

            	    					newCompositeNode(grammarAccess.getRootAccess().getBehaviortreesBehaviorTreeParserRuleCall_4_0());
            	    				
            	    pushFollow(FOLLOW_6);
            	    lv_behaviortrees_4_0=ruleBehaviorTree();

            	    state._fsp--;


            	    					if (current==null) {
            	    						current = createModelElementForParent(grammarAccess.getRootRule());
            	    					}
            	    					add(
            	    						current,
            	    						"behaviortrees",
            	    						lv_behaviortrees_4_0,
            	    						"org.xtext.btcpp.QualityBtCpp.BehaviorTree");
            	    					afterParserOrEnumRuleCall();
            	    				

            	    }


            	    }
            	    break;

            	default :
            	    break loop1;
                }
            } while (true);

            this_END_5=(Token)match(input,RULE_END,FOLLOW_2); 

            			newLeafNode(this_END_5, grammarAccess.getRootAccess().getENDTerminalRuleCall_5());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRoot"


    // $ANTLR start "entryRuleTreeNode"
    // InternalQualityBtCppParser.g:145:1: entryRuleTreeNode returns [EObject current=null] : iv_ruleTreeNode= ruleTreeNode EOF ;
    public final EObject entryRuleTreeNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTreeNode = null;


        try {
            // InternalQualityBtCppParser.g:145:49: (iv_ruleTreeNode= ruleTreeNode EOF )
            // InternalQualityBtCppParser.g:146:2: iv_ruleTreeNode= ruleTreeNode EOF
            {
             newCompositeNode(grammarAccess.getTreeNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleTreeNode=ruleTreeNode();

            state._fsp--;

             current =iv_ruleTreeNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTreeNode"


    // $ANTLR start "ruleTreeNode"
    // InternalQualityBtCppParser.g:152:1: ruleTreeNode returns [EObject current=null] : (this_LeafNode_0= ruleLeafNode | this_ControlNode_1= ruleControlNode | this_DecoratorNode_2= ruleDecoratorNode | this_SubTree_3= ruleSubTree ) ;
    public final EObject ruleTreeNode() throws RecognitionException {
        EObject current = null;

        EObject this_LeafNode_0 = null;

        EObject this_ControlNode_1 = null;

        EObject this_DecoratorNode_2 = null;

        EObject this_SubTree_3 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:158:2: ( (this_LeafNode_0= ruleLeafNode | this_ControlNode_1= ruleControlNode | this_DecoratorNode_2= ruleDecoratorNode | this_SubTree_3= ruleSubTree ) )
            // InternalQualityBtCppParser.g:159:2: (this_LeafNode_0= ruleLeafNode | this_ControlNode_1= ruleControlNode | this_DecoratorNode_2= ruleDecoratorNode | this_SubTree_3= ruleSubTree )
            {
            // InternalQualityBtCppParser.g:159:2: (this_LeafNode_0= ruleLeafNode | this_ControlNode_1= ruleControlNode | this_DecoratorNode_2= ruleDecoratorNode | this_SubTree_3= ruleSubTree )
            int alt2=4;
            switch ( input.LA(1) ) {
            case EntryUpdatedActionNode:
            case ScriptConditionNode:
            case UnsetBlackboardNode:
            case ThreadedActionNode:
            case AlwaysSuccessNode:
            case SetBlackboardNode:
            case PopFromQueueNode:
            case CoroActionNode:
            case AlwaysFailure:
            case ScriptNode:
            case SleepNode:
            case TestNode:
                {
                alt2=1;
                }
                break;
            case SequenceWithMemoryNode:
            case ReactiveFallbackNode:
            case ReactiveSequenceNode:
            case ManualSelectorNode:
            case ParallelAllNode:
            case WhileDoElseNode:
            case IfThenElseNode:
            case FallbackNode:
            case ParallelNode:
            case SequenceNode:
            case SwitchNode:
                {
                alt2=2;
                }
                break;
            case KeepRunningUntilFailureNode:
            case ConsumeQueueNode:
            case ForceFailureNode:
            case ForceSuccessNode:
            case PreconditionNode:
            case InverterNode:
            case RunOnceNode:
            case TimeoutNode:
            case RepeatNode:
            case DelayNode:
            case RetryNode:
            case LoopNode:
                {
                alt2=3;
                }
                break;
            case SubTree:
                {
                alt2=4;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 2, 0, input);

                throw nvae;
            }

            switch (alt2) {
                case 1 :
                    // InternalQualityBtCppParser.g:160:3: this_LeafNode_0= ruleLeafNode
                    {

                    			newCompositeNode(grammarAccess.getTreeNodeAccess().getLeafNodeParserRuleCall_0());
                    		
                    pushFollow(FOLLOW_2);
                    this_LeafNode_0=ruleLeafNode();

                    state._fsp--;


                    			current = this_LeafNode_0;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 2 :
                    // InternalQualityBtCppParser.g:169:3: this_ControlNode_1= ruleControlNode
                    {

                    			newCompositeNode(grammarAccess.getTreeNodeAccess().getControlNodeParserRuleCall_1());
                    		
                    pushFollow(FOLLOW_2);
                    this_ControlNode_1=ruleControlNode();

                    state._fsp--;


                    			current = this_ControlNode_1;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 3 :
                    // InternalQualityBtCppParser.g:178:3: this_DecoratorNode_2= ruleDecoratorNode
                    {

                    			newCompositeNode(grammarAccess.getTreeNodeAccess().getDecoratorNodeParserRuleCall_2());
                    		
                    pushFollow(FOLLOW_2);
                    this_DecoratorNode_2=ruleDecoratorNode();

                    state._fsp--;


                    			current = this_DecoratorNode_2;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 4 :
                    // InternalQualityBtCppParser.g:187:3: this_SubTree_3= ruleSubTree
                    {

                    			newCompositeNode(grammarAccess.getTreeNodeAccess().getSubTreeParserRuleCall_3());
                    		
                    pushFollow(FOLLOW_2);
                    this_SubTree_3=ruleSubTree();

                    state._fsp--;


                    			current = this_SubTree_3;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTreeNode"


    // $ANTLR start "entryRuleLeafNode"
    // InternalQualityBtCppParser.g:199:1: entryRuleLeafNode returns [EObject current=null] : iv_ruleLeafNode= ruleLeafNode EOF ;
    public final EObject entryRuleLeafNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLeafNode = null;


        try {
            // InternalQualityBtCppParser.g:199:49: (iv_ruleLeafNode= ruleLeafNode EOF )
            // InternalQualityBtCppParser.g:200:2: iv_ruleLeafNode= ruleLeafNode EOF
            {
             newCompositeNode(grammarAccess.getLeafNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleLeafNode=ruleLeafNode();

            state._fsp--;

             current =iv_ruleLeafNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLeafNode"


    // $ANTLR start "ruleLeafNode"
    // InternalQualityBtCppParser.g:206:1: ruleLeafNode returns [EObject current=null] : (this_ActionNodeBase_0= ruleActionNodeBase | this_ConditionNode_1= ruleConditionNode ) ;
    public final EObject ruleLeafNode() throws RecognitionException {
        EObject current = null;

        EObject this_ActionNodeBase_0 = null;

        EObject this_ConditionNode_1 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:212:2: ( (this_ActionNodeBase_0= ruleActionNodeBase | this_ConditionNode_1= ruleConditionNode ) )
            // InternalQualityBtCppParser.g:213:2: (this_ActionNodeBase_0= ruleActionNodeBase | this_ConditionNode_1= ruleConditionNode )
            {
            // InternalQualityBtCppParser.g:213:2: (this_ActionNodeBase_0= ruleActionNodeBase | this_ConditionNode_1= ruleConditionNode )
            int alt3=2;
            int LA3_0 = input.LA(1);

            if ( (LA3_0==EntryUpdatedActionNode||LA3_0==UnsetBlackboardNode||(LA3_0>=ThreadedActionNode && LA3_0<=SetBlackboardNode)||LA3_0==PopFromQueueNode||LA3_0==CoroActionNode||LA3_0==AlwaysFailure||LA3_0==ScriptNode||LA3_0==SleepNode||LA3_0==TestNode) ) {
                alt3=1;
            }
            else if ( (LA3_0==ScriptConditionNode) ) {
                alt3=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 3, 0, input);

                throw nvae;
            }
            switch (alt3) {
                case 1 :
                    // InternalQualityBtCppParser.g:214:3: this_ActionNodeBase_0= ruleActionNodeBase
                    {

                    			newCompositeNode(grammarAccess.getLeafNodeAccess().getActionNodeBaseParserRuleCall_0());
                    		
                    pushFollow(FOLLOW_2);
                    this_ActionNodeBase_0=ruleActionNodeBase();

                    state._fsp--;


                    			current = this_ActionNodeBase_0;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 2 :
                    // InternalQualityBtCppParser.g:223:3: this_ConditionNode_1= ruleConditionNode
                    {

                    			newCompositeNode(grammarAccess.getLeafNodeAccess().getConditionNodeParserRuleCall_1());
                    		
                    pushFollow(FOLLOW_2);
                    this_ConditionNode_1=ruleConditionNode();

                    state._fsp--;


                    			current = this_ConditionNode_1;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLeafNode"


    // $ANTLR start "entryRuleConditionNode"
    // InternalQualityBtCppParser.g:235:1: entryRuleConditionNode returns [EObject current=null] : iv_ruleConditionNode= ruleConditionNode EOF ;
    public final EObject entryRuleConditionNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConditionNode = null;


        try {
            // InternalQualityBtCppParser.g:235:54: (iv_ruleConditionNode= ruleConditionNode EOF )
            // InternalQualityBtCppParser.g:236:2: iv_ruleConditionNode= ruleConditionNode EOF
            {
             newCompositeNode(grammarAccess.getConditionNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleConditionNode=ruleConditionNode();

            state._fsp--;

             current =iv_ruleConditionNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConditionNode"


    // $ANTLR start "ruleConditionNode"
    // InternalQualityBtCppParser.g:242:1: ruleConditionNode returns [EObject current=null] : this_ScriptConditionNode_0= ruleScriptConditionNode ;
    public final EObject ruleConditionNode() throws RecognitionException {
        EObject current = null;

        EObject this_ScriptConditionNode_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:248:2: (this_ScriptConditionNode_0= ruleScriptConditionNode )
            // InternalQualityBtCppParser.g:249:2: this_ScriptConditionNode_0= ruleScriptConditionNode
            {

            		newCompositeNode(grammarAccess.getConditionNodeAccess().getScriptConditionNodeParserRuleCall());
            	
            pushFollow(FOLLOW_2);
            this_ScriptConditionNode_0=ruleScriptConditionNode();

            state._fsp--;


            		current = this_ScriptConditionNode_0;
            		afterParserOrEnumRuleCall();
            	

            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConditionNode"


    // $ANTLR start "entryRuleActionNodeBase"
    // InternalQualityBtCppParser.g:260:1: entryRuleActionNodeBase returns [EObject current=null] : iv_ruleActionNodeBase= ruleActionNodeBase EOF ;
    public final EObject entryRuleActionNodeBase() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleActionNodeBase = null;


        try {
            // InternalQualityBtCppParser.g:260:55: (iv_ruleActionNodeBase= ruleActionNodeBase EOF )
            // InternalQualityBtCppParser.g:261:2: iv_ruleActionNodeBase= ruleActionNodeBase EOF
            {
             newCompositeNode(grammarAccess.getActionNodeBaseRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleActionNodeBase=ruleActionNodeBase();

            state._fsp--;

             current =iv_ruleActionNodeBase; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleActionNodeBase"


    // $ANTLR start "ruleActionNodeBase"
    // InternalQualityBtCppParser.g:267:1: ruleActionNodeBase returns [EObject current=null] : (this_ScriptNode_0= ruleScriptNode | this_EntryUpdatedActionNode_1= ruleEntryUpdatedActionNode | this_AlwaysSuccessNode_2= ruleAlwaysSuccessNode | this_AlwaysFailureNode_3= ruleAlwaysFailureNode | this_SetBlackboardNode_4= ruleSetBlackboardNode | this_UnsetBlackboardNode_5= ruleUnsetBlackboardNode | this_PopFromQueueNode_6= rulePopFromQueueNode | this_ThreadedActionNode_7= ruleThreadedActionNode | this_CoroActionNode_8= ruleCoroActionNode | this_SleepNode_9= ruleSleepNode | this_TestNode_10= ruleTestNode ) ;
    public final EObject ruleActionNodeBase() throws RecognitionException {
        EObject current = null;

        EObject this_ScriptNode_0 = null;

        EObject this_EntryUpdatedActionNode_1 = null;

        EObject this_AlwaysSuccessNode_2 = null;

        EObject this_AlwaysFailureNode_3 = null;

        EObject this_SetBlackboardNode_4 = null;

        EObject this_UnsetBlackboardNode_5 = null;

        EObject this_PopFromQueueNode_6 = null;

        EObject this_ThreadedActionNode_7 = null;

        EObject this_CoroActionNode_8 = null;

        EObject this_SleepNode_9 = null;

        EObject this_TestNode_10 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:273:2: ( (this_ScriptNode_0= ruleScriptNode | this_EntryUpdatedActionNode_1= ruleEntryUpdatedActionNode | this_AlwaysSuccessNode_2= ruleAlwaysSuccessNode | this_AlwaysFailureNode_3= ruleAlwaysFailureNode | this_SetBlackboardNode_4= ruleSetBlackboardNode | this_UnsetBlackboardNode_5= ruleUnsetBlackboardNode | this_PopFromQueueNode_6= rulePopFromQueueNode | this_ThreadedActionNode_7= ruleThreadedActionNode | this_CoroActionNode_8= ruleCoroActionNode | this_SleepNode_9= ruleSleepNode | this_TestNode_10= ruleTestNode ) )
            // InternalQualityBtCppParser.g:274:2: (this_ScriptNode_0= ruleScriptNode | this_EntryUpdatedActionNode_1= ruleEntryUpdatedActionNode | this_AlwaysSuccessNode_2= ruleAlwaysSuccessNode | this_AlwaysFailureNode_3= ruleAlwaysFailureNode | this_SetBlackboardNode_4= ruleSetBlackboardNode | this_UnsetBlackboardNode_5= ruleUnsetBlackboardNode | this_PopFromQueueNode_6= rulePopFromQueueNode | this_ThreadedActionNode_7= ruleThreadedActionNode | this_CoroActionNode_8= ruleCoroActionNode | this_SleepNode_9= ruleSleepNode | this_TestNode_10= ruleTestNode )
            {
            // InternalQualityBtCppParser.g:274:2: (this_ScriptNode_0= ruleScriptNode | this_EntryUpdatedActionNode_1= ruleEntryUpdatedActionNode | this_AlwaysSuccessNode_2= ruleAlwaysSuccessNode | this_AlwaysFailureNode_3= ruleAlwaysFailureNode | this_SetBlackboardNode_4= ruleSetBlackboardNode | this_UnsetBlackboardNode_5= ruleUnsetBlackboardNode | this_PopFromQueueNode_6= rulePopFromQueueNode | this_ThreadedActionNode_7= ruleThreadedActionNode | this_CoroActionNode_8= ruleCoroActionNode | this_SleepNode_9= ruleSleepNode | this_TestNode_10= ruleTestNode )
            int alt4=11;
            switch ( input.LA(1) ) {
            case ScriptNode:
                {
                alt4=1;
                }
                break;
            case EntryUpdatedActionNode:
                {
                alt4=2;
                }
                break;
            case AlwaysSuccessNode:
                {
                alt4=3;
                }
                break;
            case AlwaysFailure:
                {
                alt4=4;
                }
                break;
            case SetBlackboardNode:
                {
                alt4=5;
                }
                break;
            case UnsetBlackboardNode:
                {
                alt4=6;
                }
                break;
            case PopFromQueueNode:
                {
                alt4=7;
                }
                break;
            case ThreadedActionNode:
                {
                alt4=8;
                }
                break;
            case CoroActionNode:
                {
                alt4=9;
                }
                break;
            case SleepNode:
                {
                alt4=10;
                }
                break;
            case TestNode:
                {
                alt4=11;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 4, 0, input);

                throw nvae;
            }

            switch (alt4) {
                case 1 :
                    // InternalQualityBtCppParser.g:275:3: this_ScriptNode_0= ruleScriptNode
                    {

                    			newCompositeNode(grammarAccess.getActionNodeBaseAccess().getScriptNodeParserRuleCall_0());
                    		
                    pushFollow(FOLLOW_2);
                    this_ScriptNode_0=ruleScriptNode();

                    state._fsp--;


                    			current = this_ScriptNode_0;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 2 :
                    // InternalQualityBtCppParser.g:284:3: this_EntryUpdatedActionNode_1= ruleEntryUpdatedActionNode
                    {

                    			newCompositeNode(grammarAccess.getActionNodeBaseAccess().getEntryUpdatedActionNodeParserRuleCall_1());
                    		
                    pushFollow(FOLLOW_2);
                    this_EntryUpdatedActionNode_1=ruleEntryUpdatedActionNode();

                    state._fsp--;


                    			current = this_EntryUpdatedActionNode_1;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 3 :
                    // InternalQualityBtCppParser.g:293:3: this_AlwaysSuccessNode_2= ruleAlwaysSuccessNode
                    {

                    			newCompositeNode(grammarAccess.getActionNodeBaseAccess().getAlwaysSuccessNodeParserRuleCall_2());
                    		
                    pushFollow(FOLLOW_2);
                    this_AlwaysSuccessNode_2=ruleAlwaysSuccessNode();

                    state._fsp--;


                    			current = this_AlwaysSuccessNode_2;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 4 :
                    // InternalQualityBtCppParser.g:302:3: this_AlwaysFailureNode_3= ruleAlwaysFailureNode
                    {

                    			newCompositeNode(grammarAccess.getActionNodeBaseAccess().getAlwaysFailureNodeParserRuleCall_3());
                    		
                    pushFollow(FOLLOW_2);
                    this_AlwaysFailureNode_3=ruleAlwaysFailureNode();

                    state._fsp--;


                    			current = this_AlwaysFailureNode_3;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 5 :
                    // InternalQualityBtCppParser.g:311:3: this_SetBlackboardNode_4= ruleSetBlackboardNode
                    {

                    			newCompositeNode(grammarAccess.getActionNodeBaseAccess().getSetBlackboardNodeParserRuleCall_4());
                    		
                    pushFollow(FOLLOW_2);
                    this_SetBlackboardNode_4=ruleSetBlackboardNode();

                    state._fsp--;


                    			current = this_SetBlackboardNode_4;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 6 :
                    // InternalQualityBtCppParser.g:320:3: this_UnsetBlackboardNode_5= ruleUnsetBlackboardNode
                    {

                    			newCompositeNode(grammarAccess.getActionNodeBaseAccess().getUnsetBlackboardNodeParserRuleCall_5());
                    		
                    pushFollow(FOLLOW_2);
                    this_UnsetBlackboardNode_5=ruleUnsetBlackboardNode();

                    state._fsp--;


                    			current = this_UnsetBlackboardNode_5;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 7 :
                    // InternalQualityBtCppParser.g:329:3: this_PopFromQueueNode_6= rulePopFromQueueNode
                    {

                    			newCompositeNode(grammarAccess.getActionNodeBaseAccess().getPopFromQueueNodeParserRuleCall_6());
                    		
                    pushFollow(FOLLOW_2);
                    this_PopFromQueueNode_6=rulePopFromQueueNode();

                    state._fsp--;


                    			current = this_PopFromQueueNode_6;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 8 :
                    // InternalQualityBtCppParser.g:338:3: this_ThreadedActionNode_7= ruleThreadedActionNode
                    {

                    			newCompositeNode(grammarAccess.getActionNodeBaseAccess().getThreadedActionNodeParserRuleCall_7());
                    		
                    pushFollow(FOLLOW_2);
                    this_ThreadedActionNode_7=ruleThreadedActionNode();

                    state._fsp--;


                    			current = this_ThreadedActionNode_7;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 9 :
                    // InternalQualityBtCppParser.g:347:3: this_CoroActionNode_8= ruleCoroActionNode
                    {

                    			newCompositeNode(grammarAccess.getActionNodeBaseAccess().getCoroActionNodeParserRuleCall_8());
                    		
                    pushFollow(FOLLOW_2);
                    this_CoroActionNode_8=ruleCoroActionNode();

                    state._fsp--;


                    			current = this_CoroActionNode_8;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 10 :
                    // InternalQualityBtCppParser.g:356:3: this_SleepNode_9= ruleSleepNode
                    {

                    			newCompositeNode(grammarAccess.getActionNodeBaseAccess().getSleepNodeParserRuleCall_9());
                    		
                    pushFollow(FOLLOW_2);
                    this_SleepNode_9=ruleSleepNode();

                    state._fsp--;


                    			current = this_SleepNode_9;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 11 :
                    // InternalQualityBtCppParser.g:365:3: this_TestNode_10= ruleTestNode
                    {

                    			newCompositeNode(grammarAccess.getActionNodeBaseAccess().getTestNodeParserRuleCall_10());
                    		
                    pushFollow(FOLLOW_2);
                    this_TestNode_10=ruleTestNode();

                    state._fsp--;


                    			current = this_TestNode_10;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleActionNodeBase"


    // $ANTLR start "entryRuleControlNode"
    // InternalQualityBtCppParser.g:377:1: entryRuleControlNode returns [EObject current=null] : iv_ruleControlNode= ruleControlNode EOF ;
    public final EObject entryRuleControlNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleControlNode = null;


        try {
            // InternalQualityBtCppParser.g:377:52: (iv_ruleControlNode= ruleControlNode EOF )
            // InternalQualityBtCppParser.g:378:2: iv_ruleControlNode= ruleControlNode EOF
            {
             newCompositeNode(grammarAccess.getControlNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleControlNode=ruleControlNode();

            state._fsp--;

             current =iv_ruleControlNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleControlNode"


    // $ANTLR start "ruleControlNode"
    // InternalQualityBtCppParser.g:384:1: ruleControlNode returns [EObject current=null] : (this_ReactiveSequenceNode_0= ruleReactiveSequenceNode | this_SequenceNode_1= ruleSequenceNode | this_SequenceWithMemoryNode_2= ruleSequenceWithMemoryNode | this_FallbackNode_3= ruleFallbackNode | this_ReactiveFallbackNode_4= ruleReactiveFallbackNode | this_ParallelNode_5= ruleParallelNode | this_ParallelAllNode_6= ruleParallelAllNode | this_IfThenElseNode_7= ruleIfThenElseNode | this_SwitchNode_8= ruleSwitchNode | this_WhileDoElseNode_9= ruleWhileDoElseNode | this_ManualSelectorNode_10= ruleManualSelectorNode ) ;
    public final EObject ruleControlNode() throws RecognitionException {
        EObject current = null;

        EObject this_ReactiveSequenceNode_0 = null;

        EObject this_SequenceNode_1 = null;

        EObject this_SequenceWithMemoryNode_2 = null;

        EObject this_FallbackNode_3 = null;

        EObject this_ReactiveFallbackNode_4 = null;

        EObject this_ParallelNode_5 = null;

        EObject this_ParallelAllNode_6 = null;

        EObject this_IfThenElseNode_7 = null;

        EObject this_SwitchNode_8 = null;

        EObject this_WhileDoElseNode_9 = null;

        EObject this_ManualSelectorNode_10 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:390:2: ( (this_ReactiveSequenceNode_0= ruleReactiveSequenceNode | this_SequenceNode_1= ruleSequenceNode | this_SequenceWithMemoryNode_2= ruleSequenceWithMemoryNode | this_FallbackNode_3= ruleFallbackNode | this_ReactiveFallbackNode_4= ruleReactiveFallbackNode | this_ParallelNode_5= ruleParallelNode | this_ParallelAllNode_6= ruleParallelAllNode | this_IfThenElseNode_7= ruleIfThenElseNode | this_SwitchNode_8= ruleSwitchNode | this_WhileDoElseNode_9= ruleWhileDoElseNode | this_ManualSelectorNode_10= ruleManualSelectorNode ) )
            // InternalQualityBtCppParser.g:391:2: (this_ReactiveSequenceNode_0= ruleReactiveSequenceNode | this_SequenceNode_1= ruleSequenceNode | this_SequenceWithMemoryNode_2= ruleSequenceWithMemoryNode | this_FallbackNode_3= ruleFallbackNode | this_ReactiveFallbackNode_4= ruleReactiveFallbackNode | this_ParallelNode_5= ruleParallelNode | this_ParallelAllNode_6= ruleParallelAllNode | this_IfThenElseNode_7= ruleIfThenElseNode | this_SwitchNode_8= ruleSwitchNode | this_WhileDoElseNode_9= ruleWhileDoElseNode | this_ManualSelectorNode_10= ruleManualSelectorNode )
            {
            // InternalQualityBtCppParser.g:391:2: (this_ReactiveSequenceNode_0= ruleReactiveSequenceNode | this_SequenceNode_1= ruleSequenceNode | this_SequenceWithMemoryNode_2= ruleSequenceWithMemoryNode | this_FallbackNode_3= ruleFallbackNode | this_ReactiveFallbackNode_4= ruleReactiveFallbackNode | this_ParallelNode_5= ruleParallelNode | this_ParallelAllNode_6= ruleParallelAllNode | this_IfThenElseNode_7= ruleIfThenElseNode | this_SwitchNode_8= ruleSwitchNode | this_WhileDoElseNode_9= ruleWhileDoElseNode | this_ManualSelectorNode_10= ruleManualSelectorNode )
            int alt5=11;
            switch ( input.LA(1) ) {
            case ReactiveSequenceNode:
                {
                alt5=1;
                }
                break;
            case SequenceNode:
                {
                alt5=2;
                }
                break;
            case SequenceWithMemoryNode:
                {
                alt5=3;
                }
                break;
            case FallbackNode:
                {
                alt5=4;
                }
                break;
            case ReactiveFallbackNode:
                {
                alt5=5;
                }
                break;
            case ParallelNode:
                {
                alt5=6;
                }
                break;
            case ParallelAllNode:
                {
                alt5=7;
                }
                break;
            case IfThenElseNode:
                {
                alt5=8;
                }
                break;
            case SwitchNode:
                {
                alt5=9;
                }
                break;
            case WhileDoElseNode:
                {
                alt5=10;
                }
                break;
            case ManualSelectorNode:
                {
                alt5=11;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 5, 0, input);

                throw nvae;
            }

            switch (alt5) {
                case 1 :
                    // InternalQualityBtCppParser.g:392:3: this_ReactiveSequenceNode_0= ruleReactiveSequenceNode
                    {

                    			newCompositeNode(grammarAccess.getControlNodeAccess().getReactiveSequenceNodeParserRuleCall_0());
                    		
                    pushFollow(FOLLOW_2);
                    this_ReactiveSequenceNode_0=ruleReactiveSequenceNode();

                    state._fsp--;


                    			current = this_ReactiveSequenceNode_0;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 2 :
                    // InternalQualityBtCppParser.g:401:3: this_SequenceNode_1= ruleSequenceNode
                    {

                    			newCompositeNode(grammarAccess.getControlNodeAccess().getSequenceNodeParserRuleCall_1());
                    		
                    pushFollow(FOLLOW_2);
                    this_SequenceNode_1=ruleSequenceNode();

                    state._fsp--;


                    			current = this_SequenceNode_1;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 3 :
                    // InternalQualityBtCppParser.g:410:3: this_SequenceWithMemoryNode_2= ruleSequenceWithMemoryNode
                    {

                    			newCompositeNode(grammarAccess.getControlNodeAccess().getSequenceWithMemoryNodeParserRuleCall_2());
                    		
                    pushFollow(FOLLOW_2);
                    this_SequenceWithMemoryNode_2=ruleSequenceWithMemoryNode();

                    state._fsp--;


                    			current = this_SequenceWithMemoryNode_2;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 4 :
                    // InternalQualityBtCppParser.g:419:3: this_FallbackNode_3= ruleFallbackNode
                    {

                    			newCompositeNode(grammarAccess.getControlNodeAccess().getFallbackNodeParserRuleCall_3());
                    		
                    pushFollow(FOLLOW_2);
                    this_FallbackNode_3=ruleFallbackNode();

                    state._fsp--;


                    			current = this_FallbackNode_3;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 5 :
                    // InternalQualityBtCppParser.g:428:3: this_ReactiveFallbackNode_4= ruleReactiveFallbackNode
                    {

                    			newCompositeNode(grammarAccess.getControlNodeAccess().getReactiveFallbackNodeParserRuleCall_4());
                    		
                    pushFollow(FOLLOW_2);
                    this_ReactiveFallbackNode_4=ruleReactiveFallbackNode();

                    state._fsp--;


                    			current = this_ReactiveFallbackNode_4;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 6 :
                    // InternalQualityBtCppParser.g:437:3: this_ParallelNode_5= ruleParallelNode
                    {

                    			newCompositeNode(grammarAccess.getControlNodeAccess().getParallelNodeParserRuleCall_5());
                    		
                    pushFollow(FOLLOW_2);
                    this_ParallelNode_5=ruleParallelNode();

                    state._fsp--;


                    			current = this_ParallelNode_5;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 7 :
                    // InternalQualityBtCppParser.g:446:3: this_ParallelAllNode_6= ruleParallelAllNode
                    {

                    			newCompositeNode(grammarAccess.getControlNodeAccess().getParallelAllNodeParserRuleCall_6());
                    		
                    pushFollow(FOLLOW_2);
                    this_ParallelAllNode_6=ruleParallelAllNode();

                    state._fsp--;


                    			current = this_ParallelAllNode_6;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 8 :
                    // InternalQualityBtCppParser.g:455:3: this_IfThenElseNode_7= ruleIfThenElseNode
                    {

                    			newCompositeNode(grammarAccess.getControlNodeAccess().getIfThenElseNodeParserRuleCall_7());
                    		
                    pushFollow(FOLLOW_2);
                    this_IfThenElseNode_7=ruleIfThenElseNode();

                    state._fsp--;


                    			current = this_IfThenElseNode_7;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 9 :
                    // InternalQualityBtCppParser.g:464:3: this_SwitchNode_8= ruleSwitchNode
                    {

                    			newCompositeNode(grammarAccess.getControlNodeAccess().getSwitchNodeParserRuleCall_8());
                    		
                    pushFollow(FOLLOW_2);
                    this_SwitchNode_8=ruleSwitchNode();

                    state._fsp--;


                    			current = this_SwitchNode_8;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 10 :
                    // InternalQualityBtCppParser.g:473:3: this_WhileDoElseNode_9= ruleWhileDoElseNode
                    {

                    			newCompositeNode(grammarAccess.getControlNodeAccess().getWhileDoElseNodeParserRuleCall_9());
                    		
                    pushFollow(FOLLOW_2);
                    this_WhileDoElseNode_9=ruleWhileDoElseNode();

                    state._fsp--;


                    			current = this_WhileDoElseNode_9;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 11 :
                    // InternalQualityBtCppParser.g:482:3: this_ManualSelectorNode_10= ruleManualSelectorNode
                    {

                    			newCompositeNode(grammarAccess.getControlNodeAccess().getManualSelectorNodeParserRuleCall_10());
                    		
                    pushFollow(FOLLOW_2);
                    this_ManualSelectorNode_10=ruleManualSelectorNode();

                    state._fsp--;


                    			current = this_ManualSelectorNode_10;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleControlNode"


    // $ANTLR start "entryRuleDecoratorNode"
    // InternalQualityBtCppParser.g:494:1: entryRuleDecoratorNode returns [EObject current=null] : iv_ruleDecoratorNode= ruleDecoratorNode EOF ;
    public final EObject entryRuleDecoratorNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDecoratorNode = null;


        try {
            // InternalQualityBtCppParser.g:494:54: (iv_ruleDecoratorNode= ruleDecoratorNode EOF )
            // InternalQualityBtCppParser.g:495:2: iv_ruleDecoratorNode= ruleDecoratorNode EOF
            {
             newCompositeNode(grammarAccess.getDecoratorNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleDecoratorNode=ruleDecoratorNode();

            state._fsp--;

             current =iv_ruleDecoratorNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDecoratorNode"


    // $ANTLR start "ruleDecoratorNode"
    // InternalQualityBtCppParser.g:501:1: ruleDecoratorNode returns [EObject current=null] : (this_RepeatNode_0= ruleRepeatNode | this_ForceFailureNode_1= ruleForceFailureNode | this_ForceSuccessNode_2= ruleForceSuccessNode | this_RetryNode_3= ruleRetryNode | this_InverterNode_4= ruleInverterNode | this_TimeoutNode_5= ruleTimeoutNode | this_KeepRunningUntilFailureNode_6= ruleKeepRunningUntilFailureNode | this_DelayNode_7= ruleDelayNode | this_PreconditionNode_8= rulePreconditionNode | this_RunOnceNode_9= ruleRunOnceNode | this_LoopNode_10= ruleLoopNode | this_ConsumeQueueNode_11= ruleConsumeQueueNode ) ;
    public final EObject ruleDecoratorNode() throws RecognitionException {
        EObject current = null;

        EObject this_RepeatNode_0 = null;

        EObject this_ForceFailureNode_1 = null;

        EObject this_ForceSuccessNode_2 = null;

        EObject this_RetryNode_3 = null;

        EObject this_InverterNode_4 = null;

        EObject this_TimeoutNode_5 = null;

        EObject this_KeepRunningUntilFailureNode_6 = null;

        EObject this_DelayNode_7 = null;

        EObject this_PreconditionNode_8 = null;

        EObject this_RunOnceNode_9 = null;

        EObject this_LoopNode_10 = null;

        EObject this_ConsumeQueueNode_11 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:507:2: ( (this_RepeatNode_0= ruleRepeatNode | this_ForceFailureNode_1= ruleForceFailureNode | this_ForceSuccessNode_2= ruleForceSuccessNode | this_RetryNode_3= ruleRetryNode | this_InverterNode_4= ruleInverterNode | this_TimeoutNode_5= ruleTimeoutNode | this_KeepRunningUntilFailureNode_6= ruleKeepRunningUntilFailureNode | this_DelayNode_7= ruleDelayNode | this_PreconditionNode_8= rulePreconditionNode | this_RunOnceNode_9= ruleRunOnceNode | this_LoopNode_10= ruleLoopNode | this_ConsumeQueueNode_11= ruleConsumeQueueNode ) )
            // InternalQualityBtCppParser.g:508:2: (this_RepeatNode_0= ruleRepeatNode | this_ForceFailureNode_1= ruleForceFailureNode | this_ForceSuccessNode_2= ruleForceSuccessNode | this_RetryNode_3= ruleRetryNode | this_InverterNode_4= ruleInverterNode | this_TimeoutNode_5= ruleTimeoutNode | this_KeepRunningUntilFailureNode_6= ruleKeepRunningUntilFailureNode | this_DelayNode_7= ruleDelayNode | this_PreconditionNode_8= rulePreconditionNode | this_RunOnceNode_9= ruleRunOnceNode | this_LoopNode_10= ruleLoopNode | this_ConsumeQueueNode_11= ruleConsumeQueueNode )
            {
            // InternalQualityBtCppParser.g:508:2: (this_RepeatNode_0= ruleRepeatNode | this_ForceFailureNode_1= ruleForceFailureNode | this_ForceSuccessNode_2= ruleForceSuccessNode | this_RetryNode_3= ruleRetryNode | this_InverterNode_4= ruleInverterNode | this_TimeoutNode_5= ruleTimeoutNode | this_KeepRunningUntilFailureNode_6= ruleKeepRunningUntilFailureNode | this_DelayNode_7= ruleDelayNode | this_PreconditionNode_8= rulePreconditionNode | this_RunOnceNode_9= ruleRunOnceNode | this_LoopNode_10= ruleLoopNode | this_ConsumeQueueNode_11= ruleConsumeQueueNode )
            int alt6=12;
            switch ( input.LA(1) ) {
            case RepeatNode:
                {
                alt6=1;
                }
                break;
            case ForceFailureNode:
                {
                alt6=2;
                }
                break;
            case ForceSuccessNode:
                {
                alt6=3;
                }
                break;
            case RetryNode:
                {
                alt6=4;
                }
                break;
            case InverterNode:
                {
                alt6=5;
                }
                break;
            case TimeoutNode:
                {
                alt6=6;
                }
                break;
            case KeepRunningUntilFailureNode:
                {
                alt6=7;
                }
                break;
            case DelayNode:
                {
                alt6=8;
                }
                break;
            case PreconditionNode:
                {
                alt6=9;
                }
                break;
            case RunOnceNode:
                {
                alt6=10;
                }
                break;
            case LoopNode:
                {
                alt6=11;
                }
                break;
            case ConsumeQueueNode:
                {
                alt6=12;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 6, 0, input);

                throw nvae;
            }

            switch (alt6) {
                case 1 :
                    // InternalQualityBtCppParser.g:509:3: this_RepeatNode_0= ruleRepeatNode
                    {

                    			newCompositeNode(grammarAccess.getDecoratorNodeAccess().getRepeatNodeParserRuleCall_0());
                    		
                    pushFollow(FOLLOW_2);
                    this_RepeatNode_0=ruleRepeatNode();

                    state._fsp--;


                    			current = this_RepeatNode_0;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 2 :
                    // InternalQualityBtCppParser.g:518:3: this_ForceFailureNode_1= ruleForceFailureNode
                    {

                    			newCompositeNode(grammarAccess.getDecoratorNodeAccess().getForceFailureNodeParserRuleCall_1());
                    		
                    pushFollow(FOLLOW_2);
                    this_ForceFailureNode_1=ruleForceFailureNode();

                    state._fsp--;


                    			current = this_ForceFailureNode_1;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 3 :
                    // InternalQualityBtCppParser.g:527:3: this_ForceSuccessNode_2= ruleForceSuccessNode
                    {

                    			newCompositeNode(grammarAccess.getDecoratorNodeAccess().getForceSuccessNodeParserRuleCall_2());
                    		
                    pushFollow(FOLLOW_2);
                    this_ForceSuccessNode_2=ruleForceSuccessNode();

                    state._fsp--;


                    			current = this_ForceSuccessNode_2;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 4 :
                    // InternalQualityBtCppParser.g:536:3: this_RetryNode_3= ruleRetryNode
                    {

                    			newCompositeNode(grammarAccess.getDecoratorNodeAccess().getRetryNodeParserRuleCall_3());
                    		
                    pushFollow(FOLLOW_2);
                    this_RetryNode_3=ruleRetryNode();

                    state._fsp--;


                    			current = this_RetryNode_3;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 5 :
                    // InternalQualityBtCppParser.g:545:3: this_InverterNode_4= ruleInverterNode
                    {

                    			newCompositeNode(grammarAccess.getDecoratorNodeAccess().getInverterNodeParserRuleCall_4());
                    		
                    pushFollow(FOLLOW_2);
                    this_InverterNode_4=ruleInverterNode();

                    state._fsp--;


                    			current = this_InverterNode_4;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 6 :
                    // InternalQualityBtCppParser.g:554:3: this_TimeoutNode_5= ruleTimeoutNode
                    {

                    			newCompositeNode(grammarAccess.getDecoratorNodeAccess().getTimeoutNodeParserRuleCall_5());
                    		
                    pushFollow(FOLLOW_2);
                    this_TimeoutNode_5=ruleTimeoutNode();

                    state._fsp--;


                    			current = this_TimeoutNode_5;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 7 :
                    // InternalQualityBtCppParser.g:563:3: this_KeepRunningUntilFailureNode_6= ruleKeepRunningUntilFailureNode
                    {

                    			newCompositeNode(grammarAccess.getDecoratorNodeAccess().getKeepRunningUntilFailureNodeParserRuleCall_6());
                    		
                    pushFollow(FOLLOW_2);
                    this_KeepRunningUntilFailureNode_6=ruleKeepRunningUntilFailureNode();

                    state._fsp--;


                    			current = this_KeepRunningUntilFailureNode_6;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 8 :
                    // InternalQualityBtCppParser.g:572:3: this_DelayNode_7= ruleDelayNode
                    {

                    			newCompositeNode(grammarAccess.getDecoratorNodeAccess().getDelayNodeParserRuleCall_7());
                    		
                    pushFollow(FOLLOW_2);
                    this_DelayNode_7=ruleDelayNode();

                    state._fsp--;


                    			current = this_DelayNode_7;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 9 :
                    // InternalQualityBtCppParser.g:581:3: this_PreconditionNode_8= rulePreconditionNode
                    {

                    			newCompositeNode(grammarAccess.getDecoratorNodeAccess().getPreconditionNodeParserRuleCall_8());
                    		
                    pushFollow(FOLLOW_2);
                    this_PreconditionNode_8=rulePreconditionNode();

                    state._fsp--;


                    			current = this_PreconditionNode_8;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 10 :
                    // InternalQualityBtCppParser.g:590:3: this_RunOnceNode_9= ruleRunOnceNode
                    {

                    			newCompositeNode(grammarAccess.getDecoratorNodeAccess().getRunOnceNodeParserRuleCall_9());
                    		
                    pushFollow(FOLLOW_2);
                    this_RunOnceNode_9=ruleRunOnceNode();

                    state._fsp--;


                    			current = this_RunOnceNode_9;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 11 :
                    // InternalQualityBtCppParser.g:599:3: this_LoopNode_10= ruleLoopNode
                    {

                    			newCompositeNode(grammarAccess.getDecoratorNodeAccess().getLoopNodeParserRuleCall_10());
                    		
                    pushFollow(FOLLOW_2);
                    this_LoopNode_10=ruleLoopNode();

                    state._fsp--;


                    			current = this_LoopNode_10;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 12 :
                    // InternalQualityBtCppParser.g:608:3: this_ConsumeQueueNode_11= ruleConsumeQueueNode
                    {

                    			newCompositeNode(grammarAccess.getDecoratorNodeAccess().getConsumeQueueNodeParserRuleCall_11());
                    		
                    pushFollow(FOLLOW_2);
                    this_ConsumeQueueNode_11=ruleConsumeQueueNode();

                    state._fsp--;


                    			current = this_ConsumeQueueNode_11;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDecoratorNode"


    // $ANTLR start "entryRuleBehaviorTree"
    // InternalQualityBtCppParser.g:620:1: entryRuleBehaviorTree returns [EObject current=null] : iv_ruleBehaviorTree= ruleBehaviorTree EOF ;
    public final EObject entryRuleBehaviorTree() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBehaviorTree = null;


        try {
            // InternalQualityBtCppParser.g:620:53: (iv_ruleBehaviorTree= ruleBehaviorTree EOF )
            // InternalQualityBtCppParser.g:621:2: iv_ruleBehaviorTree= ruleBehaviorTree EOF
            {
             newCompositeNode(grammarAccess.getBehaviorTreeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleBehaviorTree=ruleBehaviorTree();

            state._fsp--;

             current =iv_ruleBehaviorTree; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBehaviorTree"


    // $ANTLR start "ruleBehaviorTree"
    // InternalQualityBtCppParser.g:627:1: ruleBehaviorTree returns [EObject current=null] : (otherlv_0= Behaviortree otherlv_1= ID otherlv_2= EqualsSign ( (lv_ID_3_0= ruleEString ) ) this_BEGIN_4= RULE_BEGIN ( (lv_node_5_0= ruleTreeNode ) ) ( (lv_node_6_0= ruleTreeNode ) )* this_END_7= RULE_END ) ;
    public final EObject ruleBehaviorTree() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token this_BEGIN_4=null;
        Token this_END_7=null;
        AntlrDatatypeRuleToken lv_ID_3_0 = null;

        EObject lv_node_5_0 = null;

        EObject lv_node_6_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:633:2: ( (otherlv_0= Behaviortree otherlv_1= ID otherlv_2= EqualsSign ( (lv_ID_3_0= ruleEString ) ) this_BEGIN_4= RULE_BEGIN ( (lv_node_5_0= ruleTreeNode ) ) ( (lv_node_6_0= ruleTreeNode ) )* this_END_7= RULE_END ) )
            // InternalQualityBtCppParser.g:634:2: (otherlv_0= Behaviortree otherlv_1= ID otherlv_2= EqualsSign ( (lv_ID_3_0= ruleEString ) ) this_BEGIN_4= RULE_BEGIN ( (lv_node_5_0= ruleTreeNode ) ) ( (lv_node_6_0= ruleTreeNode ) )* this_END_7= RULE_END )
            {
            // InternalQualityBtCppParser.g:634:2: (otherlv_0= Behaviortree otherlv_1= ID otherlv_2= EqualsSign ( (lv_ID_3_0= ruleEString ) ) this_BEGIN_4= RULE_BEGIN ( (lv_node_5_0= ruleTreeNode ) ) ( (lv_node_6_0= ruleTreeNode ) )* this_END_7= RULE_END )
            // InternalQualityBtCppParser.g:635:3: otherlv_0= Behaviortree otherlv_1= ID otherlv_2= EqualsSign ( (lv_ID_3_0= ruleEString ) ) this_BEGIN_4= RULE_BEGIN ( (lv_node_5_0= ruleTreeNode ) ) ( (lv_node_6_0= ruleTreeNode ) )* this_END_7= RULE_END
            {
            otherlv_0=(Token)match(input,Behaviortree,FOLLOW_7); 

            			newLeafNode(otherlv_0, grammarAccess.getBehaviorTreeAccess().getBehaviortreeKeyword_0());
            		
            otherlv_1=(Token)match(input,ID,FOLLOW_8); 

            			newLeafNode(otherlv_1, grammarAccess.getBehaviorTreeAccess().getIDKeyword_1());
            		
            otherlv_2=(Token)match(input,EqualsSign,FOLLOW_3); 

            			newLeafNode(otherlv_2, grammarAccess.getBehaviorTreeAccess().getEqualsSignKeyword_2());
            		
            // InternalQualityBtCppParser.g:647:3: ( (lv_ID_3_0= ruleEString ) )
            // InternalQualityBtCppParser.g:648:4: (lv_ID_3_0= ruleEString )
            {
            // InternalQualityBtCppParser.g:648:4: (lv_ID_3_0= ruleEString )
            // InternalQualityBtCppParser.g:649:5: lv_ID_3_0= ruleEString
            {

            					newCompositeNode(grammarAccess.getBehaviorTreeAccess().getIDEStringParserRuleCall_3_0());
            				
            pushFollow(FOLLOW_4);
            lv_ID_3_0=ruleEString();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getBehaviorTreeRule());
            					}
            					set(
            						current,
            						"ID",
            						lv_ID_3_0,
            						"org.xtext.btcpp.QualityBtCpp.EString");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            this_BEGIN_4=(Token)match(input,RULE_BEGIN,FOLLOW_9); 

            			newLeafNode(this_BEGIN_4, grammarAccess.getBehaviorTreeAccess().getBEGINTerminalRuleCall_4());
            		
            // InternalQualityBtCppParser.g:670:3: ( (lv_node_5_0= ruleTreeNode ) )
            // InternalQualityBtCppParser.g:671:4: (lv_node_5_0= ruleTreeNode )
            {
            // InternalQualityBtCppParser.g:671:4: (lv_node_5_0= ruleTreeNode )
            // InternalQualityBtCppParser.g:672:5: lv_node_5_0= ruleTreeNode
            {

            					newCompositeNode(grammarAccess.getBehaviorTreeAccess().getNodeTreeNodeParserRuleCall_5_0());
            				
            pushFollow(FOLLOW_10);
            lv_node_5_0=ruleTreeNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getBehaviorTreeRule());
            					}
            					add(
            						current,
            						"node",
            						lv_node_5_0,
            						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            // InternalQualityBtCppParser.g:689:3: ( (lv_node_6_0= ruleTreeNode ) )*
            loop7:
            do {
                int alt7=2;
                int LA7_0 = input.LA(1);

                if ( (LA7_0==KeepRunningUntilFailureNode||(LA7_0>=EntryUpdatedActionNode && LA7_0<=SequenceNode)||(LA7_0>=RunOnceNode && LA7_0<=TimeoutNode)||(LA7_0>=RepeatNode && LA7_0<=SwitchNode)||(LA7_0>=DelayNode && LA7_0<=SleepNode)||(LA7_0>=LoopNode && LA7_0<=TestNode)||LA7_0==SubTree) ) {
                    alt7=1;
                }


                switch (alt7) {
            	case 1 :
            	    // InternalQualityBtCppParser.g:690:4: (lv_node_6_0= ruleTreeNode )
            	    {
            	    // InternalQualityBtCppParser.g:690:4: (lv_node_6_0= ruleTreeNode )
            	    // InternalQualityBtCppParser.g:691:5: lv_node_6_0= ruleTreeNode
            	    {

            	    					newCompositeNode(grammarAccess.getBehaviorTreeAccess().getNodeTreeNodeParserRuleCall_6_0());
            	    				
            	    pushFollow(FOLLOW_10);
            	    lv_node_6_0=ruleTreeNode();

            	    state._fsp--;


            	    					if (current==null) {
            	    						current = createModelElementForParent(grammarAccess.getBehaviorTreeRule());
            	    					}
            	    					add(
            	    						current,
            	    						"node",
            	    						lv_node_6_0,
            	    						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            	    					afterParserOrEnumRuleCall();
            	    				

            	    }


            	    }
            	    break;

            	default :
            	    break loop7;
                }
            } while (true);

            this_END_7=(Token)match(input,RULE_END,FOLLOW_2); 

            			newLeafNode(this_END_7, grammarAccess.getBehaviorTreeAccess().getENDTerminalRuleCall_7());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBehaviorTree"


    // $ANTLR start "entryRuleEString"
    // InternalQualityBtCppParser.g:716:1: entryRuleEString returns [String current=null] : iv_ruleEString= ruleEString EOF ;
    public final String entryRuleEString() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleEString = null;


        try {
            // InternalQualityBtCppParser.g:716:47: (iv_ruleEString= ruleEString EOF )
            // InternalQualityBtCppParser.g:717:2: iv_ruleEString= ruleEString EOF
            {
             newCompositeNode(grammarAccess.getEStringRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleEString=ruleEString();

            state._fsp--;

             current =iv_ruleEString.getText(); 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEString"


    // $ANTLR start "ruleEString"
    // InternalQualityBtCppParser.g:723:1: ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_STRING_0= RULE_STRING | this_ID_1= RULE_ID ) ;
    public final AntlrDatatypeRuleToken ruleEString() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_STRING_0=null;
        Token this_ID_1=null;


        	enterRule();

        try {
            // InternalQualityBtCppParser.g:729:2: ( (this_STRING_0= RULE_STRING | this_ID_1= RULE_ID ) )
            // InternalQualityBtCppParser.g:730:2: (this_STRING_0= RULE_STRING | this_ID_1= RULE_ID )
            {
            // InternalQualityBtCppParser.g:730:2: (this_STRING_0= RULE_STRING | this_ID_1= RULE_ID )
            int alt8=2;
            int LA8_0 = input.LA(1);

            if ( (LA8_0==RULE_STRING) ) {
                alt8=1;
            }
            else if ( (LA8_0==RULE_ID) ) {
                alt8=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 8, 0, input);

                throw nvae;
            }
            switch (alt8) {
                case 1 :
                    // InternalQualityBtCppParser.g:731:3: this_STRING_0= RULE_STRING
                    {
                    this_STRING_0=(Token)match(input,RULE_STRING,FOLLOW_2); 

                    			current.merge(this_STRING_0);
                    		

                    			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
                    		

                    }
                    break;
                case 2 :
                    // InternalQualityBtCppParser.g:739:3: this_ID_1= RULE_ID
                    {
                    this_ID_1=(Token)match(input,RULE_ID,FOLLOW_2); 

                    			current.merge(this_ID_1);
                    		

                    			newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1());
                    		

                    }
                    break;

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEString"


    // $ANTLR start "entryRuleParameter"
    // InternalQualityBtCppParser.g:750:1: entryRuleParameter returns [EObject current=null] : iv_ruleParameter= ruleParameter EOF ;
    public final EObject entryRuleParameter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParameter = null;


        try {
            // InternalQualityBtCppParser.g:750:50: (iv_ruleParameter= ruleParameter EOF )
            // InternalQualityBtCppParser.g:751:2: iv_ruleParameter= ruleParameter EOF
            {
             newCompositeNode(grammarAccess.getParameterRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleParameter=ruleParameter();

            state._fsp--;

             current =iv_ruleParameter; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleParameter"


    // $ANTLR start "ruleParameter"
    // InternalQualityBtCppParser.g:757:1: ruleParameter returns [EObject current=null] : ( ( (lv_key_0_0= ruleEString ) ) otherlv_1= EqualsSign ( (lv_value_2_0= ruleEString ) ) ) ;
    public final EObject ruleParameter() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        AntlrDatatypeRuleToken lv_key_0_0 = null;

        AntlrDatatypeRuleToken lv_value_2_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:763:2: ( ( ( (lv_key_0_0= ruleEString ) ) otherlv_1= EqualsSign ( (lv_value_2_0= ruleEString ) ) ) )
            // InternalQualityBtCppParser.g:764:2: ( ( (lv_key_0_0= ruleEString ) ) otherlv_1= EqualsSign ( (lv_value_2_0= ruleEString ) ) )
            {
            // InternalQualityBtCppParser.g:764:2: ( ( (lv_key_0_0= ruleEString ) ) otherlv_1= EqualsSign ( (lv_value_2_0= ruleEString ) ) )
            // InternalQualityBtCppParser.g:765:3: ( (lv_key_0_0= ruleEString ) ) otherlv_1= EqualsSign ( (lv_value_2_0= ruleEString ) )
            {
            // InternalQualityBtCppParser.g:765:3: ( (lv_key_0_0= ruleEString ) )
            // InternalQualityBtCppParser.g:766:4: (lv_key_0_0= ruleEString )
            {
            // InternalQualityBtCppParser.g:766:4: (lv_key_0_0= ruleEString )
            // InternalQualityBtCppParser.g:767:5: lv_key_0_0= ruleEString
            {

            					newCompositeNode(grammarAccess.getParameterAccess().getKeyEStringParserRuleCall_0_0());
            				
            pushFollow(FOLLOW_8);
            lv_key_0_0=ruleEString();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getParameterRule());
            					}
            					set(
            						current,
            						"key",
            						lv_key_0_0,
            						"org.xtext.btcpp.QualityBtCpp.EString");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            otherlv_1=(Token)match(input,EqualsSign,FOLLOW_3); 

            			newLeafNode(otherlv_1, grammarAccess.getParameterAccess().getEqualsSignKeyword_1());
            		
            // InternalQualityBtCppParser.g:788:3: ( (lv_value_2_0= ruleEString ) )
            // InternalQualityBtCppParser.g:789:4: (lv_value_2_0= ruleEString )
            {
            // InternalQualityBtCppParser.g:789:4: (lv_value_2_0= ruleEString )
            // InternalQualityBtCppParser.g:790:5: lv_value_2_0= ruleEString
            {

            					newCompositeNode(grammarAccess.getParameterAccess().getValueEStringParserRuleCall_2_0());
            				
            pushFollow(FOLLOW_2);
            lv_value_2_0=ruleEString();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getParameterRule());
            					}
            					set(
            						current,
            						"value",
            						lv_value_2_0,
            						"org.xtext.btcpp.QualityBtCpp.EString");
            					afterParserOrEnumRuleCall();
            				

            }


            }


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleParameter"


    // $ANTLR start "entryRuleQualityRequirement"
    // InternalQualityBtCppParser.g:811:1: entryRuleQualityRequirement returns [EObject current=null] : iv_ruleQualityRequirement= ruleQualityRequirement EOF ;
    public final EObject entryRuleQualityRequirement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleQualityRequirement = null;


        try {
            // InternalQualityBtCppParser.g:811:59: (iv_ruleQualityRequirement= ruleQualityRequirement EOF )
            // InternalQualityBtCppParser.g:812:2: iv_ruleQualityRequirement= ruleQualityRequirement EOF
            {
             newCompositeNode(grammarAccess.getQualityRequirementRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleQualityRequirement=ruleQualityRequirement();

            state._fsp--;

             current =iv_ruleQualityRequirement; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQualityRequirement"


    // $ANTLR start "ruleQualityRequirement"
    // InternalQualityBtCppParser.g:818:1: ruleQualityRequirement returns [EObject current=null] : ( () otherlv_1= Qualityreq (otherlv_2= ID otherlv_3= EqualsSign ( (lv_ID_4_0= ruleEString ) ) )? otherlv_5= Comma (otherlv_6= Description otherlv_7= EqualsSign ( (lv_description_8_0= ruleEString ) ) )? ) ;
    public final EObject ruleQualityRequirement() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        AntlrDatatypeRuleToken lv_ID_4_0 = null;

        AntlrDatatypeRuleToken lv_description_8_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:824:2: ( ( () otherlv_1= Qualityreq (otherlv_2= ID otherlv_3= EqualsSign ( (lv_ID_4_0= ruleEString ) ) )? otherlv_5= Comma (otherlv_6= Description otherlv_7= EqualsSign ( (lv_description_8_0= ruleEString ) ) )? ) )
            // InternalQualityBtCppParser.g:825:2: ( () otherlv_1= Qualityreq (otherlv_2= ID otherlv_3= EqualsSign ( (lv_ID_4_0= ruleEString ) ) )? otherlv_5= Comma (otherlv_6= Description otherlv_7= EqualsSign ( (lv_description_8_0= ruleEString ) ) )? )
            {
            // InternalQualityBtCppParser.g:825:2: ( () otherlv_1= Qualityreq (otherlv_2= ID otherlv_3= EqualsSign ( (lv_ID_4_0= ruleEString ) ) )? otherlv_5= Comma (otherlv_6= Description otherlv_7= EqualsSign ( (lv_description_8_0= ruleEString ) ) )? )
            // InternalQualityBtCppParser.g:826:3: () otherlv_1= Qualityreq (otherlv_2= ID otherlv_3= EqualsSign ( (lv_ID_4_0= ruleEString ) ) )? otherlv_5= Comma (otherlv_6= Description otherlv_7= EqualsSign ( (lv_description_8_0= ruleEString ) ) )?
            {
            // InternalQualityBtCppParser.g:826:3: ()
            // InternalQualityBtCppParser.g:827:4: 
            {

            				current = forceCreateModelElement(
            					grammarAccess.getQualityRequirementAccess().getQualityRequirementAction_0(),
            					current);
            			

            }

            otherlv_1=(Token)match(input,Qualityreq,FOLLOW_11); 

            			newLeafNode(otherlv_1, grammarAccess.getQualityRequirementAccess().getQualityreqKeyword_1());
            		
            // InternalQualityBtCppParser.g:837:3: (otherlv_2= ID otherlv_3= EqualsSign ( (lv_ID_4_0= ruleEString ) ) )?
            int alt9=2;
            int LA9_0 = input.LA(1);

            if ( (LA9_0==ID) ) {
                alt9=1;
            }
            switch (alt9) {
                case 1 :
                    // InternalQualityBtCppParser.g:838:4: otherlv_2= ID otherlv_3= EqualsSign ( (lv_ID_4_0= ruleEString ) )
                    {
                    otherlv_2=(Token)match(input,ID,FOLLOW_8); 

                    				newLeafNode(otherlv_2, grammarAccess.getQualityRequirementAccess().getIDKeyword_2_0());
                    			
                    otherlv_3=(Token)match(input,EqualsSign,FOLLOW_3); 

                    				newLeafNode(otherlv_3, grammarAccess.getQualityRequirementAccess().getEqualsSignKeyword_2_1());
                    			
                    // InternalQualityBtCppParser.g:846:4: ( (lv_ID_4_0= ruleEString ) )
                    // InternalQualityBtCppParser.g:847:5: (lv_ID_4_0= ruleEString )
                    {
                    // InternalQualityBtCppParser.g:847:5: (lv_ID_4_0= ruleEString )
                    // InternalQualityBtCppParser.g:848:6: lv_ID_4_0= ruleEString
                    {

                    						newCompositeNode(grammarAccess.getQualityRequirementAccess().getIDEStringParserRuleCall_2_2_0());
                    					
                    pushFollow(FOLLOW_12);
                    lv_ID_4_0=ruleEString();

                    state._fsp--;


                    						if (current==null) {
                    							current = createModelElementForParent(grammarAccess.getQualityRequirementRule());
                    						}
                    						set(
                    							current,
                    							"ID",
                    							lv_ID_4_0,
                    							"org.xtext.btcpp.QualityBtCpp.EString");
                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }


                    }
                    break;

            }

            otherlv_5=(Token)match(input,Comma,FOLLOW_13); 

            			newLeafNode(otherlv_5, grammarAccess.getQualityRequirementAccess().getCommaKeyword_3());
            		
            // InternalQualityBtCppParser.g:870:3: (otherlv_6= Description otherlv_7= EqualsSign ( (lv_description_8_0= ruleEString ) ) )?
            int alt10=2;
            int LA10_0 = input.LA(1);

            if ( (LA10_0==Description) ) {
                alt10=1;
            }
            switch (alt10) {
                case 1 :
                    // InternalQualityBtCppParser.g:871:4: otherlv_6= Description otherlv_7= EqualsSign ( (lv_description_8_0= ruleEString ) )
                    {
                    otherlv_6=(Token)match(input,Description,FOLLOW_8); 

                    				newLeafNode(otherlv_6, grammarAccess.getQualityRequirementAccess().getDescriptionKeyword_4_0());
                    			
                    otherlv_7=(Token)match(input,EqualsSign,FOLLOW_3); 

                    				newLeafNode(otherlv_7, grammarAccess.getQualityRequirementAccess().getEqualsSignKeyword_4_1());
                    			
                    // InternalQualityBtCppParser.g:879:4: ( (lv_description_8_0= ruleEString ) )
                    // InternalQualityBtCppParser.g:880:5: (lv_description_8_0= ruleEString )
                    {
                    // InternalQualityBtCppParser.g:880:5: (lv_description_8_0= ruleEString )
                    // InternalQualityBtCppParser.g:881:6: lv_description_8_0= ruleEString
                    {

                    						newCompositeNode(grammarAccess.getQualityRequirementAccess().getDescriptionEStringParserRuleCall_4_2_0());
                    					
                    pushFollow(FOLLOW_2);
                    lv_description_8_0=ruleEString();

                    state._fsp--;


                    						if (current==null) {
                    							current = createModelElementForParent(grammarAccess.getQualityRequirementRule());
                    						}
                    						set(
                    							current,
                    							"description",
                    							lv_description_8_0,
                    							"org.xtext.btcpp.QualityBtCpp.EString");
                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }


                    }
                    break;

            }


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQualityRequirement"


    // $ANTLR start "entryRuleAlwaysFailureNode"
    // InternalQualityBtCppParser.g:903:1: entryRuleAlwaysFailureNode returns [EObject current=null] : iv_ruleAlwaysFailureNode= ruleAlwaysFailureNode EOF ;
    public final EObject entryRuleAlwaysFailureNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAlwaysFailureNode = null;


        try {
            // InternalQualityBtCppParser.g:903:58: (iv_ruleAlwaysFailureNode= ruleAlwaysFailureNode EOF )
            // InternalQualityBtCppParser.g:904:2: iv_ruleAlwaysFailureNode= ruleAlwaysFailureNode EOF
            {
             newCompositeNode(grammarAccess.getAlwaysFailureNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleAlwaysFailureNode=ruleAlwaysFailureNode();

            state._fsp--;

             current =iv_ruleAlwaysFailureNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAlwaysFailureNode"


    // $ANTLR start "ruleAlwaysFailureNode"
    // InternalQualityBtCppParser.g:910:1: ruleAlwaysFailureNode returns [EObject current=null] : ( () otherlv_1= AlwaysFailure (otherlv_2= LeftParenthesis (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Name otherlv_6= EqualsSign ( (lv_name_7_0= ruleEString ) ) )? (otherlv_8= Satisfices ( ( ruleEString ) ) (otherlv_10= Comma ( ( ruleEString ) ) )* )? (otherlv_12= Satisfies ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* )? ( ( (lv_parameters_16_0= ruleParameter ) ) (otherlv_17= Comma ( (lv_parameters_18_0= ruleParameter ) ) )* )? otherlv_19= RightParenthesis )? ) ;
    public final EObject ruleAlwaysFailureNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        AntlrDatatypeRuleToken lv_ID_4_0 = null;

        AntlrDatatypeRuleToken lv_name_7_0 = null;

        EObject lv_parameters_16_0 = null;

        EObject lv_parameters_18_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:916:2: ( ( () otherlv_1= AlwaysFailure (otherlv_2= LeftParenthesis (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Name otherlv_6= EqualsSign ( (lv_name_7_0= ruleEString ) ) )? (otherlv_8= Satisfices ( ( ruleEString ) ) (otherlv_10= Comma ( ( ruleEString ) ) )* )? (otherlv_12= Satisfies ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* )? ( ( (lv_parameters_16_0= ruleParameter ) ) (otherlv_17= Comma ( (lv_parameters_18_0= ruleParameter ) ) )* )? otherlv_19= RightParenthesis )? ) )
            // InternalQualityBtCppParser.g:917:2: ( () otherlv_1= AlwaysFailure (otherlv_2= LeftParenthesis (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Name otherlv_6= EqualsSign ( (lv_name_7_0= ruleEString ) ) )? (otherlv_8= Satisfices ( ( ruleEString ) ) (otherlv_10= Comma ( ( ruleEString ) ) )* )? (otherlv_12= Satisfies ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* )? ( ( (lv_parameters_16_0= ruleParameter ) ) (otherlv_17= Comma ( (lv_parameters_18_0= ruleParameter ) ) )* )? otherlv_19= RightParenthesis )? )
            {
            // InternalQualityBtCppParser.g:917:2: ( () otherlv_1= AlwaysFailure (otherlv_2= LeftParenthesis (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Name otherlv_6= EqualsSign ( (lv_name_7_0= ruleEString ) ) )? (otherlv_8= Satisfices ( ( ruleEString ) ) (otherlv_10= Comma ( ( ruleEString ) ) )* )? (otherlv_12= Satisfies ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* )? ( ( (lv_parameters_16_0= ruleParameter ) ) (otherlv_17= Comma ( (lv_parameters_18_0= ruleParameter ) ) )* )? otherlv_19= RightParenthesis )? )
            // InternalQualityBtCppParser.g:918:3: () otherlv_1= AlwaysFailure (otherlv_2= LeftParenthesis (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Name otherlv_6= EqualsSign ( (lv_name_7_0= ruleEString ) ) )? (otherlv_8= Satisfices ( ( ruleEString ) ) (otherlv_10= Comma ( ( ruleEString ) ) )* )? (otherlv_12= Satisfies ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* )? ( ( (lv_parameters_16_0= ruleParameter ) ) (otherlv_17= Comma ( (lv_parameters_18_0= ruleParameter ) ) )* )? otherlv_19= RightParenthesis )?
            {
            // InternalQualityBtCppParser.g:918:3: ()
            // InternalQualityBtCppParser.g:919:4: 
            {

            				current = forceCreateModelElement(
            					grammarAccess.getAlwaysFailureNodeAccess().getAlwaysFailureNodeAction_0(),
            					current);
            			

            }

            otherlv_1=(Token)match(input,AlwaysFailure,FOLLOW_14); 

            			newLeafNode(otherlv_1, grammarAccess.getAlwaysFailureNodeAccess().getAlwaysFailureKeyword_1());
            		
            // InternalQualityBtCppParser.g:929:3: (otherlv_2= LeftParenthesis (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Name otherlv_6= EqualsSign ( (lv_name_7_0= ruleEString ) ) )? (otherlv_8= Satisfices ( ( ruleEString ) ) (otherlv_10= Comma ( ( ruleEString ) ) )* )? (otherlv_12= Satisfies ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* )? ( ( (lv_parameters_16_0= ruleParameter ) ) (otherlv_17= Comma ( (lv_parameters_18_0= ruleParameter ) ) )* )? otherlv_19= RightParenthesis )?
            int alt19=2;
            int LA19_0 = input.LA(1);

            if ( (LA19_0==LeftParenthesis) ) {
                alt19=1;
            }
            switch (alt19) {
                case 1 :
                    // InternalQualityBtCppParser.g:930:4: otherlv_2= LeftParenthesis (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Name otherlv_6= EqualsSign ( (lv_name_7_0= ruleEString ) ) )? (otherlv_8= Satisfices ( ( ruleEString ) ) (otherlv_10= Comma ( ( ruleEString ) ) )* )? (otherlv_12= Satisfies ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* )? ( ( (lv_parameters_16_0= ruleParameter ) ) (otherlv_17= Comma ( (lv_parameters_18_0= ruleParameter ) ) )* )? otherlv_19= RightParenthesis
                    {
                    otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_15); 

                    				newLeafNode(otherlv_2, grammarAccess.getAlwaysFailureNodeAccess().getLeftParenthesisKeyword_2_0());
                    			
                    // InternalQualityBtCppParser.g:934:4: (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )?
                    int alt11=2;
                    int LA11_0 = input.LA(1);

                    if ( (LA11_0==ID) ) {
                        alt11=1;
                    }
                    switch (alt11) {
                        case 1 :
                            // InternalQualityBtCppParser.g:935:5: otherlv_3= ID ( (lv_ID_4_0= ruleEString ) )
                            {
                            otherlv_3=(Token)match(input,ID,FOLLOW_3); 

                            					newLeafNode(otherlv_3, grammarAccess.getAlwaysFailureNodeAccess().getIDKeyword_2_1_0());
                            				
                            // InternalQualityBtCppParser.g:939:5: ( (lv_ID_4_0= ruleEString ) )
                            // InternalQualityBtCppParser.g:940:6: (lv_ID_4_0= ruleEString )
                            {
                            // InternalQualityBtCppParser.g:940:6: (lv_ID_4_0= ruleEString )
                            // InternalQualityBtCppParser.g:941:7: lv_ID_4_0= ruleEString
                            {

                            							newCompositeNode(grammarAccess.getAlwaysFailureNodeAccess().getIDEStringParserRuleCall_2_1_1_0());
                            						
                            pushFollow(FOLLOW_16);
                            lv_ID_4_0=ruleEString();

                            state._fsp--;


                            							if (current==null) {
                            								current = createModelElementForParent(grammarAccess.getAlwaysFailureNodeRule());
                            							}
                            							set(
                            								current,
                            								"ID",
                            								lv_ID_4_0,
                            								"org.xtext.btcpp.QualityBtCpp.EString");
                            							afterParserOrEnumRuleCall();
                            						

                            }


                            }


                            }
                            break;

                    }

                    // InternalQualityBtCppParser.g:959:4: (otherlv_5= Name otherlv_6= EqualsSign ( (lv_name_7_0= ruleEString ) ) )?
                    int alt12=2;
                    int LA12_0 = input.LA(1);

                    if ( (LA12_0==Name) ) {
                        alt12=1;
                    }
                    switch (alt12) {
                        case 1 :
                            // InternalQualityBtCppParser.g:960:5: otherlv_5= Name otherlv_6= EqualsSign ( (lv_name_7_0= ruleEString ) )
                            {
                            otherlv_5=(Token)match(input,Name,FOLLOW_8); 

                            					newLeafNode(otherlv_5, grammarAccess.getAlwaysFailureNodeAccess().getNameKeyword_2_2_0());
                            				
                            otherlv_6=(Token)match(input,EqualsSign,FOLLOW_3); 

                            					newLeafNode(otherlv_6, grammarAccess.getAlwaysFailureNodeAccess().getEqualsSignKeyword_2_2_1());
                            				
                            // InternalQualityBtCppParser.g:968:5: ( (lv_name_7_0= ruleEString ) )
                            // InternalQualityBtCppParser.g:969:6: (lv_name_7_0= ruleEString )
                            {
                            // InternalQualityBtCppParser.g:969:6: (lv_name_7_0= ruleEString )
                            // InternalQualityBtCppParser.g:970:7: lv_name_7_0= ruleEString
                            {

                            							newCompositeNode(grammarAccess.getAlwaysFailureNodeAccess().getNameEStringParserRuleCall_2_2_2_0());
                            						
                            pushFollow(FOLLOW_17);
                            lv_name_7_0=ruleEString();

                            state._fsp--;


                            							if (current==null) {
                            								current = createModelElementForParent(grammarAccess.getAlwaysFailureNodeRule());
                            							}
                            							set(
                            								current,
                            								"name",
                            								lv_name_7_0,
                            								"org.xtext.btcpp.QualityBtCpp.EString");
                            							afterParserOrEnumRuleCall();
                            						

                            }


                            }


                            }
                            break;

                    }

                    // InternalQualityBtCppParser.g:988:4: (otherlv_8= Satisfices ( ( ruleEString ) ) (otherlv_10= Comma ( ( ruleEString ) ) )* )?
                    int alt14=2;
                    int LA14_0 = input.LA(1);

                    if ( (LA14_0==Satisfices) ) {
                        alt14=1;
                    }
                    switch (alt14) {
                        case 1 :
                            // InternalQualityBtCppParser.g:989:5: otherlv_8= Satisfices ( ( ruleEString ) ) (otherlv_10= Comma ( ( ruleEString ) ) )*
                            {
                            otherlv_8=(Token)match(input,Satisfices,FOLLOW_3); 

                            					newLeafNode(otherlv_8, grammarAccess.getAlwaysFailureNodeAccess().getSatisficesKeyword_2_3_0());
                            				
                            // InternalQualityBtCppParser.g:993:5: ( ( ruleEString ) )
                            // InternalQualityBtCppParser.g:994:6: ( ruleEString )
                            {
                            // InternalQualityBtCppParser.g:994:6: ( ruleEString )
                            // InternalQualityBtCppParser.g:995:7: ruleEString
                            {

                            							if (current==null) {
                            								current = createModelElement(grammarAccess.getAlwaysFailureNodeRule());
                            							}
                            						

                            							newCompositeNode(grammarAccess.getAlwaysFailureNodeAccess().getSatisficesQualityCrossReference_2_3_1_0());
                            						
                            pushFollow(FOLLOW_18);
                            ruleEString();

                            state._fsp--;


                            							afterParserOrEnumRuleCall();
                            						

                            }


                            }

                            // InternalQualityBtCppParser.g:1009:5: (otherlv_10= Comma ( ( ruleEString ) ) )*
                            loop13:
                            do {
                                int alt13=2;
                                int LA13_0 = input.LA(1);

                                if ( (LA13_0==Comma) ) {
                                    alt13=1;
                                }


                                switch (alt13) {
                            	case 1 :
                            	    // InternalQualityBtCppParser.g:1010:6: otherlv_10= Comma ( ( ruleEString ) )
                            	    {
                            	    otherlv_10=(Token)match(input,Comma,FOLLOW_3); 

                            	    						newLeafNode(otherlv_10, grammarAccess.getAlwaysFailureNodeAccess().getCommaKeyword_2_3_2_0());
                            	    					
                            	    // InternalQualityBtCppParser.g:1014:6: ( ( ruleEString ) )
                            	    // InternalQualityBtCppParser.g:1015:7: ( ruleEString )
                            	    {
                            	    // InternalQualityBtCppParser.g:1015:7: ( ruleEString )
                            	    // InternalQualityBtCppParser.g:1016:8: ruleEString
                            	    {

                            	    								if (current==null) {
                            	    									current = createModelElement(grammarAccess.getAlwaysFailureNodeRule());
                            	    								}
                            	    							

                            	    								newCompositeNode(grammarAccess.getAlwaysFailureNodeAccess().getSatisficesQualityCrossReference_2_3_2_1_0());
                            	    							
                            	    pushFollow(FOLLOW_18);
                            	    ruleEString();

                            	    state._fsp--;


                            	    								afterParserOrEnumRuleCall();
                            	    							

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop13;
                                }
                            } while (true);


                            }
                            break;

                    }

                    // InternalQualityBtCppParser.g:1032:4: (otherlv_12= Satisfies ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* )?
                    int alt16=2;
                    int LA16_0 = input.LA(1);

                    if ( (LA16_0==Satisfies) ) {
                        alt16=1;
                    }
                    switch (alt16) {
                        case 1 :
                            // InternalQualityBtCppParser.g:1033:5: otherlv_12= Satisfies ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )*
                            {
                            otherlv_12=(Token)match(input,Satisfies,FOLLOW_3); 

                            					newLeafNode(otherlv_12, grammarAccess.getAlwaysFailureNodeAccess().getSatisfiesKeyword_2_4_0());
                            				
                            // InternalQualityBtCppParser.g:1037:5: ( ( ruleEString ) )
                            // InternalQualityBtCppParser.g:1038:6: ( ruleEString )
                            {
                            // InternalQualityBtCppParser.g:1038:6: ( ruleEString )
                            // InternalQualityBtCppParser.g:1039:7: ruleEString
                            {

                            							if (current==null) {
                            								current = createModelElement(grammarAccess.getAlwaysFailureNodeRule());
                            							}
                            						

                            							newCompositeNode(grammarAccess.getAlwaysFailureNodeAccess().getSatisfiesQualityRequirementCrossReference_2_4_1_0());
                            						
                            pushFollow(FOLLOW_19);
                            ruleEString();

                            state._fsp--;


                            							afterParserOrEnumRuleCall();
                            						

                            }


                            }

                            // InternalQualityBtCppParser.g:1053:5: (otherlv_14= Comma ( ( ruleEString ) ) )*
                            loop15:
                            do {
                                int alt15=2;
                                int LA15_0 = input.LA(1);

                                if ( (LA15_0==Comma) ) {
                                    alt15=1;
                                }


                                switch (alt15) {
                            	case 1 :
                            	    // InternalQualityBtCppParser.g:1054:6: otherlv_14= Comma ( ( ruleEString ) )
                            	    {
                            	    otherlv_14=(Token)match(input,Comma,FOLLOW_3); 

                            	    						newLeafNode(otherlv_14, grammarAccess.getAlwaysFailureNodeAccess().getCommaKeyword_2_4_2_0());
                            	    					
                            	    // InternalQualityBtCppParser.g:1058:6: ( ( ruleEString ) )
                            	    // InternalQualityBtCppParser.g:1059:7: ( ruleEString )
                            	    {
                            	    // InternalQualityBtCppParser.g:1059:7: ( ruleEString )
                            	    // InternalQualityBtCppParser.g:1060:8: ruleEString
                            	    {

                            	    								if (current==null) {
                            	    									current = createModelElement(grammarAccess.getAlwaysFailureNodeRule());
                            	    								}
                            	    							

                            	    								newCompositeNode(grammarAccess.getAlwaysFailureNodeAccess().getSatisfiesQualityRequirementCrossReference_2_4_2_1_0());
                            	    							
                            	    pushFollow(FOLLOW_19);
                            	    ruleEString();

                            	    state._fsp--;


                            	    								afterParserOrEnumRuleCall();
                            	    							

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop15;
                                }
                            } while (true);


                            }
                            break;

                    }

                    // InternalQualityBtCppParser.g:1076:4: ( ( (lv_parameters_16_0= ruleParameter ) ) (otherlv_17= Comma ( (lv_parameters_18_0= ruleParameter ) ) )* )?
                    int alt18=2;
                    int LA18_0 = input.LA(1);

                    if ( (LA18_0==RULE_ID||LA18_0==RULE_STRING) ) {
                        alt18=1;
                    }
                    switch (alt18) {
                        case 1 :
                            // InternalQualityBtCppParser.g:1077:5: ( (lv_parameters_16_0= ruleParameter ) ) (otherlv_17= Comma ( (lv_parameters_18_0= ruleParameter ) ) )*
                            {
                            // InternalQualityBtCppParser.g:1077:5: ( (lv_parameters_16_0= ruleParameter ) )
                            // InternalQualityBtCppParser.g:1078:6: (lv_parameters_16_0= ruleParameter )
                            {
                            // InternalQualityBtCppParser.g:1078:6: (lv_parameters_16_0= ruleParameter )
                            // InternalQualityBtCppParser.g:1079:7: lv_parameters_16_0= ruleParameter
                            {

                            							newCompositeNode(grammarAccess.getAlwaysFailureNodeAccess().getParametersParameterParserRuleCall_2_5_0_0());
                            						
                            pushFollow(FOLLOW_20);
                            lv_parameters_16_0=ruleParameter();

                            state._fsp--;


                            							if (current==null) {
                            								current = createModelElementForParent(grammarAccess.getAlwaysFailureNodeRule());
                            							}
                            							add(
                            								current,
                            								"parameters",
                            								lv_parameters_16_0,
                            								"org.xtext.btcpp.QualityBtCpp.Parameter");
                            							afterParserOrEnumRuleCall();
                            						

                            }


                            }

                            // InternalQualityBtCppParser.g:1096:5: (otherlv_17= Comma ( (lv_parameters_18_0= ruleParameter ) ) )*
                            loop17:
                            do {
                                int alt17=2;
                                int LA17_0 = input.LA(1);

                                if ( (LA17_0==Comma) ) {
                                    alt17=1;
                                }


                                switch (alt17) {
                            	case 1 :
                            	    // InternalQualityBtCppParser.g:1097:6: otherlv_17= Comma ( (lv_parameters_18_0= ruleParameter ) )
                            	    {
                            	    otherlv_17=(Token)match(input,Comma,FOLLOW_3); 

                            	    						newLeafNode(otherlv_17, grammarAccess.getAlwaysFailureNodeAccess().getCommaKeyword_2_5_1_0());
                            	    					
                            	    // InternalQualityBtCppParser.g:1101:6: ( (lv_parameters_18_0= ruleParameter ) )
                            	    // InternalQualityBtCppParser.g:1102:7: (lv_parameters_18_0= ruleParameter )
                            	    {
                            	    // InternalQualityBtCppParser.g:1102:7: (lv_parameters_18_0= ruleParameter )
                            	    // InternalQualityBtCppParser.g:1103:8: lv_parameters_18_0= ruleParameter
                            	    {

                            	    								newCompositeNode(grammarAccess.getAlwaysFailureNodeAccess().getParametersParameterParserRuleCall_2_5_1_1_0());
                            	    							
                            	    pushFollow(FOLLOW_20);
                            	    lv_parameters_18_0=ruleParameter();

                            	    state._fsp--;


                            	    								if (current==null) {
                            	    									current = createModelElementForParent(grammarAccess.getAlwaysFailureNodeRule());
                            	    								}
                            	    								add(
                            	    									current,
                            	    									"parameters",
                            	    									lv_parameters_18_0,
                            	    									"org.xtext.btcpp.QualityBtCpp.Parameter");
                            	    								afterParserOrEnumRuleCall();
                            	    							

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop17;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_19=(Token)match(input,RightParenthesis,FOLLOW_2); 

                    				newLeafNode(otherlv_19, grammarAccess.getAlwaysFailureNodeAccess().getRightParenthesisKeyword_2_6());
                    			

                    }
                    break;

            }


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAlwaysFailureNode"


    // $ANTLR start "entryRuleAlwaysSuccessNode"
    // InternalQualityBtCppParser.g:1131:1: entryRuleAlwaysSuccessNode returns [EObject current=null] : iv_ruleAlwaysSuccessNode= ruleAlwaysSuccessNode EOF ;
    public final EObject entryRuleAlwaysSuccessNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAlwaysSuccessNode = null;


        try {
            // InternalQualityBtCppParser.g:1131:58: (iv_ruleAlwaysSuccessNode= ruleAlwaysSuccessNode EOF )
            // InternalQualityBtCppParser.g:1132:2: iv_ruleAlwaysSuccessNode= ruleAlwaysSuccessNode EOF
            {
             newCompositeNode(grammarAccess.getAlwaysSuccessNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleAlwaysSuccessNode=ruleAlwaysSuccessNode();

            state._fsp--;

             current =iv_ruleAlwaysSuccessNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAlwaysSuccessNode"


    // $ANTLR start "ruleAlwaysSuccessNode"
    // InternalQualityBtCppParser.g:1138:1: ruleAlwaysSuccessNode returns [EObject current=null] : ( () otherlv_1= AlwaysSuccessNode (otherlv_2= LeftParenthesis (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Name otherlv_6= EqualsSign ( (lv_name_7_0= ruleEString ) ) )? (otherlv_8= Satisfices ( ( ruleEString ) ) (otherlv_10= Comma ( ( ruleEString ) ) )* )? (otherlv_12= Satisfies ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* )? ( ( (lv_parameters_16_0= ruleParameter ) ) (otherlv_17= Comma ( (lv_parameters_18_0= ruleParameter ) ) )* )? otherlv_19= RightParenthesis )? ) ;
    public final EObject ruleAlwaysSuccessNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        AntlrDatatypeRuleToken lv_ID_4_0 = null;

        AntlrDatatypeRuleToken lv_name_7_0 = null;

        EObject lv_parameters_16_0 = null;

        EObject lv_parameters_18_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:1144:2: ( ( () otherlv_1= AlwaysSuccessNode (otherlv_2= LeftParenthesis (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Name otherlv_6= EqualsSign ( (lv_name_7_0= ruleEString ) ) )? (otherlv_8= Satisfices ( ( ruleEString ) ) (otherlv_10= Comma ( ( ruleEString ) ) )* )? (otherlv_12= Satisfies ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* )? ( ( (lv_parameters_16_0= ruleParameter ) ) (otherlv_17= Comma ( (lv_parameters_18_0= ruleParameter ) ) )* )? otherlv_19= RightParenthesis )? ) )
            // InternalQualityBtCppParser.g:1145:2: ( () otherlv_1= AlwaysSuccessNode (otherlv_2= LeftParenthesis (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Name otherlv_6= EqualsSign ( (lv_name_7_0= ruleEString ) ) )? (otherlv_8= Satisfices ( ( ruleEString ) ) (otherlv_10= Comma ( ( ruleEString ) ) )* )? (otherlv_12= Satisfies ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* )? ( ( (lv_parameters_16_0= ruleParameter ) ) (otherlv_17= Comma ( (lv_parameters_18_0= ruleParameter ) ) )* )? otherlv_19= RightParenthesis )? )
            {
            // InternalQualityBtCppParser.g:1145:2: ( () otherlv_1= AlwaysSuccessNode (otherlv_2= LeftParenthesis (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Name otherlv_6= EqualsSign ( (lv_name_7_0= ruleEString ) ) )? (otherlv_8= Satisfices ( ( ruleEString ) ) (otherlv_10= Comma ( ( ruleEString ) ) )* )? (otherlv_12= Satisfies ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* )? ( ( (lv_parameters_16_0= ruleParameter ) ) (otherlv_17= Comma ( (lv_parameters_18_0= ruleParameter ) ) )* )? otherlv_19= RightParenthesis )? )
            // InternalQualityBtCppParser.g:1146:3: () otherlv_1= AlwaysSuccessNode (otherlv_2= LeftParenthesis (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Name otherlv_6= EqualsSign ( (lv_name_7_0= ruleEString ) ) )? (otherlv_8= Satisfices ( ( ruleEString ) ) (otherlv_10= Comma ( ( ruleEString ) ) )* )? (otherlv_12= Satisfies ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* )? ( ( (lv_parameters_16_0= ruleParameter ) ) (otherlv_17= Comma ( (lv_parameters_18_0= ruleParameter ) ) )* )? otherlv_19= RightParenthesis )?
            {
            // InternalQualityBtCppParser.g:1146:3: ()
            // InternalQualityBtCppParser.g:1147:4: 
            {

            				current = forceCreateModelElement(
            					grammarAccess.getAlwaysSuccessNodeAccess().getAlwaysSuccessNodeAction_0(),
            					current);
            			

            }

            otherlv_1=(Token)match(input,AlwaysSuccessNode,FOLLOW_14); 

            			newLeafNode(otherlv_1, grammarAccess.getAlwaysSuccessNodeAccess().getAlwaysSuccessNodeKeyword_1());
            		
            // InternalQualityBtCppParser.g:1157:3: (otherlv_2= LeftParenthesis (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Name otherlv_6= EqualsSign ( (lv_name_7_0= ruleEString ) ) )? (otherlv_8= Satisfices ( ( ruleEString ) ) (otherlv_10= Comma ( ( ruleEString ) ) )* )? (otherlv_12= Satisfies ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* )? ( ( (lv_parameters_16_0= ruleParameter ) ) (otherlv_17= Comma ( (lv_parameters_18_0= ruleParameter ) ) )* )? otherlv_19= RightParenthesis )?
            int alt28=2;
            int LA28_0 = input.LA(1);

            if ( (LA28_0==LeftParenthesis) ) {
                alt28=1;
            }
            switch (alt28) {
                case 1 :
                    // InternalQualityBtCppParser.g:1158:4: otherlv_2= LeftParenthesis (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Name otherlv_6= EqualsSign ( (lv_name_7_0= ruleEString ) ) )? (otherlv_8= Satisfices ( ( ruleEString ) ) (otherlv_10= Comma ( ( ruleEString ) ) )* )? (otherlv_12= Satisfies ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* )? ( ( (lv_parameters_16_0= ruleParameter ) ) (otherlv_17= Comma ( (lv_parameters_18_0= ruleParameter ) ) )* )? otherlv_19= RightParenthesis
                    {
                    otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_15); 

                    				newLeafNode(otherlv_2, grammarAccess.getAlwaysSuccessNodeAccess().getLeftParenthesisKeyword_2_0());
                    			
                    // InternalQualityBtCppParser.g:1162:4: (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )?
                    int alt20=2;
                    int LA20_0 = input.LA(1);

                    if ( (LA20_0==ID) ) {
                        alt20=1;
                    }
                    switch (alt20) {
                        case 1 :
                            // InternalQualityBtCppParser.g:1163:5: otherlv_3= ID ( (lv_ID_4_0= ruleEString ) )
                            {
                            otherlv_3=(Token)match(input,ID,FOLLOW_3); 

                            					newLeafNode(otherlv_3, grammarAccess.getAlwaysSuccessNodeAccess().getIDKeyword_2_1_0());
                            				
                            // InternalQualityBtCppParser.g:1167:5: ( (lv_ID_4_0= ruleEString ) )
                            // InternalQualityBtCppParser.g:1168:6: (lv_ID_4_0= ruleEString )
                            {
                            // InternalQualityBtCppParser.g:1168:6: (lv_ID_4_0= ruleEString )
                            // InternalQualityBtCppParser.g:1169:7: lv_ID_4_0= ruleEString
                            {

                            							newCompositeNode(grammarAccess.getAlwaysSuccessNodeAccess().getIDEStringParserRuleCall_2_1_1_0());
                            						
                            pushFollow(FOLLOW_16);
                            lv_ID_4_0=ruleEString();

                            state._fsp--;


                            							if (current==null) {
                            								current = createModelElementForParent(grammarAccess.getAlwaysSuccessNodeRule());
                            							}
                            							set(
                            								current,
                            								"ID",
                            								lv_ID_4_0,
                            								"org.xtext.btcpp.QualityBtCpp.EString");
                            							afterParserOrEnumRuleCall();
                            						

                            }


                            }


                            }
                            break;

                    }

                    // InternalQualityBtCppParser.g:1187:4: (otherlv_5= Name otherlv_6= EqualsSign ( (lv_name_7_0= ruleEString ) ) )?
                    int alt21=2;
                    int LA21_0 = input.LA(1);

                    if ( (LA21_0==Name) ) {
                        alt21=1;
                    }
                    switch (alt21) {
                        case 1 :
                            // InternalQualityBtCppParser.g:1188:5: otherlv_5= Name otherlv_6= EqualsSign ( (lv_name_7_0= ruleEString ) )
                            {
                            otherlv_5=(Token)match(input,Name,FOLLOW_8); 

                            					newLeafNode(otherlv_5, grammarAccess.getAlwaysSuccessNodeAccess().getNameKeyword_2_2_0());
                            				
                            otherlv_6=(Token)match(input,EqualsSign,FOLLOW_3); 

                            					newLeafNode(otherlv_6, grammarAccess.getAlwaysSuccessNodeAccess().getEqualsSignKeyword_2_2_1());
                            				
                            // InternalQualityBtCppParser.g:1196:5: ( (lv_name_7_0= ruleEString ) )
                            // InternalQualityBtCppParser.g:1197:6: (lv_name_7_0= ruleEString )
                            {
                            // InternalQualityBtCppParser.g:1197:6: (lv_name_7_0= ruleEString )
                            // InternalQualityBtCppParser.g:1198:7: lv_name_7_0= ruleEString
                            {

                            							newCompositeNode(grammarAccess.getAlwaysSuccessNodeAccess().getNameEStringParserRuleCall_2_2_2_0());
                            						
                            pushFollow(FOLLOW_17);
                            lv_name_7_0=ruleEString();

                            state._fsp--;


                            							if (current==null) {
                            								current = createModelElementForParent(grammarAccess.getAlwaysSuccessNodeRule());
                            							}
                            							set(
                            								current,
                            								"name",
                            								lv_name_7_0,
                            								"org.xtext.btcpp.QualityBtCpp.EString");
                            							afterParserOrEnumRuleCall();
                            						

                            }


                            }


                            }
                            break;

                    }

                    // InternalQualityBtCppParser.g:1216:4: (otherlv_8= Satisfices ( ( ruleEString ) ) (otherlv_10= Comma ( ( ruleEString ) ) )* )?
                    int alt23=2;
                    int LA23_0 = input.LA(1);

                    if ( (LA23_0==Satisfices) ) {
                        alt23=1;
                    }
                    switch (alt23) {
                        case 1 :
                            // InternalQualityBtCppParser.g:1217:5: otherlv_8= Satisfices ( ( ruleEString ) ) (otherlv_10= Comma ( ( ruleEString ) ) )*
                            {
                            otherlv_8=(Token)match(input,Satisfices,FOLLOW_3); 

                            					newLeafNode(otherlv_8, grammarAccess.getAlwaysSuccessNodeAccess().getSatisficesKeyword_2_3_0());
                            				
                            // InternalQualityBtCppParser.g:1221:5: ( ( ruleEString ) )
                            // InternalQualityBtCppParser.g:1222:6: ( ruleEString )
                            {
                            // InternalQualityBtCppParser.g:1222:6: ( ruleEString )
                            // InternalQualityBtCppParser.g:1223:7: ruleEString
                            {

                            							if (current==null) {
                            								current = createModelElement(grammarAccess.getAlwaysSuccessNodeRule());
                            							}
                            						

                            							newCompositeNode(grammarAccess.getAlwaysSuccessNodeAccess().getSatisficesQualityCrossReference_2_3_1_0());
                            						
                            pushFollow(FOLLOW_18);
                            ruleEString();

                            state._fsp--;


                            							afterParserOrEnumRuleCall();
                            						

                            }


                            }

                            // InternalQualityBtCppParser.g:1237:5: (otherlv_10= Comma ( ( ruleEString ) ) )*
                            loop22:
                            do {
                                int alt22=2;
                                int LA22_0 = input.LA(1);

                                if ( (LA22_0==Comma) ) {
                                    alt22=1;
                                }


                                switch (alt22) {
                            	case 1 :
                            	    // InternalQualityBtCppParser.g:1238:6: otherlv_10= Comma ( ( ruleEString ) )
                            	    {
                            	    otherlv_10=(Token)match(input,Comma,FOLLOW_3); 

                            	    						newLeafNode(otherlv_10, grammarAccess.getAlwaysSuccessNodeAccess().getCommaKeyword_2_3_2_0());
                            	    					
                            	    // InternalQualityBtCppParser.g:1242:6: ( ( ruleEString ) )
                            	    // InternalQualityBtCppParser.g:1243:7: ( ruleEString )
                            	    {
                            	    // InternalQualityBtCppParser.g:1243:7: ( ruleEString )
                            	    // InternalQualityBtCppParser.g:1244:8: ruleEString
                            	    {

                            	    								if (current==null) {
                            	    									current = createModelElement(grammarAccess.getAlwaysSuccessNodeRule());
                            	    								}
                            	    							

                            	    								newCompositeNode(grammarAccess.getAlwaysSuccessNodeAccess().getSatisficesQualityCrossReference_2_3_2_1_0());
                            	    							
                            	    pushFollow(FOLLOW_18);
                            	    ruleEString();

                            	    state._fsp--;


                            	    								afterParserOrEnumRuleCall();
                            	    							

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop22;
                                }
                            } while (true);


                            }
                            break;

                    }

                    // InternalQualityBtCppParser.g:1260:4: (otherlv_12= Satisfies ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* )?
                    int alt25=2;
                    int LA25_0 = input.LA(1);

                    if ( (LA25_0==Satisfies) ) {
                        alt25=1;
                    }
                    switch (alt25) {
                        case 1 :
                            // InternalQualityBtCppParser.g:1261:5: otherlv_12= Satisfies ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )*
                            {
                            otherlv_12=(Token)match(input,Satisfies,FOLLOW_3); 

                            					newLeafNode(otherlv_12, grammarAccess.getAlwaysSuccessNodeAccess().getSatisfiesKeyword_2_4_0());
                            				
                            // InternalQualityBtCppParser.g:1265:5: ( ( ruleEString ) )
                            // InternalQualityBtCppParser.g:1266:6: ( ruleEString )
                            {
                            // InternalQualityBtCppParser.g:1266:6: ( ruleEString )
                            // InternalQualityBtCppParser.g:1267:7: ruleEString
                            {

                            							if (current==null) {
                            								current = createModelElement(grammarAccess.getAlwaysSuccessNodeRule());
                            							}
                            						

                            							newCompositeNode(grammarAccess.getAlwaysSuccessNodeAccess().getSatisfiesQualityRequirementCrossReference_2_4_1_0());
                            						
                            pushFollow(FOLLOW_19);
                            ruleEString();

                            state._fsp--;


                            							afterParserOrEnumRuleCall();
                            						

                            }


                            }

                            // InternalQualityBtCppParser.g:1281:5: (otherlv_14= Comma ( ( ruleEString ) ) )*
                            loop24:
                            do {
                                int alt24=2;
                                int LA24_0 = input.LA(1);

                                if ( (LA24_0==Comma) ) {
                                    alt24=1;
                                }


                                switch (alt24) {
                            	case 1 :
                            	    // InternalQualityBtCppParser.g:1282:6: otherlv_14= Comma ( ( ruleEString ) )
                            	    {
                            	    otherlv_14=(Token)match(input,Comma,FOLLOW_3); 

                            	    						newLeafNode(otherlv_14, grammarAccess.getAlwaysSuccessNodeAccess().getCommaKeyword_2_4_2_0());
                            	    					
                            	    // InternalQualityBtCppParser.g:1286:6: ( ( ruleEString ) )
                            	    // InternalQualityBtCppParser.g:1287:7: ( ruleEString )
                            	    {
                            	    // InternalQualityBtCppParser.g:1287:7: ( ruleEString )
                            	    // InternalQualityBtCppParser.g:1288:8: ruleEString
                            	    {

                            	    								if (current==null) {
                            	    									current = createModelElement(grammarAccess.getAlwaysSuccessNodeRule());
                            	    								}
                            	    							

                            	    								newCompositeNode(grammarAccess.getAlwaysSuccessNodeAccess().getSatisfiesQualityRequirementCrossReference_2_4_2_1_0());
                            	    							
                            	    pushFollow(FOLLOW_19);
                            	    ruleEString();

                            	    state._fsp--;


                            	    								afterParserOrEnumRuleCall();
                            	    							

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop24;
                                }
                            } while (true);


                            }
                            break;

                    }

                    // InternalQualityBtCppParser.g:1304:4: ( ( (lv_parameters_16_0= ruleParameter ) ) (otherlv_17= Comma ( (lv_parameters_18_0= ruleParameter ) ) )* )?
                    int alt27=2;
                    int LA27_0 = input.LA(1);

                    if ( (LA27_0==RULE_ID||LA27_0==RULE_STRING) ) {
                        alt27=1;
                    }
                    switch (alt27) {
                        case 1 :
                            // InternalQualityBtCppParser.g:1305:5: ( (lv_parameters_16_0= ruleParameter ) ) (otherlv_17= Comma ( (lv_parameters_18_0= ruleParameter ) ) )*
                            {
                            // InternalQualityBtCppParser.g:1305:5: ( (lv_parameters_16_0= ruleParameter ) )
                            // InternalQualityBtCppParser.g:1306:6: (lv_parameters_16_0= ruleParameter )
                            {
                            // InternalQualityBtCppParser.g:1306:6: (lv_parameters_16_0= ruleParameter )
                            // InternalQualityBtCppParser.g:1307:7: lv_parameters_16_0= ruleParameter
                            {

                            							newCompositeNode(grammarAccess.getAlwaysSuccessNodeAccess().getParametersParameterParserRuleCall_2_5_0_0());
                            						
                            pushFollow(FOLLOW_20);
                            lv_parameters_16_0=ruleParameter();

                            state._fsp--;


                            							if (current==null) {
                            								current = createModelElementForParent(grammarAccess.getAlwaysSuccessNodeRule());
                            							}
                            							add(
                            								current,
                            								"parameters",
                            								lv_parameters_16_0,
                            								"org.xtext.btcpp.QualityBtCpp.Parameter");
                            							afterParserOrEnumRuleCall();
                            						

                            }


                            }

                            // InternalQualityBtCppParser.g:1324:5: (otherlv_17= Comma ( (lv_parameters_18_0= ruleParameter ) ) )*
                            loop26:
                            do {
                                int alt26=2;
                                int LA26_0 = input.LA(1);

                                if ( (LA26_0==Comma) ) {
                                    alt26=1;
                                }


                                switch (alt26) {
                            	case 1 :
                            	    // InternalQualityBtCppParser.g:1325:6: otherlv_17= Comma ( (lv_parameters_18_0= ruleParameter ) )
                            	    {
                            	    otherlv_17=(Token)match(input,Comma,FOLLOW_3); 

                            	    						newLeafNode(otherlv_17, grammarAccess.getAlwaysSuccessNodeAccess().getCommaKeyword_2_5_1_0());
                            	    					
                            	    // InternalQualityBtCppParser.g:1329:6: ( (lv_parameters_18_0= ruleParameter ) )
                            	    // InternalQualityBtCppParser.g:1330:7: (lv_parameters_18_0= ruleParameter )
                            	    {
                            	    // InternalQualityBtCppParser.g:1330:7: (lv_parameters_18_0= ruleParameter )
                            	    // InternalQualityBtCppParser.g:1331:8: lv_parameters_18_0= ruleParameter
                            	    {

                            	    								newCompositeNode(grammarAccess.getAlwaysSuccessNodeAccess().getParametersParameterParserRuleCall_2_5_1_1_0());
                            	    							
                            	    pushFollow(FOLLOW_20);
                            	    lv_parameters_18_0=ruleParameter();

                            	    state._fsp--;


                            	    								if (current==null) {
                            	    									current = createModelElementForParent(grammarAccess.getAlwaysSuccessNodeRule());
                            	    								}
                            	    								add(
                            	    									current,
                            	    									"parameters",
                            	    									lv_parameters_18_0,
                            	    									"org.xtext.btcpp.QualityBtCpp.Parameter");
                            	    								afterParserOrEnumRuleCall();
                            	    							

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop26;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_19=(Token)match(input,RightParenthesis,FOLLOW_2); 

                    				newLeafNode(otherlv_19, grammarAccess.getAlwaysSuccessNodeAccess().getRightParenthesisKeyword_2_6());
                    			

                    }
                    break;

            }


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAlwaysSuccessNode"


    // $ANTLR start "entryRuleSetBlackboardNode"
    // InternalQualityBtCppParser.g:1359:1: entryRuleSetBlackboardNode returns [EObject current=null] : iv_ruleSetBlackboardNode= ruleSetBlackboardNode EOF ;
    public final EObject entryRuleSetBlackboardNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSetBlackboardNode = null;


        try {
            // InternalQualityBtCppParser.g:1359:58: (iv_ruleSetBlackboardNode= ruleSetBlackboardNode EOF )
            // InternalQualityBtCppParser.g:1360:2: iv_ruleSetBlackboardNode= ruleSetBlackboardNode EOF
            {
             newCompositeNode(grammarAccess.getSetBlackboardNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleSetBlackboardNode=ruleSetBlackboardNode();

            state._fsp--;

             current =iv_ruleSetBlackboardNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSetBlackboardNode"


    // $ANTLR start "ruleSetBlackboardNode"
    // InternalQualityBtCppParser.g:1366:1: ruleSetBlackboardNode returns [EObject current=null] : (otherlv_0= SetBlackboardNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? otherlv_5= Value ( (lv_value_6_0= ruleEString ) ) otherlv_7= Output_key ( (lv_output_key_8_0= ruleEString ) ) (otherlv_9= Satisfices otherlv_10= LeftParenthesis ( ( ruleEString ) ) (otherlv_12= Comma ( ( ruleEString ) ) )* otherlv_14= RightParenthesis )? (otherlv_15= Satisfies otherlv_16= LeftParenthesis ( ( ruleEString ) ) (otherlv_18= Comma ( ( ruleEString ) ) )* otherlv_20= RightParenthesis )? (otherlv_21= Parameters otherlv_22= LeftCurlyBracket ( (lv_parameters_23_0= ruleParameter ) ) (otherlv_24= Comma ( (lv_parameters_25_0= ruleParameter ) ) )* otherlv_26= RightCurlyBracket )? otherlv_27= RightCurlyBracket ) ;
    public final EObject ruleSetBlackboardNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_15=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token otherlv_21=null;
        Token otherlv_22=null;
        Token otherlv_24=null;
        Token otherlv_26=null;
        Token otherlv_27=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_ID_4_0 = null;

        AntlrDatatypeRuleToken lv_value_6_0 = null;

        AntlrDatatypeRuleToken lv_output_key_8_0 = null;

        EObject lv_parameters_23_0 = null;

        EObject lv_parameters_25_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:1372:2: ( (otherlv_0= SetBlackboardNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? otherlv_5= Value ( (lv_value_6_0= ruleEString ) ) otherlv_7= Output_key ( (lv_output_key_8_0= ruleEString ) ) (otherlv_9= Satisfices otherlv_10= LeftParenthesis ( ( ruleEString ) ) (otherlv_12= Comma ( ( ruleEString ) ) )* otherlv_14= RightParenthesis )? (otherlv_15= Satisfies otherlv_16= LeftParenthesis ( ( ruleEString ) ) (otherlv_18= Comma ( ( ruleEString ) ) )* otherlv_20= RightParenthesis )? (otherlv_21= Parameters otherlv_22= LeftCurlyBracket ( (lv_parameters_23_0= ruleParameter ) ) (otherlv_24= Comma ( (lv_parameters_25_0= ruleParameter ) ) )* otherlv_26= RightCurlyBracket )? otherlv_27= RightCurlyBracket ) )
            // InternalQualityBtCppParser.g:1373:2: (otherlv_0= SetBlackboardNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? otherlv_5= Value ( (lv_value_6_0= ruleEString ) ) otherlv_7= Output_key ( (lv_output_key_8_0= ruleEString ) ) (otherlv_9= Satisfices otherlv_10= LeftParenthesis ( ( ruleEString ) ) (otherlv_12= Comma ( ( ruleEString ) ) )* otherlv_14= RightParenthesis )? (otherlv_15= Satisfies otherlv_16= LeftParenthesis ( ( ruleEString ) ) (otherlv_18= Comma ( ( ruleEString ) ) )* otherlv_20= RightParenthesis )? (otherlv_21= Parameters otherlv_22= LeftCurlyBracket ( (lv_parameters_23_0= ruleParameter ) ) (otherlv_24= Comma ( (lv_parameters_25_0= ruleParameter ) ) )* otherlv_26= RightCurlyBracket )? otherlv_27= RightCurlyBracket )
            {
            // InternalQualityBtCppParser.g:1373:2: (otherlv_0= SetBlackboardNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? otherlv_5= Value ( (lv_value_6_0= ruleEString ) ) otherlv_7= Output_key ( (lv_output_key_8_0= ruleEString ) ) (otherlv_9= Satisfices otherlv_10= LeftParenthesis ( ( ruleEString ) ) (otherlv_12= Comma ( ( ruleEString ) ) )* otherlv_14= RightParenthesis )? (otherlv_15= Satisfies otherlv_16= LeftParenthesis ( ( ruleEString ) ) (otherlv_18= Comma ( ( ruleEString ) ) )* otherlv_20= RightParenthesis )? (otherlv_21= Parameters otherlv_22= LeftCurlyBracket ( (lv_parameters_23_0= ruleParameter ) ) (otherlv_24= Comma ( (lv_parameters_25_0= ruleParameter ) ) )* otherlv_26= RightCurlyBracket )? otherlv_27= RightCurlyBracket )
            // InternalQualityBtCppParser.g:1374:3: otherlv_0= SetBlackboardNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? otherlv_5= Value ( (lv_value_6_0= ruleEString ) ) otherlv_7= Output_key ( (lv_output_key_8_0= ruleEString ) ) (otherlv_9= Satisfices otherlv_10= LeftParenthesis ( ( ruleEString ) ) (otherlv_12= Comma ( ( ruleEString ) ) )* otherlv_14= RightParenthesis )? (otherlv_15= Satisfies otherlv_16= LeftParenthesis ( ( ruleEString ) ) (otherlv_18= Comma ( ( ruleEString ) ) )* otherlv_20= RightParenthesis )? (otherlv_21= Parameters otherlv_22= LeftCurlyBracket ( (lv_parameters_23_0= ruleParameter ) ) (otherlv_24= Comma ( (lv_parameters_25_0= ruleParameter ) ) )* otherlv_26= RightCurlyBracket )? otherlv_27= RightCurlyBracket
            {
            otherlv_0=(Token)match(input,SetBlackboardNode,FOLLOW_3); 

            			newLeafNode(otherlv_0, grammarAccess.getSetBlackboardNodeAccess().getSetBlackboardNodeKeyword_0());
            		
            // InternalQualityBtCppParser.g:1378:3: ( (lv_name_1_0= ruleEString ) )
            // InternalQualityBtCppParser.g:1379:4: (lv_name_1_0= ruleEString )
            {
            // InternalQualityBtCppParser.g:1379:4: (lv_name_1_0= ruleEString )
            // InternalQualityBtCppParser.g:1380:5: lv_name_1_0= ruleEString
            {

            					newCompositeNode(grammarAccess.getSetBlackboardNodeAccess().getNameEStringParserRuleCall_1_0());
            				
            pushFollow(FOLLOW_21);
            lv_name_1_0=ruleEString();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getSetBlackboardNodeRule());
            					}
            					set(
            						current,
            						"name",
            						lv_name_1_0,
            						"org.xtext.btcpp.QualityBtCpp.EString");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            otherlv_2=(Token)match(input,LeftCurlyBracket,FOLLOW_22); 

            			newLeafNode(otherlv_2, grammarAccess.getSetBlackboardNodeAccess().getLeftCurlyBracketKeyword_2());
            		
            // InternalQualityBtCppParser.g:1401:3: (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )?
            int alt29=2;
            int LA29_0 = input.LA(1);

            if ( (LA29_0==ID) ) {
                alt29=1;
            }
            switch (alt29) {
                case 1 :
                    // InternalQualityBtCppParser.g:1402:4: otherlv_3= ID ( (lv_ID_4_0= ruleEString ) )
                    {
                    otherlv_3=(Token)match(input,ID,FOLLOW_3); 

                    				newLeafNode(otherlv_3, grammarAccess.getSetBlackboardNodeAccess().getIDKeyword_3_0());
                    			
                    // InternalQualityBtCppParser.g:1406:4: ( (lv_ID_4_0= ruleEString ) )
                    // InternalQualityBtCppParser.g:1407:5: (lv_ID_4_0= ruleEString )
                    {
                    // InternalQualityBtCppParser.g:1407:5: (lv_ID_4_0= ruleEString )
                    // InternalQualityBtCppParser.g:1408:6: lv_ID_4_0= ruleEString
                    {

                    						newCompositeNode(grammarAccess.getSetBlackboardNodeAccess().getIDEStringParserRuleCall_3_1_0());
                    					
                    pushFollow(FOLLOW_23);
                    lv_ID_4_0=ruleEString();

                    state._fsp--;


                    						if (current==null) {
                    							current = createModelElementForParent(grammarAccess.getSetBlackboardNodeRule());
                    						}
                    						set(
                    							current,
                    							"ID",
                    							lv_ID_4_0,
                    							"org.xtext.btcpp.QualityBtCpp.EString");
                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }


                    }
                    break;

            }

            otherlv_5=(Token)match(input,Value,FOLLOW_3); 

            			newLeafNode(otherlv_5, grammarAccess.getSetBlackboardNodeAccess().getValueKeyword_4());
            		
            // InternalQualityBtCppParser.g:1430:3: ( (lv_value_6_0= ruleEString ) )
            // InternalQualityBtCppParser.g:1431:4: (lv_value_6_0= ruleEString )
            {
            // InternalQualityBtCppParser.g:1431:4: (lv_value_6_0= ruleEString )
            // InternalQualityBtCppParser.g:1432:5: lv_value_6_0= ruleEString
            {

            					newCompositeNode(grammarAccess.getSetBlackboardNodeAccess().getValueEStringParserRuleCall_5_0());
            				
            pushFollow(FOLLOW_24);
            lv_value_6_0=ruleEString();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getSetBlackboardNodeRule());
            					}
            					set(
            						current,
            						"value",
            						lv_value_6_0,
            						"org.xtext.btcpp.QualityBtCpp.EString");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            otherlv_7=(Token)match(input,Output_key,FOLLOW_3); 

            			newLeafNode(otherlv_7, grammarAccess.getSetBlackboardNodeAccess().getOutput_keyKeyword_6());
            		
            // InternalQualityBtCppParser.g:1453:3: ( (lv_output_key_8_0= ruleEString ) )
            // InternalQualityBtCppParser.g:1454:4: (lv_output_key_8_0= ruleEString )
            {
            // InternalQualityBtCppParser.g:1454:4: (lv_output_key_8_0= ruleEString )
            // InternalQualityBtCppParser.g:1455:5: lv_output_key_8_0= ruleEString
            {

            					newCompositeNode(grammarAccess.getSetBlackboardNodeAccess().getOutput_keyEStringParserRuleCall_7_0());
            				
            pushFollow(FOLLOW_25);
            lv_output_key_8_0=ruleEString();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getSetBlackboardNodeRule());
            					}
            					set(
            						current,
            						"output_key",
            						lv_output_key_8_0,
            						"org.xtext.btcpp.QualityBtCpp.EString");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            // InternalQualityBtCppParser.g:1472:3: (otherlv_9= Satisfices otherlv_10= LeftParenthesis ( ( ruleEString ) ) (otherlv_12= Comma ( ( ruleEString ) ) )* otherlv_14= RightParenthesis )?
            int alt31=2;
            int LA31_0 = input.LA(1);

            if ( (LA31_0==Satisfices) ) {
                alt31=1;
            }
            switch (alt31) {
                case 1 :
                    // InternalQualityBtCppParser.g:1473:4: otherlv_9= Satisfices otherlv_10= LeftParenthesis ( ( ruleEString ) ) (otherlv_12= Comma ( ( ruleEString ) ) )* otherlv_14= RightParenthesis
                    {
                    otherlv_9=(Token)match(input,Satisfices,FOLLOW_26); 

                    				newLeafNode(otherlv_9, grammarAccess.getSetBlackboardNodeAccess().getSatisficesKeyword_8_0());
                    			
                    otherlv_10=(Token)match(input,LeftParenthesis,FOLLOW_3); 

                    				newLeafNode(otherlv_10, grammarAccess.getSetBlackboardNodeAccess().getLeftParenthesisKeyword_8_1());
                    			
                    // InternalQualityBtCppParser.g:1481:4: ( ( ruleEString ) )
                    // InternalQualityBtCppParser.g:1482:5: ( ruleEString )
                    {
                    // InternalQualityBtCppParser.g:1482:5: ( ruleEString )
                    // InternalQualityBtCppParser.g:1483:6: ruleEString
                    {

                    						if (current==null) {
                    							current = createModelElement(grammarAccess.getSetBlackboardNodeRule());
                    						}
                    					

                    						newCompositeNode(grammarAccess.getSetBlackboardNodeAccess().getSatisficesQualityCrossReference_8_2_0());
                    					
                    pushFollow(FOLLOW_20);
                    ruleEString();

                    state._fsp--;


                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:1497:4: (otherlv_12= Comma ( ( ruleEString ) ) )*
                    loop30:
                    do {
                        int alt30=2;
                        int LA30_0 = input.LA(1);

                        if ( (LA30_0==Comma) ) {
                            alt30=1;
                        }


                        switch (alt30) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:1498:5: otherlv_12= Comma ( ( ruleEString ) )
                    	    {
                    	    otherlv_12=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_12, grammarAccess.getSetBlackboardNodeAccess().getCommaKeyword_8_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:1502:5: ( ( ruleEString ) )
                    	    // InternalQualityBtCppParser.g:1503:6: ( ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:1503:6: ( ruleEString )
                    	    // InternalQualityBtCppParser.g:1504:7: ruleEString
                    	    {

                    	    							if (current==null) {
                    	    								current = createModelElement(grammarAccess.getSetBlackboardNodeRule());
                    	    							}
                    	    						

                    	    							newCompositeNode(grammarAccess.getSetBlackboardNodeAccess().getSatisficesQualityCrossReference_8_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_20);
                    	    ruleEString();

                    	    state._fsp--;


                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop30;
                        }
                    } while (true);

                    otherlv_14=(Token)match(input,RightParenthesis,FOLLOW_27); 

                    				newLeafNode(otherlv_14, grammarAccess.getSetBlackboardNodeAccess().getRightParenthesisKeyword_8_4());
                    			

                    }
                    break;

            }

            // InternalQualityBtCppParser.g:1524:3: (otherlv_15= Satisfies otherlv_16= LeftParenthesis ( ( ruleEString ) ) (otherlv_18= Comma ( ( ruleEString ) ) )* otherlv_20= RightParenthesis )?
            int alt33=2;
            int LA33_0 = input.LA(1);

            if ( (LA33_0==Satisfies) ) {
                alt33=1;
            }
            switch (alt33) {
                case 1 :
                    // InternalQualityBtCppParser.g:1525:4: otherlv_15= Satisfies otherlv_16= LeftParenthesis ( ( ruleEString ) ) (otherlv_18= Comma ( ( ruleEString ) ) )* otherlv_20= RightParenthesis
                    {
                    otherlv_15=(Token)match(input,Satisfies,FOLLOW_26); 

                    				newLeafNode(otherlv_15, grammarAccess.getSetBlackboardNodeAccess().getSatisfiesKeyword_9_0());
                    			
                    otherlv_16=(Token)match(input,LeftParenthesis,FOLLOW_3); 

                    				newLeafNode(otherlv_16, grammarAccess.getSetBlackboardNodeAccess().getLeftParenthesisKeyword_9_1());
                    			
                    // InternalQualityBtCppParser.g:1533:4: ( ( ruleEString ) )
                    // InternalQualityBtCppParser.g:1534:5: ( ruleEString )
                    {
                    // InternalQualityBtCppParser.g:1534:5: ( ruleEString )
                    // InternalQualityBtCppParser.g:1535:6: ruleEString
                    {

                    						if (current==null) {
                    							current = createModelElement(grammarAccess.getSetBlackboardNodeRule());
                    						}
                    					

                    						newCompositeNode(grammarAccess.getSetBlackboardNodeAccess().getSatisfiesQualityRequirementCrossReference_9_2_0());
                    					
                    pushFollow(FOLLOW_20);
                    ruleEString();

                    state._fsp--;


                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:1549:4: (otherlv_18= Comma ( ( ruleEString ) ) )*
                    loop32:
                    do {
                        int alt32=2;
                        int LA32_0 = input.LA(1);

                        if ( (LA32_0==Comma) ) {
                            alt32=1;
                        }


                        switch (alt32) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:1550:5: otherlv_18= Comma ( ( ruleEString ) )
                    	    {
                    	    otherlv_18=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_18, grammarAccess.getSetBlackboardNodeAccess().getCommaKeyword_9_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:1554:5: ( ( ruleEString ) )
                    	    // InternalQualityBtCppParser.g:1555:6: ( ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:1555:6: ( ruleEString )
                    	    // InternalQualityBtCppParser.g:1556:7: ruleEString
                    	    {

                    	    							if (current==null) {
                    	    								current = createModelElement(grammarAccess.getSetBlackboardNodeRule());
                    	    							}
                    	    						

                    	    							newCompositeNode(grammarAccess.getSetBlackboardNodeAccess().getSatisfiesQualityRequirementCrossReference_9_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_20);
                    	    ruleEString();

                    	    state._fsp--;


                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop32;
                        }
                    } while (true);

                    otherlv_20=(Token)match(input,RightParenthesis,FOLLOW_28); 

                    				newLeafNode(otherlv_20, grammarAccess.getSetBlackboardNodeAccess().getRightParenthesisKeyword_9_4());
                    			

                    }
                    break;

            }

            // InternalQualityBtCppParser.g:1576:3: (otherlv_21= Parameters otherlv_22= LeftCurlyBracket ( (lv_parameters_23_0= ruleParameter ) ) (otherlv_24= Comma ( (lv_parameters_25_0= ruleParameter ) ) )* otherlv_26= RightCurlyBracket )?
            int alt35=2;
            int LA35_0 = input.LA(1);

            if ( (LA35_0==Parameters) ) {
                alt35=1;
            }
            switch (alt35) {
                case 1 :
                    // InternalQualityBtCppParser.g:1577:4: otherlv_21= Parameters otherlv_22= LeftCurlyBracket ( (lv_parameters_23_0= ruleParameter ) ) (otherlv_24= Comma ( (lv_parameters_25_0= ruleParameter ) ) )* otherlv_26= RightCurlyBracket
                    {
                    otherlv_21=(Token)match(input,Parameters,FOLLOW_21); 

                    				newLeafNode(otherlv_21, grammarAccess.getSetBlackboardNodeAccess().getParametersKeyword_10_0());
                    			
                    otherlv_22=(Token)match(input,LeftCurlyBracket,FOLLOW_3); 

                    				newLeafNode(otherlv_22, grammarAccess.getSetBlackboardNodeAccess().getLeftCurlyBracketKeyword_10_1());
                    			
                    // InternalQualityBtCppParser.g:1585:4: ( (lv_parameters_23_0= ruleParameter ) )
                    // InternalQualityBtCppParser.g:1586:5: (lv_parameters_23_0= ruleParameter )
                    {
                    // InternalQualityBtCppParser.g:1586:5: (lv_parameters_23_0= ruleParameter )
                    // InternalQualityBtCppParser.g:1587:6: lv_parameters_23_0= ruleParameter
                    {

                    						newCompositeNode(grammarAccess.getSetBlackboardNodeAccess().getParametersParameterParserRuleCall_10_2_0());
                    					
                    pushFollow(FOLLOW_29);
                    lv_parameters_23_0=ruleParameter();

                    state._fsp--;


                    						if (current==null) {
                    							current = createModelElementForParent(grammarAccess.getSetBlackboardNodeRule());
                    						}
                    						add(
                    							current,
                    							"parameters",
                    							lv_parameters_23_0,
                    							"org.xtext.btcpp.QualityBtCpp.Parameter");
                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:1604:4: (otherlv_24= Comma ( (lv_parameters_25_0= ruleParameter ) ) )*
                    loop34:
                    do {
                        int alt34=2;
                        int LA34_0 = input.LA(1);

                        if ( (LA34_0==Comma) ) {
                            alt34=1;
                        }


                        switch (alt34) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:1605:5: otherlv_24= Comma ( (lv_parameters_25_0= ruleParameter ) )
                    	    {
                    	    otherlv_24=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_24, grammarAccess.getSetBlackboardNodeAccess().getCommaKeyword_10_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:1609:5: ( (lv_parameters_25_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:1610:6: (lv_parameters_25_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:1610:6: (lv_parameters_25_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:1611:7: lv_parameters_25_0= ruleParameter
                    	    {

                    	    							newCompositeNode(grammarAccess.getSetBlackboardNodeAccess().getParametersParameterParserRuleCall_10_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_29);
                    	    lv_parameters_25_0=ruleParameter();

                    	    state._fsp--;


                    	    							if (current==null) {
                    	    								current = createModelElementForParent(grammarAccess.getSetBlackboardNodeRule());
                    	    							}
                    	    							add(
                    	    								current,
                    	    								"parameters",
                    	    								lv_parameters_25_0,
                    	    								"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop34;
                        }
                    } while (true);

                    otherlv_26=(Token)match(input,RightCurlyBracket,FOLLOW_30); 

                    				newLeafNode(otherlv_26, grammarAccess.getSetBlackboardNodeAccess().getRightCurlyBracketKeyword_10_4());
                    			

                    }
                    break;

            }

            otherlv_27=(Token)match(input,RightCurlyBracket,FOLLOW_2); 

            			newLeafNode(otherlv_27, grammarAccess.getSetBlackboardNodeAccess().getRightCurlyBracketKeyword_11());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSetBlackboardNode"


    // $ANTLR start "entryRuleFallbackNode"
    // InternalQualityBtCppParser.g:1642:1: entryRuleFallbackNode returns [EObject current=null] : iv_ruleFallbackNode= ruleFallbackNode EOF ;
    public final EObject entryRuleFallbackNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFallbackNode = null;


        try {
            // InternalQualityBtCppParser.g:1642:53: (iv_ruleFallbackNode= ruleFallbackNode EOF )
            // InternalQualityBtCppParser.g:1643:2: iv_ruleFallbackNode= ruleFallbackNode EOF
            {
             newCompositeNode(grammarAccess.getFallbackNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleFallbackNode=ruleFallbackNode();

            state._fsp--;

             current =iv_ruleFallbackNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFallbackNode"


    // $ANTLR start "ruleFallbackNode"
    // InternalQualityBtCppParser.g:1649:1: ruleFallbackNode returns [EObject current=null] : (otherlv_0= FallbackNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )? (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )? (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )? otherlv_23= Child otherlv_24= LeftCurlyBracket ( (lv_child_25_0= ruleTreeNode ) ) (otherlv_26= Comma ( (lv_child_27_0= ruleTreeNode ) ) )* otherlv_28= RightCurlyBracket otherlv_29= RightCurlyBracket ) ;
    public final EObject ruleFallbackNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_17=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        Token otherlv_23=null;
        Token otherlv_24=null;
        Token otherlv_26=null;
        Token otherlv_28=null;
        Token otherlv_29=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_ID_4_0 = null;

        EObject lv_parameters_19_0 = null;

        EObject lv_parameters_21_0 = null;

        EObject lv_child_25_0 = null;

        EObject lv_child_27_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:1655:2: ( (otherlv_0= FallbackNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )? (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )? (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )? otherlv_23= Child otherlv_24= LeftCurlyBracket ( (lv_child_25_0= ruleTreeNode ) ) (otherlv_26= Comma ( (lv_child_27_0= ruleTreeNode ) ) )* otherlv_28= RightCurlyBracket otherlv_29= RightCurlyBracket ) )
            // InternalQualityBtCppParser.g:1656:2: (otherlv_0= FallbackNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )? (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )? (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )? otherlv_23= Child otherlv_24= LeftCurlyBracket ( (lv_child_25_0= ruleTreeNode ) ) (otherlv_26= Comma ( (lv_child_27_0= ruleTreeNode ) ) )* otherlv_28= RightCurlyBracket otherlv_29= RightCurlyBracket )
            {
            // InternalQualityBtCppParser.g:1656:2: (otherlv_0= FallbackNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )? (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )? (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )? otherlv_23= Child otherlv_24= LeftCurlyBracket ( (lv_child_25_0= ruleTreeNode ) ) (otherlv_26= Comma ( (lv_child_27_0= ruleTreeNode ) ) )* otherlv_28= RightCurlyBracket otherlv_29= RightCurlyBracket )
            // InternalQualityBtCppParser.g:1657:3: otherlv_0= FallbackNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )? (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )? (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )? otherlv_23= Child otherlv_24= LeftCurlyBracket ( (lv_child_25_0= ruleTreeNode ) ) (otherlv_26= Comma ( (lv_child_27_0= ruleTreeNode ) ) )* otherlv_28= RightCurlyBracket otherlv_29= RightCurlyBracket
            {
            otherlv_0=(Token)match(input,FallbackNode,FOLLOW_3); 

            			newLeafNode(otherlv_0, grammarAccess.getFallbackNodeAccess().getFallbackNodeKeyword_0());
            		
            // InternalQualityBtCppParser.g:1661:3: ( (lv_name_1_0= ruleEString ) )
            // InternalQualityBtCppParser.g:1662:4: (lv_name_1_0= ruleEString )
            {
            // InternalQualityBtCppParser.g:1662:4: (lv_name_1_0= ruleEString )
            // InternalQualityBtCppParser.g:1663:5: lv_name_1_0= ruleEString
            {

            					newCompositeNode(grammarAccess.getFallbackNodeAccess().getNameEStringParserRuleCall_1_0());
            				
            pushFollow(FOLLOW_21);
            lv_name_1_0=ruleEString();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getFallbackNodeRule());
            					}
            					set(
            						current,
            						"name",
            						lv_name_1_0,
            						"org.xtext.btcpp.QualityBtCpp.EString");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            otherlv_2=(Token)match(input,LeftCurlyBracket,FOLLOW_31); 

            			newLeafNode(otherlv_2, grammarAccess.getFallbackNodeAccess().getLeftCurlyBracketKeyword_2());
            		
            // InternalQualityBtCppParser.g:1684:3: (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )?
            int alt36=2;
            int LA36_0 = input.LA(1);

            if ( (LA36_0==ID) ) {
                alt36=1;
            }
            switch (alt36) {
                case 1 :
                    // InternalQualityBtCppParser.g:1685:4: otherlv_3= ID ( (lv_ID_4_0= ruleEString ) )
                    {
                    otherlv_3=(Token)match(input,ID,FOLLOW_3); 

                    				newLeafNode(otherlv_3, grammarAccess.getFallbackNodeAccess().getIDKeyword_3_0());
                    			
                    // InternalQualityBtCppParser.g:1689:4: ( (lv_ID_4_0= ruleEString ) )
                    // InternalQualityBtCppParser.g:1690:5: (lv_ID_4_0= ruleEString )
                    {
                    // InternalQualityBtCppParser.g:1690:5: (lv_ID_4_0= ruleEString )
                    // InternalQualityBtCppParser.g:1691:6: lv_ID_4_0= ruleEString
                    {

                    						newCompositeNode(grammarAccess.getFallbackNodeAccess().getIDEStringParserRuleCall_3_1_0());
                    					
                    pushFollow(FOLLOW_32);
                    lv_ID_4_0=ruleEString();

                    state._fsp--;


                    						if (current==null) {
                    							current = createModelElementForParent(grammarAccess.getFallbackNodeRule());
                    						}
                    						set(
                    							current,
                    							"ID",
                    							lv_ID_4_0,
                    							"org.xtext.btcpp.QualityBtCpp.EString");
                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }


                    }
                    break;

            }

            // InternalQualityBtCppParser.g:1709:3: (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )?
            int alt38=2;
            int LA38_0 = input.LA(1);

            if ( (LA38_0==Satisfices) ) {
                alt38=1;
            }
            switch (alt38) {
                case 1 :
                    // InternalQualityBtCppParser.g:1710:4: otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis
                    {
                    otherlv_5=(Token)match(input,Satisfices,FOLLOW_26); 

                    				newLeafNode(otherlv_5, grammarAccess.getFallbackNodeAccess().getSatisficesKeyword_4_0());
                    			
                    otherlv_6=(Token)match(input,LeftParenthesis,FOLLOW_3); 

                    				newLeafNode(otherlv_6, grammarAccess.getFallbackNodeAccess().getLeftParenthesisKeyword_4_1());
                    			
                    // InternalQualityBtCppParser.g:1718:4: ( ( ruleEString ) )
                    // InternalQualityBtCppParser.g:1719:5: ( ruleEString )
                    {
                    // InternalQualityBtCppParser.g:1719:5: ( ruleEString )
                    // InternalQualityBtCppParser.g:1720:6: ruleEString
                    {

                    						if (current==null) {
                    							current = createModelElement(grammarAccess.getFallbackNodeRule());
                    						}
                    					

                    						newCompositeNode(grammarAccess.getFallbackNodeAccess().getSatisficesQualityCrossReference_4_2_0());
                    					
                    pushFollow(FOLLOW_20);
                    ruleEString();

                    state._fsp--;


                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:1734:4: (otherlv_8= Comma ( ( ruleEString ) ) )*
                    loop37:
                    do {
                        int alt37=2;
                        int LA37_0 = input.LA(1);

                        if ( (LA37_0==Comma) ) {
                            alt37=1;
                        }


                        switch (alt37) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:1735:5: otherlv_8= Comma ( ( ruleEString ) )
                    	    {
                    	    otherlv_8=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_8, grammarAccess.getFallbackNodeAccess().getCommaKeyword_4_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:1739:5: ( ( ruleEString ) )
                    	    // InternalQualityBtCppParser.g:1740:6: ( ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:1740:6: ( ruleEString )
                    	    // InternalQualityBtCppParser.g:1741:7: ruleEString
                    	    {

                    	    							if (current==null) {
                    	    								current = createModelElement(grammarAccess.getFallbackNodeRule());
                    	    							}
                    	    						

                    	    							newCompositeNode(grammarAccess.getFallbackNodeAccess().getSatisficesQualityCrossReference_4_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_20);
                    	    ruleEString();

                    	    state._fsp--;


                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop37;
                        }
                    } while (true);

                    otherlv_10=(Token)match(input,RightParenthesis,FOLLOW_33); 

                    				newLeafNode(otherlv_10, grammarAccess.getFallbackNodeAccess().getRightParenthesisKeyword_4_4());
                    			

                    }
                    break;

            }

            // InternalQualityBtCppParser.g:1761:3: (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )?
            int alt40=2;
            int LA40_0 = input.LA(1);

            if ( (LA40_0==Satisfies) ) {
                alt40=1;
            }
            switch (alt40) {
                case 1 :
                    // InternalQualityBtCppParser.g:1762:4: otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis
                    {
                    otherlv_11=(Token)match(input,Satisfies,FOLLOW_26); 

                    				newLeafNode(otherlv_11, grammarAccess.getFallbackNodeAccess().getSatisfiesKeyword_5_0());
                    			
                    otherlv_12=(Token)match(input,LeftParenthesis,FOLLOW_3); 

                    				newLeafNode(otherlv_12, grammarAccess.getFallbackNodeAccess().getLeftParenthesisKeyword_5_1());
                    			
                    // InternalQualityBtCppParser.g:1770:4: ( ( ruleEString ) )
                    // InternalQualityBtCppParser.g:1771:5: ( ruleEString )
                    {
                    // InternalQualityBtCppParser.g:1771:5: ( ruleEString )
                    // InternalQualityBtCppParser.g:1772:6: ruleEString
                    {

                    						if (current==null) {
                    							current = createModelElement(grammarAccess.getFallbackNodeRule());
                    						}
                    					

                    						newCompositeNode(grammarAccess.getFallbackNodeAccess().getSatisfiesQualityRequirementCrossReference_5_2_0());
                    					
                    pushFollow(FOLLOW_20);
                    ruleEString();

                    state._fsp--;


                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:1786:4: (otherlv_14= Comma ( ( ruleEString ) ) )*
                    loop39:
                    do {
                        int alt39=2;
                        int LA39_0 = input.LA(1);

                        if ( (LA39_0==Comma) ) {
                            alt39=1;
                        }


                        switch (alt39) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:1787:5: otherlv_14= Comma ( ( ruleEString ) )
                    	    {
                    	    otherlv_14=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_14, grammarAccess.getFallbackNodeAccess().getCommaKeyword_5_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:1791:5: ( ( ruleEString ) )
                    	    // InternalQualityBtCppParser.g:1792:6: ( ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:1792:6: ( ruleEString )
                    	    // InternalQualityBtCppParser.g:1793:7: ruleEString
                    	    {

                    	    							if (current==null) {
                    	    								current = createModelElement(grammarAccess.getFallbackNodeRule());
                    	    							}
                    	    						

                    	    							newCompositeNode(grammarAccess.getFallbackNodeAccess().getSatisfiesQualityRequirementCrossReference_5_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_20);
                    	    ruleEString();

                    	    state._fsp--;


                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop39;
                        }
                    } while (true);

                    otherlv_16=(Token)match(input,RightParenthesis,FOLLOW_34); 

                    				newLeafNode(otherlv_16, grammarAccess.getFallbackNodeAccess().getRightParenthesisKeyword_5_4());
                    			

                    }
                    break;

            }

            // InternalQualityBtCppParser.g:1813:3: (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )?
            int alt42=2;
            int LA42_0 = input.LA(1);

            if ( (LA42_0==Parameters) ) {
                alt42=1;
            }
            switch (alt42) {
                case 1 :
                    // InternalQualityBtCppParser.g:1814:4: otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket
                    {
                    otherlv_17=(Token)match(input,Parameters,FOLLOW_21); 

                    				newLeafNode(otherlv_17, grammarAccess.getFallbackNodeAccess().getParametersKeyword_6_0());
                    			
                    otherlv_18=(Token)match(input,LeftCurlyBracket,FOLLOW_3); 

                    				newLeafNode(otherlv_18, grammarAccess.getFallbackNodeAccess().getLeftCurlyBracketKeyword_6_1());
                    			
                    // InternalQualityBtCppParser.g:1822:4: ( (lv_parameters_19_0= ruleParameter ) )
                    // InternalQualityBtCppParser.g:1823:5: (lv_parameters_19_0= ruleParameter )
                    {
                    // InternalQualityBtCppParser.g:1823:5: (lv_parameters_19_0= ruleParameter )
                    // InternalQualityBtCppParser.g:1824:6: lv_parameters_19_0= ruleParameter
                    {

                    						newCompositeNode(grammarAccess.getFallbackNodeAccess().getParametersParameterParserRuleCall_6_2_0());
                    					
                    pushFollow(FOLLOW_29);
                    lv_parameters_19_0=ruleParameter();

                    state._fsp--;


                    						if (current==null) {
                    							current = createModelElementForParent(grammarAccess.getFallbackNodeRule());
                    						}
                    						add(
                    							current,
                    							"parameters",
                    							lv_parameters_19_0,
                    							"org.xtext.btcpp.QualityBtCpp.Parameter");
                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:1841:4: (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )*
                    loop41:
                    do {
                        int alt41=2;
                        int LA41_0 = input.LA(1);

                        if ( (LA41_0==Comma) ) {
                            alt41=1;
                        }


                        switch (alt41) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:1842:5: otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) )
                    	    {
                    	    otherlv_20=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_20, grammarAccess.getFallbackNodeAccess().getCommaKeyword_6_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:1846:5: ( (lv_parameters_21_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:1847:6: (lv_parameters_21_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:1847:6: (lv_parameters_21_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:1848:7: lv_parameters_21_0= ruleParameter
                    	    {

                    	    							newCompositeNode(grammarAccess.getFallbackNodeAccess().getParametersParameterParserRuleCall_6_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_29);
                    	    lv_parameters_21_0=ruleParameter();

                    	    state._fsp--;


                    	    							if (current==null) {
                    	    								current = createModelElementForParent(grammarAccess.getFallbackNodeRule());
                    	    							}
                    	    							add(
                    	    								current,
                    	    								"parameters",
                    	    								lv_parameters_21_0,
                    	    								"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop41;
                        }
                    } while (true);

                    otherlv_22=(Token)match(input,RightCurlyBracket,FOLLOW_35); 

                    				newLeafNode(otherlv_22, grammarAccess.getFallbackNodeAccess().getRightCurlyBracketKeyword_6_4());
                    			

                    }
                    break;

            }

            otherlv_23=(Token)match(input,Child,FOLLOW_21); 

            			newLeafNode(otherlv_23, grammarAccess.getFallbackNodeAccess().getChildKeyword_7());
            		
            otherlv_24=(Token)match(input,LeftCurlyBracket,FOLLOW_9); 

            			newLeafNode(otherlv_24, grammarAccess.getFallbackNodeAccess().getLeftCurlyBracketKeyword_8());
            		
            // InternalQualityBtCppParser.g:1879:3: ( (lv_child_25_0= ruleTreeNode ) )
            // InternalQualityBtCppParser.g:1880:4: (lv_child_25_0= ruleTreeNode )
            {
            // InternalQualityBtCppParser.g:1880:4: (lv_child_25_0= ruleTreeNode )
            // InternalQualityBtCppParser.g:1881:5: lv_child_25_0= ruleTreeNode
            {

            					newCompositeNode(grammarAccess.getFallbackNodeAccess().getChildTreeNodeParserRuleCall_9_0());
            				
            pushFollow(FOLLOW_29);
            lv_child_25_0=ruleTreeNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getFallbackNodeRule());
            					}
            					add(
            						current,
            						"child",
            						lv_child_25_0,
            						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            // InternalQualityBtCppParser.g:1898:3: (otherlv_26= Comma ( (lv_child_27_0= ruleTreeNode ) ) )*
            loop43:
            do {
                int alt43=2;
                int LA43_0 = input.LA(1);

                if ( (LA43_0==Comma) ) {
                    alt43=1;
                }


                switch (alt43) {
            	case 1 :
            	    // InternalQualityBtCppParser.g:1899:4: otherlv_26= Comma ( (lv_child_27_0= ruleTreeNode ) )
            	    {
            	    otherlv_26=(Token)match(input,Comma,FOLLOW_9); 

            	    				newLeafNode(otherlv_26, grammarAccess.getFallbackNodeAccess().getCommaKeyword_10_0());
            	    			
            	    // InternalQualityBtCppParser.g:1903:4: ( (lv_child_27_0= ruleTreeNode ) )
            	    // InternalQualityBtCppParser.g:1904:5: (lv_child_27_0= ruleTreeNode )
            	    {
            	    // InternalQualityBtCppParser.g:1904:5: (lv_child_27_0= ruleTreeNode )
            	    // InternalQualityBtCppParser.g:1905:6: lv_child_27_0= ruleTreeNode
            	    {

            	    						newCompositeNode(grammarAccess.getFallbackNodeAccess().getChildTreeNodeParserRuleCall_10_1_0());
            	    					
            	    pushFollow(FOLLOW_29);
            	    lv_child_27_0=ruleTreeNode();

            	    state._fsp--;


            	    						if (current==null) {
            	    							current = createModelElementForParent(grammarAccess.getFallbackNodeRule());
            	    						}
            	    						add(
            	    							current,
            	    							"child",
            	    							lv_child_27_0,
            	    							"org.xtext.btcpp.QualityBtCpp.TreeNode");
            	    						afterParserOrEnumRuleCall();
            	    					

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop43;
                }
            } while (true);

            otherlv_28=(Token)match(input,RightCurlyBracket,FOLLOW_30); 

            			newLeafNode(otherlv_28, grammarAccess.getFallbackNodeAccess().getRightCurlyBracketKeyword_11());
            		
            otherlv_29=(Token)match(input,RightCurlyBracket,FOLLOW_2); 

            			newLeafNode(otherlv_29, grammarAccess.getFallbackNodeAccess().getRightCurlyBracketKeyword_12());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFallbackNode"


    // $ANTLR start "entryRuleIfThenElseNode"
    // InternalQualityBtCppParser.g:1935:1: entryRuleIfThenElseNode returns [EObject current=null] : iv_ruleIfThenElseNode= ruleIfThenElseNode EOF ;
    public final EObject entryRuleIfThenElseNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIfThenElseNode = null;


        try {
            // InternalQualityBtCppParser.g:1935:55: (iv_ruleIfThenElseNode= ruleIfThenElseNode EOF )
            // InternalQualityBtCppParser.g:1936:2: iv_ruleIfThenElseNode= ruleIfThenElseNode EOF
            {
             newCompositeNode(grammarAccess.getIfThenElseNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleIfThenElseNode=ruleIfThenElseNode();

            state._fsp--;

             current =iv_ruleIfThenElseNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIfThenElseNode"


    // $ANTLR start "ruleIfThenElseNode"
    // InternalQualityBtCppParser.g:1942:1: ruleIfThenElseNode returns [EObject current=null] : (otherlv_0= IfThenElseNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )? (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )? (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )? otherlv_23= Child otherlv_24= LeftCurlyBracket ( (lv_child_25_0= ruleTreeNode ) ) (otherlv_26= Comma ( (lv_child_27_0= ruleTreeNode ) ) )* otherlv_28= RightCurlyBracket otherlv_29= RightCurlyBracket ) ;
    public final EObject ruleIfThenElseNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_17=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        Token otherlv_23=null;
        Token otherlv_24=null;
        Token otherlv_26=null;
        Token otherlv_28=null;
        Token otherlv_29=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_ID_4_0 = null;

        EObject lv_parameters_19_0 = null;

        EObject lv_parameters_21_0 = null;

        EObject lv_child_25_0 = null;

        EObject lv_child_27_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:1948:2: ( (otherlv_0= IfThenElseNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )? (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )? (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )? otherlv_23= Child otherlv_24= LeftCurlyBracket ( (lv_child_25_0= ruleTreeNode ) ) (otherlv_26= Comma ( (lv_child_27_0= ruleTreeNode ) ) )* otherlv_28= RightCurlyBracket otherlv_29= RightCurlyBracket ) )
            // InternalQualityBtCppParser.g:1949:2: (otherlv_0= IfThenElseNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )? (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )? (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )? otherlv_23= Child otherlv_24= LeftCurlyBracket ( (lv_child_25_0= ruleTreeNode ) ) (otherlv_26= Comma ( (lv_child_27_0= ruleTreeNode ) ) )* otherlv_28= RightCurlyBracket otherlv_29= RightCurlyBracket )
            {
            // InternalQualityBtCppParser.g:1949:2: (otherlv_0= IfThenElseNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )? (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )? (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )? otherlv_23= Child otherlv_24= LeftCurlyBracket ( (lv_child_25_0= ruleTreeNode ) ) (otherlv_26= Comma ( (lv_child_27_0= ruleTreeNode ) ) )* otherlv_28= RightCurlyBracket otherlv_29= RightCurlyBracket )
            // InternalQualityBtCppParser.g:1950:3: otherlv_0= IfThenElseNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )? (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )? (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )? otherlv_23= Child otherlv_24= LeftCurlyBracket ( (lv_child_25_0= ruleTreeNode ) ) (otherlv_26= Comma ( (lv_child_27_0= ruleTreeNode ) ) )* otherlv_28= RightCurlyBracket otherlv_29= RightCurlyBracket
            {
            otherlv_0=(Token)match(input,IfThenElseNode,FOLLOW_3); 

            			newLeafNode(otherlv_0, grammarAccess.getIfThenElseNodeAccess().getIfThenElseNodeKeyword_0());
            		
            // InternalQualityBtCppParser.g:1954:3: ( (lv_name_1_0= ruleEString ) )
            // InternalQualityBtCppParser.g:1955:4: (lv_name_1_0= ruleEString )
            {
            // InternalQualityBtCppParser.g:1955:4: (lv_name_1_0= ruleEString )
            // InternalQualityBtCppParser.g:1956:5: lv_name_1_0= ruleEString
            {

            					newCompositeNode(grammarAccess.getIfThenElseNodeAccess().getNameEStringParserRuleCall_1_0());
            				
            pushFollow(FOLLOW_21);
            lv_name_1_0=ruleEString();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getIfThenElseNodeRule());
            					}
            					set(
            						current,
            						"name",
            						lv_name_1_0,
            						"org.xtext.btcpp.QualityBtCpp.EString");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            otherlv_2=(Token)match(input,LeftCurlyBracket,FOLLOW_31); 

            			newLeafNode(otherlv_2, grammarAccess.getIfThenElseNodeAccess().getLeftCurlyBracketKeyword_2());
            		
            // InternalQualityBtCppParser.g:1977:3: (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )?
            int alt44=2;
            int LA44_0 = input.LA(1);

            if ( (LA44_0==ID) ) {
                alt44=1;
            }
            switch (alt44) {
                case 1 :
                    // InternalQualityBtCppParser.g:1978:4: otherlv_3= ID ( (lv_ID_4_0= ruleEString ) )
                    {
                    otherlv_3=(Token)match(input,ID,FOLLOW_3); 

                    				newLeafNode(otherlv_3, grammarAccess.getIfThenElseNodeAccess().getIDKeyword_3_0());
                    			
                    // InternalQualityBtCppParser.g:1982:4: ( (lv_ID_4_0= ruleEString ) )
                    // InternalQualityBtCppParser.g:1983:5: (lv_ID_4_0= ruleEString )
                    {
                    // InternalQualityBtCppParser.g:1983:5: (lv_ID_4_0= ruleEString )
                    // InternalQualityBtCppParser.g:1984:6: lv_ID_4_0= ruleEString
                    {

                    						newCompositeNode(grammarAccess.getIfThenElseNodeAccess().getIDEStringParserRuleCall_3_1_0());
                    					
                    pushFollow(FOLLOW_32);
                    lv_ID_4_0=ruleEString();

                    state._fsp--;


                    						if (current==null) {
                    							current = createModelElementForParent(grammarAccess.getIfThenElseNodeRule());
                    						}
                    						set(
                    							current,
                    							"ID",
                    							lv_ID_4_0,
                    							"org.xtext.btcpp.QualityBtCpp.EString");
                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }


                    }
                    break;

            }

            // InternalQualityBtCppParser.g:2002:3: (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )?
            int alt46=2;
            int LA46_0 = input.LA(1);

            if ( (LA46_0==Satisfices) ) {
                alt46=1;
            }
            switch (alt46) {
                case 1 :
                    // InternalQualityBtCppParser.g:2003:4: otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis
                    {
                    otherlv_5=(Token)match(input,Satisfices,FOLLOW_26); 

                    				newLeafNode(otherlv_5, grammarAccess.getIfThenElseNodeAccess().getSatisficesKeyword_4_0());
                    			
                    otherlv_6=(Token)match(input,LeftParenthesis,FOLLOW_3); 

                    				newLeafNode(otherlv_6, grammarAccess.getIfThenElseNodeAccess().getLeftParenthesisKeyword_4_1());
                    			
                    // InternalQualityBtCppParser.g:2011:4: ( ( ruleEString ) )
                    // InternalQualityBtCppParser.g:2012:5: ( ruleEString )
                    {
                    // InternalQualityBtCppParser.g:2012:5: ( ruleEString )
                    // InternalQualityBtCppParser.g:2013:6: ruleEString
                    {

                    						if (current==null) {
                    							current = createModelElement(grammarAccess.getIfThenElseNodeRule());
                    						}
                    					

                    						newCompositeNode(grammarAccess.getIfThenElseNodeAccess().getSatisficesQualityCrossReference_4_2_0());
                    					
                    pushFollow(FOLLOW_20);
                    ruleEString();

                    state._fsp--;


                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:2027:4: (otherlv_8= Comma ( ( ruleEString ) ) )*
                    loop45:
                    do {
                        int alt45=2;
                        int LA45_0 = input.LA(1);

                        if ( (LA45_0==Comma) ) {
                            alt45=1;
                        }


                        switch (alt45) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:2028:5: otherlv_8= Comma ( ( ruleEString ) )
                    	    {
                    	    otherlv_8=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_8, grammarAccess.getIfThenElseNodeAccess().getCommaKeyword_4_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:2032:5: ( ( ruleEString ) )
                    	    // InternalQualityBtCppParser.g:2033:6: ( ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:2033:6: ( ruleEString )
                    	    // InternalQualityBtCppParser.g:2034:7: ruleEString
                    	    {

                    	    							if (current==null) {
                    	    								current = createModelElement(grammarAccess.getIfThenElseNodeRule());
                    	    							}
                    	    						

                    	    							newCompositeNode(grammarAccess.getIfThenElseNodeAccess().getSatisficesQualityCrossReference_4_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_20);
                    	    ruleEString();

                    	    state._fsp--;


                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop45;
                        }
                    } while (true);

                    otherlv_10=(Token)match(input,RightParenthesis,FOLLOW_33); 

                    				newLeafNode(otherlv_10, grammarAccess.getIfThenElseNodeAccess().getRightParenthesisKeyword_4_4());
                    			

                    }
                    break;

            }

            // InternalQualityBtCppParser.g:2054:3: (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )?
            int alt48=2;
            int LA48_0 = input.LA(1);

            if ( (LA48_0==Satisfies) ) {
                alt48=1;
            }
            switch (alt48) {
                case 1 :
                    // InternalQualityBtCppParser.g:2055:4: otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis
                    {
                    otherlv_11=(Token)match(input,Satisfies,FOLLOW_26); 

                    				newLeafNode(otherlv_11, grammarAccess.getIfThenElseNodeAccess().getSatisfiesKeyword_5_0());
                    			
                    otherlv_12=(Token)match(input,LeftParenthesis,FOLLOW_3); 

                    				newLeafNode(otherlv_12, grammarAccess.getIfThenElseNodeAccess().getLeftParenthesisKeyword_5_1());
                    			
                    // InternalQualityBtCppParser.g:2063:4: ( ( ruleEString ) )
                    // InternalQualityBtCppParser.g:2064:5: ( ruleEString )
                    {
                    // InternalQualityBtCppParser.g:2064:5: ( ruleEString )
                    // InternalQualityBtCppParser.g:2065:6: ruleEString
                    {

                    						if (current==null) {
                    							current = createModelElement(grammarAccess.getIfThenElseNodeRule());
                    						}
                    					

                    						newCompositeNode(grammarAccess.getIfThenElseNodeAccess().getSatisfiesQualityRequirementCrossReference_5_2_0());
                    					
                    pushFollow(FOLLOW_20);
                    ruleEString();

                    state._fsp--;


                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:2079:4: (otherlv_14= Comma ( ( ruleEString ) ) )*
                    loop47:
                    do {
                        int alt47=2;
                        int LA47_0 = input.LA(1);

                        if ( (LA47_0==Comma) ) {
                            alt47=1;
                        }


                        switch (alt47) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:2080:5: otherlv_14= Comma ( ( ruleEString ) )
                    	    {
                    	    otherlv_14=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_14, grammarAccess.getIfThenElseNodeAccess().getCommaKeyword_5_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:2084:5: ( ( ruleEString ) )
                    	    // InternalQualityBtCppParser.g:2085:6: ( ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:2085:6: ( ruleEString )
                    	    // InternalQualityBtCppParser.g:2086:7: ruleEString
                    	    {

                    	    							if (current==null) {
                    	    								current = createModelElement(grammarAccess.getIfThenElseNodeRule());
                    	    							}
                    	    						

                    	    							newCompositeNode(grammarAccess.getIfThenElseNodeAccess().getSatisfiesQualityRequirementCrossReference_5_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_20);
                    	    ruleEString();

                    	    state._fsp--;


                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop47;
                        }
                    } while (true);

                    otherlv_16=(Token)match(input,RightParenthesis,FOLLOW_34); 

                    				newLeafNode(otherlv_16, grammarAccess.getIfThenElseNodeAccess().getRightParenthesisKeyword_5_4());
                    			

                    }
                    break;

            }

            // InternalQualityBtCppParser.g:2106:3: (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )?
            int alt50=2;
            int LA50_0 = input.LA(1);

            if ( (LA50_0==Parameters) ) {
                alt50=1;
            }
            switch (alt50) {
                case 1 :
                    // InternalQualityBtCppParser.g:2107:4: otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket
                    {
                    otherlv_17=(Token)match(input,Parameters,FOLLOW_21); 

                    				newLeafNode(otherlv_17, grammarAccess.getIfThenElseNodeAccess().getParametersKeyword_6_0());
                    			
                    otherlv_18=(Token)match(input,LeftCurlyBracket,FOLLOW_3); 

                    				newLeafNode(otherlv_18, grammarAccess.getIfThenElseNodeAccess().getLeftCurlyBracketKeyword_6_1());
                    			
                    // InternalQualityBtCppParser.g:2115:4: ( (lv_parameters_19_0= ruleParameter ) )
                    // InternalQualityBtCppParser.g:2116:5: (lv_parameters_19_0= ruleParameter )
                    {
                    // InternalQualityBtCppParser.g:2116:5: (lv_parameters_19_0= ruleParameter )
                    // InternalQualityBtCppParser.g:2117:6: lv_parameters_19_0= ruleParameter
                    {

                    						newCompositeNode(grammarAccess.getIfThenElseNodeAccess().getParametersParameterParserRuleCall_6_2_0());
                    					
                    pushFollow(FOLLOW_29);
                    lv_parameters_19_0=ruleParameter();

                    state._fsp--;


                    						if (current==null) {
                    							current = createModelElementForParent(grammarAccess.getIfThenElseNodeRule());
                    						}
                    						add(
                    							current,
                    							"parameters",
                    							lv_parameters_19_0,
                    							"org.xtext.btcpp.QualityBtCpp.Parameter");
                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:2134:4: (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )*
                    loop49:
                    do {
                        int alt49=2;
                        int LA49_0 = input.LA(1);

                        if ( (LA49_0==Comma) ) {
                            alt49=1;
                        }


                        switch (alt49) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:2135:5: otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) )
                    	    {
                    	    otherlv_20=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_20, grammarAccess.getIfThenElseNodeAccess().getCommaKeyword_6_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:2139:5: ( (lv_parameters_21_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:2140:6: (lv_parameters_21_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:2140:6: (lv_parameters_21_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:2141:7: lv_parameters_21_0= ruleParameter
                    	    {

                    	    							newCompositeNode(grammarAccess.getIfThenElseNodeAccess().getParametersParameterParserRuleCall_6_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_29);
                    	    lv_parameters_21_0=ruleParameter();

                    	    state._fsp--;


                    	    							if (current==null) {
                    	    								current = createModelElementForParent(grammarAccess.getIfThenElseNodeRule());
                    	    							}
                    	    							add(
                    	    								current,
                    	    								"parameters",
                    	    								lv_parameters_21_0,
                    	    								"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop49;
                        }
                    } while (true);

                    otherlv_22=(Token)match(input,RightCurlyBracket,FOLLOW_35); 

                    				newLeafNode(otherlv_22, grammarAccess.getIfThenElseNodeAccess().getRightCurlyBracketKeyword_6_4());
                    			

                    }
                    break;

            }

            otherlv_23=(Token)match(input,Child,FOLLOW_21); 

            			newLeafNode(otherlv_23, grammarAccess.getIfThenElseNodeAccess().getChildKeyword_7());
            		
            otherlv_24=(Token)match(input,LeftCurlyBracket,FOLLOW_9); 

            			newLeafNode(otherlv_24, grammarAccess.getIfThenElseNodeAccess().getLeftCurlyBracketKeyword_8());
            		
            // InternalQualityBtCppParser.g:2172:3: ( (lv_child_25_0= ruleTreeNode ) )
            // InternalQualityBtCppParser.g:2173:4: (lv_child_25_0= ruleTreeNode )
            {
            // InternalQualityBtCppParser.g:2173:4: (lv_child_25_0= ruleTreeNode )
            // InternalQualityBtCppParser.g:2174:5: lv_child_25_0= ruleTreeNode
            {

            					newCompositeNode(grammarAccess.getIfThenElseNodeAccess().getChildTreeNodeParserRuleCall_9_0());
            				
            pushFollow(FOLLOW_29);
            lv_child_25_0=ruleTreeNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getIfThenElseNodeRule());
            					}
            					add(
            						current,
            						"child",
            						lv_child_25_0,
            						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            // InternalQualityBtCppParser.g:2191:3: (otherlv_26= Comma ( (lv_child_27_0= ruleTreeNode ) ) )*
            loop51:
            do {
                int alt51=2;
                int LA51_0 = input.LA(1);

                if ( (LA51_0==Comma) ) {
                    alt51=1;
                }


                switch (alt51) {
            	case 1 :
            	    // InternalQualityBtCppParser.g:2192:4: otherlv_26= Comma ( (lv_child_27_0= ruleTreeNode ) )
            	    {
            	    otherlv_26=(Token)match(input,Comma,FOLLOW_9); 

            	    				newLeafNode(otherlv_26, grammarAccess.getIfThenElseNodeAccess().getCommaKeyword_10_0());
            	    			
            	    // InternalQualityBtCppParser.g:2196:4: ( (lv_child_27_0= ruleTreeNode ) )
            	    // InternalQualityBtCppParser.g:2197:5: (lv_child_27_0= ruleTreeNode )
            	    {
            	    // InternalQualityBtCppParser.g:2197:5: (lv_child_27_0= ruleTreeNode )
            	    // InternalQualityBtCppParser.g:2198:6: lv_child_27_0= ruleTreeNode
            	    {

            	    						newCompositeNode(grammarAccess.getIfThenElseNodeAccess().getChildTreeNodeParserRuleCall_10_1_0());
            	    					
            	    pushFollow(FOLLOW_29);
            	    lv_child_27_0=ruleTreeNode();

            	    state._fsp--;


            	    						if (current==null) {
            	    							current = createModelElementForParent(grammarAccess.getIfThenElseNodeRule());
            	    						}
            	    						add(
            	    							current,
            	    							"child",
            	    							lv_child_27_0,
            	    							"org.xtext.btcpp.QualityBtCpp.TreeNode");
            	    						afterParserOrEnumRuleCall();
            	    					

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop51;
                }
            } while (true);

            otherlv_28=(Token)match(input,RightCurlyBracket,FOLLOW_30); 

            			newLeafNode(otherlv_28, grammarAccess.getIfThenElseNodeAccess().getRightCurlyBracketKeyword_11());
            		
            otherlv_29=(Token)match(input,RightCurlyBracket,FOLLOW_2); 

            			newLeafNode(otherlv_29, grammarAccess.getIfThenElseNodeAccess().getRightCurlyBracketKeyword_12());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIfThenElseNode"


    // $ANTLR start "entryRuleManualSelectorNode"
    // InternalQualityBtCppParser.g:2228:1: entryRuleManualSelectorNode returns [EObject current=null] : iv_ruleManualSelectorNode= ruleManualSelectorNode EOF ;
    public final EObject entryRuleManualSelectorNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleManualSelectorNode = null;


        try {
            // InternalQualityBtCppParser.g:2228:59: (iv_ruleManualSelectorNode= ruleManualSelectorNode EOF )
            // InternalQualityBtCppParser.g:2229:2: iv_ruleManualSelectorNode= ruleManualSelectorNode EOF
            {
             newCompositeNode(grammarAccess.getManualSelectorNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleManualSelectorNode=ruleManualSelectorNode();

            state._fsp--;

             current =iv_ruleManualSelectorNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleManualSelectorNode"


    // $ANTLR start "ruleManualSelectorNode"
    // InternalQualityBtCppParser.g:2235:1: ruleManualSelectorNode returns [EObject current=null] : (otherlv_0= ManualSelectorNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )? (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )? (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )? otherlv_23= Child otherlv_24= LeftCurlyBracket ( (lv_child_25_0= ruleTreeNode ) ) (otherlv_26= Comma ( (lv_child_27_0= ruleTreeNode ) ) )* otherlv_28= RightCurlyBracket otherlv_29= RightCurlyBracket ) ;
    public final EObject ruleManualSelectorNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_17=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        Token otherlv_23=null;
        Token otherlv_24=null;
        Token otherlv_26=null;
        Token otherlv_28=null;
        Token otherlv_29=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_ID_4_0 = null;

        EObject lv_parameters_19_0 = null;

        EObject lv_parameters_21_0 = null;

        EObject lv_child_25_0 = null;

        EObject lv_child_27_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:2241:2: ( (otherlv_0= ManualSelectorNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )? (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )? (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )? otherlv_23= Child otherlv_24= LeftCurlyBracket ( (lv_child_25_0= ruleTreeNode ) ) (otherlv_26= Comma ( (lv_child_27_0= ruleTreeNode ) ) )* otherlv_28= RightCurlyBracket otherlv_29= RightCurlyBracket ) )
            // InternalQualityBtCppParser.g:2242:2: (otherlv_0= ManualSelectorNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )? (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )? (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )? otherlv_23= Child otherlv_24= LeftCurlyBracket ( (lv_child_25_0= ruleTreeNode ) ) (otherlv_26= Comma ( (lv_child_27_0= ruleTreeNode ) ) )* otherlv_28= RightCurlyBracket otherlv_29= RightCurlyBracket )
            {
            // InternalQualityBtCppParser.g:2242:2: (otherlv_0= ManualSelectorNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )? (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )? (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )? otherlv_23= Child otherlv_24= LeftCurlyBracket ( (lv_child_25_0= ruleTreeNode ) ) (otherlv_26= Comma ( (lv_child_27_0= ruleTreeNode ) ) )* otherlv_28= RightCurlyBracket otherlv_29= RightCurlyBracket )
            // InternalQualityBtCppParser.g:2243:3: otherlv_0= ManualSelectorNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )? (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )? (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )? otherlv_23= Child otherlv_24= LeftCurlyBracket ( (lv_child_25_0= ruleTreeNode ) ) (otherlv_26= Comma ( (lv_child_27_0= ruleTreeNode ) ) )* otherlv_28= RightCurlyBracket otherlv_29= RightCurlyBracket
            {
            otherlv_0=(Token)match(input,ManualSelectorNode,FOLLOW_3); 

            			newLeafNode(otherlv_0, grammarAccess.getManualSelectorNodeAccess().getManualSelectorNodeKeyword_0());
            		
            // InternalQualityBtCppParser.g:2247:3: ( (lv_name_1_0= ruleEString ) )
            // InternalQualityBtCppParser.g:2248:4: (lv_name_1_0= ruleEString )
            {
            // InternalQualityBtCppParser.g:2248:4: (lv_name_1_0= ruleEString )
            // InternalQualityBtCppParser.g:2249:5: lv_name_1_0= ruleEString
            {

            					newCompositeNode(grammarAccess.getManualSelectorNodeAccess().getNameEStringParserRuleCall_1_0());
            				
            pushFollow(FOLLOW_21);
            lv_name_1_0=ruleEString();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getManualSelectorNodeRule());
            					}
            					set(
            						current,
            						"name",
            						lv_name_1_0,
            						"org.xtext.btcpp.QualityBtCpp.EString");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            otherlv_2=(Token)match(input,LeftCurlyBracket,FOLLOW_31); 

            			newLeafNode(otherlv_2, grammarAccess.getManualSelectorNodeAccess().getLeftCurlyBracketKeyword_2());
            		
            // InternalQualityBtCppParser.g:2270:3: (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )?
            int alt52=2;
            int LA52_0 = input.LA(1);

            if ( (LA52_0==ID) ) {
                alt52=1;
            }
            switch (alt52) {
                case 1 :
                    // InternalQualityBtCppParser.g:2271:4: otherlv_3= ID ( (lv_ID_4_0= ruleEString ) )
                    {
                    otherlv_3=(Token)match(input,ID,FOLLOW_3); 

                    				newLeafNode(otherlv_3, grammarAccess.getManualSelectorNodeAccess().getIDKeyword_3_0());
                    			
                    // InternalQualityBtCppParser.g:2275:4: ( (lv_ID_4_0= ruleEString ) )
                    // InternalQualityBtCppParser.g:2276:5: (lv_ID_4_0= ruleEString )
                    {
                    // InternalQualityBtCppParser.g:2276:5: (lv_ID_4_0= ruleEString )
                    // InternalQualityBtCppParser.g:2277:6: lv_ID_4_0= ruleEString
                    {

                    						newCompositeNode(grammarAccess.getManualSelectorNodeAccess().getIDEStringParserRuleCall_3_1_0());
                    					
                    pushFollow(FOLLOW_32);
                    lv_ID_4_0=ruleEString();

                    state._fsp--;


                    						if (current==null) {
                    							current = createModelElementForParent(grammarAccess.getManualSelectorNodeRule());
                    						}
                    						set(
                    							current,
                    							"ID",
                    							lv_ID_4_0,
                    							"org.xtext.btcpp.QualityBtCpp.EString");
                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }


                    }
                    break;

            }

            // InternalQualityBtCppParser.g:2295:3: (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )?
            int alt54=2;
            int LA54_0 = input.LA(1);

            if ( (LA54_0==Satisfices) ) {
                alt54=1;
            }
            switch (alt54) {
                case 1 :
                    // InternalQualityBtCppParser.g:2296:4: otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis
                    {
                    otherlv_5=(Token)match(input,Satisfices,FOLLOW_26); 

                    				newLeafNode(otherlv_5, grammarAccess.getManualSelectorNodeAccess().getSatisficesKeyword_4_0());
                    			
                    otherlv_6=(Token)match(input,LeftParenthesis,FOLLOW_3); 

                    				newLeafNode(otherlv_6, grammarAccess.getManualSelectorNodeAccess().getLeftParenthesisKeyword_4_1());
                    			
                    // InternalQualityBtCppParser.g:2304:4: ( ( ruleEString ) )
                    // InternalQualityBtCppParser.g:2305:5: ( ruleEString )
                    {
                    // InternalQualityBtCppParser.g:2305:5: ( ruleEString )
                    // InternalQualityBtCppParser.g:2306:6: ruleEString
                    {

                    						if (current==null) {
                    							current = createModelElement(grammarAccess.getManualSelectorNodeRule());
                    						}
                    					

                    						newCompositeNode(grammarAccess.getManualSelectorNodeAccess().getSatisficesQualityCrossReference_4_2_0());
                    					
                    pushFollow(FOLLOW_20);
                    ruleEString();

                    state._fsp--;


                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:2320:4: (otherlv_8= Comma ( ( ruleEString ) ) )*
                    loop53:
                    do {
                        int alt53=2;
                        int LA53_0 = input.LA(1);

                        if ( (LA53_0==Comma) ) {
                            alt53=1;
                        }


                        switch (alt53) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:2321:5: otherlv_8= Comma ( ( ruleEString ) )
                    	    {
                    	    otherlv_8=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_8, grammarAccess.getManualSelectorNodeAccess().getCommaKeyword_4_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:2325:5: ( ( ruleEString ) )
                    	    // InternalQualityBtCppParser.g:2326:6: ( ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:2326:6: ( ruleEString )
                    	    // InternalQualityBtCppParser.g:2327:7: ruleEString
                    	    {

                    	    							if (current==null) {
                    	    								current = createModelElement(grammarAccess.getManualSelectorNodeRule());
                    	    							}
                    	    						

                    	    							newCompositeNode(grammarAccess.getManualSelectorNodeAccess().getSatisficesQualityCrossReference_4_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_20);
                    	    ruleEString();

                    	    state._fsp--;


                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop53;
                        }
                    } while (true);

                    otherlv_10=(Token)match(input,RightParenthesis,FOLLOW_33); 

                    				newLeafNode(otherlv_10, grammarAccess.getManualSelectorNodeAccess().getRightParenthesisKeyword_4_4());
                    			

                    }
                    break;

            }

            // InternalQualityBtCppParser.g:2347:3: (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )?
            int alt56=2;
            int LA56_0 = input.LA(1);

            if ( (LA56_0==Satisfies) ) {
                alt56=1;
            }
            switch (alt56) {
                case 1 :
                    // InternalQualityBtCppParser.g:2348:4: otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis
                    {
                    otherlv_11=(Token)match(input,Satisfies,FOLLOW_26); 

                    				newLeafNode(otherlv_11, grammarAccess.getManualSelectorNodeAccess().getSatisfiesKeyword_5_0());
                    			
                    otherlv_12=(Token)match(input,LeftParenthesis,FOLLOW_3); 

                    				newLeafNode(otherlv_12, grammarAccess.getManualSelectorNodeAccess().getLeftParenthesisKeyword_5_1());
                    			
                    // InternalQualityBtCppParser.g:2356:4: ( ( ruleEString ) )
                    // InternalQualityBtCppParser.g:2357:5: ( ruleEString )
                    {
                    // InternalQualityBtCppParser.g:2357:5: ( ruleEString )
                    // InternalQualityBtCppParser.g:2358:6: ruleEString
                    {

                    						if (current==null) {
                    							current = createModelElement(grammarAccess.getManualSelectorNodeRule());
                    						}
                    					

                    						newCompositeNode(grammarAccess.getManualSelectorNodeAccess().getSatisfiesQualityRequirementCrossReference_5_2_0());
                    					
                    pushFollow(FOLLOW_20);
                    ruleEString();

                    state._fsp--;


                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:2372:4: (otherlv_14= Comma ( ( ruleEString ) ) )*
                    loop55:
                    do {
                        int alt55=2;
                        int LA55_0 = input.LA(1);

                        if ( (LA55_0==Comma) ) {
                            alt55=1;
                        }


                        switch (alt55) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:2373:5: otherlv_14= Comma ( ( ruleEString ) )
                    	    {
                    	    otherlv_14=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_14, grammarAccess.getManualSelectorNodeAccess().getCommaKeyword_5_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:2377:5: ( ( ruleEString ) )
                    	    // InternalQualityBtCppParser.g:2378:6: ( ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:2378:6: ( ruleEString )
                    	    // InternalQualityBtCppParser.g:2379:7: ruleEString
                    	    {

                    	    							if (current==null) {
                    	    								current = createModelElement(grammarAccess.getManualSelectorNodeRule());
                    	    							}
                    	    						

                    	    							newCompositeNode(grammarAccess.getManualSelectorNodeAccess().getSatisfiesQualityRequirementCrossReference_5_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_20);
                    	    ruleEString();

                    	    state._fsp--;


                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop55;
                        }
                    } while (true);

                    otherlv_16=(Token)match(input,RightParenthesis,FOLLOW_34); 

                    				newLeafNode(otherlv_16, grammarAccess.getManualSelectorNodeAccess().getRightParenthesisKeyword_5_4());
                    			

                    }
                    break;

            }

            // InternalQualityBtCppParser.g:2399:3: (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )?
            int alt58=2;
            int LA58_0 = input.LA(1);

            if ( (LA58_0==Parameters) ) {
                alt58=1;
            }
            switch (alt58) {
                case 1 :
                    // InternalQualityBtCppParser.g:2400:4: otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket
                    {
                    otherlv_17=(Token)match(input,Parameters,FOLLOW_21); 

                    				newLeafNode(otherlv_17, grammarAccess.getManualSelectorNodeAccess().getParametersKeyword_6_0());
                    			
                    otherlv_18=(Token)match(input,LeftCurlyBracket,FOLLOW_3); 

                    				newLeafNode(otherlv_18, grammarAccess.getManualSelectorNodeAccess().getLeftCurlyBracketKeyword_6_1());
                    			
                    // InternalQualityBtCppParser.g:2408:4: ( (lv_parameters_19_0= ruleParameter ) )
                    // InternalQualityBtCppParser.g:2409:5: (lv_parameters_19_0= ruleParameter )
                    {
                    // InternalQualityBtCppParser.g:2409:5: (lv_parameters_19_0= ruleParameter )
                    // InternalQualityBtCppParser.g:2410:6: lv_parameters_19_0= ruleParameter
                    {

                    						newCompositeNode(grammarAccess.getManualSelectorNodeAccess().getParametersParameterParserRuleCall_6_2_0());
                    					
                    pushFollow(FOLLOW_29);
                    lv_parameters_19_0=ruleParameter();

                    state._fsp--;


                    						if (current==null) {
                    							current = createModelElementForParent(grammarAccess.getManualSelectorNodeRule());
                    						}
                    						add(
                    							current,
                    							"parameters",
                    							lv_parameters_19_0,
                    							"org.xtext.btcpp.QualityBtCpp.Parameter");
                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:2427:4: (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )*
                    loop57:
                    do {
                        int alt57=2;
                        int LA57_0 = input.LA(1);

                        if ( (LA57_0==Comma) ) {
                            alt57=1;
                        }


                        switch (alt57) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:2428:5: otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) )
                    	    {
                    	    otherlv_20=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_20, grammarAccess.getManualSelectorNodeAccess().getCommaKeyword_6_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:2432:5: ( (lv_parameters_21_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:2433:6: (lv_parameters_21_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:2433:6: (lv_parameters_21_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:2434:7: lv_parameters_21_0= ruleParameter
                    	    {

                    	    							newCompositeNode(grammarAccess.getManualSelectorNodeAccess().getParametersParameterParserRuleCall_6_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_29);
                    	    lv_parameters_21_0=ruleParameter();

                    	    state._fsp--;


                    	    							if (current==null) {
                    	    								current = createModelElementForParent(grammarAccess.getManualSelectorNodeRule());
                    	    							}
                    	    							add(
                    	    								current,
                    	    								"parameters",
                    	    								lv_parameters_21_0,
                    	    								"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop57;
                        }
                    } while (true);

                    otherlv_22=(Token)match(input,RightCurlyBracket,FOLLOW_35); 

                    				newLeafNode(otherlv_22, grammarAccess.getManualSelectorNodeAccess().getRightCurlyBracketKeyword_6_4());
                    			

                    }
                    break;

            }

            otherlv_23=(Token)match(input,Child,FOLLOW_21); 

            			newLeafNode(otherlv_23, grammarAccess.getManualSelectorNodeAccess().getChildKeyword_7());
            		
            otherlv_24=(Token)match(input,LeftCurlyBracket,FOLLOW_9); 

            			newLeafNode(otherlv_24, grammarAccess.getManualSelectorNodeAccess().getLeftCurlyBracketKeyword_8());
            		
            // InternalQualityBtCppParser.g:2465:3: ( (lv_child_25_0= ruleTreeNode ) )
            // InternalQualityBtCppParser.g:2466:4: (lv_child_25_0= ruleTreeNode )
            {
            // InternalQualityBtCppParser.g:2466:4: (lv_child_25_0= ruleTreeNode )
            // InternalQualityBtCppParser.g:2467:5: lv_child_25_0= ruleTreeNode
            {

            					newCompositeNode(grammarAccess.getManualSelectorNodeAccess().getChildTreeNodeParserRuleCall_9_0());
            				
            pushFollow(FOLLOW_29);
            lv_child_25_0=ruleTreeNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getManualSelectorNodeRule());
            					}
            					add(
            						current,
            						"child",
            						lv_child_25_0,
            						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            // InternalQualityBtCppParser.g:2484:3: (otherlv_26= Comma ( (lv_child_27_0= ruleTreeNode ) ) )*
            loop59:
            do {
                int alt59=2;
                int LA59_0 = input.LA(1);

                if ( (LA59_0==Comma) ) {
                    alt59=1;
                }


                switch (alt59) {
            	case 1 :
            	    // InternalQualityBtCppParser.g:2485:4: otherlv_26= Comma ( (lv_child_27_0= ruleTreeNode ) )
            	    {
            	    otherlv_26=(Token)match(input,Comma,FOLLOW_9); 

            	    				newLeafNode(otherlv_26, grammarAccess.getManualSelectorNodeAccess().getCommaKeyword_10_0());
            	    			
            	    // InternalQualityBtCppParser.g:2489:4: ( (lv_child_27_0= ruleTreeNode ) )
            	    // InternalQualityBtCppParser.g:2490:5: (lv_child_27_0= ruleTreeNode )
            	    {
            	    // InternalQualityBtCppParser.g:2490:5: (lv_child_27_0= ruleTreeNode )
            	    // InternalQualityBtCppParser.g:2491:6: lv_child_27_0= ruleTreeNode
            	    {

            	    						newCompositeNode(grammarAccess.getManualSelectorNodeAccess().getChildTreeNodeParserRuleCall_10_1_0());
            	    					
            	    pushFollow(FOLLOW_29);
            	    lv_child_27_0=ruleTreeNode();

            	    state._fsp--;


            	    						if (current==null) {
            	    							current = createModelElementForParent(grammarAccess.getManualSelectorNodeRule());
            	    						}
            	    						add(
            	    							current,
            	    							"child",
            	    							lv_child_27_0,
            	    							"org.xtext.btcpp.QualityBtCpp.TreeNode");
            	    						afterParserOrEnumRuleCall();
            	    					

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop59;
                }
            } while (true);

            otherlv_28=(Token)match(input,RightCurlyBracket,FOLLOW_30); 

            			newLeafNode(otherlv_28, grammarAccess.getManualSelectorNodeAccess().getRightCurlyBracketKeyword_11());
            		
            otherlv_29=(Token)match(input,RightCurlyBracket,FOLLOW_2); 

            			newLeafNode(otherlv_29, grammarAccess.getManualSelectorNodeAccess().getRightCurlyBracketKeyword_12());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleManualSelectorNode"


    // $ANTLR start "entryRuleParallelNode"
    // InternalQualityBtCppParser.g:2521:1: entryRuleParallelNode returns [EObject current=null] : iv_ruleParallelNode= ruleParallelNode EOF ;
    public final EObject entryRuleParallelNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParallelNode = null;


        try {
            // InternalQualityBtCppParser.g:2521:53: (iv_ruleParallelNode= ruleParallelNode EOF )
            // InternalQualityBtCppParser.g:2522:2: iv_ruleParallelNode= ruleParallelNode EOF
            {
             newCompositeNode(grammarAccess.getParallelNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleParallelNode=ruleParallelNode();

            state._fsp--;

             current =iv_ruleParallelNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleParallelNode"


    // $ANTLR start "ruleParallelNode"
    // InternalQualityBtCppParser.g:2528:1: ruleParallelNode returns [EObject current=null] : (otherlv_0= ParallelNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )? (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )? (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )? otherlv_23= Child otherlv_24= LeftCurlyBracket ( (lv_child_25_0= ruleTreeNode ) ) (otherlv_26= Comma ( (lv_child_27_0= ruleTreeNode ) ) )* otherlv_28= RightCurlyBracket otherlv_29= RightCurlyBracket ) ;
    public final EObject ruleParallelNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_17=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        Token otherlv_23=null;
        Token otherlv_24=null;
        Token otherlv_26=null;
        Token otherlv_28=null;
        Token otherlv_29=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_ID_4_0 = null;

        EObject lv_parameters_19_0 = null;

        EObject lv_parameters_21_0 = null;

        EObject lv_child_25_0 = null;

        EObject lv_child_27_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:2534:2: ( (otherlv_0= ParallelNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )? (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )? (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )? otherlv_23= Child otherlv_24= LeftCurlyBracket ( (lv_child_25_0= ruleTreeNode ) ) (otherlv_26= Comma ( (lv_child_27_0= ruleTreeNode ) ) )* otherlv_28= RightCurlyBracket otherlv_29= RightCurlyBracket ) )
            // InternalQualityBtCppParser.g:2535:2: (otherlv_0= ParallelNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )? (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )? (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )? otherlv_23= Child otherlv_24= LeftCurlyBracket ( (lv_child_25_0= ruleTreeNode ) ) (otherlv_26= Comma ( (lv_child_27_0= ruleTreeNode ) ) )* otherlv_28= RightCurlyBracket otherlv_29= RightCurlyBracket )
            {
            // InternalQualityBtCppParser.g:2535:2: (otherlv_0= ParallelNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )? (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )? (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )? otherlv_23= Child otherlv_24= LeftCurlyBracket ( (lv_child_25_0= ruleTreeNode ) ) (otherlv_26= Comma ( (lv_child_27_0= ruleTreeNode ) ) )* otherlv_28= RightCurlyBracket otherlv_29= RightCurlyBracket )
            // InternalQualityBtCppParser.g:2536:3: otherlv_0= ParallelNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )? (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )? (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )? otherlv_23= Child otherlv_24= LeftCurlyBracket ( (lv_child_25_0= ruleTreeNode ) ) (otherlv_26= Comma ( (lv_child_27_0= ruleTreeNode ) ) )* otherlv_28= RightCurlyBracket otherlv_29= RightCurlyBracket
            {
            otherlv_0=(Token)match(input,ParallelNode,FOLLOW_3); 

            			newLeafNode(otherlv_0, grammarAccess.getParallelNodeAccess().getParallelNodeKeyword_0());
            		
            // InternalQualityBtCppParser.g:2540:3: ( (lv_name_1_0= ruleEString ) )
            // InternalQualityBtCppParser.g:2541:4: (lv_name_1_0= ruleEString )
            {
            // InternalQualityBtCppParser.g:2541:4: (lv_name_1_0= ruleEString )
            // InternalQualityBtCppParser.g:2542:5: lv_name_1_0= ruleEString
            {

            					newCompositeNode(grammarAccess.getParallelNodeAccess().getNameEStringParserRuleCall_1_0());
            				
            pushFollow(FOLLOW_21);
            lv_name_1_0=ruleEString();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getParallelNodeRule());
            					}
            					set(
            						current,
            						"name",
            						lv_name_1_0,
            						"org.xtext.btcpp.QualityBtCpp.EString");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            otherlv_2=(Token)match(input,LeftCurlyBracket,FOLLOW_31); 

            			newLeafNode(otherlv_2, grammarAccess.getParallelNodeAccess().getLeftCurlyBracketKeyword_2());
            		
            // InternalQualityBtCppParser.g:2563:3: (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )?
            int alt60=2;
            int LA60_0 = input.LA(1);

            if ( (LA60_0==ID) ) {
                alt60=1;
            }
            switch (alt60) {
                case 1 :
                    // InternalQualityBtCppParser.g:2564:4: otherlv_3= ID ( (lv_ID_4_0= ruleEString ) )
                    {
                    otherlv_3=(Token)match(input,ID,FOLLOW_3); 

                    				newLeafNode(otherlv_3, grammarAccess.getParallelNodeAccess().getIDKeyword_3_0());
                    			
                    // InternalQualityBtCppParser.g:2568:4: ( (lv_ID_4_0= ruleEString ) )
                    // InternalQualityBtCppParser.g:2569:5: (lv_ID_4_0= ruleEString )
                    {
                    // InternalQualityBtCppParser.g:2569:5: (lv_ID_4_0= ruleEString )
                    // InternalQualityBtCppParser.g:2570:6: lv_ID_4_0= ruleEString
                    {

                    						newCompositeNode(grammarAccess.getParallelNodeAccess().getIDEStringParserRuleCall_3_1_0());
                    					
                    pushFollow(FOLLOW_32);
                    lv_ID_4_0=ruleEString();

                    state._fsp--;


                    						if (current==null) {
                    							current = createModelElementForParent(grammarAccess.getParallelNodeRule());
                    						}
                    						set(
                    							current,
                    							"ID",
                    							lv_ID_4_0,
                    							"org.xtext.btcpp.QualityBtCpp.EString");
                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }


                    }
                    break;

            }

            // InternalQualityBtCppParser.g:2588:3: (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )?
            int alt62=2;
            int LA62_0 = input.LA(1);

            if ( (LA62_0==Satisfices) ) {
                alt62=1;
            }
            switch (alt62) {
                case 1 :
                    // InternalQualityBtCppParser.g:2589:4: otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis
                    {
                    otherlv_5=(Token)match(input,Satisfices,FOLLOW_26); 

                    				newLeafNode(otherlv_5, grammarAccess.getParallelNodeAccess().getSatisficesKeyword_4_0());
                    			
                    otherlv_6=(Token)match(input,LeftParenthesis,FOLLOW_3); 

                    				newLeafNode(otherlv_6, grammarAccess.getParallelNodeAccess().getLeftParenthesisKeyword_4_1());
                    			
                    // InternalQualityBtCppParser.g:2597:4: ( ( ruleEString ) )
                    // InternalQualityBtCppParser.g:2598:5: ( ruleEString )
                    {
                    // InternalQualityBtCppParser.g:2598:5: ( ruleEString )
                    // InternalQualityBtCppParser.g:2599:6: ruleEString
                    {

                    						if (current==null) {
                    							current = createModelElement(grammarAccess.getParallelNodeRule());
                    						}
                    					

                    						newCompositeNode(grammarAccess.getParallelNodeAccess().getSatisficesQualityCrossReference_4_2_0());
                    					
                    pushFollow(FOLLOW_20);
                    ruleEString();

                    state._fsp--;


                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:2613:4: (otherlv_8= Comma ( ( ruleEString ) ) )*
                    loop61:
                    do {
                        int alt61=2;
                        int LA61_0 = input.LA(1);

                        if ( (LA61_0==Comma) ) {
                            alt61=1;
                        }


                        switch (alt61) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:2614:5: otherlv_8= Comma ( ( ruleEString ) )
                    	    {
                    	    otherlv_8=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_8, grammarAccess.getParallelNodeAccess().getCommaKeyword_4_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:2618:5: ( ( ruleEString ) )
                    	    // InternalQualityBtCppParser.g:2619:6: ( ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:2619:6: ( ruleEString )
                    	    // InternalQualityBtCppParser.g:2620:7: ruleEString
                    	    {

                    	    							if (current==null) {
                    	    								current = createModelElement(grammarAccess.getParallelNodeRule());
                    	    							}
                    	    						

                    	    							newCompositeNode(grammarAccess.getParallelNodeAccess().getSatisficesQualityCrossReference_4_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_20);
                    	    ruleEString();

                    	    state._fsp--;


                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop61;
                        }
                    } while (true);

                    otherlv_10=(Token)match(input,RightParenthesis,FOLLOW_33); 

                    				newLeafNode(otherlv_10, grammarAccess.getParallelNodeAccess().getRightParenthesisKeyword_4_4());
                    			

                    }
                    break;

            }

            // InternalQualityBtCppParser.g:2640:3: (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )?
            int alt64=2;
            int LA64_0 = input.LA(1);

            if ( (LA64_0==Satisfies) ) {
                alt64=1;
            }
            switch (alt64) {
                case 1 :
                    // InternalQualityBtCppParser.g:2641:4: otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis
                    {
                    otherlv_11=(Token)match(input,Satisfies,FOLLOW_26); 

                    				newLeafNode(otherlv_11, grammarAccess.getParallelNodeAccess().getSatisfiesKeyword_5_0());
                    			
                    otherlv_12=(Token)match(input,LeftParenthesis,FOLLOW_3); 

                    				newLeafNode(otherlv_12, grammarAccess.getParallelNodeAccess().getLeftParenthesisKeyword_5_1());
                    			
                    // InternalQualityBtCppParser.g:2649:4: ( ( ruleEString ) )
                    // InternalQualityBtCppParser.g:2650:5: ( ruleEString )
                    {
                    // InternalQualityBtCppParser.g:2650:5: ( ruleEString )
                    // InternalQualityBtCppParser.g:2651:6: ruleEString
                    {

                    						if (current==null) {
                    							current = createModelElement(grammarAccess.getParallelNodeRule());
                    						}
                    					

                    						newCompositeNode(grammarAccess.getParallelNodeAccess().getSatisfiesQualityRequirementCrossReference_5_2_0());
                    					
                    pushFollow(FOLLOW_20);
                    ruleEString();

                    state._fsp--;


                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:2665:4: (otherlv_14= Comma ( ( ruleEString ) ) )*
                    loop63:
                    do {
                        int alt63=2;
                        int LA63_0 = input.LA(1);

                        if ( (LA63_0==Comma) ) {
                            alt63=1;
                        }


                        switch (alt63) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:2666:5: otherlv_14= Comma ( ( ruleEString ) )
                    	    {
                    	    otherlv_14=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_14, grammarAccess.getParallelNodeAccess().getCommaKeyword_5_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:2670:5: ( ( ruleEString ) )
                    	    // InternalQualityBtCppParser.g:2671:6: ( ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:2671:6: ( ruleEString )
                    	    // InternalQualityBtCppParser.g:2672:7: ruleEString
                    	    {

                    	    							if (current==null) {
                    	    								current = createModelElement(grammarAccess.getParallelNodeRule());
                    	    							}
                    	    						

                    	    							newCompositeNode(grammarAccess.getParallelNodeAccess().getSatisfiesQualityRequirementCrossReference_5_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_20);
                    	    ruleEString();

                    	    state._fsp--;


                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop63;
                        }
                    } while (true);

                    otherlv_16=(Token)match(input,RightParenthesis,FOLLOW_34); 

                    				newLeafNode(otherlv_16, grammarAccess.getParallelNodeAccess().getRightParenthesisKeyword_5_4());
                    			

                    }
                    break;

            }

            // InternalQualityBtCppParser.g:2692:3: (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )?
            int alt66=2;
            int LA66_0 = input.LA(1);

            if ( (LA66_0==Parameters) ) {
                alt66=1;
            }
            switch (alt66) {
                case 1 :
                    // InternalQualityBtCppParser.g:2693:4: otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket
                    {
                    otherlv_17=(Token)match(input,Parameters,FOLLOW_21); 

                    				newLeafNode(otherlv_17, grammarAccess.getParallelNodeAccess().getParametersKeyword_6_0());
                    			
                    otherlv_18=(Token)match(input,LeftCurlyBracket,FOLLOW_3); 

                    				newLeafNode(otherlv_18, grammarAccess.getParallelNodeAccess().getLeftCurlyBracketKeyword_6_1());
                    			
                    // InternalQualityBtCppParser.g:2701:4: ( (lv_parameters_19_0= ruleParameter ) )
                    // InternalQualityBtCppParser.g:2702:5: (lv_parameters_19_0= ruleParameter )
                    {
                    // InternalQualityBtCppParser.g:2702:5: (lv_parameters_19_0= ruleParameter )
                    // InternalQualityBtCppParser.g:2703:6: lv_parameters_19_0= ruleParameter
                    {

                    						newCompositeNode(grammarAccess.getParallelNodeAccess().getParametersParameterParserRuleCall_6_2_0());
                    					
                    pushFollow(FOLLOW_29);
                    lv_parameters_19_0=ruleParameter();

                    state._fsp--;


                    						if (current==null) {
                    							current = createModelElementForParent(grammarAccess.getParallelNodeRule());
                    						}
                    						add(
                    							current,
                    							"parameters",
                    							lv_parameters_19_0,
                    							"org.xtext.btcpp.QualityBtCpp.Parameter");
                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:2720:4: (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )*
                    loop65:
                    do {
                        int alt65=2;
                        int LA65_0 = input.LA(1);

                        if ( (LA65_0==Comma) ) {
                            alt65=1;
                        }


                        switch (alt65) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:2721:5: otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) )
                    	    {
                    	    otherlv_20=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_20, grammarAccess.getParallelNodeAccess().getCommaKeyword_6_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:2725:5: ( (lv_parameters_21_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:2726:6: (lv_parameters_21_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:2726:6: (lv_parameters_21_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:2727:7: lv_parameters_21_0= ruleParameter
                    	    {

                    	    							newCompositeNode(grammarAccess.getParallelNodeAccess().getParametersParameterParserRuleCall_6_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_29);
                    	    lv_parameters_21_0=ruleParameter();

                    	    state._fsp--;


                    	    							if (current==null) {
                    	    								current = createModelElementForParent(grammarAccess.getParallelNodeRule());
                    	    							}
                    	    							add(
                    	    								current,
                    	    								"parameters",
                    	    								lv_parameters_21_0,
                    	    								"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop65;
                        }
                    } while (true);

                    otherlv_22=(Token)match(input,RightCurlyBracket,FOLLOW_35); 

                    				newLeafNode(otherlv_22, grammarAccess.getParallelNodeAccess().getRightCurlyBracketKeyword_6_4());
                    			

                    }
                    break;

            }

            otherlv_23=(Token)match(input,Child,FOLLOW_21); 

            			newLeafNode(otherlv_23, grammarAccess.getParallelNodeAccess().getChildKeyword_7());
            		
            otherlv_24=(Token)match(input,LeftCurlyBracket,FOLLOW_9); 

            			newLeafNode(otherlv_24, grammarAccess.getParallelNodeAccess().getLeftCurlyBracketKeyword_8());
            		
            // InternalQualityBtCppParser.g:2758:3: ( (lv_child_25_0= ruleTreeNode ) )
            // InternalQualityBtCppParser.g:2759:4: (lv_child_25_0= ruleTreeNode )
            {
            // InternalQualityBtCppParser.g:2759:4: (lv_child_25_0= ruleTreeNode )
            // InternalQualityBtCppParser.g:2760:5: lv_child_25_0= ruleTreeNode
            {

            					newCompositeNode(grammarAccess.getParallelNodeAccess().getChildTreeNodeParserRuleCall_9_0());
            				
            pushFollow(FOLLOW_29);
            lv_child_25_0=ruleTreeNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getParallelNodeRule());
            					}
            					add(
            						current,
            						"child",
            						lv_child_25_0,
            						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            // InternalQualityBtCppParser.g:2777:3: (otherlv_26= Comma ( (lv_child_27_0= ruleTreeNode ) ) )*
            loop67:
            do {
                int alt67=2;
                int LA67_0 = input.LA(1);

                if ( (LA67_0==Comma) ) {
                    alt67=1;
                }


                switch (alt67) {
            	case 1 :
            	    // InternalQualityBtCppParser.g:2778:4: otherlv_26= Comma ( (lv_child_27_0= ruleTreeNode ) )
            	    {
            	    otherlv_26=(Token)match(input,Comma,FOLLOW_9); 

            	    				newLeafNode(otherlv_26, grammarAccess.getParallelNodeAccess().getCommaKeyword_10_0());
            	    			
            	    // InternalQualityBtCppParser.g:2782:4: ( (lv_child_27_0= ruleTreeNode ) )
            	    // InternalQualityBtCppParser.g:2783:5: (lv_child_27_0= ruleTreeNode )
            	    {
            	    // InternalQualityBtCppParser.g:2783:5: (lv_child_27_0= ruleTreeNode )
            	    // InternalQualityBtCppParser.g:2784:6: lv_child_27_0= ruleTreeNode
            	    {

            	    						newCompositeNode(grammarAccess.getParallelNodeAccess().getChildTreeNodeParserRuleCall_10_1_0());
            	    					
            	    pushFollow(FOLLOW_29);
            	    lv_child_27_0=ruleTreeNode();

            	    state._fsp--;


            	    						if (current==null) {
            	    							current = createModelElementForParent(grammarAccess.getParallelNodeRule());
            	    						}
            	    						add(
            	    							current,
            	    							"child",
            	    							lv_child_27_0,
            	    							"org.xtext.btcpp.QualityBtCpp.TreeNode");
            	    						afterParserOrEnumRuleCall();
            	    					

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop67;
                }
            } while (true);

            otherlv_28=(Token)match(input,RightCurlyBracket,FOLLOW_30); 

            			newLeafNode(otherlv_28, grammarAccess.getParallelNodeAccess().getRightCurlyBracketKeyword_11());
            		
            otherlv_29=(Token)match(input,RightCurlyBracket,FOLLOW_2); 

            			newLeafNode(otherlv_29, grammarAccess.getParallelNodeAccess().getRightCurlyBracketKeyword_12());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleParallelNode"


    // $ANTLR start "entryRuleSequenceWithMemoryNode"
    // InternalQualityBtCppParser.g:2814:1: entryRuleSequenceWithMemoryNode returns [EObject current=null] : iv_ruleSequenceWithMemoryNode= ruleSequenceWithMemoryNode EOF ;
    public final EObject entryRuleSequenceWithMemoryNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSequenceWithMemoryNode = null;


        try {
            // InternalQualityBtCppParser.g:2814:63: (iv_ruleSequenceWithMemoryNode= ruleSequenceWithMemoryNode EOF )
            // InternalQualityBtCppParser.g:2815:2: iv_ruleSequenceWithMemoryNode= ruleSequenceWithMemoryNode EOF
            {
             newCompositeNode(grammarAccess.getSequenceWithMemoryNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleSequenceWithMemoryNode=ruleSequenceWithMemoryNode();

            state._fsp--;

             current =iv_ruleSequenceWithMemoryNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSequenceWithMemoryNode"


    // $ANTLR start "ruleSequenceWithMemoryNode"
    // InternalQualityBtCppParser.g:2821:1: ruleSequenceWithMemoryNode returns [EObject current=null] : (otherlv_0= SequenceWithMemoryNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )? (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )? (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )? otherlv_23= Child otherlv_24= LeftCurlyBracket ( (lv_child_25_0= ruleTreeNode ) ) (otherlv_26= Comma ( (lv_child_27_0= ruleTreeNode ) ) )* otherlv_28= RightCurlyBracket otherlv_29= RightCurlyBracket ) ;
    public final EObject ruleSequenceWithMemoryNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_17=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        Token otherlv_23=null;
        Token otherlv_24=null;
        Token otherlv_26=null;
        Token otherlv_28=null;
        Token otherlv_29=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_ID_4_0 = null;

        EObject lv_parameters_19_0 = null;

        EObject lv_parameters_21_0 = null;

        EObject lv_child_25_0 = null;

        EObject lv_child_27_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:2827:2: ( (otherlv_0= SequenceWithMemoryNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )? (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )? (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )? otherlv_23= Child otherlv_24= LeftCurlyBracket ( (lv_child_25_0= ruleTreeNode ) ) (otherlv_26= Comma ( (lv_child_27_0= ruleTreeNode ) ) )* otherlv_28= RightCurlyBracket otherlv_29= RightCurlyBracket ) )
            // InternalQualityBtCppParser.g:2828:2: (otherlv_0= SequenceWithMemoryNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )? (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )? (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )? otherlv_23= Child otherlv_24= LeftCurlyBracket ( (lv_child_25_0= ruleTreeNode ) ) (otherlv_26= Comma ( (lv_child_27_0= ruleTreeNode ) ) )* otherlv_28= RightCurlyBracket otherlv_29= RightCurlyBracket )
            {
            // InternalQualityBtCppParser.g:2828:2: (otherlv_0= SequenceWithMemoryNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )? (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )? (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )? otherlv_23= Child otherlv_24= LeftCurlyBracket ( (lv_child_25_0= ruleTreeNode ) ) (otherlv_26= Comma ( (lv_child_27_0= ruleTreeNode ) ) )* otherlv_28= RightCurlyBracket otherlv_29= RightCurlyBracket )
            // InternalQualityBtCppParser.g:2829:3: otherlv_0= SequenceWithMemoryNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )? (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )? (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )? otherlv_23= Child otherlv_24= LeftCurlyBracket ( (lv_child_25_0= ruleTreeNode ) ) (otherlv_26= Comma ( (lv_child_27_0= ruleTreeNode ) ) )* otherlv_28= RightCurlyBracket otherlv_29= RightCurlyBracket
            {
            otherlv_0=(Token)match(input,SequenceWithMemoryNode,FOLLOW_3); 

            			newLeafNode(otherlv_0, grammarAccess.getSequenceWithMemoryNodeAccess().getSequenceWithMemoryNodeKeyword_0());
            		
            // InternalQualityBtCppParser.g:2833:3: ( (lv_name_1_0= ruleEString ) )
            // InternalQualityBtCppParser.g:2834:4: (lv_name_1_0= ruleEString )
            {
            // InternalQualityBtCppParser.g:2834:4: (lv_name_1_0= ruleEString )
            // InternalQualityBtCppParser.g:2835:5: lv_name_1_0= ruleEString
            {

            					newCompositeNode(grammarAccess.getSequenceWithMemoryNodeAccess().getNameEStringParserRuleCall_1_0());
            				
            pushFollow(FOLLOW_21);
            lv_name_1_0=ruleEString();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getSequenceWithMemoryNodeRule());
            					}
            					set(
            						current,
            						"name",
            						lv_name_1_0,
            						"org.xtext.btcpp.QualityBtCpp.EString");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            otherlv_2=(Token)match(input,LeftCurlyBracket,FOLLOW_31); 

            			newLeafNode(otherlv_2, grammarAccess.getSequenceWithMemoryNodeAccess().getLeftCurlyBracketKeyword_2());
            		
            // InternalQualityBtCppParser.g:2856:3: (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )?
            int alt68=2;
            int LA68_0 = input.LA(1);

            if ( (LA68_0==ID) ) {
                alt68=1;
            }
            switch (alt68) {
                case 1 :
                    // InternalQualityBtCppParser.g:2857:4: otherlv_3= ID ( (lv_ID_4_0= ruleEString ) )
                    {
                    otherlv_3=(Token)match(input,ID,FOLLOW_3); 

                    				newLeafNode(otherlv_3, grammarAccess.getSequenceWithMemoryNodeAccess().getIDKeyword_3_0());
                    			
                    // InternalQualityBtCppParser.g:2861:4: ( (lv_ID_4_0= ruleEString ) )
                    // InternalQualityBtCppParser.g:2862:5: (lv_ID_4_0= ruleEString )
                    {
                    // InternalQualityBtCppParser.g:2862:5: (lv_ID_4_0= ruleEString )
                    // InternalQualityBtCppParser.g:2863:6: lv_ID_4_0= ruleEString
                    {

                    						newCompositeNode(grammarAccess.getSequenceWithMemoryNodeAccess().getIDEStringParserRuleCall_3_1_0());
                    					
                    pushFollow(FOLLOW_32);
                    lv_ID_4_0=ruleEString();

                    state._fsp--;


                    						if (current==null) {
                    							current = createModelElementForParent(grammarAccess.getSequenceWithMemoryNodeRule());
                    						}
                    						set(
                    							current,
                    							"ID",
                    							lv_ID_4_0,
                    							"org.xtext.btcpp.QualityBtCpp.EString");
                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }


                    }
                    break;

            }

            // InternalQualityBtCppParser.g:2881:3: (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )?
            int alt70=2;
            int LA70_0 = input.LA(1);

            if ( (LA70_0==Satisfices) ) {
                alt70=1;
            }
            switch (alt70) {
                case 1 :
                    // InternalQualityBtCppParser.g:2882:4: otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis
                    {
                    otherlv_5=(Token)match(input,Satisfices,FOLLOW_26); 

                    				newLeafNode(otherlv_5, grammarAccess.getSequenceWithMemoryNodeAccess().getSatisficesKeyword_4_0());
                    			
                    otherlv_6=(Token)match(input,LeftParenthesis,FOLLOW_3); 

                    				newLeafNode(otherlv_6, grammarAccess.getSequenceWithMemoryNodeAccess().getLeftParenthesisKeyword_4_1());
                    			
                    // InternalQualityBtCppParser.g:2890:4: ( ( ruleEString ) )
                    // InternalQualityBtCppParser.g:2891:5: ( ruleEString )
                    {
                    // InternalQualityBtCppParser.g:2891:5: ( ruleEString )
                    // InternalQualityBtCppParser.g:2892:6: ruleEString
                    {

                    						if (current==null) {
                    							current = createModelElement(grammarAccess.getSequenceWithMemoryNodeRule());
                    						}
                    					

                    						newCompositeNode(grammarAccess.getSequenceWithMemoryNodeAccess().getSatisficesQualityCrossReference_4_2_0());
                    					
                    pushFollow(FOLLOW_20);
                    ruleEString();

                    state._fsp--;


                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:2906:4: (otherlv_8= Comma ( ( ruleEString ) ) )*
                    loop69:
                    do {
                        int alt69=2;
                        int LA69_0 = input.LA(1);

                        if ( (LA69_0==Comma) ) {
                            alt69=1;
                        }


                        switch (alt69) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:2907:5: otherlv_8= Comma ( ( ruleEString ) )
                    	    {
                    	    otherlv_8=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_8, grammarAccess.getSequenceWithMemoryNodeAccess().getCommaKeyword_4_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:2911:5: ( ( ruleEString ) )
                    	    // InternalQualityBtCppParser.g:2912:6: ( ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:2912:6: ( ruleEString )
                    	    // InternalQualityBtCppParser.g:2913:7: ruleEString
                    	    {

                    	    							if (current==null) {
                    	    								current = createModelElement(grammarAccess.getSequenceWithMemoryNodeRule());
                    	    							}
                    	    						

                    	    							newCompositeNode(grammarAccess.getSequenceWithMemoryNodeAccess().getSatisficesQualityCrossReference_4_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_20);
                    	    ruleEString();

                    	    state._fsp--;


                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop69;
                        }
                    } while (true);

                    otherlv_10=(Token)match(input,RightParenthesis,FOLLOW_33); 

                    				newLeafNode(otherlv_10, grammarAccess.getSequenceWithMemoryNodeAccess().getRightParenthesisKeyword_4_4());
                    			

                    }
                    break;

            }

            // InternalQualityBtCppParser.g:2933:3: (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )?
            int alt72=2;
            int LA72_0 = input.LA(1);

            if ( (LA72_0==Satisfies) ) {
                alt72=1;
            }
            switch (alt72) {
                case 1 :
                    // InternalQualityBtCppParser.g:2934:4: otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis
                    {
                    otherlv_11=(Token)match(input,Satisfies,FOLLOW_26); 

                    				newLeafNode(otherlv_11, grammarAccess.getSequenceWithMemoryNodeAccess().getSatisfiesKeyword_5_0());
                    			
                    otherlv_12=(Token)match(input,LeftParenthesis,FOLLOW_3); 

                    				newLeafNode(otherlv_12, grammarAccess.getSequenceWithMemoryNodeAccess().getLeftParenthesisKeyword_5_1());
                    			
                    // InternalQualityBtCppParser.g:2942:4: ( ( ruleEString ) )
                    // InternalQualityBtCppParser.g:2943:5: ( ruleEString )
                    {
                    // InternalQualityBtCppParser.g:2943:5: ( ruleEString )
                    // InternalQualityBtCppParser.g:2944:6: ruleEString
                    {

                    						if (current==null) {
                    							current = createModelElement(grammarAccess.getSequenceWithMemoryNodeRule());
                    						}
                    					

                    						newCompositeNode(grammarAccess.getSequenceWithMemoryNodeAccess().getSatisfiesQualityRequirementCrossReference_5_2_0());
                    					
                    pushFollow(FOLLOW_20);
                    ruleEString();

                    state._fsp--;


                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:2958:4: (otherlv_14= Comma ( ( ruleEString ) ) )*
                    loop71:
                    do {
                        int alt71=2;
                        int LA71_0 = input.LA(1);

                        if ( (LA71_0==Comma) ) {
                            alt71=1;
                        }


                        switch (alt71) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:2959:5: otherlv_14= Comma ( ( ruleEString ) )
                    	    {
                    	    otherlv_14=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_14, grammarAccess.getSequenceWithMemoryNodeAccess().getCommaKeyword_5_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:2963:5: ( ( ruleEString ) )
                    	    // InternalQualityBtCppParser.g:2964:6: ( ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:2964:6: ( ruleEString )
                    	    // InternalQualityBtCppParser.g:2965:7: ruleEString
                    	    {

                    	    							if (current==null) {
                    	    								current = createModelElement(grammarAccess.getSequenceWithMemoryNodeRule());
                    	    							}
                    	    						

                    	    							newCompositeNode(grammarAccess.getSequenceWithMemoryNodeAccess().getSatisfiesQualityRequirementCrossReference_5_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_20);
                    	    ruleEString();

                    	    state._fsp--;


                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop71;
                        }
                    } while (true);

                    otherlv_16=(Token)match(input,RightParenthesis,FOLLOW_34); 

                    				newLeafNode(otherlv_16, grammarAccess.getSequenceWithMemoryNodeAccess().getRightParenthesisKeyword_5_4());
                    			

                    }
                    break;

            }

            // InternalQualityBtCppParser.g:2985:3: (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )?
            int alt74=2;
            int LA74_0 = input.LA(1);

            if ( (LA74_0==Parameters) ) {
                alt74=1;
            }
            switch (alt74) {
                case 1 :
                    // InternalQualityBtCppParser.g:2986:4: otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket
                    {
                    otherlv_17=(Token)match(input,Parameters,FOLLOW_21); 

                    				newLeafNode(otherlv_17, grammarAccess.getSequenceWithMemoryNodeAccess().getParametersKeyword_6_0());
                    			
                    otherlv_18=(Token)match(input,LeftCurlyBracket,FOLLOW_3); 

                    				newLeafNode(otherlv_18, grammarAccess.getSequenceWithMemoryNodeAccess().getLeftCurlyBracketKeyword_6_1());
                    			
                    // InternalQualityBtCppParser.g:2994:4: ( (lv_parameters_19_0= ruleParameter ) )
                    // InternalQualityBtCppParser.g:2995:5: (lv_parameters_19_0= ruleParameter )
                    {
                    // InternalQualityBtCppParser.g:2995:5: (lv_parameters_19_0= ruleParameter )
                    // InternalQualityBtCppParser.g:2996:6: lv_parameters_19_0= ruleParameter
                    {

                    						newCompositeNode(grammarAccess.getSequenceWithMemoryNodeAccess().getParametersParameterParserRuleCall_6_2_0());
                    					
                    pushFollow(FOLLOW_29);
                    lv_parameters_19_0=ruleParameter();

                    state._fsp--;


                    						if (current==null) {
                    							current = createModelElementForParent(grammarAccess.getSequenceWithMemoryNodeRule());
                    						}
                    						add(
                    							current,
                    							"parameters",
                    							lv_parameters_19_0,
                    							"org.xtext.btcpp.QualityBtCpp.Parameter");
                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:3013:4: (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )*
                    loop73:
                    do {
                        int alt73=2;
                        int LA73_0 = input.LA(1);

                        if ( (LA73_0==Comma) ) {
                            alt73=1;
                        }


                        switch (alt73) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:3014:5: otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) )
                    	    {
                    	    otherlv_20=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_20, grammarAccess.getSequenceWithMemoryNodeAccess().getCommaKeyword_6_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:3018:5: ( (lv_parameters_21_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:3019:6: (lv_parameters_21_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:3019:6: (lv_parameters_21_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:3020:7: lv_parameters_21_0= ruleParameter
                    	    {

                    	    							newCompositeNode(grammarAccess.getSequenceWithMemoryNodeAccess().getParametersParameterParserRuleCall_6_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_29);
                    	    lv_parameters_21_0=ruleParameter();

                    	    state._fsp--;


                    	    							if (current==null) {
                    	    								current = createModelElementForParent(grammarAccess.getSequenceWithMemoryNodeRule());
                    	    							}
                    	    							add(
                    	    								current,
                    	    								"parameters",
                    	    								lv_parameters_21_0,
                    	    								"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop73;
                        }
                    } while (true);

                    otherlv_22=(Token)match(input,RightCurlyBracket,FOLLOW_35); 

                    				newLeafNode(otherlv_22, grammarAccess.getSequenceWithMemoryNodeAccess().getRightCurlyBracketKeyword_6_4());
                    			

                    }
                    break;

            }

            otherlv_23=(Token)match(input,Child,FOLLOW_21); 

            			newLeafNode(otherlv_23, grammarAccess.getSequenceWithMemoryNodeAccess().getChildKeyword_7());
            		
            otherlv_24=(Token)match(input,LeftCurlyBracket,FOLLOW_9); 

            			newLeafNode(otherlv_24, grammarAccess.getSequenceWithMemoryNodeAccess().getLeftCurlyBracketKeyword_8());
            		
            // InternalQualityBtCppParser.g:3051:3: ( (lv_child_25_0= ruleTreeNode ) )
            // InternalQualityBtCppParser.g:3052:4: (lv_child_25_0= ruleTreeNode )
            {
            // InternalQualityBtCppParser.g:3052:4: (lv_child_25_0= ruleTreeNode )
            // InternalQualityBtCppParser.g:3053:5: lv_child_25_0= ruleTreeNode
            {

            					newCompositeNode(grammarAccess.getSequenceWithMemoryNodeAccess().getChildTreeNodeParserRuleCall_9_0());
            				
            pushFollow(FOLLOW_29);
            lv_child_25_0=ruleTreeNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getSequenceWithMemoryNodeRule());
            					}
            					add(
            						current,
            						"child",
            						lv_child_25_0,
            						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            // InternalQualityBtCppParser.g:3070:3: (otherlv_26= Comma ( (lv_child_27_0= ruleTreeNode ) ) )*
            loop75:
            do {
                int alt75=2;
                int LA75_0 = input.LA(1);

                if ( (LA75_0==Comma) ) {
                    alt75=1;
                }


                switch (alt75) {
            	case 1 :
            	    // InternalQualityBtCppParser.g:3071:4: otherlv_26= Comma ( (lv_child_27_0= ruleTreeNode ) )
            	    {
            	    otherlv_26=(Token)match(input,Comma,FOLLOW_9); 

            	    				newLeafNode(otherlv_26, grammarAccess.getSequenceWithMemoryNodeAccess().getCommaKeyword_10_0());
            	    			
            	    // InternalQualityBtCppParser.g:3075:4: ( (lv_child_27_0= ruleTreeNode ) )
            	    // InternalQualityBtCppParser.g:3076:5: (lv_child_27_0= ruleTreeNode )
            	    {
            	    // InternalQualityBtCppParser.g:3076:5: (lv_child_27_0= ruleTreeNode )
            	    // InternalQualityBtCppParser.g:3077:6: lv_child_27_0= ruleTreeNode
            	    {

            	    						newCompositeNode(grammarAccess.getSequenceWithMemoryNodeAccess().getChildTreeNodeParserRuleCall_10_1_0());
            	    					
            	    pushFollow(FOLLOW_29);
            	    lv_child_27_0=ruleTreeNode();

            	    state._fsp--;


            	    						if (current==null) {
            	    							current = createModelElementForParent(grammarAccess.getSequenceWithMemoryNodeRule());
            	    						}
            	    						add(
            	    							current,
            	    							"child",
            	    							lv_child_27_0,
            	    							"org.xtext.btcpp.QualityBtCpp.TreeNode");
            	    						afterParserOrEnumRuleCall();
            	    					

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop75;
                }
            } while (true);

            otherlv_28=(Token)match(input,RightCurlyBracket,FOLLOW_30); 

            			newLeafNode(otherlv_28, grammarAccess.getSequenceWithMemoryNodeAccess().getRightCurlyBracketKeyword_11());
            		
            otherlv_29=(Token)match(input,RightCurlyBracket,FOLLOW_2); 

            			newLeafNode(otherlv_29, grammarAccess.getSequenceWithMemoryNodeAccess().getRightCurlyBracketKeyword_12());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSequenceWithMemoryNode"


    // $ANTLR start "entryRuleSwitchNode"
    // InternalQualityBtCppParser.g:3107:1: entryRuleSwitchNode returns [EObject current=null] : iv_ruleSwitchNode= ruleSwitchNode EOF ;
    public final EObject entryRuleSwitchNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSwitchNode = null;


        try {
            // InternalQualityBtCppParser.g:3107:51: (iv_ruleSwitchNode= ruleSwitchNode EOF )
            // InternalQualityBtCppParser.g:3108:2: iv_ruleSwitchNode= ruleSwitchNode EOF
            {
             newCompositeNode(grammarAccess.getSwitchNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleSwitchNode=ruleSwitchNode();

            state._fsp--;

             current =iv_ruleSwitchNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSwitchNode"


    // $ANTLR start "ruleSwitchNode"
    // InternalQualityBtCppParser.g:3114:1: ruleSwitchNode returns [EObject current=null] : (otherlv_0= SwitchNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )? (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )? (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )? otherlv_23= Child otherlv_24= LeftCurlyBracket ( (lv_child_25_0= ruleTreeNode ) ) (otherlv_26= Comma ( (lv_child_27_0= ruleTreeNode ) ) )* otherlv_28= RightCurlyBracket otherlv_29= RightCurlyBracket ) ;
    public final EObject ruleSwitchNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_17=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        Token otherlv_23=null;
        Token otherlv_24=null;
        Token otherlv_26=null;
        Token otherlv_28=null;
        Token otherlv_29=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_ID_4_0 = null;

        EObject lv_parameters_19_0 = null;

        EObject lv_parameters_21_0 = null;

        EObject lv_child_25_0 = null;

        EObject lv_child_27_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:3120:2: ( (otherlv_0= SwitchNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )? (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )? (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )? otherlv_23= Child otherlv_24= LeftCurlyBracket ( (lv_child_25_0= ruleTreeNode ) ) (otherlv_26= Comma ( (lv_child_27_0= ruleTreeNode ) ) )* otherlv_28= RightCurlyBracket otherlv_29= RightCurlyBracket ) )
            // InternalQualityBtCppParser.g:3121:2: (otherlv_0= SwitchNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )? (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )? (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )? otherlv_23= Child otherlv_24= LeftCurlyBracket ( (lv_child_25_0= ruleTreeNode ) ) (otherlv_26= Comma ( (lv_child_27_0= ruleTreeNode ) ) )* otherlv_28= RightCurlyBracket otherlv_29= RightCurlyBracket )
            {
            // InternalQualityBtCppParser.g:3121:2: (otherlv_0= SwitchNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )? (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )? (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )? otherlv_23= Child otherlv_24= LeftCurlyBracket ( (lv_child_25_0= ruleTreeNode ) ) (otherlv_26= Comma ( (lv_child_27_0= ruleTreeNode ) ) )* otherlv_28= RightCurlyBracket otherlv_29= RightCurlyBracket )
            // InternalQualityBtCppParser.g:3122:3: otherlv_0= SwitchNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )? (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )? (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )? otherlv_23= Child otherlv_24= LeftCurlyBracket ( (lv_child_25_0= ruleTreeNode ) ) (otherlv_26= Comma ( (lv_child_27_0= ruleTreeNode ) ) )* otherlv_28= RightCurlyBracket otherlv_29= RightCurlyBracket
            {
            otherlv_0=(Token)match(input,SwitchNode,FOLLOW_3); 

            			newLeafNode(otherlv_0, grammarAccess.getSwitchNodeAccess().getSwitchNodeKeyword_0());
            		
            // InternalQualityBtCppParser.g:3126:3: ( (lv_name_1_0= ruleEString ) )
            // InternalQualityBtCppParser.g:3127:4: (lv_name_1_0= ruleEString )
            {
            // InternalQualityBtCppParser.g:3127:4: (lv_name_1_0= ruleEString )
            // InternalQualityBtCppParser.g:3128:5: lv_name_1_0= ruleEString
            {

            					newCompositeNode(grammarAccess.getSwitchNodeAccess().getNameEStringParserRuleCall_1_0());
            				
            pushFollow(FOLLOW_21);
            lv_name_1_0=ruleEString();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getSwitchNodeRule());
            					}
            					set(
            						current,
            						"name",
            						lv_name_1_0,
            						"org.xtext.btcpp.QualityBtCpp.EString");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            otherlv_2=(Token)match(input,LeftCurlyBracket,FOLLOW_31); 

            			newLeafNode(otherlv_2, grammarAccess.getSwitchNodeAccess().getLeftCurlyBracketKeyword_2());
            		
            // InternalQualityBtCppParser.g:3149:3: (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )?
            int alt76=2;
            int LA76_0 = input.LA(1);

            if ( (LA76_0==ID) ) {
                alt76=1;
            }
            switch (alt76) {
                case 1 :
                    // InternalQualityBtCppParser.g:3150:4: otherlv_3= ID ( (lv_ID_4_0= ruleEString ) )
                    {
                    otherlv_3=(Token)match(input,ID,FOLLOW_3); 

                    				newLeafNode(otherlv_3, grammarAccess.getSwitchNodeAccess().getIDKeyword_3_0());
                    			
                    // InternalQualityBtCppParser.g:3154:4: ( (lv_ID_4_0= ruleEString ) )
                    // InternalQualityBtCppParser.g:3155:5: (lv_ID_4_0= ruleEString )
                    {
                    // InternalQualityBtCppParser.g:3155:5: (lv_ID_4_0= ruleEString )
                    // InternalQualityBtCppParser.g:3156:6: lv_ID_4_0= ruleEString
                    {

                    						newCompositeNode(grammarAccess.getSwitchNodeAccess().getIDEStringParserRuleCall_3_1_0());
                    					
                    pushFollow(FOLLOW_32);
                    lv_ID_4_0=ruleEString();

                    state._fsp--;


                    						if (current==null) {
                    							current = createModelElementForParent(grammarAccess.getSwitchNodeRule());
                    						}
                    						set(
                    							current,
                    							"ID",
                    							lv_ID_4_0,
                    							"org.xtext.btcpp.QualityBtCpp.EString");
                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }


                    }
                    break;

            }

            // InternalQualityBtCppParser.g:3174:3: (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )?
            int alt78=2;
            int LA78_0 = input.LA(1);

            if ( (LA78_0==Satisfices) ) {
                alt78=1;
            }
            switch (alt78) {
                case 1 :
                    // InternalQualityBtCppParser.g:3175:4: otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis
                    {
                    otherlv_5=(Token)match(input,Satisfices,FOLLOW_26); 

                    				newLeafNode(otherlv_5, grammarAccess.getSwitchNodeAccess().getSatisficesKeyword_4_0());
                    			
                    otherlv_6=(Token)match(input,LeftParenthesis,FOLLOW_3); 

                    				newLeafNode(otherlv_6, grammarAccess.getSwitchNodeAccess().getLeftParenthesisKeyword_4_1());
                    			
                    // InternalQualityBtCppParser.g:3183:4: ( ( ruleEString ) )
                    // InternalQualityBtCppParser.g:3184:5: ( ruleEString )
                    {
                    // InternalQualityBtCppParser.g:3184:5: ( ruleEString )
                    // InternalQualityBtCppParser.g:3185:6: ruleEString
                    {

                    						if (current==null) {
                    							current = createModelElement(grammarAccess.getSwitchNodeRule());
                    						}
                    					

                    						newCompositeNode(grammarAccess.getSwitchNodeAccess().getSatisficesQualityCrossReference_4_2_0());
                    					
                    pushFollow(FOLLOW_20);
                    ruleEString();

                    state._fsp--;


                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:3199:4: (otherlv_8= Comma ( ( ruleEString ) ) )*
                    loop77:
                    do {
                        int alt77=2;
                        int LA77_0 = input.LA(1);

                        if ( (LA77_0==Comma) ) {
                            alt77=1;
                        }


                        switch (alt77) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:3200:5: otherlv_8= Comma ( ( ruleEString ) )
                    	    {
                    	    otherlv_8=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_8, grammarAccess.getSwitchNodeAccess().getCommaKeyword_4_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:3204:5: ( ( ruleEString ) )
                    	    // InternalQualityBtCppParser.g:3205:6: ( ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:3205:6: ( ruleEString )
                    	    // InternalQualityBtCppParser.g:3206:7: ruleEString
                    	    {

                    	    							if (current==null) {
                    	    								current = createModelElement(grammarAccess.getSwitchNodeRule());
                    	    							}
                    	    						

                    	    							newCompositeNode(grammarAccess.getSwitchNodeAccess().getSatisficesQualityCrossReference_4_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_20);
                    	    ruleEString();

                    	    state._fsp--;


                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop77;
                        }
                    } while (true);

                    otherlv_10=(Token)match(input,RightParenthesis,FOLLOW_33); 

                    				newLeafNode(otherlv_10, grammarAccess.getSwitchNodeAccess().getRightParenthesisKeyword_4_4());
                    			

                    }
                    break;

            }

            // InternalQualityBtCppParser.g:3226:3: (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )?
            int alt80=2;
            int LA80_0 = input.LA(1);

            if ( (LA80_0==Satisfies) ) {
                alt80=1;
            }
            switch (alt80) {
                case 1 :
                    // InternalQualityBtCppParser.g:3227:4: otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis
                    {
                    otherlv_11=(Token)match(input,Satisfies,FOLLOW_26); 

                    				newLeafNode(otherlv_11, grammarAccess.getSwitchNodeAccess().getSatisfiesKeyword_5_0());
                    			
                    otherlv_12=(Token)match(input,LeftParenthesis,FOLLOW_3); 

                    				newLeafNode(otherlv_12, grammarAccess.getSwitchNodeAccess().getLeftParenthesisKeyword_5_1());
                    			
                    // InternalQualityBtCppParser.g:3235:4: ( ( ruleEString ) )
                    // InternalQualityBtCppParser.g:3236:5: ( ruleEString )
                    {
                    // InternalQualityBtCppParser.g:3236:5: ( ruleEString )
                    // InternalQualityBtCppParser.g:3237:6: ruleEString
                    {

                    						if (current==null) {
                    							current = createModelElement(grammarAccess.getSwitchNodeRule());
                    						}
                    					

                    						newCompositeNode(grammarAccess.getSwitchNodeAccess().getSatisfiesQualityRequirementCrossReference_5_2_0());
                    					
                    pushFollow(FOLLOW_20);
                    ruleEString();

                    state._fsp--;


                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:3251:4: (otherlv_14= Comma ( ( ruleEString ) ) )*
                    loop79:
                    do {
                        int alt79=2;
                        int LA79_0 = input.LA(1);

                        if ( (LA79_0==Comma) ) {
                            alt79=1;
                        }


                        switch (alt79) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:3252:5: otherlv_14= Comma ( ( ruleEString ) )
                    	    {
                    	    otherlv_14=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_14, grammarAccess.getSwitchNodeAccess().getCommaKeyword_5_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:3256:5: ( ( ruleEString ) )
                    	    // InternalQualityBtCppParser.g:3257:6: ( ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:3257:6: ( ruleEString )
                    	    // InternalQualityBtCppParser.g:3258:7: ruleEString
                    	    {

                    	    							if (current==null) {
                    	    								current = createModelElement(grammarAccess.getSwitchNodeRule());
                    	    							}
                    	    						

                    	    							newCompositeNode(grammarAccess.getSwitchNodeAccess().getSatisfiesQualityRequirementCrossReference_5_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_20);
                    	    ruleEString();

                    	    state._fsp--;


                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop79;
                        }
                    } while (true);

                    otherlv_16=(Token)match(input,RightParenthesis,FOLLOW_34); 

                    				newLeafNode(otherlv_16, grammarAccess.getSwitchNodeAccess().getRightParenthesisKeyword_5_4());
                    			

                    }
                    break;

            }

            // InternalQualityBtCppParser.g:3278:3: (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )?
            int alt82=2;
            int LA82_0 = input.LA(1);

            if ( (LA82_0==Parameters) ) {
                alt82=1;
            }
            switch (alt82) {
                case 1 :
                    // InternalQualityBtCppParser.g:3279:4: otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket
                    {
                    otherlv_17=(Token)match(input,Parameters,FOLLOW_21); 

                    				newLeafNode(otherlv_17, grammarAccess.getSwitchNodeAccess().getParametersKeyword_6_0());
                    			
                    otherlv_18=(Token)match(input,LeftCurlyBracket,FOLLOW_3); 

                    				newLeafNode(otherlv_18, grammarAccess.getSwitchNodeAccess().getLeftCurlyBracketKeyword_6_1());
                    			
                    // InternalQualityBtCppParser.g:3287:4: ( (lv_parameters_19_0= ruleParameter ) )
                    // InternalQualityBtCppParser.g:3288:5: (lv_parameters_19_0= ruleParameter )
                    {
                    // InternalQualityBtCppParser.g:3288:5: (lv_parameters_19_0= ruleParameter )
                    // InternalQualityBtCppParser.g:3289:6: lv_parameters_19_0= ruleParameter
                    {

                    						newCompositeNode(grammarAccess.getSwitchNodeAccess().getParametersParameterParserRuleCall_6_2_0());
                    					
                    pushFollow(FOLLOW_29);
                    lv_parameters_19_0=ruleParameter();

                    state._fsp--;


                    						if (current==null) {
                    							current = createModelElementForParent(grammarAccess.getSwitchNodeRule());
                    						}
                    						add(
                    							current,
                    							"parameters",
                    							lv_parameters_19_0,
                    							"org.xtext.btcpp.QualityBtCpp.Parameter");
                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:3306:4: (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )*
                    loop81:
                    do {
                        int alt81=2;
                        int LA81_0 = input.LA(1);

                        if ( (LA81_0==Comma) ) {
                            alt81=1;
                        }


                        switch (alt81) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:3307:5: otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) )
                    	    {
                    	    otherlv_20=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_20, grammarAccess.getSwitchNodeAccess().getCommaKeyword_6_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:3311:5: ( (lv_parameters_21_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:3312:6: (lv_parameters_21_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:3312:6: (lv_parameters_21_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:3313:7: lv_parameters_21_0= ruleParameter
                    	    {

                    	    							newCompositeNode(grammarAccess.getSwitchNodeAccess().getParametersParameterParserRuleCall_6_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_29);
                    	    lv_parameters_21_0=ruleParameter();

                    	    state._fsp--;


                    	    							if (current==null) {
                    	    								current = createModelElementForParent(grammarAccess.getSwitchNodeRule());
                    	    							}
                    	    							add(
                    	    								current,
                    	    								"parameters",
                    	    								lv_parameters_21_0,
                    	    								"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop81;
                        }
                    } while (true);

                    otherlv_22=(Token)match(input,RightCurlyBracket,FOLLOW_35); 

                    				newLeafNode(otherlv_22, grammarAccess.getSwitchNodeAccess().getRightCurlyBracketKeyword_6_4());
                    			

                    }
                    break;

            }

            otherlv_23=(Token)match(input,Child,FOLLOW_21); 

            			newLeafNode(otherlv_23, grammarAccess.getSwitchNodeAccess().getChildKeyword_7());
            		
            otherlv_24=(Token)match(input,LeftCurlyBracket,FOLLOW_9); 

            			newLeafNode(otherlv_24, grammarAccess.getSwitchNodeAccess().getLeftCurlyBracketKeyword_8());
            		
            // InternalQualityBtCppParser.g:3344:3: ( (lv_child_25_0= ruleTreeNode ) )
            // InternalQualityBtCppParser.g:3345:4: (lv_child_25_0= ruleTreeNode )
            {
            // InternalQualityBtCppParser.g:3345:4: (lv_child_25_0= ruleTreeNode )
            // InternalQualityBtCppParser.g:3346:5: lv_child_25_0= ruleTreeNode
            {

            					newCompositeNode(grammarAccess.getSwitchNodeAccess().getChildTreeNodeParserRuleCall_9_0());
            				
            pushFollow(FOLLOW_29);
            lv_child_25_0=ruleTreeNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getSwitchNodeRule());
            					}
            					add(
            						current,
            						"child",
            						lv_child_25_0,
            						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            // InternalQualityBtCppParser.g:3363:3: (otherlv_26= Comma ( (lv_child_27_0= ruleTreeNode ) ) )*
            loop83:
            do {
                int alt83=2;
                int LA83_0 = input.LA(1);

                if ( (LA83_0==Comma) ) {
                    alt83=1;
                }


                switch (alt83) {
            	case 1 :
            	    // InternalQualityBtCppParser.g:3364:4: otherlv_26= Comma ( (lv_child_27_0= ruleTreeNode ) )
            	    {
            	    otherlv_26=(Token)match(input,Comma,FOLLOW_9); 

            	    				newLeafNode(otherlv_26, grammarAccess.getSwitchNodeAccess().getCommaKeyword_10_0());
            	    			
            	    // InternalQualityBtCppParser.g:3368:4: ( (lv_child_27_0= ruleTreeNode ) )
            	    // InternalQualityBtCppParser.g:3369:5: (lv_child_27_0= ruleTreeNode )
            	    {
            	    // InternalQualityBtCppParser.g:3369:5: (lv_child_27_0= ruleTreeNode )
            	    // InternalQualityBtCppParser.g:3370:6: lv_child_27_0= ruleTreeNode
            	    {

            	    						newCompositeNode(grammarAccess.getSwitchNodeAccess().getChildTreeNodeParserRuleCall_10_1_0());
            	    					
            	    pushFollow(FOLLOW_29);
            	    lv_child_27_0=ruleTreeNode();

            	    state._fsp--;


            	    						if (current==null) {
            	    							current = createModelElementForParent(grammarAccess.getSwitchNodeRule());
            	    						}
            	    						add(
            	    							current,
            	    							"child",
            	    							lv_child_27_0,
            	    							"org.xtext.btcpp.QualityBtCpp.TreeNode");
            	    						afterParserOrEnumRuleCall();
            	    					

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop83;
                }
            } while (true);

            otherlv_28=(Token)match(input,RightCurlyBracket,FOLLOW_30); 

            			newLeafNode(otherlv_28, grammarAccess.getSwitchNodeAccess().getRightCurlyBracketKeyword_11());
            		
            otherlv_29=(Token)match(input,RightCurlyBracket,FOLLOW_2); 

            			newLeafNode(otherlv_29, grammarAccess.getSwitchNodeAccess().getRightCurlyBracketKeyword_12());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSwitchNode"


    // $ANTLR start "entryRuleReactiveFallbackNode"
    // InternalQualityBtCppParser.g:3400:1: entryRuleReactiveFallbackNode returns [EObject current=null] : iv_ruleReactiveFallbackNode= ruleReactiveFallbackNode EOF ;
    public final EObject entryRuleReactiveFallbackNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReactiveFallbackNode = null;


        try {
            // InternalQualityBtCppParser.g:3400:61: (iv_ruleReactiveFallbackNode= ruleReactiveFallbackNode EOF )
            // InternalQualityBtCppParser.g:3401:2: iv_ruleReactiveFallbackNode= ruleReactiveFallbackNode EOF
            {
             newCompositeNode(grammarAccess.getReactiveFallbackNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleReactiveFallbackNode=ruleReactiveFallbackNode();

            state._fsp--;

             current =iv_ruleReactiveFallbackNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleReactiveFallbackNode"


    // $ANTLR start "ruleReactiveFallbackNode"
    // InternalQualityBtCppParser.g:3407:1: ruleReactiveFallbackNode returns [EObject current=null] : (otherlv_0= ReactiveFallbackNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )? (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )? (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )? otherlv_23= Child otherlv_24= LeftCurlyBracket ( (lv_child_25_0= ruleTreeNode ) ) (otherlv_26= Comma ( (lv_child_27_0= ruleTreeNode ) ) )* otherlv_28= RightCurlyBracket otherlv_29= RightCurlyBracket ) ;
    public final EObject ruleReactiveFallbackNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_17=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        Token otherlv_23=null;
        Token otherlv_24=null;
        Token otherlv_26=null;
        Token otherlv_28=null;
        Token otherlv_29=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_ID_4_0 = null;

        EObject lv_parameters_19_0 = null;

        EObject lv_parameters_21_0 = null;

        EObject lv_child_25_0 = null;

        EObject lv_child_27_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:3413:2: ( (otherlv_0= ReactiveFallbackNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )? (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )? (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )? otherlv_23= Child otherlv_24= LeftCurlyBracket ( (lv_child_25_0= ruleTreeNode ) ) (otherlv_26= Comma ( (lv_child_27_0= ruleTreeNode ) ) )* otherlv_28= RightCurlyBracket otherlv_29= RightCurlyBracket ) )
            // InternalQualityBtCppParser.g:3414:2: (otherlv_0= ReactiveFallbackNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )? (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )? (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )? otherlv_23= Child otherlv_24= LeftCurlyBracket ( (lv_child_25_0= ruleTreeNode ) ) (otherlv_26= Comma ( (lv_child_27_0= ruleTreeNode ) ) )* otherlv_28= RightCurlyBracket otherlv_29= RightCurlyBracket )
            {
            // InternalQualityBtCppParser.g:3414:2: (otherlv_0= ReactiveFallbackNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )? (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )? (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )? otherlv_23= Child otherlv_24= LeftCurlyBracket ( (lv_child_25_0= ruleTreeNode ) ) (otherlv_26= Comma ( (lv_child_27_0= ruleTreeNode ) ) )* otherlv_28= RightCurlyBracket otherlv_29= RightCurlyBracket )
            // InternalQualityBtCppParser.g:3415:3: otherlv_0= ReactiveFallbackNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )? (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )? (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )? otherlv_23= Child otherlv_24= LeftCurlyBracket ( (lv_child_25_0= ruleTreeNode ) ) (otherlv_26= Comma ( (lv_child_27_0= ruleTreeNode ) ) )* otherlv_28= RightCurlyBracket otherlv_29= RightCurlyBracket
            {
            otherlv_0=(Token)match(input,ReactiveFallbackNode,FOLLOW_3); 

            			newLeafNode(otherlv_0, grammarAccess.getReactiveFallbackNodeAccess().getReactiveFallbackNodeKeyword_0());
            		
            // InternalQualityBtCppParser.g:3419:3: ( (lv_name_1_0= ruleEString ) )
            // InternalQualityBtCppParser.g:3420:4: (lv_name_1_0= ruleEString )
            {
            // InternalQualityBtCppParser.g:3420:4: (lv_name_1_0= ruleEString )
            // InternalQualityBtCppParser.g:3421:5: lv_name_1_0= ruleEString
            {

            					newCompositeNode(grammarAccess.getReactiveFallbackNodeAccess().getNameEStringParserRuleCall_1_0());
            				
            pushFollow(FOLLOW_21);
            lv_name_1_0=ruleEString();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getReactiveFallbackNodeRule());
            					}
            					set(
            						current,
            						"name",
            						lv_name_1_0,
            						"org.xtext.btcpp.QualityBtCpp.EString");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            otherlv_2=(Token)match(input,LeftCurlyBracket,FOLLOW_31); 

            			newLeafNode(otherlv_2, grammarAccess.getReactiveFallbackNodeAccess().getLeftCurlyBracketKeyword_2());
            		
            // InternalQualityBtCppParser.g:3442:3: (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )?
            int alt84=2;
            int LA84_0 = input.LA(1);

            if ( (LA84_0==ID) ) {
                alt84=1;
            }
            switch (alt84) {
                case 1 :
                    // InternalQualityBtCppParser.g:3443:4: otherlv_3= ID ( (lv_ID_4_0= ruleEString ) )
                    {
                    otherlv_3=(Token)match(input,ID,FOLLOW_3); 

                    				newLeafNode(otherlv_3, grammarAccess.getReactiveFallbackNodeAccess().getIDKeyword_3_0());
                    			
                    // InternalQualityBtCppParser.g:3447:4: ( (lv_ID_4_0= ruleEString ) )
                    // InternalQualityBtCppParser.g:3448:5: (lv_ID_4_0= ruleEString )
                    {
                    // InternalQualityBtCppParser.g:3448:5: (lv_ID_4_0= ruleEString )
                    // InternalQualityBtCppParser.g:3449:6: lv_ID_4_0= ruleEString
                    {

                    						newCompositeNode(grammarAccess.getReactiveFallbackNodeAccess().getIDEStringParserRuleCall_3_1_0());
                    					
                    pushFollow(FOLLOW_32);
                    lv_ID_4_0=ruleEString();

                    state._fsp--;


                    						if (current==null) {
                    							current = createModelElementForParent(grammarAccess.getReactiveFallbackNodeRule());
                    						}
                    						set(
                    							current,
                    							"ID",
                    							lv_ID_4_0,
                    							"org.xtext.btcpp.QualityBtCpp.EString");
                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }


                    }
                    break;

            }

            // InternalQualityBtCppParser.g:3467:3: (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )?
            int alt86=2;
            int LA86_0 = input.LA(1);

            if ( (LA86_0==Satisfices) ) {
                alt86=1;
            }
            switch (alt86) {
                case 1 :
                    // InternalQualityBtCppParser.g:3468:4: otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis
                    {
                    otherlv_5=(Token)match(input,Satisfices,FOLLOW_26); 

                    				newLeafNode(otherlv_5, grammarAccess.getReactiveFallbackNodeAccess().getSatisficesKeyword_4_0());
                    			
                    otherlv_6=(Token)match(input,LeftParenthesis,FOLLOW_3); 

                    				newLeafNode(otherlv_6, grammarAccess.getReactiveFallbackNodeAccess().getLeftParenthesisKeyword_4_1());
                    			
                    // InternalQualityBtCppParser.g:3476:4: ( ( ruleEString ) )
                    // InternalQualityBtCppParser.g:3477:5: ( ruleEString )
                    {
                    // InternalQualityBtCppParser.g:3477:5: ( ruleEString )
                    // InternalQualityBtCppParser.g:3478:6: ruleEString
                    {

                    						if (current==null) {
                    							current = createModelElement(grammarAccess.getReactiveFallbackNodeRule());
                    						}
                    					

                    						newCompositeNode(grammarAccess.getReactiveFallbackNodeAccess().getSatisficesQualityCrossReference_4_2_0());
                    					
                    pushFollow(FOLLOW_20);
                    ruleEString();

                    state._fsp--;


                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:3492:4: (otherlv_8= Comma ( ( ruleEString ) ) )*
                    loop85:
                    do {
                        int alt85=2;
                        int LA85_0 = input.LA(1);

                        if ( (LA85_0==Comma) ) {
                            alt85=1;
                        }


                        switch (alt85) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:3493:5: otherlv_8= Comma ( ( ruleEString ) )
                    	    {
                    	    otherlv_8=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_8, grammarAccess.getReactiveFallbackNodeAccess().getCommaKeyword_4_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:3497:5: ( ( ruleEString ) )
                    	    // InternalQualityBtCppParser.g:3498:6: ( ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:3498:6: ( ruleEString )
                    	    // InternalQualityBtCppParser.g:3499:7: ruleEString
                    	    {

                    	    							if (current==null) {
                    	    								current = createModelElement(grammarAccess.getReactiveFallbackNodeRule());
                    	    							}
                    	    						

                    	    							newCompositeNode(grammarAccess.getReactiveFallbackNodeAccess().getSatisficesQualityCrossReference_4_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_20);
                    	    ruleEString();

                    	    state._fsp--;


                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop85;
                        }
                    } while (true);

                    otherlv_10=(Token)match(input,RightParenthesis,FOLLOW_33); 

                    				newLeafNode(otherlv_10, grammarAccess.getReactiveFallbackNodeAccess().getRightParenthesisKeyword_4_4());
                    			

                    }
                    break;

            }

            // InternalQualityBtCppParser.g:3519:3: (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )?
            int alt88=2;
            int LA88_0 = input.LA(1);

            if ( (LA88_0==Satisfies) ) {
                alt88=1;
            }
            switch (alt88) {
                case 1 :
                    // InternalQualityBtCppParser.g:3520:4: otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis
                    {
                    otherlv_11=(Token)match(input,Satisfies,FOLLOW_26); 

                    				newLeafNode(otherlv_11, grammarAccess.getReactiveFallbackNodeAccess().getSatisfiesKeyword_5_0());
                    			
                    otherlv_12=(Token)match(input,LeftParenthesis,FOLLOW_3); 

                    				newLeafNode(otherlv_12, grammarAccess.getReactiveFallbackNodeAccess().getLeftParenthesisKeyword_5_1());
                    			
                    // InternalQualityBtCppParser.g:3528:4: ( ( ruleEString ) )
                    // InternalQualityBtCppParser.g:3529:5: ( ruleEString )
                    {
                    // InternalQualityBtCppParser.g:3529:5: ( ruleEString )
                    // InternalQualityBtCppParser.g:3530:6: ruleEString
                    {

                    						if (current==null) {
                    							current = createModelElement(grammarAccess.getReactiveFallbackNodeRule());
                    						}
                    					

                    						newCompositeNode(grammarAccess.getReactiveFallbackNodeAccess().getSatisfiesQualityRequirementCrossReference_5_2_0());
                    					
                    pushFollow(FOLLOW_20);
                    ruleEString();

                    state._fsp--;


                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:3544:4: (otherlv_14= Comma ( ( ruleEString ) ) )*
                    loop87:
                    do {
                        int alt87=2;
                        int LA87_0 = input.LA(1);

                        if ( (LA87_0==Comma) ) {
                            alt87=1;
                        }


                        switch (alt87) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:3545:5: otherlv_14= Comma ( ( ruleEString ) )
                    	    {
                    	    otherlv_14=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_14, grammarAccess.getReactiveFallbackNodeAccess().getCommaKeyword_5_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:3549:5: ( ( ruleEString ) )
                    	    // InternalQualityBtCppParser.g:3550:6: ( ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:3550:6: ( ruleEString )
                    	    // InternalQualityBtCppParser.g:3551:7: ruleEString
                    	    {

                    	    							if (current==null) {
                    	    								current = createModelElement(grammarAccess.getReactiveFallbackNodeRule());
                    	    							}
                    	    						

                    	    							newCompositeNode(grammarAccess.getReactiveFallbackNodeAccess().getSatisfiesQualityRequirementCrossReference_5_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_20);
                    	    ruleEString();

                    	    state._fsp--;


                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop87;
                        }
                    } while (true);

                    otherlv_16=(Token)match(input,RightParenthesis,FOLLOW_34); 

                    				newLeafNode(otherlv_16, grammarAccess.getReactiveFallbackNodeAccess().getRightParenthesisKeyword_5_4());
                    			

                    }
                    break;

            }

            // InternalQualityBtCppParser.g:3571:3: (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )?
            int alt90=2;
            int LA90_0 = input.LA(1);

            if ( (LA90_0==Parameters) ) {
                alt90=1;
            }
            switch (alt90) {
                case 1 :
                    // InternalQualityBtCppParser.g:3572:4: otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket
                    {
                    otherlv_17=(Token)match(input,Parameters,FOLLOW_21); 

                    				newLeafNode(otherlv_17, grammarAccess.getReactiveFallbackNodeAccess().getParametersKeyword_6_0());
                    			
                    otherlv_18=(Token)match(input,LeftCurlyBracket,FOLLOW_3); 

                    				newLeafNode(otherlv_18, grammarAccess.getReactiveFallbackNodeAccess().getLeftCurlyBracketKeyword_6_1());
                    			
                    // InternalQualityBtCppParser.g:3580:4: ( (lv_parameters_19_0= ruleParameter ) )
                    // InternalQualityBtCppParser.g:3581:5: (lv_parameters_19_0= ruleParameter )
                    {
                    // InternalQualityBtCppParser.g:3581:5: (lv_parameters_19_0= ruleParameter )
                    // InternalQualityBtCppParser.g:3582:6: lv_parameters_19_0= ruleParameter
                    {

                    						newCompositeNode(grammarAccess.getReactiveFallbackNodeAccess().getParametersParameterParserRuleCall_6_2_0());
                    					
                    pushFollow(FOLLOW_29);
                    lv_parameters_19_0=ruleParameter();

                    state._fsp--;


                    						if (current==null) {
                    							current = createModelElementForParent(grammarAccess.getReactiveFallbackNodeRule());
                    						}
                    						add(
                    							current,
                    							"parameters",
                    							lv_parameters_19_0,
                    							"org.xtext.btcpp.QualityBtCpp.Parameter");
                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:3599:4: (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )*
                    loop89:
                    do {
                        int alt89=2;
                        int LA89_0 = input.LA(1);

                        if ( (LA89_0==Comma) ) {
                            alt89=1;
                        }


                        switch (alt89) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:3600:5: otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) )
                    	    {
                    	    otherlv_20=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_20, grammarAccess.getReactiveFallbackNodeAccess().getCommaKeyword_6_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:3604:5: ( (lv_parameters_21_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:3605:6: (lv_parameters_21_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:3605:6: (lv_parameters_21_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:3606:7: lv_parameters_21_0= ruleParameter
                    	    {

                    	    							newCompositeNode(grammarAccess.getReactiveFallbackNodeAccess().getParametersParameterParserRuleCall_6_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_29);
                    	    lv_parameters_21_0=ruleParameter();

                    	    state._fsp--;


                    	    							if (current==null) {
                    	    								current = createModelElementForParent(grammarAccess.getReactiveFallbackNodeRule());
                    	    							}
                    	    							add(
                    	    								current,
                    	    								"parameters",
                    	    								lv_parameters_21_0,
                    	    								"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop89;
                        }
                    } while (true);

                    otherlv_22=(Token)match(input,RightCurlyBracket,FOLLOW_35); 

                    				newLeafNode(otherlv_22, grammarAccess.getReactiveFallbackNodeAccess().getRightCurlyBracketKeyword_6_4());
                    			

                    }
                    break;

            }

            otherlv_23=(Token)match(input,Child,FOLLOW_21); 

            			newLeafNode(otherlv_23, grammarAccess.getReactiveFallbackNodeAccess().getChildKeyword_7());
            		
            otherlv_24=(Token)match(input,LeftCurlyBracket,FOLLOW_9); 

            			newLeafNode(otherlv_24, grammarAccess.getReactiveFallbackNodeAccess().getLeftCurlyBracketKeyword_8());
            		
            // InternalQualityBtCppParser.g:3637:3: ( (lv_child_25_0= ruleTreeNode ) )
            // InternalQualityBtCppParser.g:3638:4: (lv_child_25_0= ruleTreeNode )
            {
            // InternalQualityBtCppParser.g:3638:4: (lv_child_25_0= ruleTreeNode )
            // InternalQualityBtCppParser.g:3639:5: lv_child_25_0= ruleTreeNode
            {

            					newCompositeNode(grammarAccess.getReactiveFallbackNodeAccess().getChildTreeNodeParserRuleCall_9_0());
            				
            pushFollow(FOLLOW_29);
            lv_child_25_0=ruleTreeNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getReactiveFallbackNodeRule());
            					}
            					add(
            						current,
            						"child",
            						lv_child_25_0,
            						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            // InternalQualityBtCppParser.g:3656:3: (otherlv_26= Comma ( (lv_child_27_0= ruleTreeNode ) ) )*
            loop91:
            do {
                int alt91=2;
                int LA91_0 = input.LA(1);

                if ( (LA91_0==Comma) ) {
                    alt91=1;
                }


                switch (alt91) {
            	case 1 :
            	    // InternalQualityBtCppParser.g:3657:4: otherlv_26= Comma ( (lv_child_27_0= ruleTreeNode ) )
            	    {
            	    otherlv_26=(Token)match(input,Comma,FOLLOW_9); 

            	    				newLeafNode(otherlv_26, grammarAccess.getReactiveFallbackNodeAccess().getCommaKeyword_10_0());
            	    			
            	    // InternalQualityBtCppParser.g:3661:4: ( (lv_child_27_0= ruleTreeNode ) )
            	    // InternalQualityBtCppParser.g:3662:5: (lv_child_27_0= ruleTreeNode )
            	    {
            	    // InternalQualityBtCppParser.g:3662:5: (lv_child_27_0= ruleTreeNode )
            	    // InternalQualityBtCppParser.g:3663:6: lv_child_27_0= ruleTreeNode
            	    {

            	    						newCompositeNode(grammarAccess.getReactiveFallbackNodeAccess().getChildTreeNodeParserRuleCall_10_1_0());
            	    					
            	    pushFollow(FOLLOW_29);
            	    lv_child_27_0=ruleTreeNode();

            	    state._fsp--;


            	    						if (current==null) {
            	    							current = createModelElementForParent(grammarAccess.getReactiveFallbackNodeRule());
            	    						}
            	    						add(
            	    							current,
            	    							"child",
            	    							lv_child_27_0,
            	    							"org.xtext.btcpp.QualityBtCpp.TreeNode");
            	    						afterParserOrEnumRuleCall();
            	    					

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop91;
                }
            } while (true);

            otherlv_28=(Token)match(input,RightCurlyBracket,FOLLOW_30); 

            			newLeafNode(otherlv_28, grammarAccess.getReactiveFallbackNodeAccess().getRightCurlyBracketKeyword_11());
            		
            otherlv_29=(Token)match(input,RightCurlyBracket,FOLLOW_2); 

            			newLeafNode(otherlv_29, grammarAccess.getReactiveFallbackNodeAccess().getRightCurlyBracketKeyword_12());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReactiveFallbackNode"


    // $ANTLR start "entryRuleWhileDoElseNode"
    // InternalQualityBtCppParser.g:3693:1: entryRuleWhileDoElseNode returns [EObject current=null] : iv_ruleWhileDoElseNode= ruleWhileDoElseNode EOF ;
    public final EObject entryRuleWhileDoElseNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleWhileDoElseNode = null;


        try {
            // InternalQualityBtCppParser.g:3693:56: (iv_ruleWhileDoElseNode= ruleWhileDoElseNode EOF )
            // InternalQualityBtCppParser.g:3694:2: iv_ruleWhileDoElseNode= ruleWhileDoElseNode EOF
            {
             newCompositeNode(grammarAccess.getWhileDoElseNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleWhileDoElseNode=ruleWhileDoElseNode();

            state._fsp--;

             current =iv_ruleWhileDoElseNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleWhileDoElseNode"


    // $ANTLR start "ruleWhileDoElseNode"
    // InternalQualityBtCppParser.g:3700:1: ruleWhileDoElseNode returns [EObject current=null] : (otherlv_0= WhileDoElseNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )? (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )? (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )? otherlv_23= Child otherlv_24= LeftCurlyBracket ( (lv_child_25_0= ruleTreeNode ) ) (otherlv_26= Comma ( (lv_child_27_0= ruleTreeNode ) ) )* otherlv_28= RightCurlyBracket otherlv_29= RightCurlyBracket ) ;
    public final EObject ruleWhileDoElseNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_17=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        Token otherlv_23=null;
        Token otherlv_24=null;
        Token otherlv_26=null;
        Token otherlv_28=null;
        Token otherlv_29=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_ID_4_0 = null;

        EObject lv_parameters_19_0 = null;

        EObject lv_parameters_21_0 = null;

        EObject lv_child_25_0 = null;

        EObject lv_child_27_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:3706:2: ( (otherlv_0= WhileDoElseNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )? (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )? (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )? otherlv_23= Child otherlv_24= LeftCurlyBracket ( (lv_child_25_0= ruleTreeNode ) ) (otherlv_26= Comma ( (lv_child_27_0= ruleTreeNode ) ) )* otherlv_28= RightCurlyBracket otherlv_29= RightCurlyBracket ) )
            // InternalQualityBtCppParser.g:3707:2: (otherlv_0= WhileDoElseNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )? (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )? (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )? otherlv_23= Child otherlv_24= LeftCurlyBracket ( (lv_child_25_0= ruleTreeNode ) ) (otherlv_26= Comma ( (lv_child_27_0= ruleTreeNode ) ) )* otherlv_28= RightCurlyBracket otherlv_29= RightCurlyBracket )
            {
            // InternalQualityBtCppParser.g:3707:2: (otherlv_0= WhileDoElseNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )? (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )? (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )? otherlv_23= Child otherlv_24= LeftCurlyBracket ( (lv_child_25_0= ruleTreeNode ) ) (otherlv_26= Comma ( (lv_child_27_0= ruleTreeNode ) ) )* otherlv_28= RightCurlyBracket otherlv_29= RightCurlyBracket )
            // InternalQualityBtCppParser.g:3708:3: otherlv_0= WhileDoElseNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )? (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )? (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )? otherlv_23= Child otherlv_24= LeftCurlyBracket ( (lv_child_25_0= ruleTreeNode ) ) (otherlv_26= Comma ( (lv_child_27_0= ruleTreeNode ) ) )* otherlv_28= RightCurlyBracket otherlv_29= RightCurlyBracket
            {
            otherlv_0=(Token)match(input,WhileDoElseNode,FOLLOW_3); 

            			newLeafNode(otherlv_0, grammarAccess.getWhileDoElseNodeAccess().getWhileDoElseNodeKeyword_0());
            		
            // InternalQualityBtCppParser.g:3712:3: ( (lv_name_1_0= ruleEString ) )
            // InternalQualityBtCppParser.g:3713:4: (lv_name_1_0= ruleEString )
            {
            // InternalQualityBtCppParser.g:3713:4: (lv_name_1_0= ruleEString )
            // InternalQualityBtCppParser.g:3714:5: lv_name_1_0= ruleEString
            {

            					newCompositeNode(grammarAccess.getWhileDoElseNodeAccess().getNameEStringParserRuleCall_1_0());
            				
            pushFollow(FOLLOW_21);
            lv_name_1_0=ruleEString();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getWhileDoElseNodeRule());
            					}
            					set(
            						current,
            						"name",
            						lv_name_1_0,
            						"org.xtext.btcpp.QualityBtCpp.EString");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            otherlv_2=(Token)match(input,LeftCurlyBracket,FOLLOW_31); 

            			newLeafNode(otherlv_2, grammarAccess.getWhileDoElseNodeAccess().getLeftCurlyBracketKeyword_2());
            		
            // InternalQualityBtCppParser.g:3735:3: (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )?
            int alt92=2;
            int LA92_0 = input.LA(1);

            if ( (LA92_0==ID) ) {
                alt92=1;
            }
            switch (alt92) {
                case 1 :
                    // InternalQualityBtCppParser.g:3736:4: otherlv_3= ID ( (lv_ID_4_0= ruleEString ) )
                    {
                    otherlv_3=(Token)match(input,ID,FOLLOW_3); 

                    				newLeafNode(otherlv_3, grammarAccess.getWhileDoElseNodeAccess().getIDKeyword_3_0());
                    			
                    // InternalQualityBtCppParser.g:3740:4: ( (lv_ID_4_0= ruleEString ) )
                    // InternalQualityBtCppParser.g:3741:5: (lv_ID_4_0= ruleEString )
                    {
                    // InternalQualityBtCppParser.g:3741:5: (lv_ID_4_0= ruleEString )
                    // InternalQualityBtCppParser.g:3742:6: lv_ID_4_0= ruleEString
                    {

                    						newCompositeNode(grammarAccess.getWhileDoElseNodeAccess().getIDEStringParserRuleCall_3_1_0());
                    					
                    pushFollow(FOLLOW_32);
                    lv_ID_4_0=ruleEString();

                    state._fsp--;


                    						if (current==null) {
                    							current = createModelElementForParent(grammarAccess.getWhileDoElseNodeRule());
                    						}
                    						set(
                    							current,
                    							"ID",
                    							lv_ID_4_0,
                    							"org.xtext.btcpp.QualityBtCpp.EString");
                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }


                    }
                    break;

            }

            // InternalQualityBtCppParser.g:3760:3: (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )?
            int alt94=2;
            int LA94_0 = input.LA(1);

            if ( (LA94_0==Satisfices) ) {
                alt94=1;
            }
            switch (alt94) {
                case 1 :
                    // InternalQualityBtCppParser.g:3761:4: otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis
                    {
                    otherlv_5=(Token)match(input,Satisfices,FOLLOW_26); 

                    				newLeafNode(otherlv_5, grammarAccess.getWhileDoElseNodeAccess().getSatisficesKeyword_4_0());
                    			
                    otherlv_6=(Token)match(input,LeftParenthesis,FOLLOW_3); 

                    				newLeafNode(otherlv_6, grammarAccess.getWhileDoElseNodeAccess().getLeftParenthesisKeyword_4_1());
                    			
                    // InternalQualityBtCppParser.g:3769:4: ( ( ruleEString ) )
                    // InternalQualityBtCppParser.g:3770:5: ( ruleEString )
                    {
                    // InternalQualityBtCppParser.g:3770:5: ( ruleEString )
                    // InternalQualityBtCppParser.g:3771:6: ruleEString
                    {

                    						if (current==null) {
                    							current = createModelElement(grammarAccess.getWhileDoElseNodeRule());
                    						}
                    					

                    						newCompositeNode(grammarAccess.getWhileDoElseNodeAccess().getSatisficesQualityCrossReference_4_2_0());
                    					
                    pushFollow(FOLLOW_20);
                    ruleEString();

                    state._fsp--;


                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:3785:4: (otherlv_8= Comma ( ( ruleEString ) ) )*
                    loop93:
                    do {
                        int alt93=2;
                        int LA93_0 = input.LA(1);

                        if ( (LA93_0==Comma) ) {
                            alt93=1;
                        }


                        switch (alt93) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:3786:5: otherlv_8= Comma ( ( ruleEString ) )
                    	    {
                    	    otherlv_8=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_8, grammarAccess.getWhileDoElseNodeAccess().getCommaKeyword_4_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:3790:5: ( ( ruleEString ) )
                    	    // InternalQualityBtCppParser.g:3791:6: ( ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:3791:6: ( ruleEString )
                    	    // InternalQualityBtCppParser.g:3792:7: ruleEString
                    	    {

                    	    							if (current==null) {
                    	    								current = createModelElement(grammarAccess.getWhileDoElseNodeRule());
                    	    							}
                    	    						

                    	    							newCompositeNode(grammarAccess.getWhileDoElseNodeAccess().getSatisficesQualityCrossReference_4_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_20);
                    	    ruleEString();

                    	    state._fsp--;


                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop93;
                        }
                    } while (true);

                    otherlv_10=(Token)match(input,RightParenthesis,FOLLOW_33); 

                    				newLeafNode(otherlv_10, grammarAccess.getWhileDoElseNodeAccess().getRightParenthesisKeyword_4_4());
                    			

                    }
                    break;

            }

            // InternalQualityBtCppParser.g:3812:3: (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )?
            int alt96=2;
            int LA96_0 = input.LA(1);

            if ( (LA96_0==Satisfies) ) {
                alt96=1;
            }
            switch (alt96) {
                case 1 :
                    // InternalQualityBtCppParser.g:3813:4: otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis
                    {
                    otherlv_11=(Token)match(input,Satisfies,FOLLOW_26); 

                    				newLeafNode(otherlv_11, grammarAccess.getWhileDoElseNodeAccess().getSatisfiesKeyword_5_0());
                    			
                    otherlv_12=(Token)match(input,LeftParenthesis,FOLLOW_3); 

                    				newLeafNode(otherlv_12, grammarAccess.getWhileDoElseNodeAccess().getLeftParenthesisKeyword_5_1());
                    			
                    // InternalQualityBtCppParser.g:3821:4: ( ( ruleEString ) )
                    // InternalQualityBtCppParser.g:3822:5: ( ruleEString )
                    {
                    // InternalQualityBtCppParser.g:3822:5: ( ruleEString )
                    // InternalQualityBtCppParser.g:3823:6: ruleEString
                    {

                    						if (current==null) {
                    							current = createModelElement(grammarAccess.getWhileDoElseNodeRule());
                    						}
                    					

                    						newCompositeNode(grammarAccess.getWhileDoElseNodeAccess().getSatisfiesQualityRequirementCrossReference_5_2_0());
                    					
                    pushFollow(FOLLOW_20);
                    ruleEString();

                    state._fsp--;


                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:3837:4: (otherlv_14= Comma ( ( ruleEString ) ) )*
                    loop95:
                    do {
                        int alt95=2;
                        int LA95_0 = input.LA(1);

                        if ( (LA95_0==Comma) ) {
                            alt95=1;
                        }


                        switch (alt95) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:3838:5: otherlv_14= Comma ( ( ruleEString ) )
                    	    {
                    	    otherlv_14=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_14, grammarAccess.getWhileDoElseNodeAccess().getCommaKeyword_5_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:3842:5: ( ( ruleEString ) )
                    	    // InternalQualityBtCppParser.g:3843:6: ( ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:3843:6: ( ruleEString )
                    	    // InternalQualityBtCppParser.g:3844:7: ruleEString
                    	    {

                    	    							if (current==null) {
                    	    								current = createModelElement(grammarAccess.getWhileDoElseNodeRule());
                    	    							}
                    	    						

                    	    							newCompositeNode(grammarAccess.getWhileDoElseNodeAccess().getSatisfiesQualityRequirementCrossReference_5_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_20);
                    	    ruleEString();

                    	    state._fsp--;


                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop95;
                        }
                    } while (true);

                    otherlv_16=(Token)match(input,RightParenthesis,FOLLOW_34); 

                    				newLeafNode(otherlv_16, grammarAccess.getWhileDoElseNodeAccess().getRightParenthesisKeyword_5_4());
                    			

                    }
                    break;

            }

            // InternalQualityBtCppParser.g:3864:3: (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )?
            int alt98=2;
            int LA98_0 = input.LA(1);

            if ( (LA98_0==Parameters) ) {
                alt98=1;
            }
            switch (alt98) {
                case 1 :
                    // InternalQualityBtCppParser.g:3865:4: otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket
                    {
                    otherlv_17=(Token)match(input,Parameters,FOLLOW_21); 

                    				newLeafNode(otherlv_17, grammarAccess.getWhileDoElseNodeAccess().getParametersKeyword_6_0());
                    			
                    otherlv_18=(Token)match(input,LeftCurlyBracket,FOLLOW_3); 

                    				newLeafNode(otherlv_18, grammarAccess.getWhileDoElseNodeAccess().getLeftCurlyBracketKeyword_6_1());
                    			
                    // InternalQualityBtCppParser.g:3873:4: ( (lv_parameters_19_0= ruleParameter ) )
                    // InternalQualityBtCppParser.g:3874:5: (lv_parameters_19_0= ruleParameter )
                    {
                    // InternalQualityBtCppParser.g:3874:5: (lv_parameters_19_0= ruleParameter )
                    // InternalQualityBtCppParser.g:3875:6: lv_parameters_19_0= ruleParameter
                    {

                    						newCompositeNode(grammarAccess.getWhileDoElseNodeAccess().getParametersParameterParserRuleCall_6_2_0());
                    					
                    pushFollow(FOLLOW_29);
                    lv_parameters_19_0=ruleParameter();

                    state._fsp--;


                    						if (current==null) {
                    							current = createModelElementForParent(grammarAccess.getWhileDoElseNodeRule());
                    						}
                    						add(
                    							current,
                    							"parameters",
                    							lv_parameters_19_0,
                    							"org.xtext.btcpp.QualityBtCpp.Parameter");
                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:3892:4: (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )*
                    loop97:
                    do {
                        int alt97=2;
                        int LA97_0 = input.LA(1);

                        if ( (LA97_0==Comma) ) {
                            alt97=1;
                        }


                        switch (alt97) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:3893:5: otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) )
                    	    {
                    	    otherlv_20=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_20, grammarAccess.getWhileDoElseNodeAccess().getCommaKeyword_6_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:3897:5: ( (lv_parameters_21_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:3898:6: (lv_parameters_21_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:3898:6: (lv_parameters_21_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:3899:7: lv_parameters_21_0= ruleParameter
                    	    {

                    	    							newCompositeNode(grammarAccess.getWhileDoElseNodeAccess().getParametersParameterParserRuleCall_6_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_29);
                    	    lv_parameters_21_0=ruleParameter();

                    	    state._fsp--;


                    	    							if (current==null) {
                    	    								current = createModelElementForParent(grammarAccess.getWhileDoElseNodeRule());
                    	    							}
                    	    							add(
                    	    								current,
                    	    								"parameters",
                    	    								lv_parameters_21_0,
                    	    								"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop97;
                        }
                    } while (true);

                    otherlv_22=(Token)match(input,RightCurlyBracket,FOLLOW_35); 

                    				newLeafNode(otherlv_22, grammarAccess.getWhileDoElseNodeAccess().getRightCurlyBracketKeyword_6_4());
                    			

                    }
                    break;

            }

            otherlv_23=(Token)match(input,Child,FOLLOW_21); 

            			newLeafNode(otherlv_23, grammarAccess.getWhileDoElseNodeAccess().getChildKeyword_7());
            		
            otherlv_24=(Token)match(input,LeftCurlyBracket,FOLLOW_9); 

            			newLeafNode(otherlv_24, grammarAccess.getWhileDoElseNodeAccess().getLeftCurlyBracketKeyword_8());
            		
            // InternalQualityBtCppParser.g:3930:3: ( (lv_child_25_0= ruleTreeNode ) )
            // InternalQualityBtCppParser.g:3931:4: (lv_child_25_0= ruleTreeNode )
            {
            // InternalQualityBtCppParser.g:3931:4: (lv_child_25_0= ruleTreeNode )
            // InternalQualityBtCppParser.g:3932:5: lv_child_25_0= ruleTreeNode
            {

            					newCompositeNode(grammarAccess.getWhileDoElseNodeAccess().getChildTreeNodeParserRuleCall_9_0());
            				
            pushFollow(FOLLOW_29);
            lv_child_25_0=ruleTreeNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getWhileDoElseNodeRule());
            					}
            					add(
            						current,
            						"child",
            						lv_child_25_0,
            						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            // InternalQualityBtCppParser.g:3949:3: (otherlv_26= Comma ( (lv_child_27_0= ruleTreeNode ) ) )*
            loop99:
            do {
                int alt99=2;
                int LA99_0 = input.LA(1);

                if ( (LA99_0==Comma) ) {
                    alt99=1;
                }


                switch (alt99) {
            	case 1 :
            	    // InternalQualityBtCppParser.g:3950:4: otherlv_26= Comma ( (lv_child_27_0= ruleTreeNode ) )
            	    {
            	    otherlv_26=(Token)match(input,Comma,FOLLOW_9); 

            	    				newLeafNode(otherlv_26, grammarAccess.getWhileDoElseNodeAccess().getCommaKeyword_10_0());
            	    			
            	    // InternalQualityBtCppParser.g:3954:4: ( (lv_child_27_0= ruleTreeNode ) )
            	    // InternalQualityBtCppParser.g:3955:5: (lv_child_27_0= ruleTreeNode )
            	    {
            	    // InternalQualityBtCppParser.g:3955:5: (lv_child_27_0= ruleTreeNode )
            	    // InternalQualityBtCppParser.g:3956:6: lv_child_27_0= ruleTreeNode
            	    {

            	    						newCompositeNode(grammarAccess.getWhileDoElseNodeAccess().getChildTreeNodeParserRuleCall_10_1_0());
            	    					
            	    pushFollow(FOLLOW_29);
            	    lv_child_27_0=ruleTreeNode();

            	    state._fsp--;


            	    						if (current==null) {
            	    							current = createModelElementForParent(grammarAccess.getWhileDoElseNodeRule());
            	    						}
            	    						add(
            	    							current,
            	    							"child",
            	    							lv_child_27_0,
            	    							"org.xtext.btcpp.QualityBtCpp.TreeNode");
            	    						afterParserOrEnumRuleCall();
            	    					

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop99;
                }
            } while (true);

            otherlv_28=(Token)match(input,RightCurlyBracket,FOLLOW_30); 

            			newLeafNode(otherlv_28, grammarAccess.getWhileDoElseNodeAccess().getRightCurlyBracketKeyword_11());
            		
            otherlv_29=(Token)match(input,RightCurlyBracket,FOLLOW_2); 

            			newLeafNode(otherlv_29, grammarAccess.getWhileDoElseNodeAccess().getRightCurlyBracketKeyword_12());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleWhileDoElseNode"


    // $ANTLR start "entryRuleReactiveSequenceNode"
    // InternalQualityBtCppParser.g:3986:1: entryRuleReactiveSequenceNode returns [EObject current=null] : iv_ruleReactiveSequenceNode= ruleReactiveSequenceNode EOF ;
    public final EObject entryRuleReactiveSequenceNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReactiveSequenceNode = null;


        try {
            // InternalQualityBtCppParser.g:3986:61: (iv_ruleReactiveSequenceNode= ruleReactiveSequenceNode EOF )
            // InternalQualityBtCppParser.g:3987:2: iv_ruleReactiveSequenceNode= ruleReactiveSequenceNode EOF
            {
             newCompositeNode(grammarAccess.getReactiveSequenceNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleReactiveSequenceNode=ruleReactiveSequenceNode();

            state._fsp--;

             current =iv_ruleReactiveSequenceNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleReactiveSequenceNode"


    // $ANTLR start "ruleReactiveSequenceNode"
    // InternalQualityBtCppParser.g:3993:1: ruleReactiveSequenceNode returns [EObject current=null] : (otherlv_0= ReactiveSequenceNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )? (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )? (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )? otherlv_23= Child otherlv_24= LeftCurlyBracket ( (lv_child_25_0= ruleTreeNode ) ) (otherlv_26= Comma ( (lv_child_27_0= ruleTreeNode ) ) )* otherlv_28= RightCurlyBracket otherlv_29= RightCurlyBracket ) ;
    public final EObject ruleReactiveSequenceNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_17=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        Token otherlv_23=null;
        Token otherlv_24=null;
        Token otherlv_26=null;
        Token otherlv_28=null;
        Token otherlv_29=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_ID_4_0 = null;

        EObject lv_parameters_19_0 = null;

        EObject lv_parameters_21_0 = null;

        EObject lv_child_25_0 = null;

        EObject lv_child_27_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:3999:2: ( (otherlv_0= ReactiveSequenceNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )? (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )? (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )? otherlv_23= Child otherlv_24= LeftCurlyBracket ( (lv_child_25_0= ruleTreeNode ) ) (otherlv_26= Comma ( (lv_child_27_0= ruleTreeNode ) ) )* otherlv_28= RightCurlyBracket otherlv_29= RightCurlyBracket ) )
            // InternalQualityBtCppParser.g:4000:2: (otherlv_0= ReactiveSequenceNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )? (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )? (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )? otherlv_23= Child otherlv_24= LeftCurlyBracket ( (lv_child_25_0= ruleTreeNode ) ) (otherlv_26= Comma ( (lv_child_27_0= ruleTreeNode ) ) )* otherlv_28= RightCurlyBracket otherlv_29= RightCurlyBracket )
            {
            // InternalQualityBtCppParser.g:4000:2: (otherlv_0= ReactiveSequenceNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )? (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )? (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )? otherlv_23= Child otherlv_24= LeftCurlyBracket ( (lv_child_25_0= ruleTreeNode ) ) (otherlv_26= Comma ( (lv_child_27_0= ruleTreeNode ) ) )* otherlv_28= RightCurlyBracket otherlv_29= RightCurlyBracket )
            // InternalQualityBtCppParser.g:4001:3: otherlv_0= ReactiveSequenceNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )? (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )? (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )? otherlv_23= Child otherlv_24= LeftCurlyBracket ( (lv_child_25_0= ruleTreeNode ) ) (otherlv_26= Comma ( (lv_child_27_0= ruleTreeNode ) ) )* otherlv_28= RightCurlyBracket otherlv_29= RightCurlyBracket
            {
            otherlv_0=(Token)match(input,ReactiveSequenceNode,FOLLOW_3); 

            			newLeafNode(otherlv_0, grammarAccess.getReactiveSequenceNodeAccess().getReactiveSequenceNodeKeyword_0());
            		
            // InternalQualityBtCppParser.g:4005:3: ( (lv_name_1_0= ruleEString ) )
            // InternalQualityBtCppParser.g:4006:4: (lv_name_1_0= ruleEString )
            {
            // InternalQualityBtCppParser.g:4006:4: (lv_name_1_0= ruleEString )
            // InternalQualityBtCppParser.g:4007:5: lv_name_1_0= ruleEString
            {

            					newCompositeNode(grammarAccess.getReactiveSequenceNodeAccess().getNameEStringParserRuleCall_1_0());
            				
            pushFollow(FOLLOW_21);
            lv_name_1_0=ruleEString();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getReactiveSequenceNodeRule());
            					}
            					set(
            						current,
            						"name",
            						lv_name_1_0,
            						"org.xtext.btcpp.QualityBtCpp.EString");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            otherlv_2=(Token)match(input,LeftCurlyBracket,FOLLOW_31); 

            			newLeafNode(otherlv_2, grammarAccess.getReactiveSequenceNodeAccess().getLeftCurlyBracketKeyword_2());
            		
            // InternalQualityBtCppParser.g:4028:3: (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )?
            int alt100=2;
            int LA100_0 = input.LA(1);

            if ( (LA100_0==ID) ) {
                alt100=1;
            }
            switch (alt100) {
                case 1 :
                    // InternalQualityBtCppParser.g:4029:4: otherlv_3= ID ( (lv_ID_4_0= ruleEString ) )
                    {
                    otherlv_3=(Token)match(input,ID,FOLLOW_3); 

                    				newLeafNode(otherlv_3, grammarAccess.getReactiveSequenceNodeAccess().getIDKeyword_3_0());
                    			
                    // InternalQualityBtCppParser.g:4033:4: ( (lv_ID_4_0= ruleEString ) )
                    // InternalQualityBtCppParser.g:4034:5: (lv_ID_4_0= ruleEString )
                    {
                    // InternalQualityBtCppParser.g:4034:5: (lv_ID_4_0= ruleEString )
                    // InternalQualityBtCppParser.g:4035:6: lv_ID_4_0= ruleEString
                    {

                    						newCompositeNode(grammarAccess.getReactiveSequenceNodeAccess().getIDEStringParserRuleCall_3_1_0());
                    					
                    pushFollow(FOLLOW_32);
                    lv_ID_4_0=ruleEString();

                    state._fsp--;


                    						if (current==null) {
                    							current = createModelElementForParent(grammarAccess.getReactiveSequenceNodeRule());
                    						}
                    						set(
                    							current,
                    							"ID",
                    							lv_ID_4_0,
                    							"org.xtext.btcpp.QualityBtCpp.EString");
                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }


                    }
                    break;

            }

            // InternalQualityBtCppParser.g:4053:3: (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )?
            int alt102=2;
            int LA102_0 = input.LA(1);

            if ( (LA102_0==Satisfices) ) {
                alt102=1;
            }
            switch (alt102) {
                case 1 :
                    // InternalQualityBtCppParser.g:4054:4: otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis
                    {
                    otherlv_5=(Token)match(input,Satisfices,FOLLOW_26); 

                    				newLeafNode(otherlv_5, grammarAccess.getReactiveSequenceNodeAccess().getSatisficesKeyword_4_0());
                    			
                    otherlv_6=(Token)match(input,LeftParenthesis,FOLLOW_3); 

                    				newLeafNode(otherlv_6, grammarAccess.getReactiveSequenceNodeAccess().getLeftParenthesisKeyword_4_1());
                    			
                    // InternalQualityBtCppParser.g:4062:4: ( ( ruleEString ) )
                    // InternalQualityBtCppParser.g:4063:5: ( ruleEString )
                    {
                    // InternalQualityBtCppParser.g:4063:5: ( ruleEString )
                    // InternalQualityBtCppParser.g:4064:6: ruleEString
                    {

                    						if (current==null) {
                    							current = createModelElement(grammarAccess.getReactiveSequenceNodeRule());
                    						}
                    					

                    						newCompositeNode(grammarAccess.getReactiveSequenceNodeAccess().getSatisficesQualityCrossReference_4_2_0());
                    					
                    pushFollow(FOLLOW_20);
                    ruleEString();

                    state._fsp--;


                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:4078:4: (otherlv_8= Comma ( ( ruleEString ) ) )*
                    loop101:
                    do {
                        int alt101=2;
                        int LA101_0 = input.LA(1);

                        if ( (LA101_0==Comma) ) {
                            alt101=1;
                        }


                        switch (alt101) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:4079:5: otherlv_8= Comma ( ( ruleEString ) )
                    	    {
                    	    otherlv_8=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_8, grammarAccess.getReactiveSequenceNodeAccess().getCommaKeyword_4_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:4083:5: ( ( ruleEString ) )
                    	    // InternalQualityBtCppParser.g:4084:6: ( ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:4084:6: ( ruleEString )
                    	    // InternalQualityBtCppParser.g:4085:7: ruleEString
                    	    {

                    	    							if (current==null) {
                    	    								current = createModelElement(grammarAccess.getReactiveSequenceNodeRule());
                    	    							}
                    	    						

                    	    							newCompositeNode(grammarAccess.getReactiveSequenceNodeAccess().getSatisficesQualityCrossReference_4_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_20);
                    	    ruleEString();

                    	    state._fsp--;


                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop101;
                        }
                    } while (true);

                    otherlv_10=(Token)match(input,RightParenthesis,FOLLOW_33); 

                    				newLeafNode(otherlv_10, grammarAccess.getReactiveSequenceNodeAccess().getRightParenthesisKeyword_4_4());
                    			

                    }
                    break;

            }

            // InternalQualityBtCppParser.g:4105:3: (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )?
            int alt104=2;
            int LA104_0 = input.LA(1);

            if ( (LA104_0==Satisfies) ) {
                alt104=1;
            }
            switch (alt104) {
                case 1 :
                    // InternalQualityBtCppParser.g:4106:4: otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis
                    {
                    otherlv_11=(Token)match(input,Satisfies,FOLLOW_26); 

                    				newLeafNode(otherlv_11, grammarAccess.getReactiveSequenceNodeAccess().getSatisfiesKeyword_5_0());
                    			
                    otherlv_12=(Token)match(input,LeftParenthesis,FOLLOW_3); 

                    				newLeafNode(otherlv_12, grammarAccess.getReactiveSequenceNodeAccess().getLeftParenthesisKeyword_5_1());
                    			
                    // InternalQualityBtCppParser.g:4114:4: ( ( ruleEString ) )
                    // InternalQualityBtCppParser.g:4115:5: ( ruleEString )
                    {
                    // InternalQualityBtCppParser.g:4115:5: ( ruleEString )
                    // InternalQualityBtCppParser.g:4116:6: ruleEString
                    {

                    						if (current==null) {
                    							current = createModelElement(grammarAccess.getReactiveSequenceNodeRule());
                    						}
                    					

                    						newCompositeNode(grammarAccess.getReactiveSequenceNodeAccess().getSatisfiesQualityRequirementCrossReference_5_2_0());
                    					
                    pushFollow(FOLLOW_20);
                    ruleEString();

                    state._fsp--;


                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:4130:4: (otherlv_14= Comma ( ( ruleEString ) ) )*
                    loop103:
                    do {
                        int alt103=2;
                        int LA103_0 = input.LA(1);

                        if ( (LA103_0==Comma) ) {
                            alt103=1;
                        }


                        switch (alt103) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:4131:5: otherlv_14= Comma ( ( ruleEString ) )
                    	    {
                    	    otherlv_14=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_14, grammarAccess.getReactiveSequenceNodeAccess().getCommaKeyword_5_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:4135:5: ( ( ruleEString ) )
                    	    // InternalQualityBtCppParser.g:4136:6: ( ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:4136:6: ( ruleEString )
                    	    // InternalQualityBtCppParser.g:4137:7: ruleEString
                    	    {

                    	    							if (current==null) {
                    	    								current = createModelElement(grammarAccess.getReactiveSequenceNodeRule());
                    	    							}
                    	    						

                    	    							newCompositeNode(grammarAccess.getReactiveSequenceNodeAccess().getSatisfiesQualityRequirementCrossReference_5_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_20);
                    	    ruleEString();

                    	    state._fsp--;


                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop103;
                        }
                    } while (true);

                    otherlv_16=(Token)match(input,RightParenthesis,FOLLOW_34); 

                    				newLeafNode(otherlv_16, grammarAccess.getReactiveSequenceNodeAccess().getRightParenthesisKeyword_5_4());
                    			

                    }
                    break;

            }

            // InternalQualityBtCppParser.g:4157:3: (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )?
            int alt106=2;
            int LA106_0 = input.LA(1);

            if ( (LA106_0==Parameters) ) {
                alt106=1;
            }
            switch (alt106) {
                case 1 :
                    // InternalQualityBtCppParser.g:4158:4: otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket
                    {
                    otherlv_17=(Token)match(input,Parameters,FOLLOW_21); 

                    				newLeafNode(otherlv_17, grammarAccess.getReactiveSequenceNodeAccess().getParametersKeyword_6_0());
                    			
                    otherlv_18=(Token)match(input,LeftCurlyBracket,FOLLOW_3); 

                    				newLeafNode(otherlv_18, grammarAccess.getReactiveSequenceNodeAccess().getLeftCurlyBracketKeyword_6_1());
                    			
                    // InternalQualityBtCppParser.g:4166:4: ( (lv_parameters_19_0= ruleParameter ) )
                    // InternalQualityBtCppParser.g:4167:5: (lv_parameters_19_0= ruleParameter )
                    {
                    // InternalQualityBtCppParser.g:4167:5: (lv_parameters_19_0= ruleParameter )
                    // InternalQualityBtCppParser.g:4168:6: lv_parameters_19_0= ruleParameter
                    {

                    						newCompositeNode(grammarAccess.getReactiveSequenceNodeAccess().getParametersParameterParserRuleCall_6_2_0());
                    					
                    pushFollow(FOLLOW_29);
                    lv_parameters_19_0=ruleParameter();

                    state._fsp--;


                    						if (current==null) {
                    							current = createModelElementForParent(grammarAccess.getReactiveSequenceNodeRule());
                    						}
                    						add(
                    							current,
                    							"parameters",
                    							lv_parameters_19_0,
                    							"org.xtext.btcpp.QualityBtCpp.Parameter");
                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:4185:4: (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )*
                    loop105:
                    do {
                        int alt105=2;
                        int LA105_0 = input.LA(1);

                        if ( (LA105_0==Comma) ) {
                            alt105=1;
                        }


                        switch (alt105) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:4186:5: otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) )
                    	    {
                    	    otherlv_20=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_20, grammarAccess.getReactiveSequenceNodeAccess().getCommaKeyword_6_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:4190:5: ( (lv_parameters_21_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:4191:6: (lv_parameters_21_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:4191:6: (lv_parameters_21_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:4192:7: lv_parameters_21_0= ruleParameter
                    	    {

                    	    							newCompositeNode(grammarAccess.getReactiveSequenceNodeAccess().getParametersParameterParserRuleCall_6_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_29);
                    	    lv_parameters_21_0=ruleParameter();

                    	    state._fsp--;


                    	    							if (current==null) {
                    	    								current = createModelElementForParent(grammarAccess.getReactiveSequenceNodeRule());
                    	    							}
                    	    							add(
                    	    								current,
                    	    								"parameters",
                    	    								lv_parameters_21_0,
                    	    								"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop105;
                        }
                    } while (true);

                    otherlv_22=(Token)match(input,RightCurlyBracket,FOLLOW_35); 

                    				newLeafNode(otherlv_22, grammarAccess.getReactiveSequenceNodeAccess().getRightCurlyBracketKeyword_6_4());
                    			

                    }
                    break;

            }

            otherlv_23=(Token)match(input,Child,FOLLOW_21); 

            			newLeafNode(otherlv_23, grammarAccess.getReactiveSequenceNodeAccess().getChildKeyword_7());
            		
            otherlv_24=(Token)match(input,LeftCurlyBracket,FOLLOW_9); 

            			newLeafNode(otherlv_24, grammarAccess.getReactiveSequenceNodeAccess().getLeftCurlyBracketKeyword_8());
            		
            // InternalQualityBtCppParser.g:4223:3: ( (lv_child_25_0= ruleTreeNode ) )
            // InternalQualityBtCppParser.g:4224:4: (lv_child_25_0= ruleTreeNode )
            {
            // InternalQualityBtCppParser.g:4224:4: (lv_child_25_0= ruleTreeNode )
            // InternalQualityBtCppParser.g:4225:5: lv_child_25_0= ruleTreeNode
            {

            					newCompositeNode(grammarAccess.getReactiveSequenceNodeAccess().getChildTreeNodeParserRuleCall_9_0());
            				
            pushFollow(FOLLOW_29);
            lv_child_25_0=ruleTreeNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getReactiveSequenceNodeRule());
            					}
            					add(
            						current,
            						"child",
            						lv_child_25_0,
            						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            // InternalQualityBtCppParser.g:4242:3: (otherlv_26= Comma ( (lv_child_27_0= ruleTreeNode ) ) )*
            loop107:
            do {
                int alt107=2;
                int LA107_0 = input.LA(1);

                if ( (LA107_0==Comma) ) {
                    alt107=1;
                }


                switch (alt107) {
            	case 1 :
            	    // InternalQualityBtCppParser.g:4243:4: otherlv_26= Comma ( (lv_child_27_0= ruleTreeNode ) )
            	    {
            	    otherlv_26=(Token)match(input,Comma,FOLLOW_9); 

            	    				newLeafNode(otherlv_26, grammarAccess.getReactiveSequenceNodeAccess().getCommaKeyword_10_0());
            	    			
            	    // InternalQualityBtCppParser.g:4247:4: ( (lv_child_27_0= ruleTreeNode ) )
            	    // InternalQualityBtCppParser.g:4248:5: (lv_child_27_0= ruleTreeNode )
            	    {
            	    // InternalQualityBtCppParser.g:4248:5: (lv_child_27_0= ruleTreeNode )
            	    // InternalQualityBtCppParser.g:4249:6: lv_child_27_0= ruleTreeNode
            	    {

            	    						newCompositeNode(grammarAccess.getReactiveSequenceNodeAccess().getChildTreeNodeParserRuleCall_10_1_0());
            	    					
            	    pushFollow(FOLLOW_29);
            	    lv_child_27_0=ruleTreeNode();

            	    state._fsp--;


            	    						if (current==null) {
            	    							current = createModelElementForParent(grammarAccess.getReactiveSequenceNodeRule());
            	    						}
            	    						add(
            	    							current,
            	    							"child",
            	    							lv_child_27_0,
            	    							"org.xtext.btcpp.QualityBtCpp.TreeNode");
            	    						afterParserOrEnumRuleCall();
            	    					

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop107;
                }
            } while (true);

            otherlv_28=(Token)match(input,RightCurlyBracket,FOLLOW_30); 

            			newLeafNode(otherlv_28, grammarAccess.getReactiveSequenceNodeAccess().getRightCurlyBracketKeyword_11());
            		
            otherlv_29=(Token)match(input,RightCurlyBracket,FOLLOW_2); 

            			newLeafNode(otherlv_29, grammarAccess.getReactiveSequenceNodeAccess().getRightCurlyBracketKeyword_12());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReactiveSequenceNode"


    // $ANTLR start "entryRuleSequenceNode"
    // InternalQualityBtCppParser.g:4279:1: entryRuleSequenceNode returns [EObject current=null] : iv_ruleSequenceNode= ruleSequenceNode EOF ;
    public final EObject entryRuleSequenceNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSequenceNode = null;


        try {
            // InternalQualityBtCppParser.g:4279:53: (iv_ruleSequenceNode= ruleSequenceNode EOF )
            // InternalQualityBtCppParser.g:4280:2: iv_ruleSequenceNode= ruleSequenceNode EOF
            {
             newCompositeNode(grammarAccess.getSequenceNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleSequenceNode=ruleSequenceNode();

            state._fsp--;

             current =iv_ruleSequenceNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSequenceNode"


    // $ANTLR start "ruleSequenceNode"
    // InternalQualityBtCppParser.g:4286:1: ruleSequenceNode returns [EObject current=null] : (otherlv_0= SequenceNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )? (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )? (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )? otherlv_23= Child otherlv_24= LeftCurlyBracket ( (lv_child_25_0= ruleTreeNode ) ) (otherlv_26= Comma ( (lv_child_27_0= ruleTreeNode ) ) )* otherlv_28= RightCurlyBracket otherlv_29= RightCurlyBracket ) ;
    public final EObject ruleSequenceNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_17=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        Token otherlv_23=null;
        Token otherlv_24=null;
        Token otherlv_26=null;
        Token otherlv_28=null;
        Token otherlv_29=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_ID_4_0 = null;

        EObject lv_parameters_19_0 = null;

        EObject lv_parameters_21_0 = null;

        EObject lv_child_25_0 = null;

        EObject lv_child_27_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:4292:2: ( (otherlv_0= SequenceNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )? (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )? (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )? otherlv_23= Child otherlv_24= LeftCurlyBracket ( (lv_child_25_0= ruleTreeNode ) ) (otherlv_26= Comma ( (lv_child_27_0= ruleTreeNode ) ) )* otherlv_28= RightCurlyBracket otherlv_29= RightCurlyBracket ) )
            // InternalQualityBtCppParser.g:4293:2: (otherlv_0= SequenceNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )? (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )? (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )? otherlv_23= Child otherlv_24= LeftCurlyBracket ( (lv_child_25_0= ruleTreeNode ) ) (otherlv_26= Comma ( (lv_child_27_0= ruleTreeNode ) ) )* otherlv_28= RightCurlyBracket otherlv_29= RightCurlyBracket )
            {
            // InternalQualityBtCppParser.g:4293:2: (otherlv_0= SequenceNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )? (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )? (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )? otherlv_23= Child otherlv_24= LeftCurlyBracket ( (lv_child_25_0= ruleTreeNode ) ) (otherlv_26= Comma ( (lv_child_27_0= ruleTreeNode ) ) )* otherlv_28= RightCurlyBracket otherlv_29= RightCurlyBracket )
            // InternalQualityBtCppParser.g:4294:3: otherlv_0= SequenceNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )? (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )? (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )? otherlv_23= Child otherlv_24= LeftCurlyBracket ( (lv_child_25_0= ruleTreeNode ) ) (otherlv_26= Comma ( (lv_child_27_0= ruleTreeNode ) ) )* otherlv_28= RightCurlyBracket otherlv_29= RightCurlyBracket
            {
            otherlv_0=(Token)match(input,SequenceNode,FOLLOW_3); 

            			newLeafNode(otherlv_0, grammarAccess.getSequenceNodeAccess().getSequenceNodeKeyword_0());
            		
            // InternalQualityBtCppParser.g:4298:3: ( (lv_name_1_0= ruleEString ) )
            // InternalQualityBtCppParser.g:4299:4: (lv_name_1_0= ruleEString )
            {
            // InternalQualityBtCppParser.g:4299:4: (lv_name_1_0= ruleEString )
            // InternalQualityBtCppParser.g:4300:5: lv_name_1_0= ruleEString
            {

            					newCompositeNode(grammarAccess.getSequenceNodeAccess().getNameEStringParserRuleCall_1_0());
            				
            pushFollow(FOLLOW_21);
            lv_name_1_0=ruleEString();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getSequenceNodeRule());
            					}
            					set(
            						current,
            						"name",
            						lv_name_1_0,
            						"org.xtext.btcpp.QualityBtCpp.EString");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            otherlv_2=(Token)match(input,LeftCurlyBracket,FOLLOW_31); 

            			newLeafNode(otherlv_2, grammarAccess.getSequenceNodeAccess().getLeftCurlyBracketKeyword_2());
            		
            // InternalQualityBtCppParser.g:4321:3: (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )?
            int alt108=2;
            int LA108_0 = input.LA(1);

            if ( (LA108_0==ID) ) {
                alt108=1;
            }
            switch (alt108) {
                case 1 :
                    // InternalQualityBtCppParser.g:4322:4: otherlv_3= ID ( (lv_ID_4_0= ruleEString ) )
                    {
                    otherlv_3=(Token)match(input,ID,FOLLOW_3); 

                    				newLeafNode(otherlv_3, grammarAccess.getSequenceNodeAccess().getIDKeyword_3_0());
                    			
                    // InternalQualityBtCppParser.g:4326:4: ( (lv_ID_4_0= ruleEString ) )
                    // InternalQualityBtCppParser.g:4327:5: (lv_ID_4_0= ruleEString )
                    {
                    // InternalQualityBtCppParser.g:4327:5: (lv_ID_4_0= ruleEString )
                    // InternalQualityBtCppParser.g:4328:6: lv_ID_4_0= ruleEString
                    {

                    						newCompositeNode(grammarAccess.getSequenceNodeAccess().getIDEStringParserRuleCall_3_1_0());
                    					
                    pushFollow(FOLLOW_32);
                    lv_ID_4_0=ruleEString();

                    state._fsp--;


                    						if (current==null) {
                    							current = createModelElementForParent(grammarAccess.getSequenceNodeRule());
                    						}
                    						set(
                    							current,
                    							"ID",
                    							lv_ID_4_0,
                    							"org.xtext.btcpp.QualityBtCpp.EString");
                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }


                    }
                    break;

            }

            // InternalQualityBtCppParser.g:4346:3: (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )?
            int alt110=2;
            int LA110_0 = input.LA(1);

            if ( (LA110_0==Satisfices) ) {
                alt110=1;
            }
            switch (alt110) {
                case 1 :
                    // InternalQualityBtCppParser.g:4347:4: otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis
                    {
                    otherlv_5=(Token)match(input,Satisfices,FOLLOW_26); 

                    				newLeafNode(otherlv_5, grammarAccess.getSequenceNodeAccess().getSatisficesKeyword_4_0());
                    			
                    otherlv_6=(Token)match(input,LeftParenthesis,FOLLOW_3); 

                    				newLeafNode(otherlv_6, grammarAccess.getSequenceNodeAccess().getLeftParenthesisKeyword_4_1());
                    			
                    // InternalQualityBtCppParser.g:4355:4: ( ( ruleEString ) )
                    // InternalQualityBtCppParser.g:4356:5: ( ruleEString )
                    {
                    // InternalQualityBtCppParser.g:4356:5: ( ruleEString )
                    // InternalQualityBtCppParser.g:4357:6: ruleEString
                    {

                    						if (current==null) {
                    							current = createModelElement(grammarAccess.getSequenceNodeRule());
                    						}
                    					

                    						newCompositeNode(grammarAccess.getSequenceNodeAccess().getSatisficesQualityCrossReference_4_2_0());
                    					
                    pushFollow(FOLLOW_20);
                    ruleEString();

                    state._fsp--;


                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:4371:4: (otherlv_8= Comma ( ( ruleEString ) ) )*
                    loop109:
                    do {
                        int alt109=2;
                        int LA109_0 = input.LA(1);

                        if ( (LA109_0==Comma) ) {
                            alt109=1;
                        }


                        switch (alt109) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:4372:5: otherlv_8= Comma ( ( ruleEString ) )
                    	    {
                    	    otherlv_8=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_8, grammarAccess.getSequenceNodeAccess().getCommaKeyword_4_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:4376:5: ( ( ruleEString ) )
                    	    // InternalQualityBtCppParser.g:4377:6: ( ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:4377:6: ( ruleEString )
                    	    // InternalQualityBtCppParser.g:4378:7: ruleEString
                    	    {

                    	    							if (current==null) {
                    	    								current = createModelElement(grammarAccess.getSequenceNodeRule());
                    	    							}
                    	    						

                    	    							newCompositeNode(grammarAccess.getSequenceNodeAccess().getSatisficesQualityCrossReference_4_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_20);
                    	    ruleEString();

                    	    state._fsp--;


                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop109;
                        }
                    } while (true);

                    otherlv_10=(Token)match(input,RightParenthesis,FOLLOW_33); 

                    				newLeafNode(otherlv_10, grammarAccess.getSequenceNodeAccess().getRightParenthesisKeyword_4_4());
                    			

                    }
                    break;

            }

            // InternalQualityBtCppParser.g:4398:3: (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )?
            int alt112=2;
            int LA112_0 = input.LA(1);

            if ( (LA112_0==Satisfies) ) {
                alt112=1;
            }
            switch (alt112) {
                case 1 :
                    // InternalQualityBtCppParser.g:4399:4: otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis
                    {
                    otherlv_11=(Token)match(input,Satisfies,FOLLOW_26); 

                    				newLeafNode(otherlv_11, grammarAccess.getSequenceNodeAccess().getSatisfiesKeyword_5_0());
                    			
                    otherlv_12=(Token)match(input,LeftParenthesis,FOLLOW_3); 

                    				newLeafNode(otherlv_12, grammarAccess.getSequenceNodeAccess().getLeftParenthesisKeyword_5_1());
                    			
                    // InternalQualityBtCppParser.g:4407:4: ( ( ruleEString ) )
                    // InternalQualityBtCppParser.g:4408:5: ( ruleEString )
                    {
                    // InternalQualityBtCppParser.g:4408:5: ( ruleEString )
                    // InternalQualityBtCppParser.g:4409:6: ruleEString
                    {

                    						if (current==null) {
                    							current = createModelElement(grammarAccess.getSequenceNodeRule());
                    						}
                    					

                    						newCompositeNode(grammarAccess.getSequenceNodeAccess().getSatisfiesQualityRequirementCrossReference_5_2_0());
                    					
                    pushFollow(FOLLOW_20);
                    ruleEString();

                    state._fsp--;


                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:4423:4: (otherlv_14= Comma ( ( ruleEString ) ) )*
                    loop111:
                    do {
                        int alt111=2;
                        int LA111_0 = input.LA(1);

                        if ( (LA111_0==Comma) ) {
                            alt111=1;
                        }


                        switch (alt111) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:4424:5: otherlv_14= Comma ( ( ruleEString ) )
                    	    {
                    	    otherlv_14=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_14, grammarAccess.getSequenceNodeAccess().getCommaKeyword_5_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:4428:5: ( ( ruleEString ) )
                    	    // InternalQualityBtCppParser.g:4429:6: ( ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:4429:6: ( ruleEString )
                    	    // InternalQualityBtCppParser.g:4430:7: ruleEString
                    	    {

                    	    							if (current==null) {
                    	    								current = createModelElement(grammarAccess.getSequenceNodeRule());
                    	    							}
                    	    						

                    	    							newCompositeNode(grammarAccess.getSequenceNodeAccess().getSatisfiesQualityRequirementCrossReference_5_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_20);
                    	    ruleEString();

                    	    state._fsp--;


                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop111;
                        }
                    } while (true);

                    otherlv_16=(Token)match(input,RightParenthesis,FOLLOW_34); 

                    				newLeafNode(otherlv_16, grammarAccess.getSequenceNodeAccess().getRightParenthesisKeyword_5_4());
                    			

                    }
                    break;

            }

            // InternalQualityBtCppParser.g:4450:3: (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )?
            int alt114=2;
            int LA114_0 = input.LA(1);

            if ( (LA114_0==Parameters) ) {
                alt114=1;
            }
            switch (alt114) {
                case 1 :
                    // InternalQualityBtCppParser.g:4451:4: otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket
                    {
                    otherlv_17=(Token)match(input,Parameters,FOLLOW_21); 

                    				newLeafNode(otherlv_17, grammarAccess.getSequenceNodeAccess().getParametersKeyword_6_0());
                    			
                    otherlv_18=(Token)match(input,LeftCurlyBracket,FOLLOW_3); 

                    				newLeafNode(otherlv_18, grammarAccess.getSequenceNodeAccess().getLeftCurlyBracketKeyword_6_1());
                    			
                    // InternalQualityBtCppParser.g:4459:4: ( (lv_parameters_19_0= ruleParameter ) )
                    // InternalQualityBtCppParser.g:4460:5: (lv_parameters_19_0= ruleParameter )
                    {
                    // InternalQualityBtCppParser.g:4460:5: (lv_parameters_19_0= ruleParameter )
                    // InternalQualityBtCppParser.g:4461:6: lv_parameters_19_0= ruleParameter
                    {

                    						newCompositeNode(grammarAccess.getSequenceNodeAccess().getParametersParameterParserRuleCall_6_2_0());
                    					
                    pushFollow(FOLLOW_29);
                    lv_parameters_19_0=ruleParameter();

                    state._fsp--;


                    						if (current==null) {
                    							current = createModelElementForParent(grammarAccess.getSequenceNodeRule());
                    						}
                    						add(
                    							current,
                    							"parameters",
                    							lv_parameters_19_0,
                    							"org.xtext.btcpp.QualityBtCpp.Parameter");
                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:4478:4: (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )*
                    loop113:
                    do {
                        int alt113=2;
                        int LA113_0 = input.LA(1);

                        if ( (LA113_0==Comma) ) {
                            alt113=1;
                        }


                        switch (alt113) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:4479:5: otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) )
                    	    {
                    	    otherlv_20=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_20, grammarAccess.getSequenceNodeAccess().getCommaKeyword_6_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:4483:5: ( (lv_parameters_21_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:4484:6: (lv_parameters_21_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:4484:6: (lv_parameters_21_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:4485:7: lv_parameters_21_0= ruleParameter
                    	    {

                    	    							newCompositeNode(grammarAccess.getSequenceNodeAccess().getParametersParameterParserRuleCall_6_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_29);
                    	    lv_parameters_21_0=ruleParameter();

                    	    state._fsp--;


                    	    							if (current==null) {
                    	    								current = createModelElementForParent(grammarAccess.getSequenceNodeRule());
                    	    							}
                    	    							add(
                    	    								current,
                    	    								"parameters",
                    	    								lv_parameters_21_0,
                    	    								"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop113;
                        }
                    } while (true);

                    otherlv_22=(Token)match(input,RightCurlyBracket,FOLLOW_35); 

                    				newLeafNode(otherlv_22, grammarAccess.getSequenceNodeAccess().getRightCurlyBracketKeyword_6_4());
                    			

                    }
                    break;

            }

            otherlv_23=(Token)match(input,Child,FOLLOW_21); 

            			newLeafNode(otherlv_23, grammarAccess.getSequenceNodeAccess().getChildKeyword_7());
            		
            otherlv_24=(Token)match(input,LeftCurlyBracket,FOLLOW_9); 

            			newLeafNode(otherlv_24, grammarAccess.getSequenceNodeAccess().getLeftCurlyBracketKeyword_8());
            		
            // InternalQualityBtCppParser.g:4516:3: ( (lv_child_25_0= ruleTreeNode ) )
            // InternalQualityBtCppParser.g:4517:4: (lv_child_25_0= ruleTreeNode )
            {
            // InternalQualityBtCppParser.g:4517:4: (lv_child_25_0= ruleTreeNode )
            // InternalQualityBtCppParser.g:4518:5: lv_child_25_0= ruleTreeNode
            {

            					newCompositeNode(grammarAccess.getSequenceNodeAccess().getChildTreeNodeParserRuleCall_9_0());
            				
            pushFollow(FOLLOW_29);
            lv_child_25_0=ruleTreeNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getSequenceNodeRule());
            					}
            					add(
            						current,
            						"child",
            						lv_child_25_0,
            						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            // InternalQualityBtCppParser.g:4535:3: (otherlv_26= Comma ( (lv_child_27_0= ruleTreeNode ) ) )*
            loop115:
            do {
                int alt115=2;
                int LA115_0 = input.LA(1);

                if ( (LA115_0==Comma) ) {
                    alt115=1;
                }


                switch (alt115) {
            	case 1 :
            	    // InternalQualityBtCppParser.g:4536:4: otherlv_26= Comma ( (lv_child_27_0= ruleTreeNode ) )
            	    {
            	    otherlv_26=(Token)match(input,Comma,FOLLOW_9); 

            	    				newLeafNode(otherlv_26, grammarAccess.getSequenceNodeAccess().getCommaKeyword_10_0());
            	    			
            	    // InternalQualityBtCppParser.g:4540:4: ( (lv_child_27_0= ruleTreeNode ) )
            	    // InternalQualityBtCppParser.g:4541:5: (lv_child_27_0= ruleTreeNode )
            	    {
            	    // InternalQualityBtCppParser.g:4541:5: (lv_child_27_0= ruleTreeNode )
            	    // InternalQualityBtCppParser.g:4542:6: lv_child_27_0= ruleTreeNode
            	    {

            	    						newCompositeNode(grammarAccess.getSequenceNodeAccess().getChildTreeNodeParserRuleCall_10_1_0());
            	    					
            	    pushFollow(FOLLOW_29);
            	    lv_child_27_0=ruleTreeNode();

            	    state._fsp--;


            	    						if (current==null) {
            	    							current = createModelElementForParent(grammarAccess.getSequenceNodeRule());
            	    						}
            	    						add(
            	    							current,
            	    							"child",
            	    							lv_child_27_0,
            	    							"org.xtext.btcpp.QualityBtCpp.TreeNode");
            	    						afterParserOrEnumRuleCall();
            	    					

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop115;
                }
            } while (true);

            otherlv_28=(Token)match(input,RightCurlyBracket,FOLLOW_30); 

            			newLeafNode(otherlv_28, grammarAccess.getSequenceNodeAccess().getRightCurlyBracketKeyword_11());
            		
            otherlv_29=(Token)match(input,RightCurlyBracket,FOLLOW_2); 

            			newLeafNode(otherlv_29, grammarAccess.getSequenceNodeAccess().getRightCurlyBracketKeyword_12());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSequenceNode"


    // $ANTLR start "entryRuleTimeoutNode"
    // InternalQualityBtCppParser.g:4572:1: entryRuleTimeoutNode returns [EObject current=null] : iv_ruleTimeoutNode= ruleTimeoutNode EOF ;
    public final EObject entryRuleTimeoutNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTimeoutNode = null;


        try {
            // InternalQualityBtCppParser.g:4572:52: (iv_ruleTimeoutNode= ruleTimeoutNode EOF )
            // InternalQualityBtCppParser.g:4573:2: iv_ruleTimeoutNode= ruleTimeoutNode EOF
            {
             newCompositeNode(grammarAccess.getTimeoutNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleTimeoutNode=ruleTimeoutNode();

            state._fsp--;

             current =iv_ruleTimeoutNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTimeoutNode"


    // $ANTLR start "ruleTimeoutNode"
    // InternalQualityBtCppParser.g:4579:1: ruleTimeoutNode returns [EObject current=null] : (otherlv_0= TimeoutNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? otherlv_5= Msec ( (lv_msec_6_0= ruleEString ) ) (otherlv_7= Satisfices otherlv_8= LeftParenthesis ( ( ruleEString ) ) (otherlv_10= Comma ( ( ruleEString ) ) )* otherlv_12= RightParenthesis )? (otherlv_13= Satisfies otherlv_14= LeftParenthesis ( ( ruleEString ) ) (otherlv_16= Comma ( ( ruleEString ) ) )* otherlv_18= RightParenthesis )? (otherlv_19= Parameters otherlv_20= LeftCurlyBracket ( (lv_parameters_21_0= ruleParameter ) ) (otherlv_22= Comma ( (lv_parameters_23_0= ruleParameter ) ) )* otherlv_24= RightCurlyBracket )? otherlv_25= Child ( (lv_child_26_0= ruleTreeNode ) ) otherlv_27= RightCurlyBracket ) ;
    public final EObject ruleTimeoutNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token otherlv_19=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        Token otherlv_24=null;
        Token otherlv_25=null;
        Token otherlv_27=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_ID_4_0 = null;

        AntlrDatatypeRuleToken lv_msec_6_0 = null;

        EObject lv_parameters_21_0 = null;

        EObject lv_parameters_23_0 = null;

        EObject lv_child_26_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:4585:2: ( (otherlv_0= TimeoutNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? otherlv_5= Msec ( (lv_msec_6_0= ruleEString ) ) (otherlv_7= Satisfices otherlv_8= LeftParenthesis ( ( ruleEString ) ) (otherlv_10= Comma ( ( ruleEString ) ) )* otherlv_12= RightParenthesis )? (otherlv_13= Satisfies otherlv_14= LeftParenthesis ( ( ruleEString ) ) (otherlv_16= Comma ( ( ruleEString ) ) )* otherlv_18= RightParenthesis )? (otherlv_19= Parameters otherlv_20= LeftCurlyBracket ( (lv_parameters_21_0= ruleParameter ) ) (otherlv_22= Comma ( (lv_parameters_23_0= ruleParameter ) ) )* otherlv_24= RightCurlyBracket )? otherlv_25= Child ( (lv_child_26_0= ruleTreeNode ) ) otherlv_27= RightCurlyBracket ) )
            // InternalQualityBtCppParser.g:4586:2: (otherlv_0= TimeoutNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? otherlv_5= Msec ( (lv_msec_6_0= ruleEString ) ) (otherlv_7= Satisfices otherlv_8= LeftParenthesis ( ( ruleEString ) ) (otherlv_10= Comma ( ( ruleEString ) ) )* otherlv_12= RightParenthesis )? (otherlv_13= Satisfies otherlv_14= LeftParenthesis ( ( ruleEString ) ) (otherlv_16= Comma ( ( ruleEString ) ) )* otherlv_18= RightParenthesis )? (otherlv_19= Parameters otherlv_20= LeftCurlyBracket ( (lv_parameters_21_0= ruleParameter ) ) (otherlv_22= Comma ( (lv_parameters_23_0= ruleParameter ) ) )* otherlv_24= RightCurlyBracket )? otherlv_25= Child ( (lv_child_26_0= ruleTreeNode ) ) otherlv_27= RightCurlyBracket )
            {
            // InternalQualityBtCppParser.g:4586:2: (otherlv_0= TimeoutNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? otherlv_5= Msec ( (lv_msec_6_0= ruleEString ) ) (otherlv_7= Satisfices otherlv_8= LeftParenthesis ( ( ruleEString ) ) (otherlv_10= Comma ( ( ruleEString ) ) )* otherlv_12= RightParenthesis )? (otherlv_13= Satisfies otherlv_14= LeftParenthesis ( ( ruleEString ) ) (otherlv_16= Comma ( ( ruleEString ) ) )* otherlv_18= RightParenthesis )? (otherlv_19= Parameters otherlv_20= LeftCurlyBracket ( (lv_parameters_21_0= ruleParameter ) ) (otherlv_22= Comma ( (lv_parameters_23_0= ruleParameter ) ) )* otherlv_24= RightCurlyBracket )? otherlv_25= Child ( (lv_child_26_0= ruleTreeNode ) ) otherlv_27= RightCurlyBracket )
            // InternalQualityBtCppParser.g:4587:3: otherlv_0= TimeoutNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? otherlv_5= Msec ( (lv_msec_6_0= ruleEString ) ) (otherlv_7= Satisfices otherlv_8= LeftParenthesis ( ( ruleEString ) ) (otherlv_10= Comma ( ( ruleEString ) ) )* otherlv_12= RightParenthesis )? (otherlv_13= Satisfies otherlv_14= LeftParenthesis ( ( ruleEString ) ) (otherlv_16= Comma ( ( ruleEString ) ) )* otherlv_18= RightParenthesis )? (otherlv_19= Parameters otherlv_20= LeftCurlyBracket ( (lv_parameters_21_0= ruleParameter ) ) (otherlv_22= Comma ( (lv_parameters_23_0= ruleParameter ) ) )* otherlv_24= RightCurlyBracket )? otherlv_25= Child ( (lv_child_26_0= ruleTreeNode ) ) otherlv_27= RightCurlyBracket
            {
            otherlv_0=(Token)match(input,TimeoutNode,FOLLOW_3); 

            			newLeafNode(otherlv_0, grammarAccess.getTimeoutNodeAccess().getTimeoutNodeKeyword_0());
            		
            // InternalQualityBtCppParser.g:4591:3: ( (lv_name_1_0= ruleEString ) )
            // InternalQualityBtCppParser.g:4592:4: (lv_name_1_0= ruleEString )
            {
            // InternalQualityBtCppParser.g:4592:4: (lv_name_1_0= ruleEString )
            // InternalQualityBtCppParser.g:4593:5: lv_name_1_0= ruleEString
            {

            					newCompositeNode(grammarAccess.getTimeoutNodeAccess().getNameEStringParserRuleCall_1_0());
            				
            pushFollow(FOLLOW_21);
            lv_name_1_0=ruleEString();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getTimeoutNodeRule());
            					}
            					set(
            						current,
            						"name",
            						lv_name_1_0,
            						"org.xtext.btcpp.QualityBtCpp.EString");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            otherlv_2=(Token)match(input,LeftCurlyBracket,FOLLOW_36); 

            			newLeafNode(otherlv_2, grammarAccess.getTimeoutNodeAccess().getLeftCurlyBracketKeyword_2());
            		
            // InternalQualityBtCppParser.g:4614:3: (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )?
            int alt116=2;
            int LA116_0 = input.LA(1);

            if ( (LA116_0==ID) ) {
                alt116=1;
            }
            switch (alt116) {
                case 1 :
                    // InternalQualityBtCppParser.g:4615:4: otherlv_3= ID ( (lv_ID_4_0= ruleEString ) )
                    {
                    otherlv_3=(Token)match(input,ID,FOLLOW_3); 

                    				newLeafNode(otherlv_3, grammarAccess.getTimeoutNodeAccess().getIDKeyword_3_0());
                    			
                    // InternalQualityBtCppParser.g:4619:4: ( (lv_ID_4_0= ruleEString ) )
                    // InternalQualityBtCppParser.g:4620:5: (lv_ID_4_0= ruleEString )
                    {
                    // InternalQualityBtCppParser.g:4620:5: (lv_ID_4_0= ruleEString )
                    // InternalQualityBtCppParser.g:4621:6: lv_ID_4_0= ruleEString
                    {

                    						newCompositeNode(grammarAccess.getTimeoutNodeAccess().getIDEStringParserRuleCall_3_1_0());
                    					
                    pushFollow(FOLLOW_37);
                    lv_ID_4_0=ruleEString();

                    state._fsp--;


                    						if (current==null) {
                    							current = createModelElementForParent(grammarAccess.getTimeoutNodeRule());
                    						}
                    						set(
                    							current,
                    							"ID",
                    							lv_ID_4_0,
                    							"org.xtext.btcpp.QualityBtCpp.EString");
                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }


                    }
                    break;

            }

            otherlv_5=(Token)match(input,Msec,FOLLOW_3); 

            			newLeafNode(otherlv_5, grammarAccess.getTimeoutNodeAccess().getMsecKeyword_4());
            		
            // InternalQualityBtCppParser.g:4643:3: ( (lv_msec_6_0= ruleEString ) )
            // InternalQualityBtCppParser.g:4644:4: (lv_msec_6_0= ruleEString )
            {
            // InternalQualityBtCppParser.g:4644:4: (lv_msec_6_0= ruleEString )
            // InternalQualityBtCppParser.g:4645:5: lv_msec_6_0= ruleEString
            {

            					newCompositeNode(grammarAccess.getTimeoutNodeAccess().getMsecEStringParserRuleCall_5_0());
            				
            pushFollow(FOLLOW_32);
            lv_msec_6_0=ruleEString();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getTimeoutNodeRule());
            					}
            					set(
            						current,
            						"msec",
            						lv_msec_6_0,
            						"org.xtext.btcpp.QualityBtCpp.EString");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            // InternalQualityBtCppParser.g:4662:3: (otherlv_7= Satisfices otherlv_8= LeftParenthesis ( ( ruleEString ) ) (otherlv_10= Comma ( ( ruleEString ) ) )* otherlv_12= RightParenthesis )?
            int alt118=2;
            int LA118_0 = input.LA(1);

            if ( (LA118_0==Satisfices) ) {
                alt118=1;
            }
            switch (alt118) {
                case 1 :
                    // InternalQualityBtCppParser.g:4663:4: otherlv_7= Satisfices otherlv_8= LeftParenthesis ( ( ruleEString ) ) (otherlv_10= Comma ( ( ruleEString ) ) )* otherlv_12= RightParenthesis
                    {
                    otherlv_7=(Token)match(input,Satisfices,FOLLOW_26); 

                    				newLeafNode(otherlv_7, grammarAccess.getTimeoutNodeAccess().getSatisficesKeyword_6_0());
                    			
                    otherlv_8=(Token)match(input,LeftParenthesis,FOLLOW_3); 

                    				newLeafNode(otherlv_8, grammarAccess.getTimeoutNodeAccess().getLeftParenthesisKeyword_6_1());
                    			
                    // InternalQualityBtCppParser.g:4671:4: ( ( ruleEString ) )
                    // InternalQualityBtCppParser.g:4672:5: ( ruleEString )
                    {
                    // InternalQualityBtCppParser.g:4672:5: ( ruleEString )
                    // InternalQualityBtCppParser.g:4673:6: ruleEString
                    {

                    						if (current==null) {
                    							current = createModelElement(grammarAccess.getTimeoutNodeRule());
                    						}
                    					

                    						newCompositeNode(grammarAccess.getTimeoutNodeAccess().getSatisficesQualityCrossReference_6_2_0());
                    					
                    pushFollow(FOLLOW_20);
                    ruleEString();

                    state._fsp--;


                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:4687:4: (otherlv_10= Comma ( ( ruleEString ) ) )*
                    loop117:
                    do {
                        int alt117=2;
                        int LA117_0 = input.LA(1);

                        if ( (LA117_0==Comma) ) {
                            alt117=1;
                        }


                        switch (alt117) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:4688:5: otherlv_10= Comma ( ( ruleEString ) )
                    	    {
                    	    otherlv_10=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_10, grammarAccess.getTimeoutNodeAccess().getCommaKeyword_6_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:4692:5: ( ( ruleEString ) )
                    	    // InternalQualityBtCppParser.g:4693:6: ( ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:4693:6: ( ruleEString )
                    	    // InternalQualityBtCppParser.g:4694:7: ruleEString
                    	    {

                    	    							if (current==null) {
                    	    								current = createModelElement(grammarAccess.getTimeoutNodeRule());
                    	    							}
                    	    						

                    	    							newCompositeNode(grammarAccess.getTimeoutNodeAccess().getSatisficesQualityCrossReference_6_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_20);
                    	    ruleEString();

                    	    state._fsp--;


                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop117;
                        }
                    } while (true);

                    otherlv_12=(Token)match(input,RightParenthesis,FOLLOW_33); 

                    				newLeafNode(otherlv_12, grammarAccess.getTimeoutNodeAccess().getRightParenthesisKeyword_6_4());
                    			

                    }
                    break;

            }

            // InternalQualityBtCppParser.g:4714:3: (otherlv_13= Satisfies otherlv_14= LeftParenthesis ( ( ruleEString ) ) (otherlv_16= Comma ( ( ruleEString ) ) )* otherlv_18= RightParenthesis )?
            int alt120=2;
            int LA120_0 = input.LA(1);

            if ( (LA120_0==Satisfies) ) {
                alt120=1;
            }
            switch (alt120) {
                case 1 :
                    // InternalQualityBtCppParser.g:4715:4: otherlv_13= Satisfies otherlv_14= LeftParenthesis ( ( ruleEString ) ) (otherlv_16= Comma ( ( ruleEString ) ) )* otherlv_18= RightParenthesis
                    {
                    otherlv_13=(Token)match(input,Satisfies,FOLLOW_26); 

                    				newLeafNode(otherlv_13, grammarAccess.getTimeoutNodeAccess().getSatisfiesKeyword_7_0());
                    			
                    otherlv_14=(Token)match(input,LeftParenthesis,FOLLOW_3); 

                    				newLeafNode(otherlv_14, grammarAccess.getTimeoutNodeAccess().getLeftParenthesisKeyword_7_1());
                    			
                    // InternalQualityBtCppParser.g:4723:4: ( ( ruleEString ) )
                    // InternalQualityBtCppParser.g:4724:5: ( ruleEString )
                    {
                    // InternalQualityBtCppParser.g:4724:5: ( ruleEString )
                    // InternalQualityBtCppParser.g:4725:6: ruleEString
                    {

                    						if (current==null) {
                    							current = createModelElement(grammarAccess.getTimeoutNodeRule());
                    						}
                    					

                    						newCompositeNode(grammarAccess.getTimeoutNodeAccess().getSatisfiesQualityRequirementCrossReference_7_2_0());
                    					
                    pushFollow(FOLLOW_20);
                    ruleEString();

                    state._fsp--;


                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:4739:4: (otherlv_16= Comma ( ( ruleEString ) ) )*
                    loop119:
                    do {
                        int alt119=2;
                        int LA119_0 = input.LA(1);

                        if ( (LA119_0==Comma) ) {
                            alt119=1;
                        }


                        switch (alt119) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:4740:5: otherlv_16= Comma ( ( ruleEString ) )
                    	    {
                    	    otherlv_16=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_16, grammarAccess.getTimeoutNodeAccess().getCommaKeyword_7_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:4744:5: ( ( ruleEString ) )
                    	    // InternalQualityBtCppParser.g:4745:6: ( ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:4745:6: ( ruleEString )
                    	    // InternalQualityBtCppParser.g:4746:7: ruleEString
                    	    {

                    	    							if (current==null) {
                    	    								current = createModelElement(grammarAccess.getTimeoutNodeRule());
                    	    							}
                    	    						

                    	    							newCompositeNode(grammarAccess.getTimeoutNodeAccess().getSatisfiesQualityRequirementCrossReference_7_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_20);
                    	    ruleEString();

                    	    state._fsp--;


                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop119;
                        }
                    } while (true);

                    otherlv_18=(Token)match(input,RightParenthesis,FOLLOW_34); 

                    				newLeafNode(otherlv_18, grammarAccess.getTimeoutNodeAccess().getRightParenthesisKeyword_7_4());
                    			

                    }
                    break;

            }

            // InternalQualityBtCppParser.g:4766:3: (otherlv_19= Parameters otherlv_20= LeftCurlyBracket ( (lv_parameters_21_0= ruleParameter ) ) (otherlv_22= Comma ( (lv_parameters_23_0= ruleParameter ) ) )* otherlv_24= RightCurlyBracket )?
            int alt122=2;
            int LA122_0 = input.LA(1);

            if ( (LA122_0==Parameters) ) {
                alt122=1;
            }
            switch (alt122) {
                case 1 :
                    // InternalQualityBtCppParser.g:4767:4: otherlv_19= Parameters otherlv_20= LeftCurlyBracket ( (lv_parameters_21_0= ruleParameter ) ) (otherlv_22= Comma ( (lv_parameters_23_0= ruleParameter ) ) )* otherlv_24= RightCurlyBracket
                    {
                    otherlv_19=(Token)match(input,Parameters,FOLLOW_21); 

                    				newLeafNode(otherlv_19, grammarAccess.getTimeoutNodeAccess().getParametersKeyword_8_0());
                    			
                    otherlv_20=(Token)match(input,LeftCurlyBracket,FOLLOW_3); 

                    				newLeafNode(otherlv_20, grammarAccess.getTimeoutNodeAccess().getLeftCurlyBracketKeyword_8_1());
                    			
                    // InternalQualityBtCppParser.g:4775:4: ( (lv_parameters_21_0= ruleParameter ) )
                    // InternalQualityBtCppParser.g:4776:5: (lv_parameters_21_0= ruleParameter )
                    {
                    // InternalQualityBtCppParser.g:4776:5: (lv_parameters_21_0= ruleParameter )
                    // InternalQualityBtCppParser.g:4777:6: lv_parameters_21_0= ruleParameter
                    {

                    						newCompositeNode(grammarAccess.getTimeoutNodeAccess().getParametersParameterParserRuleCall_8_2_0());
                    					
                    pushFollow(FOLLOW_29);
                    lv_parameters_21_0=ruleParameter();

                    state._fsp--;


                    						if (current==null) {
                    							current = createModelElementForParent(grammarAccess.getTimeoutNodeRule());
                    						}
                    						add(
                    							current,
                    							"parameters",
                    							lv_parameters_21_0,
                    							"org.xtext.btcpp.QualityBtCpp.Parameter");
                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:4794:4: (otherlv_22= Comma ( (lv_parameters_23_0= ruleParameter ) ) )*
                    loop121:
                    do {
                        int alt121=2;
                        int LA121_0 = input.LA(1);

                        if ( (LA121_0==Comma) ) {
                            alt121=1;
                        }


                        switch (alt121) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:4795:5: otherlv_22= Comma ( (lv_parameters_23_0= ruleParameter ) )
                    	    {
                    	    otherlv_22=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_22, grammarAccess.getTimeoutNodeAccess().getCommaKeyword_8_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:4799:5: ( (lv_parameters_23_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:4800:6: (lv_parameters_23_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:4800:6: (lv_parameters_23_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:4801:7: lv_parameters_23_0= ruleParameter
                    	    {

                    	    							newCompositeNode(grammarAccess.getTimeoutNodeAccess().getParametersParameterParserRuleCall_8_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_29);
                    	    lv_parameters_23_0=ruleParameter();

                    	    state._fsp--;


                    	    							if (current==null) {
                    	    								current = createModelElementForParent(grammarAccess.getTimeoutNodeRule());
                    	    							}
                    	    							add(
                    	    								current,
                    	    								"parameters",
                    	    								lv_parameters_23_0,
                    	    								"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop121;
                        }
                    } while (true);

                    otherlv_24=(Token)match(input,RightCurlyBracket,FOLLOW_35); 

                    				newLeafNode(otherlv_24, grammarAccess.getTimeoutNodeAccess().getRightCurlyBracketKeyword_8_4());
                    			

                    }
                    break;

            }

            otherlv_25=(Token)match(input,Child,FOLLOW_9); 

            			newLeafNode(otherlv_25, grammarAccess.getTimeoutNodeAccess().getChildKeyword_9());
            		
            // InternalQualityBtCppParser.g:4828:3: ( (lv_child_26_0= ruleTreeNode ) )
            // InternalQualityBtCppParser.g:4829:4: (lv_child_26_0= ruleTreeNode )
            {
            // InternalQualityBtCppParser.g:4829:4: (lv_child_26_0= ruleTreeNode )
            // InternalQualityBtCppParser.g:4830:5: lv_child_26_0= ruleTreeNode
            {

            					newCompositeNode(grammarAccess.getTimeoutNodeAccess().getChildTreeNodeParserRuleCall_10_0());
            				
            pushFollow(FOLLOW_30);
            lv_child_26_0=ruleTreeNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getTimeoutNodeRule());
            					}
            					set(
            						current,
            						"child",
            						lv_child_26_0,
            						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            otherlv_27=(Token)match(input,RightCurlyBracket,FOLLOW_2); 

            			newLeafNode(otherlv_27, grammarAccess.getTimeoutNodeAccess().getRightCurlyBracketKeyword_11());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTimeoutNode"


    // $ANTLR start "entryRuleKeepRunningUntilFailureNode"
    // InternalQualityBtCppParser.g:4855:1: entryRuleKeepRunningUntilFailureNode returns [EObject current=null] : iv_ruleKeepRunningUntilFailureNode= ruleKeepRunningUntilFailureNode EOF ;
    public final EObject entryRuleKeepRunningUntilFailureNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleKeepRunningUntilFailureNode = null;


        try {
            // InternalQualityBtCppParser.g:4855:68: (iv_ruleKeepRunningUntilFailureNode= ruleKeepRunningUntilFailureNode EOF )
            // InternalQualityBtCppParser.g:4856:2: iv_ruleKeepRunningUntilFailureNode= ruleKeepRunningUntilFailureNode EOF
            {
             newCompositeNode(grammarAccess.getKeepRunningUntilFailureNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleKeepRunningUntilFailureNode=ruleKeepRunningUntilFailureNode();

            state._fsp--;

             current =iv_ruleKeepRunningUntilFailureNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleKeepRunningUntilFailureNode"


    // $ANTLR start "ruleKeepRunningUntilFailureNode"
    // InternalQualityBtCppParser.g:4862:1: ruleKeepRunningUntilFailureNode returns [EObject current=null] : (otherlv_0= KeepRunningUntilFailureNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )? (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )? (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )? otherlv_23= Child ( (lv_child_24_0= ruleTreeNode ) ) otherlv_25= RightCurlyBracket ) ;
    public final EObject ruleKeepRunningUntilFailureNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_17=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        Token otherlv_23=null;
        Token otherlv_25=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_ID_4_0 = null;

        EObject lv_parameters_19_0 = null;

        EObject lv_parameters_21_0 = null;

        EObject lv_child_24_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:4868:2: ( (otherlv_0= KeepRunningUntilFailureNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )? (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )? (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )? otherlv_23= Child ( (lv_child_24_0= ruleTreeNode ) ) otherlv_25= RightCurlyBracket ) )
            // InternalQualityBtCppParser.g:4869:2: (otherlv_0= KeepRunningUntilFailureNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )? (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )? (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )? otherlv_23= Child ( (lv_child_24_0= ruleTreeNode ) ) otherlv_25= RightCurlyBracket )
            {
            // InternalQualityBtCppParser.g:4869:2: (otherlv_0= KeepRunningUntilFailureNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )? (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )? (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )? otherlv_23= Child ( (lv_child_24_0= ruleTreeNode ) ) otherlv_25= RightCurlyBracket )
            // InternalQualityBtCppParser.g:4870:3: otherlv_0= KeepRunningUntilFailureNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )? (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )? (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )? otherlv_23= Child ( (lv_child_24_0= ruleTreeNode ) ) otherlv_25= RightCurlyBracket
            {
            otherlv_0=(Token)match(input,KeepRunningUntilFailureNode,FOLLOW_3); 

            			newLeafNode(otherlv_0, grammarAccess.getKeepRunningUntilFailureNodeAccess().getKeepRunningUntilFailureNodeKeyword_0());
            		
            // InternalQualityBtCppParser.g:4874:3: ( (lv_name_1_0= ruleEString ) )
            // InternalQualityBtCppParser.g:4875:4: (lv_name_1_0= ruleEString )
            {
            // InternalQualityBtCppParser.g:4875:4: (lv_name_1_0= ruleEString )
            // InternalQualityBtCppParser.g:4876:5: lv_name_1_0= ruleEString
            {

            					newCompositeNode(grammarAccess.getKeepRunningUntilFailureNodeAccess().getNameEStringParserRuleCall_1_0());
            				
            pushFollow(FOLLOW_21);
            lv_name_1_0=ruleEString();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getKeepRunningUntilFailureNodeRule());
            					}
            					set(
            						current,
            						"name",
            						lv_name_1_0,
            						"org.xtext.btcpp.QualityBtCpp.EString");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            otherlv_2=(Token)match(input,LeftCurlyBracket,FOLLOW_31); 

            			newLeafNode(otherlv_2, grammarAccess.getKeepRunningUntilFailureNodeAccess().getLeftCurlyBracketKeyword_2());
            		
            // InternalQualityBtCppParser.g:4897:3: (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )?
            int alt123=2;
            int LA123_0 = input.LA(1);

            if ( (LA123_0==ID) ) {
                alt123=1;
            }
            switch (alt123) {
                case 1 :
                    // InternalQualityBtCppParser.g:4898:4: otherlv_3= ID ( (lv_ID_4_0= ruleEString ) )
                    {
                    otherlv_3=(Token)match(input,ID,FOLLOW_3); 

                    				newLeafNode(otherlv_3, grammarAccess.getKeepRunningUntilFailureNodeAccess().getIDKeyword_3_0());
                    			
                    // InternalQualityBtCppParser.g:4902:4: ( (lv_ID_4_0= ruleEString ) )
                    // InternalQualityBtCppParser.g:4903:5: (lv_ID_4_0= ruleEString )
                    {
                    // InternalQualityBtCppParser.g:4903:5: (lv_ID_4_0= ruleEString )
                    // InternalQualityBtCppParser.g:4904:6: lv_ID_4_0= ruleEString
                    {

                    						newCompositeNode(grammarAccess.getKeepRunningUntilFailureNodeAccess().getIDEStringParserRuleCall_3_1_0());
                    					
                    pushFollow(FOLLOW_32);
                    lv_ID_4_0=ruleEString();

                    state._fsp--;


                    						if (current==null) {
                    							current = createModelElementForParent(grammarAccess.getKeepRunningUntilFailureNodeRule());
                    						}
                    						set(
                    							current,
                    							"ID",
                    							lv_ID_4_0,
                    							"org.xtext.btcpp.QualityBtCpp.EString");
                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }


                    }
                    break;

            }

            // InternalQualityBtCppParser.g:4922:3: (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )?
            int alt125=2;
            int LA125_0 = input.LA(1);

            if ( (LA125_0==Satisfices) ) {
                alt125=1;
            }
            switch (alt125) {
                case 1 :
                    // InternalQualityBtCppParser.g:4923:4: otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis
                    {
                    otherlv_5=(Token)match(input,Satisfices,FOLLOW_26); 

                    				newLeafNode(otherlv_5, grammarAccess.getKeepRunningUntilFailureNodeAccess().getSatisficesKeyword_4_0());
                    			
                    otherlv_6=(Token)match(input,LeftParenthesis,FOLLOW_3); 

                    				newLeafNode(otherlv_6, grammarAccess.getKeepRunningUntilFailureNodeAccess().getLeftParenthesisKeyword_4_1());
                    			
                    // InternalQualityBtCppParser.g:4931:4: ( ( ruleEString ) )
                    // InternalQualityBtCppParser.g:4932:5: ( ruleEString )
                    {
                    // InternalQualityBtCppParser.g:4932:5: ( ruleEString )
                    // InternalQualityBtCppParser.g:4933:6: ruleEString
                    {

                    						if (current==null) {
                    							current = createModelElement(grammarAccess.getKeepRunningUntilFailureNodeRule());
                    						}
                    					

                    						newCompositeNode(grammarAccess.getKeepRunningUntilFailureNodeAccess().getSatisficesQualityCrossReference_4_2_0());
                    					
                    pushFollow(FOLLOW_20);
                    ruleEString();

                    state._fsp--;


                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:4947:4: (otherlv_8= Comma ( ( ruleEString ) ) )*
                    loop124:
                    do {
                        int alt124=2;
                        int LA124_0 = input.LA(1);

                        if ( (LA124_0==Comma) ) {
                            alt124=1;
                        }


                        switch (alt124) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:4948:5: otherlv_8= Comma ( ( ruleEString ) )
                    	    {
                    	    otherlv_8=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_8, grammarAccess.getKeepRunningUntilFailureNodeAccess().getCommaKeyword_4_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:4952:5: ( ( ruleEString ) )
                    	    // InternalQualityBtCppParser.g:4953:6: ( ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:4953:6: ( ruleEString )
                    	    // InternalQualityBtCppParser.g:4954:7: ruleEString
                    	    {

                    	    							if (current==null) {
                    	    								current = createModelElement(grammarAccess.getKeepRunningUntilFailureNodeRule());
                    	    							}
                    	    						

                    	    							newCompositeNode(grammarAccess.getKeepRunningUntilFailureNodeAccess().getSatisficesQualityCrossReference_4_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_20);
                    	    ruleEString();

                    	    state._fsp--;


                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop124;
                        }
                    } while (true);

                    otherlv_10=(Token)match(input,RightParenthesis,FOLLOW_33); 

                    				newLeafNode(otherlv_10, grammarAccess.getKeepRunningUntilFailureNodeAccess().getRightParenthesisKeyword_4_4());
                    			

                    }
                    break;

            }

            // InternalQualityBtCppParser.g:4974:3: (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )?
            int alt127=2;
            int LA127_0 = input.LA(1);

            if ( (LA127_0==Satisfies) ) {
                alt127=1;
            }
            switch (alt127) {
                case 1 :
                    // InternalQualityBtCppParser.g:4975:4: otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis
                    {
                    otherlv_11=(Token)match(input,Satisfies,FOLLOW_26); 

                    				newLeafNode(otherlv_11, grammarAccess.getKeepRunningUntilFailureNodeAccess().getSatisfiesKeyword_5_0());
                    			
                    otherlv_12=(Token)match(input,LeftParenthesis,FOLLOW_3); 

                    				newLeafNode(otherlv_12, grammarAccess.getKeepRunningUntilFailureNodeAccess().getLeftParenthesisKeyword_5_1());
                    			
                    // InternalQualityBtCppParser.g:4983:4: ( ( ruleEString ) )
                    // InternalQualityBtCppParser.g:4984:5: ( ruleEString )
                    {
                    // InternalQualityBtCppParser.g:4984:5: ( ruleEString )
                    // InternalQualityBtCppParser.g:4985:6: ruleEString
                    {

                    						if (current==null) {
                    							current = createModelElement(grammarAccess.getKeepRunningUntilFailureNodeRule());
                    						}
                    					

                    						newCompositeNode(grammarAccess.getKeepRunningUntilFailureNodeAccess().getSatisfiesQualityRequirementCrossReference_5_2_0());
                    					
                    pushFollow(FOLLOW_20);
                    ruleEString();

                    state._fsp--;


                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:4999:4: (otherlv_14= Comma ( ( ruleEString ) ) )*
                    loop126:
                    do {
                        int alt126=2;
                        int LA126_0 = input.LA(1);

                        if ( (LA126_0==Comma) ) {
                            alt126=1;
                        }


                        switch (alt126) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:5000:5: otherlv_14= Comma ( ( ruleEString ) )
                    	    {
                    	    otherlv_14=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_14, grammarAccess.getKeepRunningUntilFailureNodeAccess().getCommaKeyword_5_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:5004:5: ( ( ruleEString ) )
                    	    // InternalQualityBtCppParser.g:5005:6: ( ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:5005:6: ( ruleEString )
                    	    // InternalQualityBtCppParser.g:5006:7: ruleEString
                    	    {

                    	    							if (current==null) {
                    	    								current = createModelElement(grammarAccess.getKeepRunningUntilFailureNodeRule());
                    	    							}
                    	    						

                    	    							newCompositeNode(grammarAccess.getKeepRunningUntilFailureNodeAccess().getSatisfiesQualityRequirementCrossReference_5_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_20);
                    	    ruleEString();

                    	    state._fsp--;


                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop126;
                        }
                    } while (true);

                    otherlv_16=(Token)match(input,RightParenthesis,FOLLOW_34); 

                    				newLeafNode(otherlv_16, grammarAccess.getKeepRunningUntilFailureNodeAccess().getRightParenthesisKeyword_5_4());
                    			

                    }
                    break;

            }

            // InternalQualityBtCppParser.g:5026:3: (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )?
            int alt129=2;
            int LA129_0 = input.LA(1);

            if ( (LA129_0==Parameters) ) {
                alt129=1;
            }
            switch (alt129) {
                case 1 :
                    // InternalQualityBtCppParser.g:5027:4: otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket
                    {
                    otherlv_17=(Token)match(input,Parameters,FOLLOW_21); 

                    				newLeafNode(otherlv_17, grammarAccess.getKeepRunningUntilFailureNodeAccess().getParametersKeyword_6_0());
                    			
                    otherlv_18=(Token)match(input,LeftCurlyBracket,FOLLOW_3); 

                    				newLeafNode(otherlv_18, grammarAccess.getKeepRunningUntilFailureNodeAccess().getLeftCurlyBracketKeyword_6_1());
                    			
                    // InternalQualityBtCppParser.g:5035:4: ( (lv_parameters_19_0= ruleParameter ) )
                    // InternalQualityBtCppParser.g:5036:5: (lv_parameters_19_0= ruleParameter )
                    {
                    // InternalQualityBtCppParser.g:5036:5: (lv_parameters_19_0= ruleParameter )
                    // InternalQualityBtCppParser.g:5037:6: lv_parameters_19_0= ruleParameter
                    {

                    						newCompositeNode(grammarAccess.getKeepRunningUntilFailureNodeAccess().getParametersParameterParserRuleCall_6_2_0());
                    					
                    pushFollow(FOLLOW_29);
                    lv_parameters_19_0=ruleParameter();

                    state._fsp--;


                    						if (current==null) {
                    							current = createModelElementForParent(grammarAccess.getKeepRunningUntilFailureNodeRule());
                    						}
                    						add(
                    							current,
                    							"parameters",
                    							lv_parameters_19_0,
                    							"org.xtext.btcpp.QualityBtCpp.Parameter");
                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:5054:4: (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )*
                    loop128:
                    do {
                        int alt128=2;
                        int LA128_0 = input.LA(1);

                        if ( (LA128_0==Comma) ) {
                            alt128=1;
                        }


                        switch (alt128) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:5055:5: otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) )
                    	    {
                    	    otherlv_20=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_20, grammarAccess.getKeepRunningUntilFailureNodeAccess().getCommaKeyword_6_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:5059:5: ( (lv_parameters_21_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:5060:6: (lv_parameters_21_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:5060:6: (lv_parameters_21_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:5061:7: lv_parameters_21_0= ruleParameter
                    	    {

                    	    							newCompositeNode(grammarAccess.getKeepRunningUntilFailureNodeAccess().getParametersParameterParserRuleCall_6_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_29);
                    	    lv_parameters_21_0=ruleParameter();

                    	    state._fsp--;


                    	    							if (current==null) {
                    	    								current = createModelElementForParent(grammarAccess.getKeepRunningUntilFailureNodeRule());
                    	    							}
                    	    							add(
                    	    								current,
                    	    								"parameters",
                    	    								lv_parameters_21_0,
                    	    								"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop128;
                        }
                    } while (true);

                    otherlv_22=(Token)match(input,RightCurlyBracket,FOLLOW_35); 

                    				newLeafNode(otherlv_22, grammarAccess.getKeepRunningUntilFailureNodeAccess().getRightCurlyBracketKeyword_6_4());
                    			

                    }
                    break;

            }

            otherlv_23=(Token)match(input,Child,FOLLOW_9); 

            			newLeafNode(otherlv_23, grammarAccess.getKeepRunningUntilFailureNodeAccess().getChildKeyword_7());
            		
            // InternalQualityBtCppParser.g:5088:3: ( (lv_child_24_0= ruleTreeNode ) )
            // InternalQualityBtCppParser.g:5089:4: (lv_child_24_0= ruleTreeNode )
            {
            // InternalQualityBtCppParser.g:5089:4: (lv_child_24_0= ruleTreeNode )
            // InternalQualityBtCppParser.g:5090:5: lv_child_24_0= ruleTreeNode
            {

            					newCompositeNode(grammarAccess.getKeepRunningUntilFailureNodeAccess().getChildTreeNodeParserRuleCall_8_0());
            				
            pushFollow(FOLLOW_30);
            lv_child_24_0=ruleTreeNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getKeepRunningUntilFailureNodeRule());
            					}
            					set(
            						current,
            						"child",
            						lv_child_24_0,
            						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            otherlv_25=(Token)match(input,RightCurlyBracket,FOLLOW_2); 

            			newLeafNode(otherlv_25, grammarAccess.getKeepRunningUntilFailureNodeAccess().getRightCurlyBracketKeyword_9());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleKeepRunningUntilFailureNode"


    // $ANTLR start "entryRuleInverterNode"
    // InternalQualityBtCppParser.g:5115:1: entryRuleInverterNode returns [EObject current=null] : iv_ruleInverterNode= ruleInverterNode EOF ;
    public final EObject entryRuleInverterNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleInverterNode = null;


        try {
            // InternalQualityBtCppParser.g:5115:53: (iv_ruleInverterNode= ruleInverterNode EOF )
            // InternalQualityBtCppParser.g:5116:2: iv_ruleInverterNode= ruleInverterNode EOF
            {
             newCompositeNode(grammarAccess.getInverterNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleInverterNode=ruleInverterNode();

            state._fsp--;

             current =iv_ruleInverterNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInverterNode"


    // $ANTLR start "ruleInverterNode"
    // InternalQualityBtCppParser.g:5122:1: ruleInverterNode returns [EObject current=null] : (otherlv_0= InverterNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )? (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )? (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )? otherlv_23= Child ( (lv_child_24_0= ruleTreeNode ) ) otherlv_25= RightCurlyBracket ) ;
    public final EObject ruleInverterNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_17=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        Token otherlv_23=null;
        Token otherlv_25=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_ID_4_0 = null;

        EObject lv_parameters_19_0 = null;

        EObject lv_parameters_21_0 = null;

        EObject lv_child_24_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:5128:2: ( (otherlv_0= InverterNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )? (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )? (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )? otherlv_23= Child ( (lv_child_24_0= ruleTreeNode ) ) otherlv_25= RightCurlyBracket ) )
            // InternalQualityBtCppParser.g:5129:2: (otherlv_0= InverterNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )? (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )? (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )? otherlv_23= Child ( (lv_child_24_0= ruleTreeNode ) ) otherlv_25= RightCurlyBracket )
            {
            // InternalQualityBtCppParser.g:5129:2: (otherlv_0= InverterNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )? (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )? (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )? otherlv_23= Child ( (lv_child_24_0= ruleTreeNode ) ) otherlv_25= RightCurlyBracket )
            // InternalQualityBtCppParser.g:5130:3: otherlv_0= InverterNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )? (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )? (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )? otherlv_23= Child ( (lv_child_24_0= ruleTreeNode ) ) otherlv_25= RightCurlyBracket
            {
            otherlv_0=(Token)match(input,InverterNode,FOLLOW_3); 

            			newLeafNode(otherlv_0, grammarAccess.getInverterNodeAccess().getInverterNodeKeyword_0());
            		
            // InternalQualityBtCppParser.g:5134:3: ( (lv_name_1_0= ruleEString ) )
            // InternalQualityBtCppParser.g:5135:4: (lv_name_1_0= ruleEString )
            {
            // InternalQualityBtCppParser.g:5135:4: (lv_name_1_0= ruleEString )
            // InternalQualityBtCppParser.g:5136:5: lv_name_1_0= ruleEString
            {

            					newCompositeNode(grammarAccess.getInverterNodeAccess().getNameEStringParserRuleCall_1_0());
            				
            pushFollow(FOLLOW_21);
            lv_name_1_0=ruleEString();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getInverterNodeRule());
            					}
            					set(
            						current,
            						"name",
            						lv_name_1_0,
            						"org.xtext.btcpp.QualityBtCpp.EString");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            otherlv_2=(Token)match(input,LeftCurlyBracket,FOLLOW_31); 

            			newLeafNode(otherlv_2, grammarAccess.getInverterNodeAccess().getLeftCurlyBracketKeyword_2());
            		
            // InternalQualityBtCppParser.g:5157:3: (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )?
            int alt130=2;
            int LA130_0 = input.LA(1);

            if ( (LA130_0==ID) ) {
                alt130=1;
            }
            switch (alt130) {
                case 1 :
                    // InternalQualityBtCppParser.g:5158:4: otherlv_3= ID ( (lv_ID_4_0= ruleEString ) )
                    {
                    otherlv_3=(Token)match(input,ID,FOLLOW_3); 

                    				newLeafNode(otherlv_3, grammarAccess.getInverterNodeAccess().getIDKeyword_3_0());
                    			
                    // InternalQualityBtCppParser.g:5162:4: ( (lv_ID_4_0= ruleEString ) )
                    // InternalQualityBtCppParser.g:5163:5: (lv_ID_4_0= ruleEString )
                    {
                    // InternalQualityBtCppParser.g:5163:5: (lv_ID_4_0= ruleEString )
                    // InternalQualityBtCppParser.g:5164:6: lv_ID_4_0= ruleEString
                    {

                    						newCompositeNode(grammarAccess.getInverterNodeAccess().getIDEStringParserRuleCall_3_1_0());
                    					
                    pushFollow(FOLLOW_32);
                    lv_ID_4_0=ruleEString();

                    state._fsp--;


                    						if (current==null) {
                    							current = createModelElementForParent(grammarAccess.getInverterNodeRule());
                    						}
                    						set(
                    							current,
                    							"ID",
                    							lv_ID_4_0,
                    							"org.xtext.btcpp.QualityBtCpp.EString");
                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }


                    }
                    break;

            }

            // InternalQualityBtCppParser.g:5182:3: (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )?
            int alt132=2;
            int LA132_0 = input.LA(1);

            if ( (LA132_0==Satisfices) ) {
                alt132=1;
            }
            switch (alt132) {
                case 1 :
                    // InternalQualityBtCppParser.g:5183:4: otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis
                    {
                    otherlv_5=(Token)match(input,Satisfices,FOLLOW_26); 

                    				newLeafNode(otherlv_5, grammarAccess.getInverterNodeAccess().getSatisficesKeyword_4_0());
                    			
                    otherlv_6=(Token)match(input,LeftParenthesis,FOLLOW_3); 

                    				newLeafNode(otherlv_6, grammarAccess.getInverterNodeAccess().getLeftParenthesisKeyword_4_1());
                    			
                    // InternalQualityBtCppParser.g:5191:4: ( ( ruleEString ) )
                    // InternalQualityBtCppParser.g:5192:5: ( ruleEString )
                    {
                    // InternalQualityBtCppParser.g:5192:5: ( ruleEString )
                    // InternalQualityBtCppParser.g:5193:6: ruleEString
                    {

                    						if (current==null) {
                    							current = createModelElement(grammarAccess.getInverterNodeRule());
                    						}
                    					

                    						newCompositeNode(grammarAccess.getInverterNodeAccess().getSatisficesQualityCrossReference_4_2_0());
                    					
                    pushFollow(FOLLOW_20);
                    ruleEString();

                    state._fsp--;


                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:5207:4: (otherlv_8= Comma ( ( ruleEString ) ) )*
                    loop131:
                    do {
                        int alt131=2;
                        int LA131_0 = input.LA(1);

                        if ( (LA131_0==Comma) ) {
                            alt131=1;
                        }


                        switch (alt131) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:5208:5: otherlv_8= Comma ( ( ruleEString ) )
                    	    {
                    	    otherlv_8=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_8, grammarAccess.getInverterNodeAccess().getCommaKeyword_4_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:5212:5: ( ( ruleEString ) )
                    	    // InternalQualityBtCppParser.g:5213:6: ( ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:5213:6: ( ruleEString )
                    	    // InternalQualityBtCppParser.g:5214:7: ruleEString
                    	    {

                    	    							if (current==null) {
                    	    								current = createModelElement(grammarAccess.getInverterNodeRule());
                    	    							}
                    	    						

                    	    							newCompositeNode(grammarAccess.getInverterNodeAccess().getSatisficesQualityCrossReference_4_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_20);
                    	    ruleEString();

                    	    state._fsp--;


                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop131;
                        }
                    } while (true);

                    otherlv_10=(Token)match(input,RightParenthesis,FOLLOW_33); 

                    				newLeafNode(otherlv_10, grammarAccess.getInverterNodeAccess().getRightParenthesisKeyword_4_4());
                    			

                    }
                    break;

            }

            // InternalQualityBtCppParser.g:5234:3: (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )?
            int alt134=2;
            int LA134_0 = input.LA(1);

            if ( (LA134_0==Satisfies) ) {
                alt134=1;
            }
            switch (alt134) {
                case 1 :
                    // InternalQualityBtCppParser.g:5235:4: otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis
                    {
                    otherlv_11=(Token)match(input,Satisfies,FOLLOW_26); 

                    				newLeafNode(otherlv_11, grammarAccess.getInverterNodeAccess().getSatisfiesKeyword_5_0());
                    			
                    otherlv_12=(Token)match(input,LeftParenthesis,FOLLOW_3); 

                    				newLeafNode(otherlv_12, grammarAccess.getInverterNodeAccess().getLeftParenthesisKeyword_5_1());
                    			
                    // InternalQualityBtCppParser.g:5243:4: ( ( ruleEString ) )
                    // InternalQualityBtCppParser.g:5244:5: ( ruleEString )
                    {
                    // InternalQualityBtCppParser.g:5244:5: ( ruleEString )
                    // InternalQualityBtCppParser.g:5245:6: ruleEString
                    {

                    						if (current==null) {
                    							current = createModelElement(grammarAccess.getInverterNodeRule());
                    						}
                    					

                    						newCompositeNode(grammarAccess.getInverterNodeAccess().getSatisfiesQualityRequirementCrossReference_5_2_0());
                    					
                    pushFollow(FOLLOW_20);
                    ruleEString();

                    state._fsp--;


                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:5259:4: (otherlv_14= Comma ( ( ruleEString ) ) )*
                    loop133:
                    do {
                        int alt133=2;
                        int LA133_0 = input.LA(1);

                        if ( (LA133_0==Comma) ) {
                            alt133=1;
                        }


                        switch (alt133) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:5260:5: otherlv_14= Comma ( ( ruleEString ) )
                    	    {
                    	    otherlv_14=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_14, grammarAccess.getInverterNodeAccess().getCommaKeyword_5_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:5264:5: ( ( ruleEString ) )
                    	    // InternalQualityBtCppParser.g:5265:6: ( ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:5265:6: ( ruleEString )
                    	    // InternalQualityBtCppParser.g:5266:7: ruleEString
                    	    {

                    	    							if (current==null) {
                    	    								current = createModelElement(grammarAccess.getInverterNodeRule());
                    	    							}
                    	    						

                    	    							newCompositeNode(grammarAccess.getInverterNodeAccess().getSatisfiesQualityRequirementCrossReference_5_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_20);
                    	    ruleEString();

                    	    state._fsp--;


                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop133;
                        }
                    } while (true);

                    otherlv_16=(Token)match(input,RightParenthesis,FOLLOW_34); 

                    				newLeafNode(otherlv_16, grammarAccess.getInverterNodeAccess().getRightParenthesisKeyword_5_4());
                    			

                    }
                    break;

            }

            // InternalQualityBtCppParser.g:5286:3: (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )?
            int alt136=2;
            int LA136_0 = input.LA(1);

            if ( (LA136_0==Parameters) ) {
                alt136=1;
            }
            switch (alt136) {
                case 1 :
                    // InternalQualityBtCppParser.g:5287:4: otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket
                    {
                    otherlv_17=(Token)match(input,Parameters,FOLLOW_21); 

                    				newLeafNode(otherlv_17, grammarAccess.getInverterNodeAccess().getParametersKeyword_6_0());
                    			
                    otherlv_18=(Token)match(input,LeftCurlyBracket,FOLLOW_3); 

                    				newLeafNode(otherlv_18, grammarAccess.getInverterNodeAccess().getLeftCurlyBracketKeyword_6_1());
                    			
                    // InternalQualityBtCppParser.g:5295:4: ( (lv_parameters_19_0= ruleParameter ) )
                    // InternalQualityBtCppParser.g:5296:5: (lv_parameters_19_0= ruleParameter )
                    {
                    // InternalQualityBtCppParser.g:5296:5: (lv_parameters_19_0= ruleParameter )
                    // InternalQualityBtCppParser.g:5297:6: lv_parameters_19_0= ruleParameter
                    {

                    						newCompositeNode(grammarAccess.getInverterNodeAccess().getParametersParameterParserRuleCall_6_2_0());
                    					
                    pushFollow(FOLLOW_29);
                    lv_parameters_19_0=ruleParameter();

                    state._fsp--;


                    						if (current==null) {
                    							current = createModelElementForParent(grammarAccess.getInverterNodeRule());
                    						}
                    						add(
                    							current,
                    							"parameters",
                    							lv_parameters_19_0,
                    							"org.xtext.btcpp.QualityBtCpp.Parameter");
                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:5314:4: (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )*
                    loop135:
                    do {
                        int alt135=2;
                        int LA135_0 = input.LA(1);

                        if ( (LA135_0==Comma) ) {
                            alt135=1;
                        }


                        switch (alt135) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:5315:5: otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) )
                    	    {
                    	    otherlv_20=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_20, grammarAccess.getInverterNodeAccess().getCommaKeyword_6_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:5319:5: ( (lv_parameters_21_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:5320:6: (lv_parameters_21_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:5320:6: (lv_parameters_21_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:5321:7: lv_parameters_21_0= ruleParameter
                    	    {

                    	    							newCompositeNode(grammarAccess.getInverterNodeAccess().getParametersParameterParserRuleCall_6_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_29);
                    	    lv_parameters_21_0=ruleParameter();

                    	    state._fsp--;


                    	    							if (current==null) {
                    	    								current = createModelElementForParent(grammarAccess.getInverterNodeRule());
                    	    							}
                    	    							add(
                    	    								current,
                    	    								"parameters",
                    	    								lv_parameters_21_0,
                    	    								"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop135;
                        }
                    } while (true);

                    otherlv_22=(Token)match(input,RightCurlyBracket,FOLLOW_35); 

                    				newLeafNode(otherlv_22, grammarAccess.getInverterNodeAccess().getRightCurlyBracketKeyword_6_4());
                    			

                    }
                    break;

            }

            otherlv_23=(Token)match(input,Child,FOLLOW_9); 

            			newLeafNode(otherlv_23, grammarAccess.getInverterNodeAccess().getChildKeyword_7());
            		
            // InternalQualityBtCppParser.g:5348:3: ( (lv_child_24_0= ruleTreeNode ) )
            // InternalQualityBtCppParser.g:5349:4: (lv_child_24_0= ruleTreeNode )
            {
            // InternalQualityBtCppParser.g:5349:4: (lv_child_24_0= ruleTreeNode )
            // InternalQualityBtCppParser.g:5350:5: lv_child_24_0= ruleTreeNode
            {

            					newCompositeNode(grammarAccess.getInverterNodeAccess().getChildTreeNodeParserRuleCall_8_0());
            				
            pushFollow(FOLLOW_30);
            lv_child_24_0=ruleTreeNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getInverterNodeRule());
            					}
            					set(
            						current,
            						"child",
            						lv_child_24_0,
            						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            otherlv_25=(Token)match(input,RightCurlyBracket,FOLLOW_2); 

            			newLeafNode(otherlv_25, grammarAccess.getInverterNodeAccess().getRightCurlyBracketKeyword_9());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInverterNode"


    // $ANTLR start "entryRuleForceSuccessNode"
    // InternalQualityBtCppParser.g:5375:1: entryRuleForceSuccessNode returns [EObject current=null] : iv_ruleForceSuccessNode= ruleForceSuccessNode EOF ;
    public final EObject entryRuleForceSuccessNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleForceSuccessNode = null;


        try {
            // InternalQualityBtCppParser.g:5375:57: (iv_ruleForceSuccessNode= ruleForceSuccessNode EOF )
            // InternalQualityBtCppParser.g:5376:2: iv_ruleForceSuccessNode= ruleForceSuccessNode EOF
            {
             newCompositeNode(grammarAccess.getForceSuccessNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleForceSuccessNode=ruleForceSuccessNode();

            state._fsp--;

             current =iv_ruleForceSuccessNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleForceSuccessNode"


    // $ANTLR start "ruleForceSuccessNode"
    // InternalQualityBtCppParser.g:5382:1: ruleForceSuccessNode returns [EObject current=null] : (otherlv_0= ForceSuccessNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )? (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )? (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )? otherlv_23= Child ( (lv_child_24_0= ruleTreeNode ) ) otherlv_25= RightCurlyBracket ) ;
    public final EObject ruleForceSuccessNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_17=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        Token otherlv_23=null;
        Token otherlv_25=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_ID_4_0 = null;

        EObject lv_parameters_19_0 = null;

        EObject lv_parameters_21_0 = null;

        EObject lv_child_24_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:5388:2: ( (otherlv_0= ForceSuccessNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )? (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )? (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )? otherlv_23= Child ( (lv_child_24_0= ruleTreeNode ) ) otherlv_25= RightCurlyBracket ) )
            // InternalQualityBtCppParser.g:5389:2: (otherlv_0= ForceSuccessNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )? (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )? (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )? otherlv_23= Child ( (lv_child_24_0= ruleTreeNode ) ) otherlv_25= RightCurlyBracket )
            {
            // InternalQualityBtCppParser.g:5389:2: (otherlv_0= ForceSuccessNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )? (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )? (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )? otherlv_23= Child ( (lv_child_24_0= ruleTreeNode ) ) otherlv_25= RightCurlyBracket )
            // InternalQualityBtCppParser.g:5390:3: otherlv_0= ForceSuccessNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )? (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )? (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )? otherlv_23= Child ( (lv_child_24_0= ruleTreeNode ) ) otherlv_25= RightCurlyBracket
            {
            otherlv_0=(Token)match(input,ForceSuccessNode,FOLLOW_3); 

            			newLeafNode(otherlv_0, grammarAccess.getForceSuccessNodeAccess().getForceSuccessNodeKeyword_0());
            		
            // InternalQualityBtCppParser.g:5394:3: ( (lv_name_1_0= ruleEString ) )
            // InternalQualityBtCppParser.g:5395:4: (lv_name_1_0= ruleEString )
            {
            // InternalQualityBtCppParser.g:5395:4: (lv_name_1_0= ruleEString )
            // InternalQualityBtCppParser.g:5396:5: lv_name_1_0= ruleEString
            {

            					newCompositeNode(grammarAccess.getForceSuccessNodeAccess().getNameEStringParserRuleCall_1_0());
            				
            pushFollow(FOLLOW_21);
            lv_name_1_0=ruleEString();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getForceSuccessNodeRule());
            					}
            					set(
            						current,
            						"name",
            						lv_name_1_0,
            						"org.xtext.btcpp.QualityBtCpp.EString");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            otherlv_2=(Token)match(input,LeftCurlyBracket,FOLLOW_31); 

            			newLeafNode(otherlv_2, grammarAccess.getForceSuccessNodeAccess().getLeftCurlyBracketKeyword_2());
            		
            // InternalQualityBtCppParser.g:5417:3: (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )?
            int alt137=2;
            int LA137_0 = input.LA(1);

            if ( (LA137_0==ID) ) {
                alt137=1;
            }
            switch (alt137) {
                case 1 :
                    // InternalQualityBtCppParser.g:5418:4: otherlv_3= ID ( (lv_ID_4_0= ruleEString ) )
                    {
                    otherlv_3=(Token)match(input,ID,FOLLOW_3); 

                    				newLeafNode(otherlv_3, grammarAccess.getForceSuccessNodeAccess().getIDKeyword_3_0());
                    			
                    // InternalQualityBtCppParser.g:5422:4: ( (lv_ID_4_0= ruleEString ) )
                    // InternalQualityBtCppParser.g:5423:5: (lv_ID_4_0= ruleEString )
                    {
                    // InternalQualityBtCppParser.g:5423:5: (lv_ID_4_0= ruleEString )
                    // InternalQualityBtCppParser.g:5424:6: lv_ID_4_0= ruleEString
                    {

                    						newCompositeNode(grammarAccess.getForceSuccessNodeAccess().getIDEStringParserRuleCall_3_1_0());
                    					
                    pushFollow(FOLLOW_32);
                    lv_ID_4_0=ruleEString();

                    state._fsp--;


                    						if (current==null) {
                    							current = createModelElementForParent(grammarAccess.getForceSuccessNodeRule());
                    						}
                    						set(
                    							current,
                    							"ID",
                    							lv_ID_4_0,
                    							"org.xtext.btcpp.QualityBtCpp.EString");
                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }


                    }
                    break;

            }

            // InternalQualityBtCppParser.g:5442:3: (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )?
            int alt139=2;
            int LA139_0 = input.LA(1);

            if ( (LA139_0==Satisfices) ) {
                alt139=1;
            }
            switch (alt139) {
                case 1 :
                    // InternalQualityBtCppParser.g:5443:4: otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis
                    {
                    otherlv_5=(Token)match(input,Satisfices,FOLLOW_26); 

                    				newLeafNode(otherlv_5, grammarAccess.getForceSuccessNodeAccess().getSatisficesKeyword_4_0());
                    			
                    otherlv_6=(Token)match(input,LeftParenthesis,FOLLOW_3); 

                    				newLeafNode(otherlv_6, grammarAccess.getForceSuccessNodeAccess().getLeftParenthesisKeyword_4_1());
                    			
                    // InternalQualityBtCppParser.g:5451:4: ( ( ruleEString ) )
                    // InternalQualityBtCppParser.g:5452:5: ( ruleEString )
                    {
                    // InternalQualityBtCppParser.g:5452:5: ( ruleEString )
                    // InternalQualityBtCppParser.g:5453:6: ruleEString
                    {

                    						if (current==null) {
                    							current = createModelElement(grammarAccess.getForceSuccessNodeRule());
                    						}
                    					

                    						newCompositeNode(grammarAccess.getForceSuccessNodeAccess().getSatisficesQualityCrossReference_4_2_0());
                    					
                    pushFollow(FOLLOW_20);
                    ruleEString();

                    state._fsp--;


                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:5467:4: (otherlv_8= Comma ( ( ruleEString ) ) )*
                    loop138:
                    do {
                        int alt138=2;
                        int LA138_0 = input.LA(1);

                        if ( (LA138_0==Comma) ) {
                            alt138=1;
                        }


                        switch (alt138) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:5468:5: otherlv_8= Comma ( ( ruleEString ) )
                    	    {
                    	    otherlv_8=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_8, grammarAccess.getForceSuccessNodeAccess().getCommaKeyword_4_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:5472:5: ( ( ruleEString ) )
                    	    // InternalQualityBtCppParser.g:5473:6: ( ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:5473:6: ( ruleEString )
                    	    // InternalQualityBtCppParser.g:5474:7: ruleEString
                    	    {

                    	    							if (current==null) {
                    	    								current = createModelElement(grammarAccess.getForceSuccessNodeRule());
                    	    							}
                    	    						

                    	    							newCompositeNode(grammarAccess.getForceSuccessNodeAccess().getSatisficesQualityCrossReference_4_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_20);
                    	    ruleEString();

                    	    state._fsp--;


                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop138;
                        }
                    } while (true);

                    otherlv_10=(Token)match(input,RightParenthesis,FOLLOW_33); 

                    				newLeafNode(otherlv_10, grammarAccess.getForceSuccessNodeAccess().getRightParenthesisKeyword_4_4());
                    			

                    }
                    break;

            }

            // InternalQualityBtCppParser.g:5494:3: (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )?
            int alt141=2;
            int LA141_0 = input.LA(1);

            if ( (LA141_0==Satisfies) ) {
                alt141=1;
            }
            switch (alt141) {
                case 1 :
                    // InternalQualityBtCppParser.g:5495:4: otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis
                    {
                    otherlv_11=(Token)match(input,Satisfies,FOLLOW_26); 

                    				newLeafNode(otherlv_11, grammarAccess.getForceSuccessNodeAccess().getSatisfiesKeyword_5_0());
                    			
                    otherlv_12=(Token)match(input,LeftParenthesis,FOLLOW_3); 

                    				newLeafNode(otherlv_12, grammarAccess.getForceSuccessNodeAccess().getLeftParenthesisKeyword_5_1());
                    			
                    // InternalQualityBtCppParser.g:5503:4: ( ( ruleEString ) )
                    // InternalQualityBtCppParser.g:5504:5: ( ruleEString )
                    {
                    // InternalQualityBtCppParser.g:5504:5: ( ruleEString )
                    // InternalQualityBtCppParser.g:5505:6: ruleEString
                    {

                    						if (current==null) {
                    							current = createModelElement(grammarAccess.getForceSuccessNodeRule());
                    						}
                    					

                    						newCompositeNode(grammarAccess.getForceSuccessNodeAccess().getSatisfiesQualityRequirementCrossReference_5_2_0());
                    					
                    pushFollow(FOLLOW_20);
                    ruleEString();

                    state._fsp--;


                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:5519:4: (otherlv_14= Comma ( ( ruleEString ) ) )*
                    loop140:
                    do {
                        int alt140=2;
                        int LA140_0 = input.LA(1);

                        if ( (LA140_0==Comma) ) {
                            alt140=1;
                        }


                        switch (alt140) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:5520:5: otherlv_14= Comma ( ( ruleEString ) )
                    	    {
                    	    otherlv_14=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_14, grammarAccess.getForceSuccessNodeAccess().getCommaKeyword_5_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:5524:5: ( ( ruleEString ) )
                    	    // InternalQualityBtCppParser.g:5525:6: ( ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:5525:6: ( ruleEString )
                    	    // InternalQualityBtCppParser.g:5526:7: ruleEString
                    	    {

                    	    							if (current==null) {
                    	    								current = createModelElement(grammarAccess.getForceSuccessNodeRule());
                    	    							}
                    	    						

                    	    							newCompositeNode(grammarAccess.getForceSuccessNodeAccess().getSatisfiesQualityRequirementCrossReference_5_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_20);
                    	    ruleEString();

                    	    state._fsp--;


                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop140;
                        }
                    } while (true);

                    otherlv_16=(Token)match(input,RightParenthesis,FOLLOW_34); 

                    				newLeafNode(otherlv_16, grammarAccess.getForceSuccessNodeAccess().getRightParenthesisKeyword_5_4());
                    			

                    }
                    break;

            }

            // InternalQualityBtCppParser.g:5546:3: (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )?
            int alt143=2;
            int LA143_0 = input.LA(1);

            if ( (LA143_0==Parameters) ) {
                alt143=1;
            }
            switch (alt143) {
                case 1 :
                    // InternalQualityBtCppParser.g:5547:4: otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket
                    {
                    otherlv_17=(Token)match(input,Parameters,FOLLOW_21); 

                    				newLeafNode(otherlv_17, grammarAccess.getForceSuccessNodeAccess().getParametersKeyword_6_0());
                    			
                    otherlv_18=(Token)match(input,LeftCurlyBracket,FOLLOW_3); 

                    				newLeafNode(otherlv_18, grammarAccess.getForceSuccessNodeAccess().getLeftCurlyBracketKeyword_6_1());
                    			
                    // InternalQualityBtCppParser.g:5555:4: ( (lv_parameters_19_0= ruleParameter ) )
                    // InternalQualityBtCppParser.g:5556:5: (lv_parameters_19_0= ruleParameter )
                    {
                    // InternalQualityBtCppParser.g:5556:5: (lv_parameters_19_0= ruleParameter )
                    // InternalQualityBtCppParser.g:5557:6: lv_parameters_19_0= ruleParameter
                    {

                    						newCompositeNode(grammarAccess.getForceSuccessNodeAccess().getParametersParameterParserRuleCall_6_2_0());
                    					
                    pushFollow(FOLLOW_29);
                    lv_parameters_19_0=ruleParameter();

                    state._fsp--;


                    						if (current==null) {
                    							current = createModelElementForParent(grammarAccess.getForceSuccessNodeRule());
                    						}
                    						add(
                    							current,
                    							"parameters",
                    							lv_parameters_19_0,
                    							"org.xtext.btcpp.QualityBtCpp.Parameter");
                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:5574:4: (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )*
                    loop142:
                    do {
                        int alt142=2;
                        int LA142_0 = input.LA(1);

                        if ( (LA142_0==Comma) ) {
                            alt142=1;
                        }


                        switch (alt142) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:5575:5: otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) )
                    	    {
                    	    otherlv_20=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_20, grammarAccess.getForceSuccessNodeAccess().getCommaKeyword_6_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:5579:5: ( (lv_parameters_21_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:5580:6: (lv_parameters_21_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:5580:6: (lv_parameters_21_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:5581:7: lv_parameters_21_0= ruleParameter
                    	    {

                    	    							newCompositeNode(grammarAccess.getForceSuccessNodeAccess().getParametersParameterParserRuleCall_6_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_29);
                    	    lv_parameters_21_0=ruleParameter();

                    	    state._fsp--;


                    	    							if (current==null) {
                    	    								current = createModelElementForParent(grammarAccess.getForceSuccessNodeRule());
                    	    							}
                    	    							add(
                    	    								current,
                    	    								"parameters",
                    	    								lv_parameters_21_0,
                    	    								"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop142;
                        }
                    } while (true);

                    otherlv_22=(Token)match(input,RightCurlyBracket,FOLLOW_35); 

                    				newLeafNode(otherlv_22, grammarAccess.getForceSuccessNodeAccess().getRightCurlyBracketKeyword_6_4());
                    			

                    }
                    break;

            }

            otherlv_23=(Token)match(input,Child,FOLLOW_9); 

            			newLeafNode(otherlv_23, grammarAccess.getForceSuccessNodeAccess().getChildKeyword_7());
            		
            // InternalQualityBtCppParser.g:5608:3: ( (lv_child_24_0= ruleTreeNode ) )
            // InternalQualityBtCppParser.g:5609:4: (lv_child_24_0= ruleTreeNode )
            {
            // InternalQualityBtCppParser.g:5609:4: (lv_child_24_0= ruleTreeNode )
            // InternalQualityBtCppParser.g:5610:5: lv_child_24_0= ruleTreeNode
            {

            					newCompositeNode(grammarAccess.getForceSuccessNodeAccess().getChildTreeNodeParserRuleCall_8_0());
            				
            pushFollow(FOLLOW_30);
            lv_child_24_0=ruleTreeNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getForceSuccessNodeRule());
            					}
            					set(
            						current,
            						"child",
            						lv_child_24_0,
            						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            otherlv_25=(Token)match(input,RightCurlyBracket,FOLLOW_2); 

            			newLeafNode(otherlv_25, grammarAccess.getForceSuccessNodeAccess().getRightCurlyBracketKeyword_9());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleForceSuccessNode"


    // $ANTLR start "entryRuleForceFailureNode"
    // InternalQualityBtCppParser.g:5635:1: entryRuleForceFailureNode returns [EObject current=null] : iv_ruleForceFailureNode= ruleForceFailureNode EOF ;
    public final EObject entryRuleForceFailureNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleForceFailureNode = null;


        try {
            // InternalQualityBtCppParser.g:5635:57: (iv_ruleForceFailureNode= ruleForceFailureNode EOF )
            // InternalQualityBtCppParser.g:5636:2: iv_ruleForceFailureNode= ruleForceFailureNode EOF
            {
             newCompositeNode(grammarAccess.getForceFailureNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleForceFailureNode=ruleForceFailureNode();

            state._fsp--;

             current =iv_ruleForceFailureNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleForceFailureNode"


    // $ANTLR start "ruleForceFailureNode"
    // InternalQualityBtCppParser.g:5642:1: ruleForceFailureNode returns [EObject current=null] : (otherlv_0= ForceFailureNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )? (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )? (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )? otherlv_23= Child ( (lv_child_24_0= ruleTreeNode ) ) otherlv_25= RightCurlyBracket ) ;
    public final EObject ruleForceFailureNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_17=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        Token otherlv_23=null;
        Token otherlv_25=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_ID_4_0 = null;

        EObject lv_parameters_19_0 = null;

        EObject lv_parameters_21_0 = null;

        EObject lv_child_24_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:5648:2: ( (otherlv_0= ForceFailureNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )? (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )? (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )? otherlv_23= Child ( (lv_child_24_0= ruleTreeNode ) ) otherlv_25= RightCurlyBracket ) )
            // InternalQualityBtCppParser.g:5649:2: (otherlv_0= ForceFailureNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )? (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )? (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )? otherlv_23= Child ( (lv_child_24_0= ruleTreeNode ) ) otherlv_25= RightCurlyBracket )
            {
            // InternalQualityBtCppParser.g:5649:2: (otherlv_0= ForceFailureNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )? (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )? (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )? otherlv_23= Child ( (lv_child_24_0= ruleTreeNode ) ) otherlv_25= RightCurlyBracket )
            // InternalQualityBtCppParser.g:5650:3: otherlv_0= ForceFailureNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )? (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )? (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )? otherlv_23= Child ( (lv_child_24_0= ruleTreeNode ) ) otherlv_25= RightCurlyBracket
            {
            otherlv_0=(Token)match(input,ForceFailureNode,FOLLOW_3); 

            			newLeafNode(otherlv_0, grammarAccess.getForceFailureNodeAccess().getForceFailureNodeKeyword_0());
            		
            // InternalQualityBtCppParser.g:5654:3: ( (lv_name_1_0= ruleEString ) )
            // InternalQualityBtCppParser.g:5655:4: (lv_name_1_0= ruleEString )
            {
            // InternalQualityBtCppParser.g:5655:4: (lv_name_1_0= ruleEString )
            // InternalQualityBtCppParser.g:5656:5: lv_name_1_0= ruleEString
            {

            					newCompositeNode(grammarAccess.getForceFailureNodeAccess().getNameEStringParserRuleCall_1_0());
            				
            pushFollow(FOLLOW_21);
            lv_name_1_0=ruleEString();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getForceFailureNodeRule());
            					}
            					set(
            						current,
            						"name",
            						lv_name_1_0,
            						"org.xtext.btcpp.QualityBtCpp.EString");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            otherlv_2=(Token)match(input,LeftCurlyBracket,FOLLOW_31); 

            			newLeafNode(otherlv_2, grammarAccess.getForceFailureNodeAccess().getLeftCurlyBracketKeyword_2());
            		
            // InternalQualityBtCppParser.g:5677:3: (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )?
            int alt144=2;
            int LA144_0 = input.LA(1);

            if ( (LA144_0==ID) ) {
                alt144=1;
            }
            switch (alt144) {
                case 1 :
                    // InternalQualityBtCppParser.g:5678:4: otherlv_3= ID ( (lv_ID_4_0= ruleEString ) )
                    {
                    otherlv_3=(Token)match(input,ID,FOLLOW_3); 

                    				newLeafNode(otherlv_3, grammarAccess.getForceFailureNodeAccess().getIDKeyword_3_0());
                    			
                    // InternalQualityBtCppParser.g:5682:4: ( (lv_ID_4_0= ruleEString ) )
                    // InternalQualityBtCppParser.g:5683:5: (lv_ID_4_0= ruleEString )
                    {
                    // InternalQualityBtCppParser.g:5683:5: (lv_ID_4_0= ruleEString )
                    // InternalQualityBtCppParser.g:5684:6: lv_ID_4_0= ruleEString
                    {

                    						newCompositeNode(grammarAccess.getForceFailureNodeAccess().getIDEStringParserRuleCall_3_1_0());
                    					
                    pushFollow(FOLLOW_32);
                    lv_ID_4_0=ruleEString();

                    state._fsp--;


                    						if (current==null) {
                    							current = createModelElementForParent(grammarAccess.getForceFailureNodeRule());
                    						}
                    						set(
                    							current,
                    							"ID",
                    							lv_ID_4_0,
                    							"org.xtext.btcpp.QualityBtCpp.EString");
                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }


                    }
                    break;

            }

            // InternalQualityBtCppParser.g:5702:3: (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )?
            int alt146=2;
            int LA146_0 = input.LA(1);

            if ( (LA146_0==Satisfices) ) {
                alt146=1;
            }
            switch (alt146) {
                case 1 :
                    // InternalQualityBtCppParser.g:5703:4: otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis
                    {
                    otherlv_5=(Token)match(input,Satisfices,FOLLOW_26); 

                    				newLeafNode(otherlv_5, grammarAccess.getForceFailureNodeAccess().getSatisficesKeyword_4_0());
                    			
                    otherlv_6=(Token)match(input,LeftParenthesis,FOLLOW_3); 

                    				newLeafNode(otherlv_6, grammarAccess.getForceFailureNodeAccess().getLeftParenthesisKeyword_4_1());
                    			
                    // InternalQualityBtCppParser.g:5711:4: ( ( ruleEString ) )
                    // InternalQualityBtCppParser.g:5712:5: ( ruleEString )
                    {
                    // InternalQualityBtCppParser.g:5712:5: ( ruleEString )
                    // InternalQualityBtCppParser.g:5713:6: ruleEString
                    {

                    						if (current==null) {
                    							current = createModelElement(grammarAccess.getForceFailureNodeRule());
                    						}
                    					

                    						newCompositeNode(grammarAccess.getForceFailureNodeAccess().getSatisficesQualityCrossReference_4_2_0());
                    					
                    pushFollow(FOLLOW_20);
                    ruleEString();

                    state._fsp--;


                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:5727:4: (otherlv_8= Comma ( ( ruleEString ) ) )*
                    loop145:
                    do {
                        int alt145=2;
                        int LA145_0 = input.LA(1);

                        if ( (LA145_0==Comma) ) {
                            alt145=1;
                        }


                        switch (alt145) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:5728:5: otherlv_8= Comma ( ( ruleEString ) )
                    	    {
                    	    otherlv_8=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_8, grammarAccess.getForceFailureNodeAccess().getCommaKeyword_4_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:5732:5: ( ( ruleEString ) )
                    	    // InternalQualityBtCppParser.g:5733:6: ( ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:5733:6: ( ruleEString )
                    	    // InternalQualityBtCppParser.g:5734:7: ruleEString
                    	    {

                    	    							if (current==null) {
                    	    								current = createModelElement(grammarAccess.getForceFailureNodeRule());
                    	    							}
                    	    						

                    	    							newCompositeNode(grammarAccess.getForceFailureNodeAccess().getSatisficesQualityCrossReference_4_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_20);
                    	    ruleEString();

                    	    state._fsp--;


                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop145;
                        }
                    } while (true);

                    otherlv_10=(Token)match(input,RightParenthesis,FOLLOW_33); 

                    				newLeafNode(otherlv_10, grammarAccess.getForceFailureNodeAccess().getRightParenthesisKeyword_4_4());
                    			

                    }
                    break;

            }

            // InternalQualityBtCppParser.g:5754:3: (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )?
            int alt148=2;
            int LA148_0 = input.LA(1);

            if ( (LA148_0==Satisfies) ) {
                alt148=1;
            }
            switch (alt148) {
                case 1 :
                    // InternalQualityBtCppParser.g:5755:4: otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis
                    {
                    otherlv_11=(Token)match(input,Satisfies,FOLLOW_26); 

                    				newLeafNode(otherlv_11, grammarAccess.getForceFailureNodeAccess().getSatisfiesKeyword_5_0());
                    			
                    otherlv_12=(Token)match(input,LeftParenthesis,FOLLOW_3); 

                    				newLeafNode(otherlv_12, grammarAccess.getForceFailureNodeAccess().getLeftParenthesisKeyword_5_1());
                    			
                    // InternalQualityBtCppParser.g:5763:4: ( ( ruleEString ) )
                    // InternalQualityBtCppParser.g:5764:5: ( ruleEString )
                    {
                    // InternalQualityBtCppParser.g:5764:5: ( ruleEString )
                    // InternalQualityBtCppParser.g:5765:6: ruleEString
                    {

                    						if (current==null) {
                    							current = createModelElement(grammarAccess.getForceFailureNodeRule());
                    						}
                    					

                    						newCompositeNode(grammarAccess.getForceFailureNodeAccess().getSatisfiesQualityRequirementCrossReference_5_2_0());
                    					
                    pushFollow(FOLLOW_20);
                    ruleEString();

                    state._fsp--;


                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:5779:4: (otherlv_14= Comma ( ( ruleEString ) ) )*
                    loop147:
                    do {
                        int alt147=2;
                        int LA147_0 = input.LA(1);

                        if ( (LA147_0==Comma) ) {
                            alt147=1;
                        }


                        switch (alt147) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:5780:5: otherlv_14= Comma ( ( ruleEString ) )
                    	    {
                    	    otherlv_14=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_14, grammarAccess.getForceFailureNodeAccess().getCommaKeyword_5_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:5784:5: ( ( ruleEString ) )
                    	    // InternalQualityBtCppParser.g:5785:6: ( ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:5785:6: ( ruleEString )
                    	    // InternalQualityBtCppParser.g:5786:7: ruleEString
                    	    {

                    	    							if (current==null) {
                    	    								current = createModelElement(grammarAccess.getForceFailureNodeRule());
                    	    							}
                    	    						

                    	    							newCompositeNode(grammarAccess.getForceFailureNodeAccess().getSatisfiesQualityRequirementCrossReference_5_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_20);
                    	    ruleEString();

                    	    state._fsp--;


                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop147;
                        }
                    } while (true);

                    otherlv_16=(Token)match(input,RightParenthesis,FOLLOW_34); 

                    				newLeafNode(otherlv_16, grammarAccess.getForceFailureNodeAccess().getRightParenthesisKeyword_5_4());
                    			

                    }
                    break;

            }

            // InternalQualityBtCppParser.g:5806:3: (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )?
            int alt150=2;
            int LA150_0 = input.LA(1);

            if ( (LA150_0==Parameters) ) {
                alt150=1;
            }
            switch (alt150) {
                case 1 :
                    // InternalQualityBtCppParser.g:5807:4: otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket
                    {
                    otherlv_17=(Token)match(input,Parameters,FOLLOW_21); 

                    				newLeafNode(otherlv_17, grammarAccess.getForceFailureNodeAccess().getParametersKeyword_6_0());
                    			
                    otherlv_18=(Token)match(input,LeftCurlyBracket,FOLLOW_3); 

                    				newLeafNode(otherlv_18, grammarAccess.getForceFailureNodeAccess().getLeftCurlyBracketKeyword_6_1());
                    			
                    // InternalQualityBtCppParser.g:5815:4: ( (lv_parameters_19_0= ruleParameter ) )
                    // InternalQualityBtCppParser.g:5816:5: (lv_parameters_19_0= ruleParameter )
                    {
                    // InternalQualityBtCppParser.g:5816:5: (lv_parameters_19_0= ruleParameter )
                    // InternalQualityBtCppParser.g:5817:6: lv_parameters_19_0= ruleParameter
                    {

                    						newCompositeNode(grammarAccess.getForceFailureNodeAccess().getParametersParameterParserRuleCall_6_2_0());
                    					
                    pushFollow(FOLLOW_29);
                    lv_parameters_19_0=ruleParameter();

                    state._fsp--;


                    						if (current==null) {
                    							current = createModelElementForParent(grammarAccess.getForceFailureNodeRule());
                    						}
                    						add(
                    							current,
                    							"parameters",
                    							lv_parameters_19_0,
                    							"org.xtext.btcpp.QualityBtCpp.Parameter");
                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:5834:4: (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )*
                    loop149:
                    do {
                        int alt149=2;
                        int LA149_0 = input.LA(1);

                        if ( (LA149_0==Comma) ) {
                            alt149=1;
                        }


                        switch (alt149) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:5835:5: otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) )
                    	    {
                    	    otherlv_20=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_20, grammarAccess.getForceFailureNodeAccess().getCommaKeyword_6_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:5839:5: ( (lv_parameters_21_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:5840:6: (lv_parameters_21_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:5840:6: (lv_parameters_21_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:5841:7: lv_parameters_21_0= ruleParameter
                    	    {

                    	    							newCompositeNode(grammarAccess.getForceFailureNodeAccess().getParametersParameterParserRuleCall_6_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_29);
                    	    lv_parameters_21_0=ruleParameter();

                    	    state._fsp--;


                    	    							if (current==null) {
                    	    								current = createModelElementForParent(grammarAccess.getForceFailureNodeRule());
                    	    							}
                    	    							add(
                    	    								current,
                    	    								"parameters",
                    	    								lv_parameters_21_0,
                    	    								"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop149;
                        }
                    } while (true);

                    otherlv_22=(Token)match(input,RightCurlyBracket,FOLLOW_35); 

                    				newLeafNode(otherlv_22, grammarAccess.getForceFailureNodeAccess().getRightCurlyBracketKeyword_6_4());
                    			

                    }
                    break;

            }

            otherlv_23=(Token)match(input,Child,FOLLOW_9); 

            			newLeafNode(otherlv_23, grammarAccess.getForceFailureNodeAccess().getChildKeyword_7());
            		
            // InternalQualityBtCppParser.g:5868:3: ( (lv_child_24_0= ruleTreeNode ) )
            // InternalQualityBtCppParser.g:5869:4: (lv_child_24_0= ruleTreeNode )
            {
            // InternalQualityBtCppParser.g:5869:4: (lv_child_24_0= ruleTreeNode )
            // InternalQualityBtCppParser.g:5870:5: lv_child_24_0= ruleTreeNode
            {

            					newCompositeNode(grammarAccess.getForceFailureNodeAccess().getChildTreeNodeParserRuleCall_8_0());
            				
            pushFollow(FOLLOW_30);
            lv_child_24_0=ruleTreeNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getForceFailureNodeRule());
            					}
            					set(
            						current,
            						"child",
            						lv_child_24_0,
            						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            otherlv_25=(Token)match(input,RightCurlyBracket,FOLLOW_2); 

            			newLeafNode(otherlv_25, grammarAccess.getForceFailureNodeAccess().getRightCurlyBracketKeyword_9());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleForceFailureNode"


    // $ANTLR start "entryRuleRepeatNode"
    // InternalQualityBtCppParser.g:5895:1: entryRuleRepeatNode returns [EObject current=null] : iv_ruleRepeatNode= ruleRepeatNode EOF ;
    public final EObject entryRuleRepeatNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRepeatNode = null;


        try {
            // InternalQualityBtCppParser.g:5895:51: (iv_ruleRepeatNode= ruleRepeatNode EOF )
            // InternalQualityBtCppParser.g:5896:2: iv_ruleRepeatNode= ruleRepeatNode EOF
            {
             newCompositeNode(grammarAccess.getRepeatNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleRepeatNode=ruleRepeatNode();

            state._fsp--;

             current =iv_ruleRepeatNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRepeatNode"


    // $ANTLR start "ruleRepeatNode"
    // InternalQualityBtCppParser.g:5902:1: ruleRepeatNode returns [EObject current=null] : (otherlv_0= RepeatNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? otherlv_5= Num_cycles ( (lv_num_cycles_6_0= ruleEString ) ) (otherlv_7= Satisfices otherlv_8= LeftParenthesis ( ( ruleEString ) ) (otherlv_10= Comma ( ( ruleEString ) ) )* otherlv_12= RightParenthesis )? (otherlv_13= Satisfies otherlv_14= LeftParenthesis ( ( ruleEString ) ) (otherlv_16= Comma ( ( ruleEString ) ) )* otherlv_18= RightParenthesis )? (otherlv_19= Parameters otherlv_20= LeftCurlyBracket ( (lv_parameters_21_0= ruleParameter ) ) (otherlv_22= Comma ( (lv_parameters_23_0= ruleParameter ) ) )* otherlv_24= RightCurlyBracket )? otherlv_25= Child ( (lv_child_26_0= ruleTreeNode ) ) otherlv_27= RightCurlyBracket ) ;
    public final EObject ruleRepeatNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token otherlv_19=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        Token otherlv_24=null;
        Token otherlv_25=null;
        Token otherlv_27=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_ID_4_0 = null;

        AntlrDatatypeRuleToken lv_num_cycles_6_0 = null;

        EObject lv_parameters_21_0 = null;

        EObject lv_parameters_23_0 = null;

        EObject lv_child_26_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:5908:2: ( (otherlv_0= RepeatNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? otherlv_5= Num_cycles ( (lv_num_cycles_6_0= ruleEString ) ) (otherlv_7= Satisfices otherlv_8= LeftParenthesis ( ( ruleEString ) ) (otherlv_10= Comma ( ( ruleEString ) ) )* otherlv_12= RightParenthesis )? (otherlv_13= Satisfies otherlv_14= LeftParenthesis ( ( ruleEString ) ) (otherlv_16= Comma ( ( ruleEString ) ) )* otherlv_18= RightParenthesis )? (otherlv_19= Parameters otherlv_20= LeftCurlyBracket ( (lv_parameters_21_0= ruleParameter ) ) (otherlv_22= Comma ( (lv_parameters_23_0= ruleParameter ) ) )* otherlv_24= RightCurlyBracket )? otherlv_25= Child ( (lv_child_26_0= ruleTreeNode ) ) otherlv_27= RightCurlyBracket ) )
            // InternalQualityBtCppParser.g:5909:2: (otherlv_0= RepeatNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? otherlv_5= Num_cycles ( (lv_num_cycles_6_0= ruleEString ) ) (otherlv_7= Satisfices otherlv_8= LeftParenthesis ( ( ruleEString ) ) (otherlv_10= Comma ( ( ruleEString ) ) )* otherlv_12= RightParenthesis )? (otherlv_13= Satisfies otherlv_14= LeftParenthesis ( ( ruleEString ) ) (otherlv_16= Comma ( ( ruleEString ) ) )* otherlv_18= RightParenthesis )? (otherlv_19= Parameters otherlv_20= LeftCurlyBracket ( (lv_parameters_21_0= ruleParameter ) ) (otherlv_22= Comma ( (lv_parameters_23_0= ruleParameter ) ) )* otherlv_24= RightCurlyBracket )? otherlv_25= Child ( (lv_child_26_0= ruleTreeNode ) ) otherlv_27= RightCurlyBracket )
            {
            // InternalQualityBtCppParser.g:5909:2: (otherlv_0= RepeatNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? otherlv_5= Num_cycles ( (lv_num_cycles_6_0= ruleEString ) ) (otherlv_7= Satisfices otherlv_8= LeftParenthesis ( ( ruleEString ) ) (otherlv_10= Comma ( ( ruleEString ) ) )* otherlv_12= RightParenthesis )? (otherlv_13= Satisfies otherlv_14= LeftParenthesis ( ( ruleEString ) ) (otherlv_16= Comma ( ( ruleEString ) ) )* otherlv_18= RightParenthesis )? (otherlv_19= Parameters otherlv_20= LeftCurlyBracket ( (lv_parameters_21_0= ruleParameter ) ) (otherlv_22= Comma ( (lv_parameters_23_0= ruleParameter ) ) )* otherlv_24= RightCurlyBracket )? otherlv_25= Child ( (lv_child_26_0= ruleTreeNode ) ) otherlv_27= RightCurlyBracket )
            // InternalQualityBtCppParser.g:5910:3: otherlv_0= RepeatNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? otherlv_5= Num_cycles ( (lv_num_cycles_6_0= ruleEString ) ) (otherlv_7= Satisfices otherlv_8= LeftParenthesis ( ( ruleEString ) ) (otherlv_10= Comma ( ( ruleEString ) ) )* otherlv_12= RightParenthesis )? (otherlv_13= Satisfies otherlv_14= LeftParenthesis ( ( ruleEString ) ) (otherlv_16= Comma ( ( ruleEString ) ) )* otherlv_18= RightParenthesis )? (otherlv_19= Parameters otherlv_20= LeftCurlyBracket ( (lv_parameters_21_0= ruleParameter ) ) (otherlv_22= Comma ( (lv_parameters_23_0= ruleParameter ) ) )* otherlv_24= RightCurlyBracket )? otherlv_25= Child ( (lv_child_26_0= ruleTreeNode ) ) otherlv_27= RightCurlyBracket
            {
            otherlv_0=(Token)match(input,RepeatNode,FOLLOW_3); 

            			newLeafNode(otherlv_0, grammarAccess.getRepeatNodeAccess().getRepeatNodeKeyword_0());
            		
            // InternalQualityBtCppParser.g:5914:3: ( (lv_name_1_0= ruleEString ) )
            // InternalQualityBtCppParser.g:5915:4: (lv_name_1_0= ruleEString )
            {
            // InternalQualityBtCppParser.g:5915:4: (lv_name_1_0= ruleEString )
            // InternalQualityBtCppParser.g:5916:5: lv_name_1_0= ruleEString
            {

            					newCompositeNode(grammarAccess.getRepeatNodeAccess().getNameEStringParserRuleCall_1_0());
            				
            pushFollow(FOLLOW_21);
            lv_name_1_0=ruleEString();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getRepeatNodeRule());
            					}
            					set(
            						current,
            						"name",
            						lv_name_1_0,
            						"org.xtext.btcpp.QualityBtCpp.EString");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            otherlv_2=(Token)match(input,LeftCurlyBracket,FOLLOW_38); 

            			newLeafNode(otherlv_2, grammarAccess.getRepeatNodeAccess().getLeftCurlyBracketKeyword_2());
            		
            // InternalQualityBtCppParser.g:5937:3: (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )?
            int alt151=2;
            int LA151_0 = input.LA(1);

            if ( (LA151_0==ID) ) {
                alt151=1;
            }
            switch (alt151) {
                case 1 :
                    // InternalQualityBtCppParser.g:5938:4: otherlv_3= ID ( (lv_ID_4_0= ruleEString ) )
                    {
                    otherlv_3=(Token)match(input,ID,FOLLOW_3); 

                    				newLeafNode(otherlv_3, grammarAccess.getRepeatNodeAccess().getIDKeyword_3_0());
                    			
                    // InternalQualityBtCppParser.g:5942:4: ( (lv_ID_4_0= ruleEString ) )
                    // InternalQualityBtCppParser.g:5943:5: (lv_ID_4_0= ruleEString )
                    {
                    // InternalQualityBtCppParser.g:5943:5: (lv_ID_4_0= ruleEString )
                    // InternalQualityBtCppParser.g:5944:6: lv_ID_4_0= ruleEString
                    {

                    						newCompositeNode(grammarAccess.getRepeatNodeAccess().getIDEStringParserRuleCall_3_1_0());
                    					
                    pushFollow(FOLLOW_39);
                    lv_ID_4_0=ruleEString();

                    state._fsp--;


                    						if (current==null) {
                    							current = createModelElementForParent(grammarAccess.getRepeatNodeRule());
                    						}
                    						set(
                    							current,
                    							"ID",
                    							lv_ID_4_0,
                    							"org.xtext.btcpp.QualityBtCpp.EString");
                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }


                    }
                    break;

            }

            otherlv_5=(Token)match(input,Num_cycles,FOLLOW_3); 

            			newLeafNode(otherlv_5, grammarAccess.getRepeatNodeAccess().getNum_cyclesKeyword_4());
            		
            // InternalQualityBtCppParser.g:5966:3: ( (lv_num_cycles_6_0= ruleEString ) )
            // InternalQualityBtCppParser.g:5967:4: (lv_num_cycles_6_0= ruleEString )
            {
            // InternalQualityBtCppParser.g:5967:4: (lv_num_cycles_6_0= ruleEString )
            // InternalQualityBtCppParser.g:5968:5: lv_num_cycles_6_0= ruleEString
            {

            					newCompositeNode(grammarAccess.getRepeatNodeAccess().getNum_cyclesEStringParserRuleCall_5_0());
            				
            pushFollow(FOLLOW_32);
            lv_num_cycles_6_0=ruleEString();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getRepeatNodeRule());
            					}
            					set(
            						current,
            						"num_cycles",
            						lv_num_cycles_6_0,
            						"org.xtext.btcpp.QualityBtCpp.EString");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            // InternalQualityBtCppParser.g:5985:3: (otherlv_7= Satisfices otherlv_8= LeftParenthesis ( ( ruleEString ) ) (otherlv_10= Comma ( ( ruleEString ) ) )* otherlv_12= RightParenthesis )?
            int alt153=2;
            int LA153_0 = input.LA(1);

            if ( (LA153_0==Satisfices) ) {
                alt153=1;
            }
            switch (alt153) {
                case 1 :
                    // InternalQualityBtCppParser.g:5986:4: otherlv_7= Satisfices otherlv_8= LeftParenthesis ( ( ruleEString ) ) (otherlv_10= Comma ( ( ruleEString ) ) )* otherlv_12= RightParenthesis
                    {
                    otherlv_7=(Token)match(input,Satisfices,FOLLOW_26); 

                    				newLeafNode(otherlv_7, grammarAccess.getRepeatNodeAccess().getSatisficesKeyword_6_0());
                    			
                    otherlv_8=(Token)match(input,LeftParenthesis,FOLLOW_3); 

                    				newLeafNode(otherlv_8, grammarAccess.getRepeatNodeAccess().getLeftParenthesisKeyword_6_1());
                    			
                    // InternalQualityBtCppParser.g:5994:4: ( ( ruleEString ) )
                    // InternalQualityBtCppParser.g:5995:5: ( ruleEString )
                    {
                    // InternalQualityBtCppParser.g:5995:5: ( ruleEString )
                    // InternalQualityBtCppParser.g:5996:6: ruleEString
                    {

                    						if (current==null) {
                    							current = createModelElement(grammarAccess.getRepeatNodeRule());
                    						}
                    					

                    						newCompositeNode(grammarAccess.getRepeatNodeAccess().getSatisficesQualityCrossReference_6_2_0());
                    					
                    pushFollow(FOLLOW_20);
                    ruleEString();

                    state._fsp--;


                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:6010:4: (otherlv_10= Comma ( ( ruleEString ) ) )*
                    loop152:
                    do {
                        int alt152=2;
                        int LA152_0 = input.LA(1);

                        if ( (LA152_0==Comma) ) {
                            alt152=1;
                        }


                        switch (alt152) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:6011:5: otherlv_10= Comma ( ( ruleEString ) )
                    	    {
                    	    otherlv_10=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_10, grammarAccess.getRepeatNodeAccess().getCommaKeyword_6_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:6015:5: ( ( ruleEString ) )
                    	    // InternalQualityBtCppParser.g:6016:6: ( ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:6016:6: ( ruleEString )
                    	    // InternalQualityBtCppParser.g:6017:7: ruleEString
                    	    {

                    	    							if (current==null) {
                    	    								current = createModelElement(grammarAccess.getRepeatNodeRule());
                    	    							}
                    	    						

                    	    							newCompositeNode(grammarAccess.getRepeatNodeAccess().getSatisficesQualityCrossReference_6_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_20);
                    	    ruleEString();

                    	    state._fsp--;


                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop152;
                        }
                    } while (true);

                    otherlv_12=(Token)match(input,RightParenthesis,FOLLOW_33); 

                    				newLeafNode(otherlv_12, grammarAccess.getRepeatNodeAccess().getRightParenthesisKeyword_6_4());
                    			

                    }
                    break;

            }

            // InternalQualityBtCppParser.g:6037:3: (otherlv_13= Satisfies otherlv_14= LeftParenthesis ( ( ruleEString ) ) (otherlv_16= Comma ( ( ruleEString ) ) )* otherlv_18= RightParenthesis )?
            int alt155=2;
            int LA155_0 = input.LA(1);

            if ( (LA155_0==Satisfies) ) {
                alt155=1;
            }
            switch (alt155) {
                case 1 :
                    // InternalQualityBtCppParser.g:6038:4: otherlv_13= Satisfies otherlv_14= LeftParenthesis ( ( ruleEString ) ) (otherlv_16= Comma ( ( ruleEString ) ) )* otherlv_18= RightParenthesis
                    {
                    otherlv_13=(Token)match(input,Satisfies,FOLLOW_26); 

                    				newLeafNode(otherlv_13, grammarAccess.getRepeatNodeAccess().getSatisfiesKeyword_7_0());
                    			
                    otherlv_14=(Token)match(input,LeftParenthesis,FOLLOW_3); 

                    				newLeafNode(otherlv_14, grammarAccess.getRepeatNodeAccess().getLeftParenthesisKeyword_7_1());
                    			
                    // InternalQualityBtCppParser.g:6046:4: ( ( ruleEString ) )
                    // InternalQualityBtCppParser.g:6047:5: ( ruleEString )
                    {
                    // InternalQualityBtCppParser.g:6047:5: ( ruleEString )
                    // InternalQualityBtCppParser.g:6048:6: ruleEString
                    {

                    						if (current==null) {
                    							current = createModelElement(grammarAccess.getRepeatNodeRule());
                    						}
                    					

                    						newCompositeNode(grammarAccess.getRepeatNodeAccess().getSatisfiesQualityRequirementCrossReference_7_2_0());
                    					
                    pushFollow(FOLLOW_20);
                    ruleEString();

                    state._fsp--;


                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:6062:4: (otherlv_16= Comma ( ( ruleEString ) ) )*
                    loop154:
                    do {
                        int alt154=2;
                        int LA154_0 = input.LA(1);

                        if ( (LA154_0==Comma) ) {
                            alt154=1;
                        }


                        switch (alt154) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:6063:5: otherlv_16= Comma ( ( ruleEString ) )
                    	    {
                    	    otherlv_16=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_16, grammarAccess.getRepeatNodeAccess().getCommaKeyword_7_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:6067:5: ( ( ruleEString ) )
                    	    // InternalQualityBtCppParser.g:6068:6: ( ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:6068:6: ( ruleEString )
                    	    // InternalQualityBtCppParser.g:6069:7: ruleEString
                    	    {

                    	    							if (current==null) {
                    	    								current = createModelElement(grammarAccess.getRepeatNodeRule());
                    	    							}
                    	    						

                    	    							newCompositeNode(grammarAccess.getRepeatNodeAccess().getSatisfiesQualityRequirementCrossReference_7_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_20);
                    	    ruleEString();

                    	    state._fsp--;


                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop154;
                        }
                    } while (true);

                    otherlv_18=(Token)match(input,RightParenthesis,FOLLOW_34); 

                    				newLeafNode(otherlv_18, grammarAccess.getRepeatNodeAccess().getRightParenthesisKeyword_7_4());
                    			

                    }
                    break;

            }

            // InternalQualityBtCppParser.g:6089:3: (otherlv_19= Parameters otherlv_20= LeftCurlyBracket ( (lv_parameters_21_0= ruleParameter ) ) (otherlv_22= Comma ( (lv_parameters_23_0= ruleParameter ) ) )* otherlv_24= RightCurlyBracket )?
            int alt157=2;
            int LA157_0 = input.LA(1);

            if ( (LA157_0==Parameters) ) {
                alt157=1;
            }
            switch (alt157) {
                case 1 :
                    // InternalQualityBtCppParser.g:6090:4: otherlv_19= Parameters otherlv_20= LeftCurlyBracket ( (lv_parameters_21_0= ruleParameter ) ) (otherlv_22= Comma ( (lv_parameters_23_0= ruleParameter ) ) )* otherlv_24= RightCurlyBracket
                    {
                    otherlv_19=(Token)match(input,Parameters,FOLLOW_21); 

                    				newLeafNode(otherlv_19, grammarAccess.getRepeatNodeAccess().getParametersKeyword_8_0());
                    			
                    otherlv_20=(Token)match(input,LeftCurlyBracket,FOLLOW_3); 

                    				newLeafNode(otherlv_20, grammarAccess.getRepeatNodeAccess().getLeftCurlyBracketKeyword_8_1());
                    			
                    // InternalQualityBtCppParser.g:6098:4: ( (lv_parameters_21_0= ruleParameter ) )
                    // InternalQualityBtCppParser.g:6099:5: (lv_parameters_21_0= ruleParameter )
                    {
                    // InternalQualityBtCppParser.g:6099:5: (lv_parameters_21_0= ruleParameter )
                    // InternalQualityBtCppParser.g:6100:6: lv_parameters_21_0= ruleParameter
                    {

                    						newCompositeNode(grammarAccess.getRepeatNodeAccess().getParametersParameterParserRuleCall_8_2_0());
                    					
                    pushFollow(FOLLOW_29);
                    lv_parameters_21_0=ruleParameter();

                    state._fsp--;


                    						if (current==null) {
                    							current = createModelElementForParent(grammarAccess.getRepeatNodeRule());
                    						}
                    						add(
                    							current,
                    							"parameters",
                    							lv_parameters_21_0,
                    							"org.xtext.btcpp.QualityBtCpp.Parameter");
                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:6117:4: (otherlv_22= Comma ( (lv_parameters_23_0= ruleParameter ) ) )*
                    loop156:
                    do {
                        int alt156=2;
                        int LA156_0 = input.LA(1);

                        if ( (LA156_0==Comma) ) {
                            alt156=1;
                        }


                        switch (alt156) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:6118:5: otherlv_22= Comma ( (lv_parameters_23_0= ruleParameter ) )
                    	    {
                    	    otherlv_22=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_22, grammarAccess.getRepeatNodeAccess().getCommaKeyword_8_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:6122:5: ( (lv_parameters_23_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:6123:6: (lv_parameters_23_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:6123:6: (lv_parameters_23_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:6124:7: lv_parameters_23_0= ruleParameter
                    	    {

                    	    							newCompositeNode(grammarAccess.getRepeatNodeAccess().getParametersParameterParserRuleCall_8_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_29);
                    	    lv_parameters_23_0=ruleParameter();

                    	    state._fsp--;


                    	    							if (current==null) {
                    	    								current = createModelElementForParent(grammarAccess.getRepeatNodeRule());
                    	    							}
                    	    							add(
                    	    								current,
                    	    								"parameters",
                    	    								lv_parameters_23_0,
                    	    								"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop156;
                        }
                    } while (true);

                    otherlv_24=(Token)match(input,RightCurlyBracket,FOLLOW_35); 

                    				newLeafNode(otherlv_24, grammarAccess.getRepeatNodeAccess().getRightCurlyBracketKeyword_8_4());
                    			

                    }
                    break;

            }

            otherlv_25=(Token)match(input,Child,FOLLOW_9); 

            			newLeafNode(otherlv_25, grammarAccess.getRepeatNodeAccess().getChildKeyword_9());
            		
            // InternalQualityBtCppParser.g:6151:3: ( (lv_child_26_0= ruleTreeNode ) )
            // InternalQualityBtCppParser.g:6152:4: (lv_child_26_0= ruleTreeNode )
            {
            // InternalQualityBtCppParser.g:6152:4: (lv_child_26_0= ruleTreeNode )
            // InternalQualityBtCppParser.g:6153:5: lv_child_26_0= ruleTreeNode
            {

            					newCompositeNode(grammarAccess.getRepeatNodeAccess().getChildTreeNodeParserRuleCall_10_0());
            				
            pushFollow(FOLLOW_30);
            lv_child_26_0=ruleTreeNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getRepeatNodeRule());
            					}
            					set(
            						current,
            						"child",
            						lv_child_26_0,
            						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            otherlv_27=(Token)match(input,RightCurlyBracket,FOLLOW_2); 

            			newLeafNode(otherlv_27, grammarAccess.getRepeatNodeAccess().getRightCurlyBracketKeyword_11());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRepeatNode"


    // $ANTLR start "entryRuleSubTree"
    // InternalQualityBtCppParser.g:6178:1: entryRuleSubTree returns [EObject current=null] : iv_ruleSubTree= ruleSubTree EOF ;
    public final EObject entryRuleSubTree() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSubTree = null;


        try {
            // InternalQualityBtCppParser.g:6178:48: (iv_ruleSubTree= ruleSubTree EOF )
            // InternalQualityBtCppParser.g:6179:2: iv_ruleSubTree= ruleSubTree EOF
            {
             newCompositeNode(grammarAccess.getSubTreeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleSubTree=ruleSubTree();

            state._fsp--;

             current =iv_ruleSubTree; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSubTree"


    // $ANTLR start "ruleSubTree"
    // InternalQualityBtCppParser.g:6185:1: ruleSubTree returns [EObject current=null] : ( () otherlv_1= SubTree ( (lv_name_2_0= ruleEString ) ) otherlv_3= LeftCurlyBracket (otherlv_4= ID ( (lv_ID_5_0= ruleEString ) ) )? (otherlv_6= Satisfices otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis )? (otherlv_12= Satisfies otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis )? (otherlv_18= Parameters otherlv_19= LeftCurlyBracket ( (lv_parameters_20_0= ruleParameter ) ) (otherlv_21= Comma ( (lv_parameters_22_0= ruleParameter ) ) )* otherlv_23= RightCurlyBracket )? (otherlv_24= Child otherlv_25= LeftCurlyBracket ( (lv_child_26_0= ruleTreeNode ) ) (otherlv_27= Comma ( (lv_child_28_0= ruleTreeNode ) ) )* otherlv_29= RightCurlyBracket )? otherlv_30= RightCurlyBracket ) ;
    public final EObject ruleSubTree() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_18=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token otherlv_23=null;
        Token otherlv_24=null;
        Token otherlv_25=null;
        Token otherlv_27=null;
        Token otherlv_29=null;
        Token otherlv_30=null;
        AntlrDatatypeRuleToken lv_name_2_0 = null;

        AntlrDatatypeRuleToken lv_ID_5_0 = null;

        EObject lv_parameters_20_0 = null;

        EObject lv_parameters_22_0 = null;

        EObject lv_child_26_0 = null;

        EObject lv_child_28_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:6191:2: ( ( () otherlv_1= SubTree ( (lv_name_2_0= ruleEString ) ) otherlv_3= LeftCurlyBracket (otherlv_4= ID ( (lv_ID_5_0= ruleEString ) ) )? (otherlv_6= Satisfices otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis )? (otherlv_12= Satisfies otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis )? (otherlv_18= Parameters otherlv_19= LeftCurlyBracket ( (lv_parameters_20_0= ruleParameter ) ) (otherlv_21= Comma ( (lv_parameters_22_0= ruleParameter ) ) )* otherlv_23= RightCurlyBracket )? (otherlv_24= Child otherlv_25= LeftCurlyBracket ( (lv_child_26_0= ruleTreeNode ) ) (otherlv_27= Comma ( (lv_child_28_0= ruleTreeNode ) ) )* otherlv_29= RightCurlyBracket )? otherlv_30= RightCurlyBracket ) )
            // InternalQualityBtCppParser.g:6192:2: ( () otherlv_1= SubTree ( (lv_name_2_0= ruleEString ) ) otherlv_3= LeftCurlyBracket (otherlv_4= ID ( (lv_ID_5_0= ruleEString ) ) )? (otherlv_6= Satisfices otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis )? (otherlv_12= Satisfies otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis )? (otherlv_18= Parameters otherlv_19= LeftCurlyBracket ( (lv_parameters_20_0= ruleParameter ) ) (otherlv_21= Comma ( (lv_parameters_22_0= ruleParameter ) ) )* otherlv_23= RightCurlyBracket )? (otherlv_24= Child otherlv_25= LeftCurlyBracket ( (lv_child_26_0= ruleTreeNode ) ) (otherlv_27= Comma ( (lv_child_28_0= ruleTreeNode ) ) )* otherlv_29= RightCurlyBracket )? otherlv_30= RightCurlyBracket )
            {
            // InternalQualityBtCppParser.g:6192:2: ( () otherlv_1= SubTree ( (lv_name_2_0= ruleEString ) ) otherlv_3= LeftCurlyBracket (otherlv_4= ID ( (lv_ID_5_0= ruleEString ) ) )? (otherlv_6= Satisfices otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis )? (otherlv_12= Satisfies otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis )? (otherlv_18= Parameters otherlv_19= LeftCurlyBracket ( (lv_parameters_20_0= ruleParameter ) ) (otherlv_21= Comma ( (lv_parameters_22_0= ruleParameter ) ) )* otherlv_23= RightCurlyBracket )? (otherlv_24= Child otherlv_25= LeftCurlyBracket ( (lv_child_26_0= ruleTreeNode ) ) (otherlv_27= Comma ( (lv_child_28_0= ruleTreeNode ) ) )* otherlv_29= RightCurlyBracket )? otherlv_30= RightCurlyBracket )
            // InternalQualityBtCppParser.g:6193:3: () otherlv_1= SubTree ( (lv_name_2_0= ruleEString ) ) otherlv_3= LeftCurlyBracket (otherlv_4= ID ( (lv_ID_5_0= ruleEString ) ) )? (otherlv_6= Satisfices otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis )? (otherlv_12= Satisfies otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis )? (otherlv_18= Parameters otherlv_19= LeftCurlyBracket ( (lv_parameters_20_0= ruleParameter ) ) (otherlv_21= Comma ( (lv_parameters_22_0= ruleParameter ) ) )* otherlv_23= RightCurlyBracket )? (otherlv_24= Child otherlv_25= LeftCurlyBracket ( (lv_child_26_0= ruleTreeNode ) ) (otherlv_27= Comma ( (lv_child_28_0= ruleTreeNode ) ) )* otherlv_29= RightCurlyBracket )? otherlv_30= RightCurlyBracket
            {
            // InternalQualityBtCppParser.g:6193:3: ()
            // InternalQualityBtCppParser.g:6194:4: 
            {

            				current = forceCreateModelElement(
            					grammarAccess.getSubTreeAccess().getSubTreeAction_0(),
            					current);
            			

            }

            otherlv_1=(Token)match(input,SubTree,FOLLOW_3); 

            			newLeafNode(otherlv_1, grammarAccess.getSubTreeAccess().getSubTreeKeyword_1());
            		
            // InternalQualityBtCppParser.g:6204:3: ( (lv_name_2_0= ruleEString ) )
            // InternalQualityBtCppParser.g:6205:4: (lv_name_2_0= ruleEString )
            {
            // InternalQualityBtCppParser.g:6205:4: (lv_name_2_0= ruleEString )
            // InternalQualityBtCppParser.g:6206:5: lv_name_2_0= ruleEString
            {

            					newCompositeNode(grammarAccess.getSubTreeAccess().getNameEStringParserRuleCall_2_0());
            				
            pushFollow(FOLLOW_21);
            lv_name_2_0=ruleEString();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getSubTreeRule());
            					}
            					set(
            						current,
            						"name",
            						lv_name_2_0,
            						"org.xtext.btcpp.QualityBtCpp.EString");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            otherlv_3=(Token)match(input,LeftCurlyBracket,FOLLOW_40); 

            			newLeafNode(otherlv_3, grammarAccess.getSubTreeAccess().getLeftCurlyBracketKeyword_3());
            		
            // InternalQualityBtCppParser.g:6227:3: (otherlv_4= ID ( (lv_ID_5_0= ruleEString ) ) )?
            int alt158=2;
            int LA158_0 = input.LA(1);

            if ( (LA158_0==ID) ) {
                alt158=1;
            }
            switch (alt158) {
                case 1 :
                    // InternalQualityBtCppParser.g:6228:4: otherlv_4= ID ( (lv_ID_5_0= ruleEString ) )
                    {
                    otherlv_4=(Token)match(input,ID,FOLLOW_3); 

                    				newLeafNode(otherlv_4, grammarAccess.getSubTreeAccess().getIDKeyword_4_0());
                    			
                    // InternalQualityBtCppParser.g:6232:4: ( (lv_ID_5_0= ruleEString ) )
                    // InternalQualityBtCppParser.g:6233:5: (lv_ID_5_0= ruleEString )
                    {
                    // InternalQualityBtCppParser.g:6233:5: (lv_ID_5_0= ruleEString )
                    // InternalQualityBtCppParser.g:6234:6: lv_ID_5_0= ruleEString
                    {

                    						newCompositeNode(grammarAccess.getSubTreeAccess().getIDEStringParserRuleCall_4_1_0());
                    					
                    pushFollow(FOLLOW_41);
                    lv_ID_5_0=ruleEString();

                    state._fsp--;


                    						if (current==null) {
                    							current = createModelElementForParent(grammarAccess.getSubTreeRule());
                    						}
                    						set(
                    							current,
                    							"ID",
                    							lv_ID_5_0,
                    							"org.xtext.btcpp.QualityBtCpp.EString");
                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }


                    }
                    break;

            }

            // InternalQualityBtCppParser.g:6252:3: (otherlv_6= Satisfices otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis )?
            int alt160=2;
            int LA160_0 = input.LA(1);

            if ( (LA160_0==Satisfices) ) {
                alt160=1;
            }
            switch (alt160) {
                case 1 :
                    // InternalQualityBtCppParser.g:6253:4: otherlv_6= Satisfices otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis
                    {
                    otherlv_6=(Token)match(input,Satisfices,FOLLOW_26); 

                    				newLeafNode(otherlv_6, grammarAccess.getSubTreeAccess().getSatisficesKeyword_5_0());
                    			
                    otherlv_7=(Token)match(input,LeftParenthesis,FOLLOW_3); 

                    				newLeafNode(otherlv_7, grammarAccess.getSubTreeAccess().getLeftParenthesisKeyword_5_1());
                    			
                    // InternalQualityBtCppParser.g:6261:4: ( ( ruleEString ) )
                    // InternalQualityBtCppParser.g:6262:5: ( ruleEString )
                    {
                    // InternalQualityBtCppParser.g:6262:5: ( ruleEString )
                    // InternalQualityBtCppParser.g:6263:6: ruleEString
                    {

                    						if (current==null) {
                    							current = createModelElement(grammarAccess.getSubTreeRule());
                    						}
                    					

                    						newCompositeNode(grammarAccess.getSubTreeAccess().getSatisficesQualityCrossReference_5_2_0());
                    					
                    pushFollow(FOLLOW_20);
                    ruleEString();

                    state._fsp--;


                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:6277:4: (otherlv_9= Comma ( ( ruleEString ) ) )*
                    loop159:
                    do {
                        int alt159=2;
                        int LA159_0 = input.LA(1);

                        if ( (LA159_0==Comma) ) {
                            alt159=1;
                        }


                        switch (alt159) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:6278:5: otherlv_9= Comma ( ( ruleEString ) )
                    	    {
                    	    otherlv_9=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_9, grammarAccess.getSubTreeAccess().getCommaKeyword_5_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:6282:5: ( ( ruleEString ) )
                    	    // InternalQualityBtCppParser.g:6283:6: ( ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:6283:6: ( ruleEString )
                    	    // InternalQualityBtCppParser.g:6284:7: ruleEString
                    	    {

                    	    							if (current==null) {
                    	    								current = createModelElement(grammarAccess.getSubTreeRule());
                    	    							}
                    	    						

                    	    							newCompositeNode(grammarAccess.getSubTreeAccess().getSatisficesQualityCrossReference_5_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_20);
                    	    ruleEString();

                    	    state._fsp--;


                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop159;
                        }
                    } while (true);

                    otherlv_11=(Token)match(input,RightParenthesis,FOLLOW_42); 

                    				newLeafNode(otherlv_11, grammarAccess.getSubTreeAccess().getRightParenthesisKeyword_5_4());
                    			

                    }
                    break;

            }

            // InternalQualityBtCppParser.g:6304:3: (otherlv_12= Satisfies otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis )?
            int alt162=2;
            int LA162_0 = input.LA(1);

            if ( (LA162_0==Satisfies) ) {
                alt162=1;
            }
            switch (alt162) {
                case 1 :
                    // InternalQualityBtCppParser.g:6305:4: otherlv_12= Satisfies otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis
                    {
                    otherlv_12=(Token)match(input,Satisfies,FOLLOW_26); 

                    				newLeafNode(otherlv_12, grammarAccess.getSubTreeAccess().getSatisfiesKeyword_6_0());
                    			
                    otherlv_13=(Token)match(input,LeftParenthesis,FOLLOW_3); 

                    				newLeafNode(otherlv_13, grammarAccess.getSubTreeAccess().getLeftParenthesisKeyword_6_1());
                    			
                    // InternalQualityBtCppParser.g:6313:4: ( ( ruleEString ) )
                    // InternalQualityBtCppParser.g:6314:5: ( ruleEString )
                    {
                    // InternalQualityBtCppParser.g:6314:5: ( ruleEString )
                    // InternalQualityBtCppParser.g:6315:6: ruleEString
                    {

                    						if (current==null) {
                    							current = createModelElement(grammarAccess.getSubTreeRule());
                    						}
                    					

                    						newCompositeNode(grammarAccess.getSubTreeAccess().getSatisfiesQualityRequirementCrossReference_6_2_0());
                    					
                    pushFollow(FOLLOW_20);
                    ruleEString();

                    state._fsp--;


                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:6329:4: (otherlv_15= Comma ( ( ruleEString ) ) )*
                    loop161:
                    do {
                        int alt161=2;
                        int LA161_0 = input.LA(1);

                        if ( (LA161_0==Comma) ) {
                            alt161=1;
                        }


                        switch (alt161) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:6330:5: otherlv_15= Comma ( ( ruleEString ) )
                    	    {
                    	    otherlv_15=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_15, grammarAccess.getSubTreeAccess().getCommaKeyword_6_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:6334:5: ( ( ruleEString ) )
                    	    // InternalQualityBtCppParser.g:6335:6: ( ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:6335:6: ( ruleEString )
                    	    // InternalQualityBtCppParser.g:6336:7: ruleEString
                    	    {

                    	    							if (current==null) {
                    	    								current = createModelElement(grammarAccess.getSubTreeRule());
                    	    							}
                    	    						

                    	    							newCompositeNode(grammarAccess.getSubTreeAccess().getSatisfiesQualityRequirementCrossReference_6_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_20);
                    	    ruleEString();

                    	    state._fsp--;


                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop161;
                        }
                    } while (true);

                    otherlv_17=(Token)match(input,RightParenthesis,FOLLOW_43); 

                    				newLeafNode(otherlv_17, grammarAccess.getSubTreeAccess().getRightParenthesisKeyword_6_4());
                    			

                    }
                    break;

            }

            // InternalQualityBtCppParser.g:6356:3: (otherlv_18= Parameters otherlv_19= LeftCurlyBracket ( (lv_parameters_20_0= ruleParameter ) ) (otherlv_21= Comma ( (lv_parameters_22_0= ruleParameter ) ) )* otherlv_23= RightCurlyBracket )?
            int alt164=2;
            int LA164_0 = input.LA(1);

            if ( (LA164_0==Parameters) ) {
                alt164=1;
            }
            switch (alt164) {
                case 1 :
                    // InternalQualityBtCppParser.g:6357:4: otherlv_18= Parameters otherlv_19= LeftCurlyBracket ( (lv_parameters_20_0= ruleParameter ) ) (otherlv_21= Comma ( (lv_parameters_22_0= ruleParameter ) ) )* otherlv_23= RightCurlyBracket
                    {
                    otherlv_18=(Token)match(input,Parameters,FOLLOW_21); 

                    				newLeafNode(otherlv_18, grammarAccess.getSubTreeAccess().getParametersKeyword_7_0());
                    			
                    otherlv_19=(Token)match(input,LeftCurlyBracket,FOLLOW_3); 

                    				newLeafNode(otherlv_19, grammarAccess.getSubTreeAccess().getLeftCurlyBracketKeyword_7_1());
                    			
                    // InternalQualityBtCppParser.g:6365:4: ( (lv_parameters_20_0= ruleParameter ) )
                    // InternalQualityBtCppParser.g:6366:5: (lv_parameters_20_0= ruleParameter )
                    {
                    // InternalQualityBtCppParser.g:6366:5: (lv_parameters_20_0= ruleParameter )
                    // InternalQualityBtCppParser.g:6367:6: lv_parameters_20_0= ruleParameter
                    {

                    						newCompositeNode(grammarAccess.getSubTreeAccess().getParametersParameterParserRuleCall_7_2_0());
                    					
                    pushFollow(FOLLOW_29);
                    lv_parameters_20_0=ruleParameter();

                    state._fsp--;


                    						if (current==null) {
                    							current = createModelElementForParent(grammarAccess.getSubTreeRule());
                    						}
                    						add(
                    							current,
                    							"parameters",
                    							lv_parameters_20_0,
                    							"org.xtext.btcpp.QualityBtCpp.Parameter");
                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:6384:4: (otherlv_21= Comma ( (lv_parameters_22_0= ruleParameter ) ) )*
                    loop163:
                    do {
                        int alt163=2;
                        int LA163_0 = input.LA(1);

                        if ( (LA163_0==Comma) ) {
                            alt163=1;
                        }


                        switch (alt163) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:6385:5: otherlv_21= Comma ( (lv_parameters_22_0= ruleParameter ) )
                    	    {
                    	    otherlv_21=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_21, grammarAccess.getSubTreeAccess().getCommaKeyword_7_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:6389:5: ( (lv_parameters_22_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:6390:6: (lv_parameters_22_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:6390:6: (lv_parameters_22_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:6391:7: lv_parameters_22_0= ruleParameter
                    	    {

                    	    							newCompositeNode(grammarAccess.getSubTreeAccess().getParametersParameterParserRuleCall_7_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_29);
                    	    lv_parameters_22_0=ruleParameter();

                    	    state._fsp--;


                    	    							if (current==null) {
                    	    								current = createModelElementForParent(grammarAccess.getSubTreeRule());
                    	    							}
                    	    							add(
                    	    								current,
                    	    								"parameters",
                    	    								lv_parameters_22_0,
                    	    								"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop163;
                        }
                    } while (true);

                    otherlv_23=(Token)match(input,RightCurlyBracket,FOLLOW_44); 

                    				newLeafNode(otherlv_23, grammarAccess.getSubTreeAccess().getRightCurlyBracketKeyword_7_4());
                    			

                    }
                    break;

            }

            // InternalQualityBtCppParser.g:6414:3: (otherlv_24= Child otherlv_25= LeftCurlyBracket ( (lv_child_26_0= ruleTreeNode ) ) (otherlv_27= Comma ( (lv_child_28_0= ruleTreeNode ) ) )* otherlv_29= RightCurlyBracket )?
            int alt166=2;
            int LA166_0 = input.LA(1);

            if ( (LA166_0==Child) ) {
                alt166=1;
            }
            switch (alt166) {
                case 1 :
                    // InternalQualityBtCppParser.g:6415:4: otherlv_24= Child otherlv_25= LeftCurlyBracket ( (lv_child_26_0= ruleTreeNode ) ) (otherlv_27= Comma ( (lv_child_28_0= ruleTreeNode ) ) )* otherlv_29= RightCurlyBracket
                    {
                    otherlv_24=(Token)match(input,Child,FOLLOW_21); 

                    				newLeafNode(otherlv_24, grammarAccess.getSubTreeAccess().getChildKeyword_8_0());
                    			
                    otherlv_25=(Token)match(input,LeftCurlyBracket,FOLLOW_9); 

                    				newLeafNode(otherlv_25, grammarAccess.getSubTreeAccess().getLeftCurlyBracketKeyword_8_1());
                    			
                    // InternalQualityBtCppParser.g:6423:4: ( (lv_child_26_0= ruleTreeNode ) )
                    // InternalQualityBtCppParser.g:6424:5: (lv_child_26_0= ruleTreeNode )
                    {
                    // InternalQualityBtCppParser.g:6424:5: (lv_child_26_0= ruleTreeNode )
                    // InternalQualityBtCppParser.g:6425:6: lv_child_26_0= ruleTreeNode
                    {

                    						newCompositeNode(grammarAccess.getSubTreeAccess().getChildTreeNodeParserRuleCall_8_2_0());
                    					
                    pushFollow(FOLLOW_29);
                    lv_child_26_0=ruleTreeNode();

                    state._fsp--;


                    						if (current==null) {
                    							current = createModelElementForParent(grammarAccess.getSubTreeRule());
                    						}
                    						add(
                    							current,
                    							"child",
                    							lv_child_26_0,
                    							"org.xtext.btcpp.QualityBtCpp.TreeNode");
                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:6442:4: (otherlv_27= Comma ( (lv_child_28_0= ruleTreeNode ) ) )*
                    loop165:
                    do {
                        int alt165=2;
                        int LA165_0 = input.LA(1);

                        if ( (LA165_0==Comma) ) {
                            alt165=1;
                        }


                        switch (alt165) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:6443:5: otherlv_27= Comma ( (lv_child_28_0= ruleTreeNode ) )
                    	    {
                    	    otherlv_27=(Token)match(input,Comma,FOLLOW_9); 

                    	    					newLeafNode(otherlv_27, grammarAccess.getSubTreeAccess().getCommaKeyword_8_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:6447:5: ( (lv_child_28_0= ruleTreeNode ) )
                    	    // InternalQualityBtCppParser.g:6448:6: (lv_child_28_0= ruleTreeNode )
                    	    {
                    	    // InternalQualityBtCppParser.g:6448:6: (lv_child_28_0= ruleTreeNode )
                    	    // InternalQualityBtCppParser.g:6449:7: lv_child_28_0= ruleTreeNode
                    	    {

                    	    							newCompositeNode(grammarAccess.getSubTreeAccess().getChildTreeNodeParserRuleCall_8_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_29);
                    	    lv_child_28_0=ruleTreeNode();

                    	    state._fsp--;


                    	    							if (current==null) {
                    	    								current = createModelElementForParent(grammarAccess.getSubTreeRule());
                    	    							}
                    	    							add(
                    	    								current,
                    	    								"child",
                    	    								lv_child_28_0,
                    	    								"org.xtext.btcpp.QualityBtCpp.TreeNode");
                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop165;
                        }
                    } while (true);

                    otherlv_29=(Token)match(input,RightCurlyBracket,FOLLOW_30); 

                    				newLeafNode(otherlv_29, grammarAccess.getSubTreeAccess().getRightCurlyBracketKeyword_8_4());
                    			

                    }
                    break;

            }

            otherlv_30=(Token)match(input,RightCurlyBracket,FOLLOW_2); 

            			newLeafNode(otherlv_30, grammarAccess.getSubTreeAccess().getRightCurlyBracketKeyword_9());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSubTree"


    // $ANTLR start "entryRuleScriptNode"
    // InternalQualityBtCppParser.g:6480:1: entryRuleScriptNode returns [EObject current=null] : iv_ruleScriptNode= ruleScriptNode EOF ;
    public final EObject entryRuleScriptNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleScriptNode = null;


        try {
            // InternalQualityBtCppParser.g:6480:51: (iv_ruleScriptNode= ruleScriptNode EOF )
            // InternalQualityBtCppParser.g:6481:2: iv_ruleScriptNode= ruleScriptNode EOF
            {
             newCompositeNode(grammarAccess.getScriptNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleScriptNode=ruleScriptNode();

            state._fsp--;

             current =iv_ruleScriptNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleScriptNode"


    // $ANTLR start "ruleScriptNode"
    // InternalQualityBtCppParser.g:6487:1: ruleScriptNode returns [EObject current=null] : ( () otherlv_1= ScriptNode ( (lv_name_2_0= ruleEString ) ) otherlv_3= LeftCurlyBracket (otherlv_4= ID ( (lv_ID_5_0= ruleEString ) ) )? (otherlv_6= Satisfices otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis )? (otherlv_12= Satisfies otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis )? (otherlv_18= Parameters otherlv_19= LeftCurlyBracket ( (lv_parameters_20_0= ruleParameter ) ) (otherlv_21= Comma ( (lv_parameters_22_0= ruleParameter ) ) )* otherlv_23= RightCurlyBracket )? otherlv_24= RightCurlyBracket ) ;
    public final EObject ruleScriptNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_18=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token otherlv_23=null;
        Token otherlv_24=null;
        AntlrDatatypeRuleToken lv_name_2_0 = null;

        AntlrDatatypeRuleToken lv_ID_5_0 = null;

        EObject lv_parameters_20_0 = null;

        EObject lv_parameters_22_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:6493:2: ( ( () otherlv_1= ScriptNode ( (lv_name_2_0= ruleEString ) ) otherlv_3= LeftCurlyBracket (otherlv_4= ID ( (lv_ID_5_0= ruleEString ) ) )? (otherlv_6= Satisfices otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis )? (otherlv_12= Satisfies otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis )? (otherlv_18= Parameters otherlv_19= LeftCurlyBracket ( (lv_parameters_20_0= ruleParameter ) ) (otherlv_21= Comma ( (lv_parameters_22_0= ruleParameter ) ) )* otherlv_23= RightCurlyBracket )? otherlv_24= RightCurlyBracket ) )
            // InternalQualityBtCppParser.g:6494:2: ( () otherlv_1= ScriptNode ( (lv_name_2_0= ruleEString ) ) otherlv_3= LeftCurlyBracket (otherlv_4= ID ( (lv_ID_5_0= ruleEString ) ) )? (otherlv_6= Satisfices otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis )? (otherlv_12= Satisfies otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis )? (otherlv_18= Parameters otherlv_19= LeftCurlyBracket ( (lv_parameters_20_0= ruleParameter ) ) (otherlv_21= Comma ( (lv_parameters_22_0= ruleParameter ) ) )* otherlv_23= RightCurlyBracket )? otherlv_24= RightCurlyBracket )
            {
            // InternalQualityBtCppParser.g:6494:2: ( () otherlv_1= ScriptNode ( (lv_name_2_0= ruleEString ) ) otherlv_3= LeftCurlyBracket (otherlv_4= ID ( (lv_ID_5_0= ruleEString ) ) )? (otherlv_6= Satisfices otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis )? (otherlv_12= Satisfies otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis )? (otherlv_18= Parameters otherlv_19= LeftCurlyBracket ( (lv_parameters_20_0= ruleParameter ) ) (otherlv_21= Comma ( (lv_parameters_22_0= ruleParameter ) ) )* otherlv_23= RightCurlyBracket )? otherlv_24= RightCurlyBracket )
            // InternalQualityBtCppParser.g:6495:3: () otherlv_1= ScriptNode ( (lv_name_2_0= ruleEString ) ) otherlv_3= LeftCurlyBracket (otherlv_4= ID ( (lv_ID_5_0= ruleEString ) ) )? (otherlv_6= Satisfices otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis )? (otherlv_12= Satisfies otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis )? (otherlv_18= Parameters otherlv_19= LeftCurlyBracket ( (lv_parameters_20_0= ruleParameter ) ) (otherlv_21= Comma ( (lv_parameters_22_0= ruleParameter ) ) )* otherlv_23= RightCurlyBracket )? otherlv_24= RightCurlyBracket
            {
            // InternalQualityBtCppParser.g:6495:3: ()
            // InternalQualityBtCppParser.g:6496:4: 
            {

            				current = forceCreateModelElement(
            					grammarAccess.getScriptNodeAccess().getScriptNodeAction_0(),
            					current);
            			

            }

            otherlv_1=(Token)match(input,ScriptNode,FOLLOW_3); 

            			newLeafNode(otherlv_1, grammarAccess.getScriptNodeAccess().getScriptNodeKeyword_1());
            		
            // InternalQualityBtCppParser.g:6506:3: ( (lv_name_2_0= ruleEString ) )
            // InternalQualityBtCppParser.g:6507:4: (lv_name_2_0= ruleEString )
            {
            // InternalQualityBtCppParser.g:6507:4: (lv_name_2_0= ruleEString )
            // InternalQualityBtCppParser.g:6508:5: lv_name_2_0= ruleEString
            {

            					newCompositeNode(grammarAccess.getScriptNodeAccess().getNameEStringParserRuleCall_2_0());
            				
            pushFollow(FOLLOW_21);
            lv_name_2_0=ruleEString();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getScriptNodeRule());
            					}
            					set(
            						current,
            						"name",
            						lv_name_2_0,
            						"org.xtext.btcpp.QualityBtCpp.EString");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            otherlv_3=(Token)match(input,LeftCurlyBracket,FOLLOW_45); 

            			newLeafNode(otherlv_3, grammarAccess.getScriptNodeAccess().getLeftCurlyBracketKeyword_3());
            		
            // InternalQualityBtCppParser.g:6529:3: (otherlv_4= ID ( (lv_ID_5_0= ruleEString ) ) )?
            int alt167=2;
            int LA167_0 = input.LA(1);

            if ( (LA167_0==ID) ) {
                alt167=1;
            }
            switch (alt167) {
                case 1 :
                    // InternalQualityBtCppParser.g:6530:4: otherlv_4= ID ( (lv_ID_5_0= ruleEString ) )
                    {
                    otherlv_4=(Token)match(input,ID,FOLLOW_3); 

                    				newLeafNode(otherlv_4, grammarAccess.getScriptNodeAccess().getIDKeyword_4_0());
                    			
                    // InternalQualityBtCppParser.g:6534:4: ( (lv_ID_5_0= ruleEString ) )
                    // InternalQualityBtCppParser.g:6535:5: (lv_ID_5_0= ruleEString )
                    {
                    // InternalQualityBtCppParser.g:6535:5: (lv_ID_5_0= ruleEString )
                    // InternalQualityBtCppParser.g:6536:6: lv_ID_5_0= ruleEString
                    {

                    						newCompositeNode(grammarAccess.getScriptNodeAccess().getIDEStringParserRuleCall_4_1_0());
                    					
                    pushFollow(FOLLOW_25);
                    lv_ID_5_0=ruleEString();

                    state._fsp--;


                    						if (current==null) {
                    							current = createModelElementForParent(grammarAccess.getScriptNodeRule());
                    						}
                    						set(
                    							current,
                    							"ID",
                    							lv_ID_5_0,
                    							"org.xtext.btcpp.QualityBtCpp.EString");
                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }


                    }
                    break;

            }

            // InternalQualityBtCppParser.g:6554:3: (otherlv_6= Satisfices otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis )?
            int alt169=2;
            int LA169_0 = input.LA(1);

            if ( (LA169_0==Satisfices) ) {
                alt169=1;
            }
            switch (alt169) {
                case 1 :
                    // InternalQualityBtCppParser.g:6555:4: otherlv_6= Satisfices otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis
                    {
                    otherlv_6=(Token)match(input,Satisfices,FOLLOW_26); 

                    				newLeafNode(otherlv_6, grammarAccess.getScriptNodeAccess().getSatisficesKeyword_5_0());
                    			
                    otherlv_7=(Token)match(input,LeftParenthesis,FOLLOW_3); 

                    				newLeafNode(otherlv_7, grammarAccess.getScriptNodeAccess().getLeftParenthesisKeyword_5_1());
                    			
                    // InternalQualityBtCppParser.g:6563:4: ( ( ruleEString ) )
                    // InternalQualityBtCppParser.g:6564:5: ( ruleEString )
                    {
                    // InternalQualityBtCppParser.g:6564:5: ( ruleEString )
                    // InternalQualityBtCppParser.g:6565:6: ruleEString
                    {

                    						if (current==null) {
                    							current = createModelElement(grammarAccess.getScriptNodeRule());
                    						}
                    					

                    						newCompositeNode(grammarAccess.getScriptNodeAccess().getSatisficesQualityCrossReference_5_2_0());
                    					
                    pushFollow(FOLLOW_20);
                    ruleEString();

                    state._fsp--;


                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:6579:4: (otherlv_9= Comma ( ( ruleEString ) ) )*
                    loop168:
                    do {
                        int alt168=2;
                        int LA168_0 = input.LA(1);

                        if ( (LA168_0==Comma) ) {
                            alt168=1;
                        }


                        switch (alt168) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:6580:5: otherlv_9= Comma ( ( ruleEString ) )
                    	    {
                    	    otherlv_9=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_9, grammarAccess.getScriptNodeAccess().getCommaKeyword_5_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:6584:5: ( ( ruleEString ) )
                    	    // InternalQualityBtCppParser.g:6585:6: ( ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:6585:6: ( ruleEString )
                    	    // InternalQualityBtCppParser.g:6586:7: ruleEString
                    	    {

                    	    							if (current==null) {
                    	    								current = createModelElement(grammarAccess.getScriptNodeRule());
                    	    							}
                    	    						

                    	    							newCompositeNode(grammarAccess.getScriptNodeAccess().getSatisficesQualityCrossReference_5_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_20);
                    	    ruleEString();

                    	    state._fsp--;


                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop168;
                        }
                    } while (true);

                    otherlv_11=(Token)match(input,RightParenthesis,FOLLOW_27); 

                    				newLeafNode(otherlv_11, grammarAccess.getScriptNodeAccess().getRightParenthesisKeyword_5_4());
                    			

                    }
                    break;

            }

            // InternalQualityBtCppParser.g:6606:3: (otherlv_12= Satisfies otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis )?
            int alt171=2;
            int LA171_0 = input.LA(1);

            if ( (LA171_0==Satisfies) ) {
                alt171=1;
            }
            switch (alt171) {
                case 1 :
                    // InternalQualityBtCppParser.g:6607:4: otherlv_12= Satisfies otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis
                    {
                    otherlv_12=(Token)match(input,Satisfies,FOLLOW_26); 

                    				newLeafNode(otherlv_12, grammarAccess.getScriptNodeAccess().getSatisfiesKeyword_6_0());
                    			
                    otherlv_13=(Token)match(input,LeftParenthesis,FOLLOW_3); 

                    				newLeafNode(otherlv_13, grammarAccess.getScriptNodeAccess().getLeftParenthesisKeyword_6_1());
                    			
                    // InternalQualityBtCppParser.g:6615:4: ( ( ruleEString ) )
                    // InternalQualityBtCppParser.g:6616:5: ( ruleEString )
                    {
                    // InternalQualityBtCppParser.g:6616:5: ( ruleEString )
                    // InternalQualityBtCppParser.g:6617:6: ruleEString
                    {

                    						if (current==null) {
                    							current = createModelElement(grammarAccess.getScriptNodeRule());
                    						}
                    					

                    						newCompositeNode(grammarAccess.getScriptNodeAccess().getSatisfiesQualityRequirementCrossReference_6_2_0());
                    					
                    pushFollow(FOLLOW_20);
                    ruleEString();

                    state._fsp--;


                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:6631:4: (otherlv_15= Comma ( ( ruleEString ) ) )*
                    loop170:
                    do {
                        int alt170=2;
                        int LA170_0 = input.LA(1);

                        if ( (LA170_0==Comma) ) {
                            alt170=1;
                        }


                        switch (alt170) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:6632:5: otherlv_15= Comma ( ( ruleEString ) )
                    	    {
                    	    otherlv_15=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_15, grammarAccess.getScriptNodeAccess().getCommaKeyword_6_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:6636:5: ( ( ruleEString ) )
                    	    // InternalQualityBtCppParser.g:6637:6: ( ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:6637:6: ( ruleEString )
                    	    // InternalQualityBtCppParser.g:6638:7: ruleEString
                    	    {

                    	    							if (current==null) {
                    	    								current = createModelElement(grammarAccess.getScriptNodeRule());
                    	    							}
                    	    						

                    	    							newCompositeNode(grammarAccess.getScriptNodeAccess().getSatisfiesQualityRequirementCrossReference_6_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_20);
                    	    ruleEString();

                    	    state._fsp--;


                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop170;
                        }
                    } while (true);

                    otherlv_17=(Token)match(input,RightParenthesis,FOLLOW_28); 

                    				newLeafNode(otherlv_17, grammarAccess.getScriptNodeAccess().getRightParenthesisKeyword_6_4());
                    			

                    }
                    break;

            }

            // InternalQualityBtCppParser.g:6658:3: (otherlv_18= Parameters otherlv_19= LeftCurlyBracket ( (lv_parameters_20_0= ruleParameter ) ) (otherlv_21= Comma ( (lv_parameters_22_0= ruleParameter ) ) )* otherlv_23= RightCurlyBracket )?
            int alt173=2;
            int LA173_0 = input.LA(1);

            if ( (LA173_0==Parameters) ) {
                alt173=1;
            }
            switch (alt173) {
                case 1 :
                    // InternalQualityBtCppParser.g:6659:4: otherlv_18= Parameters otherlv_19= LeftCurlyBracket ( (lv_parameters_20_0= ruleParameter ) ) (otherlv_21= Comma ( (lv_parameters_22_0= ruleParameter ) ) )* otherlv_23= RightCurlyBracket
                    {
                    otherlv_18=(Token)match(input,Parameters,FOLLOW_21); 

                    				newLeafNode(otherlv_18, grammarAccess.getScriptNodeAccess().getParametersKeyword_7_0());
                    			
                    otherlv_19=(Token)match(input,LeftCurlyBracket,FOLLOW_3); 

                    				newLeafNode(otherlv_19, grammarAccess.getScriptNodeAccess().getLeftCurlyBracketKeyword_7_1());
                    			
                    // InternalQualityBtCppParser.g:6667:4: ( (lv_parameters_20_0= ruleParameter ) )
                    // InternalQualityBtCppParser.g:6668:5: (lv_parameters_20_0= ruleParameter )
                    {
                    // InternalQualityBtCppParser.g:6668:5: (lv_parameters_20_0= ruleParameter )
                    // InternalQualityBtCppParser.g:6669:6: lv_parameters_20_0= ruleParameter
                    {

                    						newCompositeNode(grammarAccess.getScriptNodeAccess().getParametersParameterParserRuleCall_7_2_0());
                    					
                    pushFollow(FOLLOW_29);
                    lv_parameters_20_0=ruleParameter();

                    state._fsp--;


                    						if (current==null) {
                    							current = createModelElementForParent(grammarAccess.getScriptNodeRule());
                    						}
                    						add(
                    							current,
                    							"parameters",
                    							lv_parameters_20_0,
                    							"org.xtext.btcpp.QualityBtCpp.Parameter");
                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:6686:4: (otherlv_21= Comma ( (lv_parameters_22_0= ruleParameter ) ) )*
                    loop172:
                    do {
                        int alt172=2;
                        int LA172_0 = input.LA(1);

                        if ( (LA172_0==Comma) ) {
                            alt172=1;
                        }


                        switch (alt172) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:6687:5: otherlv_21= Comma ( (lv_parameters_22_0= ruleParameter ) )
                    	    {
                    	    otherlv_21=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_21, grammarAccess.getScriptNodeAccess().getCommaKeyword_7_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:6691:5: ( (lv_parameters_22_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:6692:6: (lv_parameters_22_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:6692:6: (lv_parameters_22_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:6693:7: lv_parameters_22_0= ruleParameter
                    	    {

                    	    							newCompositeNode(grammarAccess.getScriptNodeAccess().getParametersParameterParserRuleCall_7_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_29);
                    	    lv_parameters_22_0=ruleParameter();

                    	    state._fsp--;


                    	    							if (current==null) {
                    	    								current = createModelElementForParent(grammarAccess.getScriptNodeRule());
                    	    							}
                    	    							add(
                    	    								current,
                    	    								"parameters",
                    	    								lv_parameters_22_0,
                    	    								"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop172;
                        }
                    } while (true);

                    otherlv_23=(Token)match(input,RightCurlyBracket,FOLLOW_30); 

                    				newLeafNode(otherlv_23, grammarAccess.getScriptNodeAccess().getRightCurlyBracketKeyword_7_4());
                    			

                    }
                    break;

            }

            otherlv_24=(Token)match(input,RightCurlyBracket,FOLLOW_2); 

            			newLeafNode(otherlv_24, grammarAccess.getScriptNodeAccess().getRightCurlyBracketKeyword_8());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleScriptNode"


    // $ANTLR start "entryRuleScriptConditionNode"
    // InternalQualityBtCppParser.g:6724:1: entryRuleScriptConditionNode returns [EObject current=null] : iv_ruleScriptConditionNode= ruleScriptConditionNode EOF ;
    public final EObject entryRuleScriptConditionNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleScriptConditionNode = null;


        try {
            // InternalQualityBtCppParser.g:6724:60: (iv_ruleScriptConditionNode= ruleScriptConditionNode EOF )
            // InternalQualityBtCppParser.g:6725:2: iv_ruleScriptConditionNode= ruleScriptConditionNode EOF
            {
             newCompositeNode(grammarAccess.getScriptConditionNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleScriptConditionNode=ruleScriptConditionNode();

            state._fsp--;

             current =iv_ruleScriptConditionNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleScriptConditionNode"


    // $ANTLR start "ruleScriptConditionNode"
    // InternalQualityBtCppParser.g:6731:1: ruleScriptConditionNode returns [EObject current=null] : ( () otherlv_1= ScriptConditionNode ( (lv_name_2_0= ruleEString ) ) otherlv_3= LeftCurlyBracket (otherlv_4= ID ( (lv_ID_5_0= ruleEString ) ) )? (otherlv_6= Satisfices otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis )? (otherlv_12= Satisfies otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis )? (otherlv_18= Parameters otherlv_19= LeftCurlyBracket ( (lv_parameters_20_0= ruleParameter ) ) (otherlv_21= Comma ( (lv_parameters_22_0= ruleParameter ) ) )* otherlv_23= RightCurlyBracket )? otherlv_24= RightCurlyBracket ) ;
    public final EObject ruleScriptConditionNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_18=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token otherlv_23=null;
        Token otherlv_24=null;
        AntlrDatatypeRuleToken lv_name_2_0 = null;

        AntlrDatatypeRuleToken lv_ID_5_0 = null;

        EObject lv_parameters_20_0 = null;

        EObject lv_parameters_22_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:6737:2: ( ( () otherlv_1= ScriptConditionNode ( (lv_name_2_0= ruleEString ) ) otherlv_3= LeftCurlyBracket (otherlv_4= ID ( (lv_ID_5_0= ruleEString ) ) )? (otherlv_6= Satisfices otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis )? (otherlv_12= Satisfies otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis )? (otherlv_18= Parameters otherlv_19= LeftCurlyBracket ( (lv_parameters_20_0= ruleParameter ) ) (otherlv_21= Comma ( (lv_parameters_22_0= ruleParameter ) ) )* otherlv_23= RightCurlyBracket )? otherlv_24= RightCurlyBracket ) )
            // InternalQualityBtCppParser.g:6738:2: ( () otherlv_1= ScriptConditionNode ( (lv_name_2_0= ruleEString ) ) otherlv_3= LeftCurlyBracket (otherlv_4= ID ( (lv_ID_5_0= ruleEString ) ) )? (otherlv_6= Satisfices otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis )? (otherlv_12= Satisfies otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis )? (otherlv_18= Parameters otherlv_19= LeftCurlyBracket ( (lv_parameters_20_0= ruleParameter ) ) (otherlv_21= Comma ( (lv_parameters_22_0= ruleParameter ) ) )* otherlv_23= RightCurlyBracket )? otherlv_24= RightCurlyBracket )
            {
            // InternalQualityBtCppParser.g:6738:2: ( () otherlv_1= ScriptConditionNode ( (lv_name_2_0= ruleEString ) ) otherlv_3= LeftCurlyBracket (otherlv_4= ID ( (lv_ID_5_0= ruleEString ) ) )? (otherlv_6= Satisfices otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis )? (otherlv_12= Satisfies otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis )? (otherlv_18= Parameters otherlv_19= LeftCurlyBracket ( (lv_parameters_20_0= ruleParameter ) ) (otherlv_21= Comma ( (lv_parameters_22_0= ruleParameter ) ) )* otherlv_23= RightCurlyBracket )? otherlv_24= RightCurlyBracket )
            // InternalQualityBtCppParser.g:6739:3: () otherlv_1= ScriptConditionNode ( (lv_name_2_0= ruleEString ) ) otherlv_3= LeftCurlyBracket (otherlv_4= ID ( (lv_ID_5_0= ruleEString ) ) )? (otherlv_6= Satisfices otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis )? (otherlv_12= Satisfies otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis )? (otherlv_18= Parameters otherlv_19= LeftCurlyBracket ( (lv_parameters_20_0= ruleParameter ) ) (otherlv_21= Comma ( (lv_parameters_22_0= ruleParameter ) ) )* otherlv_23= RightCurlyBracket )? otherlv_24= RightCurlyBracket
            {
            // InternalQualityBtCppParser.g:6739:3: ()
            // InternalQualityBtCppParser.g:6740:4: 
            {

            				current = forceCreateModelElement(
            					grammarAccess.getScriptConditionNodeAccess().getScriptConditionNodeAction_0(),
            					current);
            			

            }

            otherlv_1=(Token)match(input,ScriptConditionNode,FOLLOW_3); 

            			newLeafNode(otherlv_1, grammarAccess.getScriptConditionNodeAccess().getScriptConditionNodeKeyword_1());
            		
            // InternalQualityBtCppParser.g:6750:3: ( (lv_name_2_0= ruleEString ) )
            // InternalQualityBtCppParser.g:6751:4: (lv_name_2_0= ruleEString )
            {
            // InternalQualityBtCppParser.g:6751:4: (lv_name_2_0= ruleEString )
            // InternalQualityBtCppParser.g:6752:5: lv_name_2_0= ruleEString
            {

            					newCompositeNode(grammarAccess.getScriptConditionNodeAccess().getNameEStringParserRuleCall_2_0());
            				
            pushFollow(FOLLOW_21);
            lv_name_2_0=ruleEString();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getScriptConditionNodeRule());
            					}
            					set(
            						current,
            						"name",
            						lv_name_2_0,
            						"org.xtext.btcpp.QualityBtCpp.EString");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            otherlv_3=(Token)match(input,LeftCurlyBracket,FOLLOW_45); 

            			newLeafNode(otherlv_3, grammarAccess.getScriptConditionNodeAccess().getLeftCurlyBracketKeyword_3());
            		
            // InternalQualityBtCppParser.g:6773:3: (otherlv_4= ID ( (lv_ID_5_0= ruleEString ) ) )?
            int alt174=2;
            int LA174_0 = input.LA(1);

            if ( (LA174_0==ID) ) {
                alt174=1;
            }
            switch (alt174) {
                case 1 :
                    // InternalQualityBtCppParser.g:6774:4: otherlv_4= ID ( (lv_ID_5_0= ruleEString ) )
                    {
                    otherlv_4=(Token)match(input,ID,FOLLOW_3); 

                    				newLeafNode(otherlv_4, grammarAccess.getScriptConditionNodeAccess().getIDKeyword_4_0());
                    			
                    // InternalQualityBtCppParser.g:6778:4: ( (lv_ID_5_0= ruleEString ) )
                    // InternalQualityBtCppParser.g:6779:5: (lv_ID_5_0= ruleEString )
                    {
                    // InternalQualityBtCppParser.g:6779:5: (lv_ID_5_0= ruleEString )
                    // InternalQualityBtCppParser.g:6780:6: lv_ID_5_0= ruleEString
                    {

                    						newCompositeNode(grammarAccess.getScriptConditionNodeAccess().getIDEStringParserRuleCall_4_1_0());
                    					
                    pushFollow(FOLLOW_25);
                    lv_ID_5_0=ruleEString();

                    state._fsp--;


                    						if (current==null) {
                    							current = createModelElementForParent(grammarAccess.getScriptConditionNodeRule());
                    						}
                    						set(
                    							current,
                    							"ID",
                    							lv_ID_5_0,
                    							"org.xtext.btcpp.QualityBtCpp.EString");
                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }


                    }
                    break;

            }

            // InternalQualityBtCppParser.g:6798:3: (otherlv_6= Satisfices otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis )?
            int alt176=2;
            int LA176_0 = input.LA(1);

            if ( (LA176_0==Satisfices) ) {
                alt176=1;
            }
            switch (alt176) {
                case 1 :
                    // InternalQualityBtCppParser.g:6799:4: otherlv_6= Satisfices otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis
                    {
                    otherlv_6=(Token)match(input,Satisfices,FOLLOW_26); 

                    				newLeafNode(otherlv_6, grammarAccess.getScriptConditionNodeAccess().getSatisficesKeyword_5_0());
                    			
                    otherlv_7=(Token)match(input,LeftParenthesis,FOLLOW_3); 

                    				newLeafNode(otherlv_7, grammarAccess.getScriptConditionNodeAccess().getLeftParenthesisKeyword_5_1());
                    			
                    // InternalQualityBtCppParser.g:6807:4: ( ( ruleEString ) )
                    // InternalQualityBtCppParser.g:6808:5: ( ruleEString )
                    {
                    // InternalQualityBtCppParser.g:6808:5: ( ruleEString )
                    // InternalQualityBtCppParser.g:6809:6: ruleEString
                    {

                    						if (current==null) {
                    							current = createModelElement(grammarAccess.getScriptConditionNodeRule());
                    						}
                    					

                    						newCompositeNode(grammarAccess.getScriptConditionNodeAccess().getSatisficesQualityCrossReference_5_2_0());
                    					
                    pushFollow(FOLLOW_20);
                    ruleEString();

                    state._fsp--;


                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:6823:4: (otherlv_9= Comma ( ( ruleEString ) ) )*
                    loop175:
                    do {
                        int alt175=2;
                        int LA175_0 = input.LA(1);

                        if ( (LA175_0==Comma) ) {
                            alt175=1;
                        }


                        switch (alt175) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:6824:5: otherlv_9= Comma ( ( ruleEString ) )
                    	    {
                    	    otherlv_9=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_9, grammarAccess.getScriptConditionNodeAccess().getCommaKeyword_5_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:6828:5: ( ( ruleEString ) )
                    	    // InternalQualityBtCppParser.g:6829:6: ( ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:6829:6: ( ruleEString )
                    	    // InternalQualityBtCppParser.g:6830:7: ruleEString
                    	    {

                    	    							if (current==null) {
                    	    								current = createModelElement(grammarAccess.getScriptConditionNodeRule());
                    	    							}
                    	    						

                    	    							newCompositeNode(grammarAccess.getScriptConditionNodeAccess().getSatisficesQualityCrossReference_5_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_20);
                    	    ruleEString();

                    	    state._fsp--;


                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop175;
                        }
                    } while (true);

                    otherlv_11=(Token)match(input,RightParenthesis,FOLLOW_27); 

                    				newLeafNode(otherlv_11, grammarAccess.getScriptConditionNodeAccess().getRightParenthesisKeyword_5_4());
                    			

                    }
                    break;

            }

            // InternalQualityBtCppParser.g:6850:3: (otherlv_12= Satisfies otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis )?
            int alt178=2;
            int LA178_0 = input.LA(1);

            if ( (LA178_0==Satisfies) ) {
                alt178=1;
            }
            switch (alt178) {
                case 1 :
                    // InternalQualityBtCppParser.g:6851:4: otherlv_12= Satisfies otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis
                    {
                    otherlv_12=(Token)match(input,Satisfies,FOLLOW_26); 

                    				newLeafNode(otherlv_12, grammarAccess.getScriptConditionNodeAccess().getSatisfiesKeyword_6_0());
                    			
                    otherlv_13=(Token)match(input,LeftParenthesis,FOLLOW_3); 

                    				newLeafNode(otherlv_13, grammarAccess.getScriptConditionNodeAccess().getLeftParenthesisKeyword_6_1());
                    			
                    // InternalQualityBtCppParser.g:6859:4: ( ( ruleEString ) )
                    // InternalQualityBtCppParser.g:6860:5: ( ruleEString )
                    {
                    // InternalQualityBtCppParser.g:6860:5: ( ruleEString )
                    // InternalQualityBtCppParser.g:6861:6: ruleEString
                    {

                    						if (current==null) {
                    							current = createModelElement(grammarAccess.getScriptConditionNodeRule());
                    						}
                    					

                    						newCompositeNode(grammarAccess.getScriptConditionNodeAccess().getSatisfiesQualityRequirementCrossReference_6_2_0());
                    					
                    pushFollow(FOLLOW_20);
                    ruleEString();

                    state._fsp--;


                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:6875:4: (otherlv_15= Comma ( ( ruleEString ) ) )*
                    loop177:
                    do {
                        int alt177=2;
                        int LA177_0 = input.LA(1);

                        if ( (LA177_0==Comma) ) {
                            alt177=1;
                        }


                        switch (alt177) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:6876:5: otherlv_15= Comma ( ( ruleEString ) )
                    	    {
                    	    otherlv_15=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_15, grammarAccess.getScriptConditionNodeAccess().getCommaKeyword_6_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:6880:5: ( ( ruleEString ) )
                    	    // InternalQualityBtCppParser.g:6881:6: ( ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:6881:6: ( ruleEString )
                    	    // InternalQualityBtCppParser.g:6882:7: ruleEString
                    	    {

                    	    							if (current==null) {
                    	    								current = createModelElement(grammarAccess.getScriptConditionNodeRule());
                    	    							}
                    	    						

                    	    							newCompositeNode(grammarAccess.getScriptConditionNodeAccess().getSatisfiesQualityRequirementCrossReference_6_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_20);
                    	    ruleEString();

                    	    state._fsp--;


                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop177;
                        }
                    } while (true);

                    otherlv_17=(Token)match(input,RightParenthesis,FOLLOW_28); 

                    				newLeafNode(otherlv_17, grammarAccess.getScriptConditionNodeAccess().getRightParenthesisKeyword_6_4());
                    			

                    }
                    break;

            }

            // InternalQualityBtCppParser.g:6902:3: (otherlv_18= Parameters otherlv_19= LeftCurlyBracket ( (lv_parameters_20_0= ruleParameter ) ) (otherlv_21= Comma ( (lv_parameters_22_0= ruleParameter ) ) )* otherlv_23= RightCurlyBracket )?
            int alt180=2;
            int LA180_0 = input.LA(1);

            if ( (LA180_0==Parameters) ) {
                alt180=1;
            }
            switch (alt180) {
                case 1 :
                    // InternalQualityBtCppParser.g:6903:4: otherlv_18= Parameters otherlv_19= LeftCurlyBracket ( (lv_parameters_20_0= ruleParameter ) ) (otherlv_21= Comma ( (lv_parameters_22_0= ruleParameter ) ) )* otherlv_23= RightCurlyBracket
                    {
                    otherlv_18=(Token)match(input,Parameters,FOLLOW_21); 

                    				newLeafNode(otherlv_18, grammarAccess.getScriptConditionNodeAccess().getParametersKeyword_7_0());
                    			
                    otherlv_19=(Token)match(input,LeftCurlyBracket,FOLLOW_3); 

                    				newLeafNode(otherlv_19, grammarAccess.getScriptConditionNodeAccess().getLeftCurlyBracketKeyword_7_1());
                    			
                    // InternalQualityBtCppParser.g:6911:4: ( (lv_parameters_20_0= ruleParameter ) )
                    // InternalQualityBtCppParser.g:6912:5: (lv_parameters_20_0= ruleParameter )
                    {
                    // InternalQualityBtCppParser.g:6912:5: (lv_parameters_20_0= ruleParameter )
                    // InternalQualityBtCppParser.g:6913:6: lv_parameters_20_0= ruleParameter
                    {

                    						newCompositeNode(grammarAccess.getScriptConditionNodeAccess().getParametersParameterParserRuleCall_7_2_0());
                    					
                    pushFollow(FOLLOW_29);
                    lv_parameters_20_0=ruleParameter();

                    state._fsp--;


                    						if (current==null) {
                    							current = createModelElementForParent(grammarAccess.getScriptConditionNodeRule());
                    						}
                    						add(
                    							current,
                    							"parameters",
                    							lv_parameters_20_0,
                    							"org.xtext.btcpp.QualityBtCpp.Parameter");
                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:6930:4: (otherlv_21= Comma ( (lv_parameters_22_0= ruleParameter ) ) )*
                    loop179:
                    do {
                        int alt179=2;
                        int LA179_0 = input.LA(1);

                        if ( (LA179_0==Comma) ) {
                            alt179=1;
                        }


                        switch (alt179) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:6931:5: otherlv_21= Comma ( (lv_parameters_22_0= ruleParameter ) )
                    	    {
                    	    otherlv_21=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_21, grammarAccess.getScriptConditionNodeAccess().getCommaKeyword_7_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:6935:5: ( (lv_parameters_22_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:6936:6: (lv_parameters_22_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:6936:6: (lv_parameters_22_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:6937:7: lv_parameters_22_0= ruleParameter
                    	    {

                    	    							newCompositeNode(grammarAccess.getScriptConditionNodeAccess().getParametersParameterParserRuleCall_7_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_29);
                    	    lv_parameters_22_0=ruleParameter();

                    	    state._fsp--;


                    	    							if (current==null) {
                    	    								current = createModelElementForParent(grammarAccess.getScriptConditionNodeRule());
                    	    							}
                    	    							add(
                    	    								current,
                    	    								"parameters",
                    	    								lv_parameters_22_0,
                    	    								"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop179;
                        }
                    } while (true);

                    otherlv_23=(Token)match(input,RightCurlyBracket,FOLLOW_30); 

                    				newLeafNode(otherlv_23, grammarAccess.getScriptConditionNodeAccess().getRightCurlyBracketKeyword_7_4());
                    			

                    }
                    break;

            }

            otherlv_24=(Token)match(input,RightCurlyBracket,FOLLOW_2); 

            			newLeafNode(otherlv_24, grammarAccess.getScriptConditionNodeAccess().getRightCurlyBracketKeyword_8());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleScriptConditionNode"


    // $ANTLR start "entryRuleRetryNode"
    // InternalQualityBtCppParser.g:6968:1: entryRuleRetryNode returns [EObject current=null] : iv_ruleRetryNode= ruleRetryNode EOF ;
    public final EObject entryRuleRetryNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRetryNode = null;


        try {
            // InternalQualityBtCppParser.g:6968:50: (iv_ruleRetryNode= ruleRetryNode EOF )
            // InternalQualityBtCppParser.g:6969:2: iv_ruleRetryNode= ruleRetryNode EOF
            {
             newCompositeNode(grammarAccess.getRetryNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleRetryNode=ruleRetryNode();

            state._fsp--;

             current =iv_ruleRetryNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRetryNode"


    // $ANTLR start "ruleRetryNode"
    // InternalQualityBtCppParser.g:6975:1: ruleRetryNode returns [EObject current=null] : (otherlv_0= RetryNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? otherlv_5= Num_attempts ( (lv_num_attempts_6_0= ruleEString ) ) (otherlv_7= Satisfices otherlv_8= LeftParenthesis ( ( ruleEString ) ) (otherlv_10= Comma ( ( ruleEString ) ) )* otherlv_12= RightParenthesis )? (otherlv_13= Satisfies otherlv_14= LeftParenthesis ( ( ruleEString ) ) (otherlv_16= Comma ( ( ruleEString ) ) )* otherlv_18= RightParenthesis )? (otherlv_19= Parameters otherlv_20= LeftCurlyBracket ( (lv_parameters_21_0= ruleParameter ) ) (otherlv_22= Comma ( (lv_parameters_23_0= ruleParameter ) ) )* otherlv_24= RightCurlyBracket )? otherlv_25= Child ( (lv_child_26_0= ruleTreeNode ) ) otherlv_27= RightCurlyBracket ) ;
    public final EObject ruleRetryNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token otherlv_19=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        Token otherlv_24=null;
        Token otherlv_25=null;
        Token otherlv_27=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_ID_4_0 = null;

        AntlrDatatypeRuleToken lv_num_attempts_6_0 = null;

        EObject lv_parameters_21_0 = null;

        EObject lv_parameters_23_0 = null;

        EObject lv_child_26_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:6981:2: ( (otherlv_0= RetryNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? otherlv_5= Num_attempts ( (lv_num_attempts_6_0= ruleEString ) ) (otherlv_7= Satisfices otherlv_8= LeftParenthesis ( ( ruleEString ) ) (otherlv_10= Comma ( ( ruleEString ) ) )* otherlv_12= RightParenthesis )? (otherlv_13= Satisfies otherlv_14= LeftParenthesis ( ( ruleEString ) ) (otherlv_16= Comma ( ( ruleEString ) ) )* otherlv_18= RightParenthesis )? (otherlv_19= Parameters otherlv_20= LeftCurlyBracket ( (lv_parameters_21_0= ruleParameter ) ) (otherlv_22= Comma ( (lv_parameters_23_0= ruleParameter ) ) )* otherlv_24= RightCurlyBracket )? otherlv_25= Child ( (lv_child_26_0= ruleTreeNode ) ) otherlv_27= RightCurlyBracket ) )
            // InternalQualityBtCppParser.g:6982:2: (otherlv_0= RetryNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? otherlv_5= Num_attempts ( (lv_num_attempts_6_0= ruleEString ) ) (otherlv_7= Satisfices otherlv_8= LeftParenthesis ( ( ruleEString ) ) (otherlv_10= Comma ( ( ruleEString ) ) )* otherlv_12= RightParenthesis )? (otherlv_13= Satisfies otherlv_14= LeftParenthesis ( ( ruleEString ) ) (otherlv_16= Comma ( ( ruleEString ) ) )* otherlv_18= RightParenthesis )? (otherlv_19= Parameters otherlv_20= LeftCurlyBracket ( (lv_parameters_21_0= ruleParameter ) ) (otherlv_22= Comma ( (lv_parameters_23_0= ruleParameter ) ) )* otherlv_24= RightCurlyBracket )? otherlv_25= Child ( (lv_child_26_0= ruleTreeNode ) ) otherlv_27= RightCurlyBracket )
            {
            // InternalQualityBtCppParser.g:6982:2: (otherlv_0= RetryNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? otherlv_5= Num_attempts ( (lv_num_attempts_6_0= ruleEString ) ) (otherlv_7= Satisfices otherlv_8= LeftParenthesis ( ( ruleEString ) ) (otherlv_10= Comma ( ( ruleEString ) ) )* otherlv_12= RightParenthesis )? (otherlv_13= Satisfies otherlv_14= LeftParenthesis ( ( ruleEString ) ) (otherlv_16= Comma ( ( ruleEString ) ) )* otherlv_18= RightParenthesis )? (otherlv_19= Parameters otherlv_20= LeftCurlyBracket ( (lv_parameters_21_0= ruleParameter ) ) (otherlv_22= Comma ( (lv_parameters_23_0= ruleParameter ) ) )* otherlv_24= RightCurlyBracket )? otherlv_25= Child ( (lv_child_26_0= ruleTreeNode ) ) otherlv_27= RightCurlyBracket )
            // InternalQualityBtCppParser.g:6983:3: otherlv_0= RetryNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? otherlv_5= Num_attempts ( (lv_num_attempts_6_0= ruleEString ) ) (otherlv_7= Satisfices otherlv_8= LeftParenthesis ( ( ruleEString ) ) (otherlv_10= Comma ( ( ruleEString ) ) )* otherlv_12= RightParenthesis )? (otherlv_13= Satisfies otherlv_14= LeftParenthesis ( ( ruleEString ) ) (otherlv_16= Comma ( ( ruleEString ) ) )* otherlv_18= RightParenthesis )? (otherlv_19= Parameters otherlv_20= LeftCurlyBracket ( (lv_parameters_21_0= ruleParameter ) ) (otherlv_22= Comma ( (lv_parameters_23_0= ruleParameter ) ) )* otherlv_24= RightCurlyBracket )? otherlv_25= Child ( (lv_child_26_0= ruleTreeNode ) ) otherlv_27= RightCurlyBracket
            {
            otherlv_0=(Token)match(input,RetryNode,FOLLOW_3); 

            			newLeafNode(otherlv_0, grammarAccess.getRetryNodeAccess().getRetryNodeKeyword_0());
            		
            // InternalQualityBtCppParser.g:6987:3: ( (lv_name_1_0= ruleEString ) )
            // InternalQualityBtCppParser.g:6988:4: (lv_name_1_0= ruleEString )
            {
            // InternalQualityBtCppParser.g:6988:4: (lv_name_1_0= ruleEString )
            // InternalQualityBtCppParser.g:6989:5: lv_name_1_0= ruleEString
            {

            					newCompositeNode(grammarAccess.getRetryNodeAccess().getNameEStringParserRuleCall_1_0());
            				
            pushFollow(FOLLOW_21);
            lv_name_1_0=ruleEString();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getRetryNodeRule());
            					}
            					set(
            						current,
            						"name",
            						lv_name_1_0,
            						"org.xtext.btcpp.QualityBtCpp.EString");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            otherlv_2=(Token)match(input,LeftCurlyBracket,FOLLOW_46); 

            			newLeafNode(otherlv_2, grammarAccess.getRetryNodeAccess().getLeftCurlyBracketKeyword_2());
            		
            // InternalQualityBtCppParser.g:7010:3: (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )?
            int alt181=2;
            int LA181_0 = input.LA(1);

            if ( (LA181_0==ID) ) {
                alt181=1;
            }
            switch (alt181) {
                case 1 :
                    // InternalQualityBtCppParser.g:7011:4: otherlv_3= ID ( (lv_ID_4_0= ruleEString ) )
                    {
                    otherlv_3=(Token)match(input,ID,FOLLOW_3); 

                    				newLeafNode(otherlv_3, grammarAccess.getRetryNodeAccess().getIDKeyword_3_0());
                    			
                    // InternalQualityBtCppParser.g:7015:4: ( (lv_ID_4_0= ruleEString ) )
                    // InternalQualityBtCppParser.g:7016:5: (lv_ID_4_0= ruleEString )
                    {
                    // InternalQualityBtCppParser.g:7016:5: (lv_ID_4_0= ruleEString )
                    // InternalQualityBtCppParser.g:7017:6: lv_ID_4_0= ruleEString
                    {

                    						newCompositeNode(grammarAccess.getRetryNodeAccess().getIDEStringParserRuleCall_3_1_0());
                    					
                    pushFollow(FOLLOW_47);
                    lv_ID_4_0=ruleEString();

                    state._fsp--;


                    						if (current==null) {
                    							current = createModelElementForParent(grammarAccess.getRetryNodeRule());
                    						}
                    						set(
                    							current,
                    							"ID",
                    							lv_ID_4_0,
                    							"org.xtext.btcpp.QualityBtCpp.EString");
                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }


                    }
                    break;

            }

            otherlv_5=(Token)match(input,Num_attempts,FOLLOW_3); 

            			newLeafNode(otherlv_5, grammarAccess.getRetryNodeAccess().getNum_attemptsKeyword_4());
            		
            // InternalQualityBtCppParser.g:7039:3: ( (lv_num_attempts_6_0= ruleEString ) )
            // InternalQualityBtCppParser.g:7040:4: (lv_num_attempts_6_0= ruleEString )
            {
            // InternalQualityBtCppParser.g:7040:4: (lv_num_attempts_6_0= ruleEString )
            // InternalQualityBtCppParser.g:7041:5: lv_num_attempts_6_0= ruleEString
            {

            					newCompositeNode(grammarAccess.getRetryNodeAccess().getNum_attemptsEStringParserRuleCall_5_0());
            				
            pushFollow(FOLLOW_32);
            lv_num_attempts_6_0=ruleEString();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getRetryNodeRule());
            					}
            					set(
            						current,
            						"num_attempts",
            						lv_num_attempts_6_0,
            						"org.xtext.btcpp.QualityBtCpp.EString");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            // InternalQualityBtCppParser.g:7058:3: (otherlv_7= Satisfices otherlv_8= LeftParenthesis ( ( ruleEString ) ) (otherlv_10= Comma ( ( ruleEString ) ) )* otherlv_12= RightParenthesis )?
            int alt183=2;
            int LA183_0 = input.LA(1);

            if ( (LA183_0==Satisfices) ) {
                alt183=1;
            }
            switch (alt183) {
                case 1 :
                    // InternalQualityBtCppParser.g:7059:4: otherlv_7= Satisfices otherlv_8= LeftParenthesis ( ( ruleEString ) ) (otherlv_10= Comma ( ( ruleEString ) ) )* otherlv_12= RightParenthesis
                    {
                    otherlv_7=(Token)match(input,Satisfices,FOLLOW_26); 

                    				newLeafNode(otherlv_7, grammarAccess.getRetryNodeAccess().getSatisficesKeyword_6_0());
                    			
                    otherlv_8=(Token)match(input,LeftParenthesis,FOLLOW_3); 

                    				newLeafNode(otherlv_8, grammarAccess.getRetryNodeAccess().getLeftParenthesisKeyword_6_1());
                    			
                    // InternalQualityBtCppParser.g:7067:4: ( ( ruleEString ) )
                    // InternalQualityBtCppParser.g:7068:5: ( ruleEString )
                    {
                    // InternalQualityBtCppParser.g:7068:5: ( ruleEString )
                    // InternalQualityBtCppParser.g:7069:6: ruleEString
                    {

                    						if (current==null) {
                    							current = createModelElement(grammarAccess.getRetryNodeRule());
                    						}
                    					

                    						newCompositeNode(grammarAccess.getRetryNodeAccess().getSatisficesQualityCrossReference_6_2_0());
                    					
                    pushFollow(FOLLOW_20);
                    ruleEString();

                    state._fsp--;


                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:7083:4: (otherlv_10= Comma ( ( ruleEString ) ) )*
                    loop182:
                    do {
                        int alt182=2;
                        int LA182_0 = input.LA(1);

                        if ( (LA182_0==Comma) ) {
                            alt182=1;
                        }


                        switch (alt182) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:7084:5: otherlv_10= Comma ( ( ruleEString ) )
                    	    {
                    	    otherlv_10=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_10, grammarAccess.getRetryNodeAccess().getCommaKeyword_6_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:7088:5: ( ( ruleEString ) )
                    	    // InternalQualityBtCppParser.g:7089:6: ( ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:7089:6: ( ruleEString )
                    	    // InternalQualityBtCppParser.g:7090:7: ruleEString
                    	    {

                    	    							if (current==null) {
                    	    								current = createModelElement(grammarAccess.getRetryNodeRule());
                    	    							}
                    	    						

                    	    							newCompositeNode(grammarAccess.getRetryNodeAccess().getSatisficesQualityCrossReference_6_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_20);
                    	    ruleEString();

                    	    state._fsp--;


                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop182;
                        }
                    } while (true);

                    otherlv_12=(Token)match(input,RightParenthesis,FOLLOW_33); 

                    				newLeafNode(otherlv_12, grammarAccess.getRetryNodeAccess().getRightParenthesisKeyword_6_4());
                    			

                    }
                    break;

            }

            // InternalQualityBtCppParser.g:7110:3: (otherlv_13= Satisfies otherlv_14= LeftParenthesis ( ( ruleEString ) ) (otherlv_16= Comma ( ( ruleEString ) ) )* otherlv_18= RightParenthesis )?
            int alt185=2;
            int LA185_0 = input.LA(1);

            if ( (LA185_0==Satisfies) ) {
                alt185=1;
            }
            switch (alt185) {
                case 1 :
                    // InternalQualityBtCppParser.g:7111:4: otherlv_13= Satisfies otherlv_14= LeftParenthesis ( ( ruleEString ) ) (otherlv_16= Comma ( ( ruleEString ) ) )* otherlv_18= RightParenthesis
                    {
                    otherlv_13=(Token)match(input,Satisfies,FOLLOW_26); 

                    				newLeafNode(otherlv_13, grammarAccess.getRetryNodeAccess().getSatisfiesKeyword_7_0());
                    			
                    otherlv_14=(Token)match(input,LeftParenthesis,FOLLOW_3); 

                    				newLeafNode(otherlv_14, grammarAccess.getRetryNodeAccess().getLeftParenthesisKeyword_7_1());
                    			
                    // InternalQualityBtCppParser.g:7119:4: ( ( ruleEString ) )
                    // InternalQualityBtCppParser.g:7120:5: ( ruleEString )
                    {
                    // InternalQualityBtCppParser.g:7120:5: ( ruleEString )
                    // InternalQualityBtCppParser.g:7121:6: ruleEString
                    {

                    						if (current==null) {
                    							current = createModelElement(grammarAccess.getRetryNodeRule());
                    						}
                    					

                    						newCompositeNode(grammarAccess.getRetryNodeAccess().getSatisfiesQualityRequirementCrossReference_7_2_0());
                    					
                    pushFollow(FOLLOW_20);
                    ruleEString();

                    state._fsp--;


                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:7135:4: (otherlv_16= Comma ( ( ruleEString ) ) )*
                    loop184:
                    do {
                        int alt184=2;
                        int LA184_0 = input.LA(1);

                        if ( (LA184_0==Comma) ) {
                            alt184=1;
                        }


                        switch (alt184) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:7136:5: otherlv_16= Comma ( ( ruleEString ) )
                    	    {
                    	    otherlv_16=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_16, grammarAccess.getRetryNodeAccess().getCommaKeyword_7_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:7140:5: ( ( ruleEString ) )
                    	    // InternalQualityBtCppParser.g:7141:6: ( ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:7141:6: ( ruleEString )
                    	    // InternalQualityBtCppParser.g:7142:7: ruleEString
                    	    {

                    	    							if (current==null) {
                    	    								current = createModelElement(grammarAccess.getRetryNodeRule());
                    	    							}
                    	    						

                    	    							newCompositeNode(grammarAccess.getRetryNodeAccess().getSatisfiesQualityRequirementCrossReference_7_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_20);
                    	    ruleEString();

                    	    state._fsp--;


                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop184;
                        }
                    } while (true);

                    otherlv_18=(Token)match(input,RightParenthesis,FOLLOW_34); 

                    				newLeafNode(otherlv_18, grammarAccess.getRetryNodeAccess().getRightParenthesisKeyword_7_4());
                    			

                    }
                    break;

            }

            // InternalQualityBtCppParser.g:7162:3: (otherlv_19= Parameters otherlv_20= LeftCurlyBracket ( (lv_parameters_21_0= ruleParameter ) ) (otherlv_22= Comma ( (lv_parameters_23_0= ruleParameter ) ) )* otherlv_24= RightCurlyBracket )?
            int alt187=2;
            int LA187_0 = input.LA(1);

            if ( (LA187_0==Parameters) ) {
                alt187=1;
            }
            switch (alt187) {
                case 1 :
                    // InternalQualityBtCppParser.g:7163:4: otherlv_19= Parameters otherlv_20= LeftCurlyBracket ( (lv_parameters_21_0= ruleParameter ) ) (otherlv_22= Comma ( (lv_parameters_23_0= ruleParameter ) ) )* otherlv_24= RightCurlyBracket
                    {
                    otherlv_19=(Token)match(input,Parameters,FOLLOW_21); 

                    				newLeafNode(otherlv_19, grammarAccess.getRetryNodeAccess().getParametersKeyword_8_0());
                    			
                    otherlv_20=(Token)match(input,LeftCurlyBracket,FOLLOW_3); 

                    				newLeafNode(otherlv_20, grammarAccess.getRetryNodeAccess().getLeftCurlyBracketKeyword_8_1());
                    			
                    // InternalQualityBtCppParser.g:7171:4: ( (lv_parameters_21_0= ruleParameter ) )
                    // InternalQualityBtCppParser.g:7172:5: (lv_parameters_21_0= ruleParameter )
                    {
                    // InternalQualityBtCppParser.g:7172:5: (lv_parameters_21_0= ruleParameter )
                    // InternalQualityBtCppParser.g:7173:6: lv_parameters_21_0= ruleParameter
                    {

                    						newCompositeNode(grammarAccess.getRetryNodeAccess().getParametersParameterParserRuleCall_8_2_0());
                    					
                    pushFollow(FOLLOW_29);
                    lv_parameters_21_0=ruleParameter();

                    state._fsp--;


                    						if (current==null) {
                    							current = createModelElementForParent(grammarAccess.getRetryNodeRule());
                    						}
                    						add(
                    							current,
                    							"parameters",
                    							lv_parameters_21_0,
                    							"org.xtext.btcpp.QualityBtCpp.Parameter");
                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:7190:4: (otherlv_22= Comma ( (lv_parameters_23_0= ruleParameter ) ) )*
                    loop186:
                    do {
                        int alt186=2;
                        int LA186_0 = input.LA(1);

                        if ( (LA186_0==Comma) ) {
                            alt186=1;
                        }


                        switch (alt186) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:7191:5: otherlv_22= Comma ( (lv_parameters_23_0= ruleParameter ) )
                    	    {
                    	    otherlv_22=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_22, grammarAccess.getRetryNodeAccess().getCommaKeyword_8_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:7195:5: ( (lv_parameters_23_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:7196:6: (lv_parameters_23_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:7196:6: (lv_parameters_23_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:7197:7: lv_parameters_23_0= ruleParameter
                    	    {

                    	    							newCompositeNode(grammarAccess.getRetryNodeAccess().getParametersParameterParserRuleCall_8_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_29);
                    	    lv_parameters_23_0=ruleParameter();

                    	    state._fsp--;


                    	    							if (current==null) {
                    	    								current = createModelElementForParent(grammarAccess.getRetryNodeRule());
                    	    							}
                    	    							add(
                    	    								current,
                    	    								"parameters",
                    	    								lv_parameters_23_0,
                    	    								"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop186;
                        }
                    } while (true);

                    otherlv_24=(Token)match(input,RightCurlyBracket,FOLLOW_35); 

                    				newLeafNode(otherlv_24, grammarAccess.getRetryNodeAccess().getRightCurlyBracketKeyword_8_4());
                    			

                    }
                    break;

            }

            otherlv_25=(Token)match(input,Child,FOLLOW_9); 

            			newLeafNode(otherlv_25, grammarAccess.getRetryNodeAccess().getChildKeyword_9());
            		
            // InternalQualityBtCppParser.g:7224:3: ( (lv_child_26_0= ruleTreeNode ) )
            // InternalQualityBtCppParser.g:7225:4: (lv_child_26_0= ruleTreeNode )
            {
            // InternalQualityBtCppParser.g:7225:4: (lv_child_26_0= ruleTreeNode )
            // InternalQualityBtCppParser.g:7226:5: lv_child_26_0= ruleTreeNode
            {

            					newCompositeNode(grammarAccess.getRetryNodeAccess().getChildTreeNodeParserRuleCall_10_0());
            				
            pushFollow(FOLLOW_30);
            lv_child_26_0=ruleTreeNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getRetryNodeRule());
            					}
            					set(
            						current,
            						"child",
            						lv_child_26_0,
            						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            otherlv_27=(Token)match(input,RightCurlyBracket,FOLLOW_2); 

            			newLeafNode(otherlv_27, grammarAccess.getRetryNodeAccess().getRightCurlyBracketKeyword_11());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRetryNode"


    // $ANTLR start "entryRuleParallelAllNode"
    // InternalQualityBtCppParser.g:7251:1: entryRuleParallelAllNode returns [EObject current=null] : iv_ruleParallelAllNode= ruleParallelAllNode EOF ;
    public final EObject entryRuleParallelAllNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParallelAllNode = null;


        try {
            // InternalQualityBtCppParser.g:7251:56: (iv_ruleParallelAllNode= ruleParallelAllNode EOF )
            // InternalQualityBtCppParser.g:7252:2: iv_ruleParallelAllNode= ruleParallelAllNode EOF
            {
             newCompositeNode(grammarAccess.getParallelAllNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleParallelAllNode=ruleParallelAllNode();

            state._fsp--;

             current =iv_ruleParallelAllNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleParallelAllNode"


    // $ANTLR start "ruleParallelAllNode"
    // InternalQualityBtCppParser.g:7258:1: ruleParallelAllNode returns [EObject current=null] : (otherlv_0= ParallelAllNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )? (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )? (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )? otherlv_23= Child otherlv_24= LeftCurlyBracket ( (lv_child_25_0= ruleTreeNode ) ) (otherlv_26= Comma ( (lv_child_27_0= ruleTreeNode ) ) )* otherlv_28= RightCurlyBracket otherlv_29= RightCurlyBracket ) ;
    public final EObject ruleParallelAllNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_17=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        Token otherlv_23=null;
        Token otherlv_24=null;
        Token otherlv_26=null;
        Token otherlv_28=null;
        Token otherlv_29=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_ID_4_0 = null;

        EObject lv_parameters_19_0 = null;

        EObject lv_parameters_21_0 = null;

        EObject lv_child_25_0 = null;

        EObject lv_child_27_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:7264:2: ( (otherlv_0= ParallelAllNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )? (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )? (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )? otherlv_23= Child otherlv_24= LeftCurlyBracket ( (lv_child_25_0= ruleTreeNode ) ) (otherlv_26= Comma ( (lv_child_27_0= ruleTreeNode ) ) )* otherlv_28= RightCurlyBracket otherlv_29= RightCurlyBracket ) )
            // InternalQualityBtCppParser.g:7265:2: (otherlv_0= ParallelAllNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )? (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )? (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )? otherlv_23= Child otherlv_24= LeftCurlyBracket ( (lv_child_25_0= ruleTreeNode ) ) (otherlv_26= Comma ( (lv_child_27_0= ruleTreeNode ) ) )* otherlv_28= RightCurlyBracket otherlv_29= RightCurlyBracket )
            {
            // InternalQualityBtCppParser.g:7265:2: (otherlv_0= ParallelAllNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )? (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )? (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )? otherlv_23= Child otherlv_24= LeftCurlyBracket ( (lv_child_25_0= ruleTreeNode ) ) (otherlv_26= Comma ( (lv_child_27_0= ruleTreeNode ) ) )* otherlv_28= RightCurlyBracket otherlv_29= RightCurlyBracket )
            // InternalQualityBtCppParser.g:7266:3: otherlv_0= ParallelAllNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )? (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )? (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )? otherlv_23= Child otherlv_24= LeftCurlyBracket ( (lv_child_25_0= ruleTreeNode ) ) (otherlv_26= Comma ( (lv_child_27_0= ruleTreeNode ) ) )* otherlv_28= RightCurlyBracket otherlv_29= RightCurlyBracket
            {
            otherlv_0=(Token)match(input,ParallelAllNode,FOLLOW_3); 

            			newLeafNode(otherlv_0, grammarAccess.getParallelAllNodeAccess().getParallelAllNodeKeyword_0());
            		
            // InternalQualityBtCppParser.g:7270:3: ( (lv_name_1_0= ruleEString ) )
            // InternalQualityBtCppParser.g:7271:4: (lv_name_1_0= ruleEString )
            {
            // InternalQualityBtCppParser.g:7271:4: (lv_name_1_0= ruleEString )
            // InternalQualityBtCppParser.g:7272:5: lv_name_1_0= ruleEString
            {

            					newCompositeNode(grammarAccess.getParallelAllNodeAccess().getNameEStringParserRuleCall_1_0());
            				
            pushFollow(FOLLOW_21);
            lv_name_1_0=ruleEString();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getParallelAllNodeRule());
            					}
            					set(
            						current,
            						"name",
            						lv_name_1_0,
            						"org.xtext.btcpp.QualityBtCpp.EString");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            otherlv_2=(Token)match(input,LeftCurlyBracket,FOLLOW_31); 

            			newLeafNode(otherlv_2, grammarAccess.getParallelAllNodeAccess().getLeftCurlyBracketKeyword_2());
            		
            // InternalQualityBtCppParser.g:7293:3: (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )?
            int alt188=2;
            int LA188_0 = input.LA(1);

            if ( (LA188_0==ID) ) {
                alt188=1;
            }
            switch (alt188) {
                case 1 :
                    // InternalQualityBtCppParser.g:7294:4: otherlv_3= ID ( (lv_ID_4_0= ruleEString ) )
                    {
                    otherlv_3=(Token)match(input,ID,FOLLOW_3); 

                    				newLeafNode(otherlv_3, grammarAccess.getParallelAllNodeAccess().getIDKeyword_3_0());
                    			
                    // InternalQualityBtCppParser.g:7298:4: ( (lv_ID_4_0= ruleEString ) )
                    // InternalQualityBtCppParser.g:7299:5: (lv_ID_4_0= ruleEString )
                    {
                    // InternalQualityBtCppParser.g:7299:5: (lv_ID_4_0= ruleEString )
                    // InternalQualityBtCppParser.g:7300:6: lv_ID_4_0= ruleEString
                    {

                    						newCompositeNode(grammarAccess.getParallelAllNodeAccess().getIDEStringParserRuleCall_3_1_0());
                    					
                    pushFollow(FOLLOW_32);
                    lv_ID_4_0=ruleEString();

                    state._fsp--;


                    						if (current==null) {
                    							current = createModelElementForParent(grammarAccess.getParallelAllNodeRule());
                    						}
                    						set(
                    							current,
                    							"ID",
                    							lv_ID_4_0,
                    							"org.xtext.btcpp.QualityBtCpp.EString");
                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }


                    }
                    break;

            }

            // InternalQualityBtCppParser.g:7318:3: (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )?
            int alt190=2;
            int LA190_0 = input.LA(1);

            if ( (LA190_0==Satisfices) ) {
                alt190=1;
            }
            switch (alt190) {
                case 1 :
                    // InternalQualityBtCppParser.g:7319:4: otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis
                    {
                    otherlv_5=(Token)match(input,Satisfices,FOLLOW_26); 

                    				newLeafNode(otherlv_5, grammarAccess.getParallelAllNodeAccess().getSatisficesKeyword_4_0());
                    			
                    otherlv_6=(Token)match(input,LeftParenthesis,FOLLOW_3); 

                    				newLeafNode(otherlv_6, grammarAccess.getParallelAllNodeAccess().getLeftParenthesisKeyword_4_1());
                    			
                    // InternalQualityBtCppParser.g:7327:4: ( ( ruleEString ) )
                    // InternalQualityBtCppParser.g:7328:5: ( ruleEString )
                    {
                    // InternalQualityBtCppParser.g:7328:5: ( ruleEString )
                    // InternalQualityBtCppParser.g:7329:6: ruleEString
                    {

                    						if (current==null) {
                    							current = createModelElement(grammarAccess.getParallelAllNodeRule());
                    						}
                    					

                    						newCompositeNode(grammarAccess.getParallelAllNodeAccess().getSatisficesQualityCrossReference_4_2_0());
                    					
                    pushFollow(FOLLOW_20);
                    ruleEString();

                    state._fsp--;


                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:7343:4: (otherlv_8= Comma ( ( ruleEString ) ) )*
                    loop189:
                    do {
                        int alt189=2;
                        int LA189_0 = input.LA(1);

                        if ( (LA189_0==Comma) ) {
                            alt189=1;
                        }


                        switch (alt189) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:7344:5: otherlv_8= Comma ( ( ruleEString ) )
                    	    {
                    	    otherlv_8=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_8, grammarAccess.getParallelAllNodeAccess().getCommaKeyword_4_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:7348:5: ( ( ruleEString ) )
                    	    // InternalQualityBtCppParser.g:7349:6: ( ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:7349:6: ( ruleEString )
                    	    // InternalQualityBtCppParser.g:7350:7: ruleEString
                    	    {

                    	    							if (current==null) {
                    	    								current = createModelElement(grammarAccess.getParallelAllNodeRule());
                    	    							}
                    	    						

                    	    							newCompositeNode(grammarAccess.getParallelAllNodeAccess().getSatisficesQualityCrossReference_4_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_20);
                    	    ruleEString();

                    	    state._fsp--;


                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop189;
                        }
                    } while (true);

                    otherlv_10=(Token)match(input,RightParenthesis,FOLLOW_33); 

                    				newLeafNode(otherlv_10, grammarAccess.getParallelAllNodeAccess().getRightParenthesisKeyword_4_4());
                    			

                    }
                    break;

            }

            // InternalQualityBtCppParser.g:7370:3: (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )?
            int alt192=2;
            int LA192_0 = input.LA(1);

            if ( (LA192_0==Satisfies) ) {
                alt192=1;
            }
            switch (alt192) {
                case 1 :
                    // InternalQualityBtCppParser.g:7371:4: otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis
                    {
                    otherlv_11=(Token)match(input,Satisfies,FOLLOW_26); 

                    				newLeafNode(otherlv_11, grammarAccess.getParallelAllNodeAccess().getSatisfiesKeyword_5_0());
                    			
                    otherlv_12=(Token)match(input,LeftParenthesis,FOLLOW_3); 

                    				newLeafNode(otherlv_12, grammarAccess.getParallelAllNodeAccess().getLeftParenthesisKeyword_5_1());
                    			
                    // InternalQualityBtCppParser.g:7379:4: ( ( ruleEString ) )
                    // InternalQualityBtCppParser.g:7380:5: ( ruleEString )
                    {
                    // InternalQualityBtCppParser.g:7380:5: ( ruleEString )
                    // InternalQualityBtCppParser.g:7381:6: ruleEString
                    {

                    						if (current==null) {
                    							current = createModelElement(grammarAccess.getParallelAllNodeRule());
                    						}
                    					

                    						newCompositeNode(grammarAccess.getParallelAllNodeAccess().getSatisfiesQualityRequirementCrossReference_5_2_0());
                    					
                    pushFollow(FOLLOW_20);
                    ruleEString();

                    state._fsp--;


                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:7395:4: (otherlv_14= Comma ( ( ruleEString ) ) )*
                    loop191:
                    do {
                        int alt191=2;
                        int LA191_0 = input.LA(1);

                        if ( (LA191_0==Comma) ) {
                            alt191=1;
                        }


                        switch (alt191) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:7396:5: otherlv_14= Comma ( ( ruleEString ) )
                    	    {
                    	    otherlv_14=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_14, grammarAccess.getParallelAllNodeAccess().getCommaKeyword_5_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:7400:5: ( ( ruleEString ) )
                    	    // InternalQualityBtCppParser.g:7401:6: ( ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:7401:6: ( ruleEString )
                    	    // InternalQualityBtCppParser.g:7402:7: ruleEString
                    	    {

                    	    							if (current==null) {
                    	    								current = createModelElement(grammarAccess.getParallelAllNodeRule());
                    	    							}
                    	    						

                    	    							newCompositeNode(grammarAccess.getParallelAllNodeAccess().getSatisfiesQualityRequirementCrossReference_5_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_20);
                    	    ruleEString();

                    	    state._fsp--;


                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop191;
                        }
                    } while (true);

                    otherlv_16=(Token)match(input,RightParenthesis,FOLLOW_34); 

                    				newLeafNode(otherlv_16, grammarAccess.getParallelAllNodeAccess().getRightParenthesisKeyword_5_4());
                    			

                    }
                    break;

            }

            // InternalQualityBtCppParser.g:7422:3: (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )?
            int alt194=2;
            int LA194_0 = input.LA(1);

            if ( (LA194_0==Parameters) ) {
                alt194=1;
            }
            switch (alt194) {
                case 1 :
                    // InternalQualityBtCppParser.g:7423:4: otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket
                    {
                    otherlv_17=(Token)match(input,Parameters,FOLLOW_21); 

                    				newLeafNode(otherlv_17, grammarAccess.getParallelAllNodeAccess().getParametersKeyword_6_0());
                    			
                    otherlv_18=(Token)match(input,LeftCurlyBracket,FOLLOW_3); 

                    				newLeafNode(otherlv_18, grammarAccess.getParallelAllNodeAccess().getLeftCurlyBracketKeyword_6_1());
                    			
                    // InternalQualityBtCppParser.g:7431:4: ( (lv_parameters_19_0= ruleParameter ) )
                    // InternalQualityBtCppParser.g:7432:5: (lv_parameters_19_0= ruleParameter )
                    {
                    // InternalQualityBtCppParser.g:7432:5: (lv_parameters_19_0= ruleParameter )
                    // InternalQualityBtCppParser.g:7433:6: lv_parameters_19_0= ruleParameter
                    {

                    						newCompositeNode(grammarAccess.getParallelAllNodeAccess().getParametersParameterParserRuleCall_6_2_0());
                    					
                    pushFollow(FOLLOW_29);
                    lv_parameters_19_0=ruleParameter();

                    state._fsp--;


                    						if (current==null) {
                    							current = createModelElementForParent(grammarAccess.getParallelAllNodeRule());
                    						}
                    						add(
                    							current,
                    							"parameters",
                    							lv_parameters_19_0,
                    							"org.xtext.btcpp.QualityBtCpp.Parameter");
                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:7450:4: (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )*
                    loop193:
                    do {
                        int alt193=2;
                        int LA193_0 = input.LA(1);

                        if ( (LA193_0==Comma) ) {
                            alt193=1;
                        }


                        switch (alt193) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:7451:5: otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) )
                    	    {
                    	    otherlv_20=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_20, grammarAccess.getParallelAllNodeAccess().getCommaKeyword_6_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:7455:5: ( (lv_parameters_21_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:7456:6: (lv_parameters_21_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:7456:6: (lv_parameters_21_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:7457:7: lv_parameters_21_0= ruleParameter
                    	    {

                    	    							newCompositeNode(grammarAccess.getParallelAllNodeAccess().getParametersParameterParserRuleCall_6_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_29);
                    	    lv_parameters_21_0=ruleParameter();

                    	    state._fsp--;


                    	    							if (current==null) {
                    	    								current = createModelElementForParent(grammarAccess.getParallelAllNodeRule());
                    	    							}
                    	    							add(
                    	    								current,
                    	    								"parameters",
                    	    								lv_parameters_21_0,
                    	    								"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop193;
                        }
                    } while (true);

                    otherlv_22=(Token)match(input,RightCurlyBracket,FOLLOW_35); 

                    				newLeafNode(otherlv_22, grammarAccess.getParallelAllNodeAccess().getRightCurlyBracketKeyword_6_4());
                    			

                    }
                    break;

            }

            otherlv_23=(Token)match(input,Child,FOLLOW_21); 

            			newLeafNode(otherlv_23, grammarAccess.getParallelAllNodeAccess().getChildKeyword_7());
            		
            otherlv_24=(Token)match(input,LeftCurlyBracket,FOLLOW_9); 

            			newLeafNode(otherlv_24, grammarAccess.getParallelAllNodeAccess().getLeftCurlyBracketKeyword_8());
            		
            // InternalQualityBtCppParser.g:7488:3: ( (lv_child_25_0= ruleTreeNode ) )
            // InternalQualityBtCppParser.g:7489:4: (lv_child_25_0= ruleTreeNode )
            {
            // InternalQualityBtCppParser.g:7489:4: (lv_child_25_0= ruleTreeNode )
            // InternalQualityBtCppParser.g:7490:5: lv_child_25_0= ruleTreeNode
            {

            					newCompositeNode(grammarAccess.getParallelAllNodeAccess().getChildTreeNodeParserRuleCall_9_0());
            				
            pushFollow(FOLLOW_29);
            lv_child_25_0=ruleTreeNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getParallelAllNodeRule());
            					}
            					add(
            						current,
            						"child",
            						lv_child_25_0,
            						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            // InternalQualityBtCppParser.g:7507:3: (otherlv_26= Comma ( (lv_child_27_0= ruleTreeNode ) ) )*
            loop195:
            do {
                int alt195=2;
                int LA195_0 = input.LA(1);

                if ( (LA195_0==Comma) ) {
                    alt195=1;
                }


                switch (alt195) {
            	case 1 :
            	    // InternalQualityBtCppParser.g:7508:4: otherlv_26= Comma ( (lv_child_27_0= ruleTreeNode ) )
            	    {
            	    otherlv_26=(Token)match(input,Comma,FOLLOW_9); 

            	    				newLeafNode(otherlv_26, grammarAccess.getParallelAllNodeAccess().getCommaKeyword_10_0());
            	    			
            	    // InternalQualityBtCppParser.g:7512:4: ( (lv_child_27_0= ruleTreeNode ) )
            	    // InternalQualityBtCppParser.g:7513:5: (lv_child_27_0= ruleTreeNode )
            	    {
            	    // InternalQualityBtCppParser.g:7513:5: (lv_child_27_0= ruleTreeNode )
            	    // InternalQualityBtCppParser.g:7514:6: lv_child_27_0= ruleTreeNode
            	    {

            	    						newCompositeNode(grammarAccess.getParallelAllNodeAccess().getChildTreeNodeParserRuleCall_10_1_0());
            	    					
            	    pushFollow(FOLLOW_29);
            	    lv_child_27_0=ruleTreeNode();

            	    state._fsp--;


            	    						if (current==null) {
            	    							current = createModelElementForParent(grammarAccess.getParallelAllNodeRule());
            	    						}
            	    						add(
            	    							current,
            	    							"child",
            	    							lv_child_27_0,
            	    							"org.xtext.btcpp.QualityBtCpp.TreeNode");
            	    						afterParserOrEnumRuleCall();
            	    					

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop195;
                }
            } while (true);

            otherlv_28=(Token)match(input,RightCurlyBracket,FOLLOW_30); 

            			newLeafNode(otherlv_28, grammarAccess.getParallelAllNodeAccess().getRightCurlyBracketKeyword_11());
            		
            otherlv_29=(Token)match(input,RightCurlyBracket,FOLLOW_2); 

            			newLeafNode(otherlv_29, grammarAccess.getParallelAllNodeAccess().getRightCurlyBracketKeyword_12());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleParallelAllNode"


    // $ANTLR start "entryRuleDelayNode"
    // InternalQualityBtCppParser.g:7544:1: entryRuleDelayNode returns [EObject current=null] : iv_ruleDelayNode= ruleDelayNode EOF ;
    public final EObject entryRuleDelayNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDelayNode = null;


        try {
            // InternalQualityBtCppParser.g:7544:50: (iv_ruleDelayNode= ruleDelayNode EOF )
            // InternalQualityBtCppParser.g:7545:2: iv_ruleDelayNode= ruleDelayNode EOF
            {
             newCompositeNode(grammarAccess.getDelayNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleDelayNode=ruleDelayNode();

            state._fsp--;

             current =iv_ruleDelayNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDelayNode"


    // $ANTLR start "ruleDelayNode"
    // InternalQualityBtCppParser.g:7551:1: ruleDelayNode returns [EObject current=null] : (otherlv_0= DelayNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Delay_msec ( (lv_delay_msec_6_0= ruleEString ) ) )? (otherlv_7= Satisfices otherlv_8= LeftParenthesis ( ( ruleEString ) ) (otherlv_10= Comma ( ( ruleEString ) ) )* otherlv_12= RightParenthesis )? (otherlv_13= Satisfies otherlv_14= LeftParenthesis ( ( ruleEString ) ) (otherlv_16= Comma ( ( ruleEString ) ) )* otherlv_18= RightParenthesis )? (otherlv_19= Parameters otherlv_20= LeftCurlyBracket ( (lv_parameters_21_0= ruleParameter ) ) (otherlv_22= Comma ( (lv_parameters_23_0= ruleParameter ) ) )* otherlv_24= RightCurlyBracket )? otherlv_25= Child ( (lv_child_26_0= ruleTreeNode ) ) otherlv_27= RightCurlyBracket ) ;
    public final EObject ruleDelayNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token otherlv_19=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        Token otherlv_24=null;
        Token otherlv_25=null;
        Token otherlv_27=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_ID_4_0 = null;

        AntlrDatatypeRuleToken lv_delay_msec_6_0 = null;

        EObject lv_parameters_21_0 = null;

        EObject lv_parameters_23_0 = null;

        EObject lv_child_26_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:7557:2: ( (otherlv_0= DelayNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Delay_msec ( (lv_delay_msec_6_0= ruleEString ) ) )? (otherlv_7= Satisfices otherlv_8= LeftParenthesis ( ( ruleEString ) ) (otherlv_10= Comma ( ( ruleEString ) ) )* otherlv_12= RightParenthesis )? (otherlv_13= Satisfies otherlv_14= LeftParenthesis ( ( ruleEString ) ) (otherlv_16= Comma ( ( ruleEString ) ) )* otherlv_18= RightParenthesis )? (otherlv_19= Parameters otherlv_20= LeftCurlyBracket ( (lv_parameters_21_0= ruleParameter ) ) (otherlv_22= Comma ( (lv_parameters_23_0= ruleParameter ) ) )* otherlv_24= RightCurlyBracket )? otherlv_25= Child ( (lv_child_26_0= ruleTreeNode ) ) otherlv_27= RightCurlyBracket ) )
            // InternalQualityBtCppParser.g:7558:2: (otherlv_0= DelayNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Delay_msec ( (lv_delay_msec_6_0= ruleEString ) ) )? (otherlv_7= Satisfices otherlv_8= LeftParenthesis ( ( ruleEString ) ) (otherlv_10= Comma ( ( ruleEString ) ) )* otherlv_12= RightParenthesis )? (otherlv_13= Satisfies otherlv_14= LeftParenthesis ( ( ruleEString ) ) (otherlv_16= Comma ( ( ruleEString ) ) )* otherlv_18= RightParenthesis )? (otherlv_19= Parameters otherlv_20= LeftCurlyBracket ( (lv_parameters_21_0= ruleParameter ) ) (otherlv_22= Comma ( (lv_parameters_23_0= ruleParameter ) ) )* otherlv_24= RightCurlyBracket )? otherlv_25= Child ( (lv_child_26_0= ruleTreeNode ) ) otherlv_27= RightCurlyBracket )
            {
            // InternalQualityBtCppParser.g:7558:2: (otherlv_0= DelayNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Delay_msec ( (lv_delay_msec_6_0= ruleEString ) ) )? (otherlv_7= Satisfices otherlv_8= LeftParenthesis ( ( ruleEString ) ) (otherlv_10= Comma ( ( ruleEString ) ) )* otherlv_12= RightParenthesis )? (otherlv_13= Satisfies otherlv_14= LeftParenthesis ( ( ruleEString ) ) (otherlv_16= Comma ( ( ruleEString ) ) )* otherlv_18= RightParenthesis )? (otherlv_19= Parameters otherlv_20= LeftCurlyBracket ( (lv_parameters_21_0= ruleParameter ) ) (otherlv_22= Comma ( (lv_parameters_23_0= ruleParameter ) ) )* otherlv_24= RightCurlyBracket )? otherlv_25= Child ( (lv_child_26_0= ruleTreeNode ) ) otherlv_27= RightCurlyBracket )
            // InternalQualityBtCppParser.g:7559:3: otherlv_0= DelayNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Delay_msec ( (lv_delay_msec_6_0= ruleEString ) ) )? (otherlv_7= Satisfices otherlv_8= LeftParenthesis ( ( ruleEString ) ) (otherlv_10= Comma ( ( ruleEString ) ) )* otherlv_12= RightParenthesis )? (otherlv_13= Satisfies otherlv_14= LeftParenthesis ( ( ruleEString ) ) (otherlv_16= Comma ( ( ruleEString ) ) )* otherlv_18= RightParenthesis )? (otherlv_19= Parameters otherlv_20= LeftCurlyBracket ( (lv_parameters_21_0= ruleParameter ) ) (otherlv_22= Comma ( (lv_parameters_23_0= ruleParameter ) ) )* otherlv_24= RightCurlyBracket )? otherlv_25= Child ( (lv_child_26_0= ruleTreeNode ) ) otherlv_27= RightCurlyBracket
            {
            otherlv_0=(Token)match(input,DelayNode,FOLLOW_3); 

            			newLeafNode(otherlv_0, grammarAccess.getDelayNodeAccess().getDelayNodeKeyword_0());
            		
            // InternalQualityBtCppParser.g:7563:3: ( (lv_name_1_0= ruleEString ) )
            // InternalQualityBtCppParser.g:7564:4: (lv_name_1_0= ruleEString )
            {
            // InternalQualityBtCppParser.g:7564:4: (lv_name_1_0= ruleEString )
            // InternalQualityBtCppParser.g:7565:5: lv_name_1_0= ruleEString
            {

            					newCompositeNode(grammarAccess.getDelayNodeAccess().getNameEStringParserRuleCall_1_0());
            				
            pushFollow(FOLLOW_21);
            lv_name_1_0=ruleEString();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getDelayNodeRule());
            					}
            					set(
            						current,
            						"name",
            						lv_name_1_0,
            						"org.xtext.btcpp.QualityBtCpp.EString");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            otherlv_2=(Token)match(input,LeftCurlyBracket,FOLLOW_48); 

            			newLeafNode(otherlv_2, grammarAccess.getDelayNodeAccess().getLeftCurlyBracketKeyword_2());
            		
            // InternalQualityBtCppParser.g:7586:3: (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )?
            int alt196=2;
            int LA196_0 = input.LA(1);

            if ( (LA196_0==ID) ) {
                alt196=1;
            }
            switch (alt196) {
                case 1 :
                    // InternalQualityBtCppParser.g:7587:4: otherlv_3= ID ( (lv_ID_4_0= ruleEString ) )
                    {
                    otherlv_3=(Token)match(input,ID,FOLLOW_3); 

                    				newLeafNode(otherlv_3, grammarAccess.getDelayNodeAccess().getIDKeyword_3_0());
                    			
                    // InternalQualityBtCppParser.g:7591:4: ( (lv_ID_4_0= ruleEString ) )
                    // InternalQualityBtCppParser.g:7592:5: (lv_ID_4_0= ruleEString )
                    {
                    // InternalQualityBtCppParser.g:7592:5: (lv_ID_4_0= ruleEString )
                    // InternalQualityBtCppParser.g:7593:6: lv_ID_4_0= ruleEString
                    {

                    						newCompositeNode(grammarAccess.getDelayNodeAccess().getIDEStringParserRuleCall_3_1_0());
                    					
                    pushFollow(FOLLOW_49);
                    lv_ID_4_0=ruleEString();

                    state._fsp--;


                    						if (current==null) {
                    							current = createModelElementForParent(grammarAccess.getDelayNodeRule());
                    						}
                    						set(
                    							current,
                    							"ID",
                    							lv_ID_4_0,
                    							"org.xtext.btcpp.QualityBtCpp.EString");
                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }


                    }
                    break;

            }

            // InternalQualityBtCppParser.g:7611:3: (otherlv_5= Delay_msec ( (lv_delay_msec_6_0= ruleEString ) ) )?
            int alt197=2;
            int LA197_0 = input.LA(1);

            if ( (LA197_0==Delay_msec) ) {
                alt197=1;
            }
            switch (alt197) {
                case 1 :
                    // InternalQualityBtCppParser.g:7612:4: otherlv_5= Delay_msec ( (lv_delay_msec_6_0= ruleEString ) )
                    {
                    otherlv_5=(Token)match(input,Delay_msec,FOLLOW_3); 

                    				newLeafNode(otherlv_5, grammarAccess.getDelayNodeAccess().getDelay_msecKeyword_4_0());
                    			
                    // InternalQualityBtCppParser.g:7616:4: ( (lv_delay_msec_6_0= ruleEString ) )
                    // InternalQualityBtCppParser.g:7617:5: (lv_delay_msec_6_0= ruleEString )
                    {
                    // InternalQualityBtCppParser.g:7617:5: (lv_delay_msec_6_0= ruleEString )
                    // InternalQualityBtCppParser.g:7618:6: lv_delay_msec_6_0= ruleEString
                    {

                    						newCompositeNode(grammarAccess.getDelayNodeAccess().getDelay_msecEStringParserRuleCall_4_1_0());
                    					
                    pushFollow(FOLLOW_32);
                    lv_delay_msec_6_0=ruleEString();

                    state._fsp--;


                    						if (current==null) {
                    							current = createModelElementForParent(grammarAccess.getDelayNodeRule());
                    						}
                    						set(
                    							current,
                    							"delay_msec",
                    							lv_delay_msec_6_0,
                    							"org.xtext.btcpp.QualityBtCpp.EString");
                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }


                    }
                    break;

            }

            // InternalQualityBtCppParser.g:7636:3: (otherlv_7= Satisfices otherlv_8= LeftParenthesis ( ( ruleEString ) ) (otherlv_10= Comma ( ( ruleEString ) ) )* otherlv_12= RightParenthesis )?
            int alt199=2;
            int LA199_0 = input.LA(1);

            if ( (LA199_0==Satisfices) ) {
                alt199=1;
            }
            switch (alt199) {
                case 1 :
                    // InternalQualityBtCppParser.g:7637:4: otherlv_7= Satisfices otherlv_8= LeftParenthesis ( ( ruleEString ) ) (otherlv_10= Comma ( ( ruleEString ) ) )* otherlv_12= RightParenthesis
                    {
                    otherlv_7=(Token)match(input,Satisfices,FOLLOW_26); 

                    				newLeafNode(otherlv_7, grammarAccess.getDelayNodeAccess().getSatisficesKeyword_5_0());
                    			
                    otherlv_8=(Token)match(input,LeftParenthesis,FOLLOW_3); 

                    				newLeafNode(otherlv_8, grammarAccess.getDelayNodeAccess().getLeftParenthesisKeyword_5_1());
                    			
                    // InternalQualityBtCppParser.g:7645:4: ( ( ruleEString ) )
                    // InternalQualityBtCppParser.g:7646:5: ( ruleEString )
                    {
                    // InternalQualityBtCppParser.g:7646:5: ( ruleEString )
                    // InternalQualityBtCppParser.g:7647:6: ruleEString
                    {

                    						if (current==null) {
                    							current = createModelElement(grammarAccess.getDelayNodeRule());
                    						}
                    					

                    						newCompositeNode(grammarAccess.getDelayNodeAccess().getSatisficesQualityCrossReference_5_2_0());
                    					
                    pushFollow(FOLLOW_20);
                    ruleEString();

                    state._fsp--;


                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:7661:4: (otherlv_10= Comma ( ( ruleEString ) ) )*
                    loop198:
                    do {
                        int alt198=2;
                        int LA198_0 = input.LA(1);

                        if ( (LA198_0==Comma) ) {
                            alt198=1;
                        }


                        switch (alt198) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:7662:5: otherlv_10= Comma ( ( ruleEString ) )
                    	    {
                    	    otherlv_10=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_10, grammarAccess.getDelayNodeAccess().getCommaKeyword_5_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:7666:5: ( ( ruleEString ) )
                    	    // InternalQualityBtCppParser.g:7667:6: ( ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:7667:6: ( ruleEString )
                    	    // InternalQualityBtCppParser.g:7668:7: ruleEString
                    	    {

                    	    							if (current==null) {
                    	    								current = createModelElement(grammarAccess.getDelayNodeRule());
                    	    							}
                    	    						

                    	    							newCompositeNode(grammarAccess.getDelayNodeAccess().getSatisficesQualityCrossReference_5_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_20);
                    	    ruleEString();

                    	    state._fsp--;


                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop198;
                        }
                    } while (true);

                    otherlv_12=(Token)match(input,RightParenthesis,FOLLOW_33); 

                    				newLeafNode(otherlv_12, grammarAccess.getDelayNodeAccess().getRightParenthesisKeyword_5_4());
                    			

                    }
                    break;

            }

            // InternalQualityBtCppParser.g:7688:3: (otherlv_13= Satisfies otherlv_14= LeftParenthesis ( ( ruleEString ) ) (otherlv_16= Comma ( ( ruleEString ) ) )* otherlv_18= RightParenthesis )?
            int alt201=2;
            int LA201_0 = input.LA(1);

            if ( (LA201_0==Satisfies) ) {
                alt201=1;
            }
            switch (alt201) {
                case 1 :
                    // InternalQualityBtCppParser.g:7689:4: otherlv_13= Satisfies otherlv_14= LeftParenthesis ( ( ruleEString ) ) (otherlv_16= Comma ( ( ruleEString ) ) )* otherlv_18= RightParenthesis
                    {
                    otherlv_13=(Token)match(input,Satisfies,FOLLOW_26); 

                    				newLeafNode(otherlv_13, grammarAccess.getDelayNodeAccess().getSatisfiesKeyword_6_0());
                    			
                    otherlv_14=(Token)match(input,LeftParenthesis,FOLLOW_3); 

                    				newLeafNode(otherlv_14, grammarAccess.getDelayNodeAccess().getLeftParenthesisKeyword_6_1());
                    			
                    // InternalQualityBtCppParser.g:7697:4: ( ( ruleEString ) )
                    // InternalQualityBtCppParser.g:7698:5: ( ruleEString )
                    {
                    // InternalQualityBtCppParser.g:7698:5: ( ruleEString )
                    // InternalQualityBtCppParser.g:7699:6: ruleEString
                    {

                    						if (current==null) {
                    							current = createModelElement(grammarAccess.getDelayNodeRule());
                    						}
                    					

                    						newCompositeNode(grammarAccess.getDelayNodeAccess().getSatisfiesQualityRequirementCrossReference_6_2_0());
                    					
                    pushFollow(FOLLOW_20);
                    ruleEString();

                    state._fsp--;


                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:7713:4: (otherlv_16= Comma ( ( ruleEString ) ) )*
                    loop200:
                    do {
                        int alt200=2;
                        int LA200_0 = input.LA(1);

                        if ( (LA200_0==Comma) ) {
                            alt200=1;
                        }


                        switch (alt200) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:7714:5: otherlv_16= Comma ( ( ruleEString ) )
                    	    {
                    	    otherlv_16=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_16, grammarAccess.getDelayNodeAccess().getCommaKeyword_6_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:7718:5: ( ( ruleEString ) )
                    	    // InternalQualityBtCppParser.g:7719:6: ( ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:7719:6: ( ruleEString )
                    	    // InternalQualityBtCppParser.g:7720:7: ruleEString
                    	    {

                    	    							if (current==null) {
                    	    								current = createModelElement(grammarAccess.getDelayNodeRule());
                    	    							}
                    	    						

                    	    							newCompositeNode(grammarAccess.getDelayNodeAccess().getSatisfiesQualityRequirementCrossReference_6_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_20);
                    	    ruleEString();

                    	    state._fsp--;


                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop200;
                        }
                    } while (true);

                    otherlv_18=(Token)match(input,RightParenthesis,FOLLOW_34); 

                    				newLeafNode(otherlv_18, grammarAccess.getDelayNodeAccess().getRightParenthesisKeyword_6_4());
                    			

                    }
                    break;

            }

            // InternalQualityBtCppParser.g:7740:3: (otherlv_19= Parameters otherlv_20= LeftCurlyBracket ( (lv_parameters_21_0= ruleParameter ) ) (otherlv_22= Comma ( (lv_parameters_23_0= ruleParameter ) ) )* otherlv_24= RightCurlyBracket )?
            int alt203=2;
            int LA203_0 = input.LA(1);

            if ( (LA203_0==Parameters) ) {
                alt203=1;
            }
            switch (alt203) {
                case 1 :
                    // InternalQualityBtCppParser.g:7741:4: otherlv_19= Parameters otherlv_20= LeftCurlyBracket ( (lv_parameters_21_0= ruleParameter ) ) (otherlv_22= Comma ( (lv_parameters_23_0= ruleParameter ) ) )* otherlv_24= RightCurlyBracket
                    {
                    otherlv_19=(Token)match(input,Parameters,FOLLOW_21); 

                    				newLeafNode(otherlv_19, grammarAccess.getDelayNodeAccess().getParametersKeyword_7_0());
                    			
                    otherlv_20=(Token)match(input,LeftCurlyBracket,FOLLOW_3); 

                    				newLeafNode(otherlv_20, grammarAccess.getDelayNodeAccess().getLeftCurlyBracketKeyword_7_1());
                    			
                    // InternalQualityBtCppParser.g:7749:4: ( (lv_parameters_21_0= ruleParameter ) )
                    // InternalQualityBtCppParser.g:7750:5: (lv_parameters_21_0= ruleParameter )
                    {
                    // InternalQualityBtCppParser.g:7750:5: (lv_parameters_21_0= ruleParameter )
                    // InternalQualityBtCppParser.g:7751:6: lv_parameters_21_0= ruleParameter
                    {

                    						newCompositeNode(grammarAccess.getDelayNodeAccess().getParametersParameterParserRuleCall_7_2_0());
                    					
                    pushFollow(FOLLOW_29);
                    lv_parameters_21_0=ruleParameter();

                    state._fsp--;


                    						if (current==null) {
                    							current = createModelElementForParent(grammarAccess.getDelayNodeRule());
                    						}
                    						add(
                    							current,
                    							"parameters",
                    							lv_parameters_21_0,
                    							"org.xtext.btcpp.QualityBtCpp.Parameter");
                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:7768:4: (otherlv_22= Comma ( (lv_parameters_23_0= ruleParameter ) ) )*
                    loop202:
                    do {
                        int alt202=2;
                        int LA202_0 = input.LA(1);

                        if ( (LA202_0==Comma) ) {
                            alt202=1;
                        }


                        switch (alt202) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:7769:5: otherlv_22= Comma ( (lv_parameters_23_0= ruleParameter ) )
                    	    {
                    	    otherlv_22=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_22, grammarAccess.getDelayNodeAccess().getCommaKeyword_7_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:7773:5: ( (lv_parameters_23_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:7774:6: (lv_parameters_23_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:7774:6: (lv_parameters_23_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:7775:7: lv_parameters_23_0= ruleParameter
                    	    {

                    	    							newCompositeNode(grammarAccess.getDelayNodeAccess().getParametersParameterParserRuleCall_7_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_29);
                    	    lv_parameters_23_0=ruleParameter();

                    	    state._fsp--;


                    	    							if (current==null) {
                    	    								current = createModelElementForParent(grammarAccess.getDelayNodeRule());
                    	    							}
                    	    							add(
                    	    								current,
                    	    								"parameters",
                    	    								lv_parameters_23_0,
                    	    								"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop202;
                        }
                    } while (true);

                    otherlv_24=(Token)match(input,RightCurlyBracket,FOLLOW_35); 

                    				newLeafNode(otherlv_24, grammarAccess.getDelayNodeAccess().getRightCurlyBracketKeyword_7_4());
                    			

                    }
                    break;

            }

            otherlv_25=(Token)match(input,Child,FOLLOW_9); 

            			newLeafNode(otherlv_25, grammarAccess.getDelayNodeAccess().getChildKeyword_8());
            		
            // InternalQualityBtCppParser.g:7802:3: ( (lv_child_26_0= ruleTreeNode ) )
            // InternalQualityBtCppParser.g:7803:4: (lv_child_26_0= ruleTreeNode )
            {
            // InternalQualityBtCppParser.g:7803:4: (lv_child_26_0= ruleTreeNode )
            // InternalQualityBtCppParser.g:7804:5: lv_child_26_0= ruleTreeNode
            {

            					newCompositeNode(grammarAccess.getDelayNodeAccess().getChildTreeNodeParserRuleCall_9_0());
            				
            pushFollow(FOLLOW_30);
            lv_child_26_0=ruleTreeNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getDelayNodeRule());
            					}
            					set(
            						current,
            						"child",
            						lv_child_26_0,
            						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            otherlv_27=(Token)match(input,RightCurlyBracket,FOLLOW_2); 

            			newLeafNode(otherlv_27, grammarAccess.getDelayNodeAccess().getRightCurlyBracketKeyword_10());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDelayNode"


    // $ANTLR start "entryRulePreconditionNode"
    // InternalQualityBtCppParser.g:7829:1: entryRulePreconditionNode returns [EObject current=null] : iv_rulePreconditionNode= rulePreconditionNode EOF ;
    public final EObject entryRulePreconditionNode() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePreconditionNode = null;


        try {
            // InternalQualityBtCppParser.g:7829:57: (iv_rulePreconditionNode= rulePreconditionNode EOF )
            // InternalQualityBtCppParser.g:7830:2: iv_rulePreconditionNode= rulePreconditionNode EOF
            {
             newCompositeNode(grammarAccess.getPreconditionNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_rulePreconditionNode=rulePreconditionNode();

            state._fsp--;

             current =iv_rulePreconditionNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePreconditionNode"


    // $ANTLR start "rulePreconditionNode"
    // InternalQualityBtCppParser.g:7836:1: rulePreconditionNode returns [EObject current=null] : (otherlv_0= PreconditionNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )? (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )? (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )? otherlv_23= Child ( (lv_child_24_0= ruleTreeNode ) ) otherlv_25= RightCurlyBracket ) ;
    public final EObject rulePreconditionNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_17=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        Token otherlv_23=null;
        Token otherlv_25=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_ID_4_0 = null;

        EObject lv_parameters_19_0 = null;

        EObject lv_parameters_21_0 = null;

        EObject lv_child_24_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:7842:2: ( (otherlv_0= PreconditionNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )? (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )? (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )? otherlv_23= Child ( (lv_child_24_0= ruleTreeNode ) ) otherlv_25= RightCurlyBracket ) )
            // InternalQualityBtCppParser.g:7843:2: (otherlv_0= PreconditionNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )? (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )? (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )? otherlv_23= Child ( (lv_child_24_0= ruleTreeNode ) ) otherlv_25= RightCurlyBracket )
            {
            // InternalQualityBtCppParser.g:7843:2: (otherlv_0= PreconditionNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )? (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )? (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )? otherlv_23= Child ( (lv_child_24_0= ruleTreeNode ) ) otherlv_25= RightCurlyBracket )
            // InternalQualityBtCppParser.g:7844:3: otherlv_0= PreconditionNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )? (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )? (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )? otherlv_23= Child ( (lv_child_24_0= ruleTreeNode ) ) otherlv_25= RightCurlyBracket
            {
            otherlv_0=(Token)match(input,PreconditionNode,FOLLOW_3); 

            			newLeafNode(otherlv_0, grammarAccess.getPreconditionNodeAccess().getPreconditionNodeKeyword_0());
            		
            // InternalQualityBtCppParser.g:7848:3: ( (lv_name_1_0= ruleEString ) )
            // InternalQualityBtCppParser.g:7849:4: (lv_name_1_0= ruleEString )
            {
            // InternalQualityBtCppParser.g:7849:4: (lv_name_1_0= ruleEString )
            // InternalQualityBtCppParser.g:7850:5: lv_name_1_0= ruleEString
            {

            					newCompositeNode(grammarAccess.getPreconditionNodeAccess().getNameEStringParserRuleCall_1_0());
            				
            pushFollow(FOLLOW_21);
            lv_name_1_0=ruleEString();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getPreconditionNodeRule());
            					}
            					set(
            						current,
            						"name",
            						lv_name_1_0,
            						"org.xtext.btcpp.QualityBtCpp.EString");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            otherlv_2=(Token)match(input,LeftCurlyBracket,FOLLOW_31); 

            			newLeafNode(otherlv_2, grammarAccess.getPreconditionNodeAccess().getLeftCurlyBracketKeyword_2());
            		
            // InternalQualityBtCppParser.g:7871:3: (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )?
            int alt204=2;
            int LA204_0 = input.LA(1);

            if ( (LA204_0==ID) ) {
                alt204=1;
            }
            switch (alt204) {
                case 1 :
                    // InternalQualityBtCppParser.g:7872:4: otherlv_3= ID ( (lv_ID_4_0= ruleEString ) )
                    {
                    otherlv_3=(Token)match(input,ID,FOLLOW_3); 

                    				newLeafNode(otherlv_3, grammarAccess.getPreconditionNodeAccess().getIDKeyword_3_0());
                    			
                    // InternalQualityBtCppParser.g:7876:4: ( (lv_ID_4_0= ruleEString ) )
                    // InternalQualityBtCppParser.g:7877:5: (lv_ID_4_0= ruleEString )
                    {
                    // InternalQualityBtCppParser.g:7877:5: (lv_ID_4_0= ruleEString )
                    // InternalQualityBtCppParser.g:7878:6: lv_ID_4_0= ruleEString
                    {

                    						newCompositeNode(grammarAccess.getPreconditionNodeAccess().getIDEStringParserRuleCall_3_1_0());
                    					
                    pushFollow(FOLLOW_32);
                    lv_ID_4_0=ruleEString();

                    state._fsp--;


                    						if (current==null) {
                    							current = createModelElementForParent(grammarAccess.getPreconditionNodeRule());
                    						}
                    						set(
                    							current,
                    							"ID",
                    							lv_ID_4_0,
                    							"org.xtext.btcpp.QualityBtCpp.EString");
                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }


                    }
                    break;

            }

            // InternalQualityBtCppParser.g:7896:3: (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )?
            int alt206=2;
            int LA206_0 = input.LA(1);

            if ( (LA206_0==Satisfices) ) {
                alt206=1;
            }
            switch (alt206) {
                case 1 :
                    // InternalQualityBtCppParser.g:7897:4: otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis
                    {
                    otherlv_5=(Token)match(input,Satisfices,FOLLOW_26); 

                    				newLeafNode(otherlv_5, grammarAccess.getPreconditionNodeAccess().getSatisficesKeyword_4_0());
                    			
                    otherlv_6=(Token)match(input,LeftParenthesis,FOLLOW_3); 

                    				newLeafNode(otherlv_6, grammarAccess.getPreconditionNodeAccess().getLeftParenthesisKeyword_4_1());
                    			
                    // InternalQualityBtCppParser.g:7905:4: ( ( ruleEString ) )
                    // InternalQualityBtCppParser.g:7906:5: ( ruleEString )
                    {
                    // InternalQualityBtCppParser.g:7906:5: ( ruleEString )
                    // InternalQualityBtCppParser.g:7907:6: ruleEString
                    {

                    						if (current==null) {
                    							current = createModelElement(grammarAccess.getPreconditionNodeRule());
                    						}
                    					

                    						newCompositeNode(grammarAccess.getPreconditionNodeAccess().getSatisficesQualityCrossReference_4_2_0());
                    					
                    pushFollow(FOLLOW_20);
                    ruleEString();

                    state._fsp--;


                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:7921:4: (otherlv_8= Comma ( ( ruleEString ) ) )*
                    loop205:
                    do {
                        int alt205=2;
                        int LA205_0 = input.LA(1);

                        if ( (LA205_0==Comma) ) {
                            alt205=1;
                        }


                        switch (alt205) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:7922:5: otherlv_8= Comma ( ( ruleEString ) )
                    	    {
                    	    otherlv_8=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_8, grammarAccess.getPreconditionNodeAccess().getCommaKeyword_4_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:7926:5: ( ( ruleEString ) )
                    	    // InternalQualityBtCppParser.g:7927:6: ( ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:7927:6: ( ruleEString )
                    	    // InternalQualityBtCppParser.g:7928:7: ruleEString
                    	    {

                    	    							if (current==null) {
                    	    								current = createModelElement(grammarAccess.getPreconditionNodeRule());
                    	    							}
                    	    						

                    	    							newCompositeNode(grammarAccess.getPreconditionNodeAccess().getSatisficesQualityCrossReference_4_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_20);
                    	    ruleEString();

                    	    state._fsp--;


                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop205;
                        }
                    } while (true);

                    otherlv_10=(Token)match(input,RightParenthesis,FOLLOW_33); 

                    				newLeafNode(otherlv_10, grammarAccess.getPreconditionNodeAccess().getRightParenthesisKeyword_4_4());
                    			

                    }
                    break;

            }

            // InternalQualityBtCppParser.g:7948:3: (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )?
            int alt208=2;
            int LA208_0 = input.LA(1);

            if ( (LA208_0==Satisfies) ) {
                alt208=1;
            }
            switch (alt208) {
                case 1 :
                    // InternalQualityBtCppParser.g:7949:4: otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis
                    {
                    otherlv_11=(Token)match(input,Satisfies,FOLLOW_26); 

                    				newLeafNode(otherlv_11, grammarAccess.getPreconditionNodeAccess().getSatisfiesKeyword_5_0());
                    			
                    otherlv_12=(Token)match(input,LeftParenthesis,FOLLOW_3); 

                    				newLeafNode(otherlv_12, grammarAccess.getPreconditionNodeAccess().getLeftParenthesisKeyword_5_1());
                    			
                    // InternalQualityBtCppParser.g:7957:4: ( ( ruleEString ) )
                    // InternalQualityBtCppParser.g:7958:5: ( ruleEString )
                    {
                    // InternalQualityBtCppParser.g:7958:5: ( ruleEString )
                    // InternalQualityBtCppParser.g:7959:6: ruleEString
                    {

                    						if (current==null) {
                    							current = createModelElement(grammarAccess.getPreconditionNodeRule());
                    						}
                    					

                    						newCompositeNode(grammarAccess.getPreconditionNodeAccess().getSatisfiesQualityRequirementCrossReference_5_2_0());
                    					
                    pushFollow(FOLLOW_20);
                    ruleEString();

                    state._fsp--;


                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:7973:4: (otherlv_14= Comma ( ( ruleEString ) ) )*
                    loop207:
                    do {
                        int alt207=2;
                        int LA207_0 = input.LA(1);

                        if ( (LA207_0==Comma) ) {
                            alt207=1;
                        }


                        switch (alt207) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:7974:5: otherlv_14= Comma ( ( ruleEString ) )
                    	    {
                    	    otherlv_14=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_14, grammarAccess.getPreconditionNodeAccess().getCommaKeyword_5_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:7978:5: ( ( ruleEString ) )
                    	    // InternalQualityBtCppParser.g:7979:6: ( ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:7979:6: ( ruleEString )
                    	    // InternalQualityBtCppParser.g:7980:7: ruleEString
                    	    {

                    	    							if (current==null) {
                    	    								current = createModelElement(grammarAccess.getPreconditionNodeRule());
                    	    							}
                    	    						

                    	    							newCompositeNode(grammarAccess.getPreconditionNodeAccess().getSatisfiesQualityRequirementCrossReference_5_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_20);
                    	    ruleEString();

                    	    state._fsp--;


                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop207;
                        }
                    } while (true);

                    otherlv_16=(Token)match(input,RightParenthesis,FOLLOW_34); 

                    				newLeafNode(otherlv_16, grammarAccess.getPreconditionNodeAccess().getRightParenthesisKeyword_5_4());
                    			

                    }
                    break;

            }

            // InternalQualityBtCppParser.g:8000:3: (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )?
            int alt210=2;
            int LA210_0 = input.LA(1);

            if ( (LA210_0==Parameters) ) {
                alt210=1;
            }
            switch (alt210) {
                case 1 :
                    // InternalQualityBtCppParser.g:8001:4: otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket
                    {
                    otherlv_17=(Token)match(input,Parameters,FOLLOW_21); 

                    				newLeafNode(otherlv_17, grammarAccess.getPreconditionNodeAccess().getParametersKeyword_6_0());
                    			
                    otherlv_18=(Token)match(input,LeftCurlyBracket,FOLLOW_3); 

                    				newLeafNode(otherlv_18, grammarAccess.getPreconditionNodeAccess().getLeftCurlyBracketKeyword_6_1());
                    			
                    // InternalQualityBtCppParser.g:8009:4: ( (lv_parameters_19_0= ruleParameter ) )
                    // InternalQualityBtCppParser.g:8010:5: (lv_parameters_19_0= ruleParameter )
                    {
                    // InternalQualityBtCppParser.g:8010:5: (lv_parameters_19_0= ruleParameter )
                    // InternalQualityBtCppParser.g:8011:6: lv_parameters_19_0= ruleParameter
                    {

                    						newCompositeNode(grammarAccess.getPreconditionNodeAccess().getParametersParameterParserRuleCall_6_2_0());
                    					
                    pushFollow(FOLLOW_29);
                    lv_parameters_19_0=ruleParameter();

                    state._fsp--;


                    						if (current==null) {
                    							current = createModelElementForParent(grammarAccess.getPreconditionNodeRule());
                    						}
                    						add(
                    							current,
                    							"parameters",
                    							lv_parameters_19_0,
                    							"org.xtext.btcpp.QualityBtCpp.Parameter");
                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:8028:4: (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )*
                    loop209:
                    do {
                        int alt209=2;
                        int LA209_0 = input.LA(1);

                        if ( (LA209_0==Comma) ) {
                            alt209=1;
                        }


                        switch (alt209) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:8029:5: otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) )
                    	    {
                    	    otherlv_20=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_20, grammarAccess.getPreconditionNodeAccess().getCommaKeyword_6_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:8033:5: ( (lv_parameters_21_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:8034:6: (lv_parameters_21_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:8034:6: (lv_parameters_21_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:8035:7: lv_parameters_21_0= ruleParameter
                    	    {

                    	    							newCompositeNode(grammarAccess.getPreconditionNodeAccess().getParametersParameterParserRuleCall_6_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_29);
                    	    lv_parameters_21_0=ruleParameter();

                    	    state._fsp--;


                    	    							if (current==null) {
                    	    								current = createModelElementForParent(grammarAccess.getPreconditionNodeRule());
                    	    							}
                    	    							add(
                    	    								current,
                    	    								"parameters",
                    	    								lv_parameters_21_0,
                    	    								"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop209;
                        }
                    } while (true);

                    otherlv_22=(Token)match(input,RightCurlyBracket,FOLLOW_35); 

                    				newLeafNode(otherlv_22, grammarAccess.getPreconditionNodeAccess().getRightCurlyBracketKeyword_6_4());
                    			

                    }
                    break;

            }

            otherlv_23=(Token)match(input,Child,FOLLOW_9); 

            			newLeafNode(otherlv_23, grammarAccess.getPreconditionNodeAccess().getChildKeyword_7());
            		
            // InternalQualityBtCppParser.g:8062:3: ( (lv_child_24_0= ruleTreeNode ) )
            // InternalQualityBtCppParser.g:8063:4: (lv_child_24_0= ruleTreeNode )
            {
            // InternalQualityBtCppParser.g:8063:4: (lv_child_24_0= ruleTreeNode )
            // InternalQualityBtCppParser.g:8064:5: lv_child_24_0= ruleTreeNode
            {

            					newCompositeNode(grammarAccess.getPreconditionNodeAccess().getChildTreeNodeParserRuleCall_8_0());
            				
            pushFollow(FOLLOW_30);
            lv_child_24_0=ruleTreeNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getPreconditionNodeRule());
            					}
            					set(
            						current,
            						"child",
            						lv_child_24_0,
            						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            otherlv_25=(Token)match(input,RightCurlyBracket,FOLLOW_2); 

            			newLeafNode(otherlv_25, grammarAccess.getPreconditionNodeAccess().getRightCurlyBracketKeyword_9());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePreconditionNode"


    // $ANTLR start "entryRuleRunOnceNode"
    // InternalQualityBtCppParser.g:8089:1: entryRuleRunOnceNode returns [EObject current=null] : iv_ruleRunOnceNode= ruleRunOnceNode EOF ;
    public final EObject entryRuleRunOnceNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRunOnceNode = null;


        try {
            // InternalQualityBtCppParser.g:8089:52: (iv_ruleRunOnceNode= ruleRunOnceNode EOF )
            // InternalQualityBtCppParser.g:8090:2: iv_ruleRunOnceNode= ruleRunOnceNode EOF
            {
             newCompositeNode(grammarAccess.getRunOnceNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleRunOnceNode=ruleRunOnceNode();

            state._fsp--;

             current =iv_ruleRunOnceNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRunOnceNode"


    // $ANTLR start "ruleRunOnceNode"
    // InternalQualityBtCppParser.g:8096:1: ruleRunOnceNode returns [EObject current=null] : (otherlv_0= RunOnceNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )? (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )? (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )? otherlv_23= Child ( (lv_child_24_0= ruleTreeNode ) ) otherlv_25= RightCurlyBracket ) ;
    public final EObject ruleRunOnceNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_17=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        Token otherlv_23=null;
        Token otherlv_25=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_ID_4_0 = null;

        EObject lv_parameters_19_0 = null;

        EObject lv_parameters_21_0 = null;

        EObject lv_child_24_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:8102:2: ( (otherlv_0= RunOnceNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )? (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )? (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )? otherlv_23= Child ( (lv_child_24_0= ruleTreeNode ) ) otherlv_25= RightCurlyBracket ) )
            // InternalQualityBtCppParser.g:8103:2: (otherlv_0= RunOnceNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )? (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )? (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )? otherlv_23= Child ( (lv_child_24_0= ruleTreeNode ) ) otherlv_25= RightCurlyBracket )
            {
            // InternalQualityBtCppParser.g:8103:2: (otherlv_0= RunOnceNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )? (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )? (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )? otherlv_23= Child ( (lv_child_24_0= ruleTreeNode ) ) otherlv_25= RightCurlyBracket )
            // InternalQualityBtCppParser.g:8104:3: otherlv_0= RunOnceNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )? (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )? (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )? otherlv_23= Child ( (lv_child_24_0= ruleTreeNode ) ) otherlv_25= RightCurlyBracket
            {
            otherlv_0=(Token)match(input,RunOnceNode,FOLLOW_3); 

            			newLeafNode(otherlv_0, grammarAccess.getRunOnceNodeAccess().getRunOnceNodeKeyword_0());
            		
            // InternalQualityBtCppParser.g:8108:3: ( (lv_name_1_0= ruleEString ) )
            // InternalQualityBtCppParser.g:8109:4: (lv_name_1_0= ruleEString )
            {
            // InternalQualityBtCppParser.g:8109:4: (lv_name_1_0= ruleEString )
            // InternalQualityBtCppParser.g:8110:5: lv_name_1_0= ruleEString
            {

            					newCompositeNode(grammarAccess.getRunOnceNodeAccess().getNameEStringParserRuleCall_1_0());
            				
            pushFollow(FOLLOW_21);
            lv_name_1_0=ruleEString();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getRunOnceNodeRule());
            					}
            					set(
            						current,
            						"name",
            						lv_name_1_0,
            						"org.xtext.btcpp.QualityBtCpp.EString");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            otherlv_2=(Token)match(input,LeftCurlyBracket,FOLLOW_31); 

            			newLeafNode(otherlv_2, grammarAccess.getRunOnceNodeAccess().getLeftCurlyBracketKeyword_2());
            		
            // InternalQualityBtCppParser.g:8131:3: (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )?
            int alt211=2;
            int LA211_0 = input.LA(1);

            if ( (LA211_0==ID) ) {
                alt211=1;
            }
            switch (alt211) {
                case 1 :
                    // InternalQualityBtCppParser.g:8132:4: otherlv_3= ID ( (lv_ID_4_0= ruleEString ) )
                    {
                    otherlv_3=(Token)match(input,ID,FOLLOW_3); 

                    				newLeafNode(otherlv_3, grammarAccess.getRunOnceNodeAccess().getIDKeyword_3_0());
                    			
                    // InternalQualityBtCppParser.g:8136:4: ( (lv_ID_4_0= ruleEString ) )
                    // InternalQualityBtCppParser.g:8137:5: (lv_ID_4_0= ruleEString )
                    {
                    // InternalQualityBtCppParser.g:8137:5: (lv_ID_4_0= ruleEString )
                    // InternalQualityBtCppParser.g:8138:6: lv_ID_4_0= ruleEString
                    {

                    						newCompositeNode(grammarAccess.getRunOnceNodeAccess().getIDEStringParserRuleCall_3_1_0());
                    					
                    pushFollow(FOLLOW_32);
                    lv_ID_4_0=ruleEString();

                    state._fsp--;


                    						if (current==null) {
                    							current = createModelElementForParent(grammarAccess.getRunOnceNodeRule());
                    						}
                    						set(
                    							current,
                    							"ID",
                    							lv_ID_4_0,
                    							"org.xtext.btcpp.QualityBtCpp.EString");
                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }


                    }
                    break;

            }

            // InternalQualityBtCppParser.g:8156:3: (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )?
            int alt213=2;
            int LA213_0 = input.LA(1);

            if ( (LA213_0==Satisfices) ) {
                alt213=1;
            }
            switch (alt213) {
                case 1 :
                    // InternalQualityBtCppParser.g:8157:4: otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis
                    {
                    otherlv_5=(Token)match(input,Satisfices,FOLLOW_26); 

                    				newLeafNode(otherlv_5, grammarAccess.getRunOnceNodeAccess().getSatisficesKeyword_4_0());
                    			
                    otherlv_6=(Token)match(input,LeftParenthesis,FOLLOW_3); 

                    				newLeafNode(otherlv_6, grammarAccess.getRunOnceNodeAccess().getLeftParenthesisKeyword_4_1());
                    			
                    // InternalQualityBtCppParser.g:8165:4: ( ( ruleEString ) )
                    // InternalQualityBtCppParser.g:8166:5: ( ruleEString )
                    {
                    // InternalQualityBtCppParser.g:8166:5: ( ruleEString )
                    // InternalQualityBtCppParser.g:8167:6: ruleEString
                    {

                    						if (current==null) {
                    							current = createModelElement(grammarAccess.getRunOnceNodeRule());
                    						}
                    					

                    						newCompositeNode(grammarAccess.getRunOnceNodeAccess().getSatisficesQualityCrossReference_4_2_0());
                    					
                    pushFollow(FOLLOW_20);
                    ruleEString();

                    state._fsp--;


                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:8181:4: (otherlv_8= Comma ( ( ruleEString ) ) )*
                    loop212:
                    do {
                        int alt212=2;
                        int LA212_0 = input.LA(1);

                        if ( (LA212_0==Comma) ) {
                            alt212=1;
                        }


                        switch (alt212) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:8182:5: otherlv_8= Comma ( ( ruleEString ) )
                    	    {
                    	    otherlv_8=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_8, grammarAccess.getRunOnceNodeAccess().getCommaKeyword_4_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:8186:5: ( ( ruleEString ) )
                    	    // InternalQualityBtCppParser.g:8187:6: ( ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:8187:6: ( ruleEString )
                    	    // InternalQualityBtCppParser.g:8188:7: ruleEString
                    	    {

                    	    							if (current==null) {
                    	    								current = createModelElement(grammarAccess.getRunOnceNodeRule());
                    	    							}
                    	    						

                    	    							newCompositeNode(grammarAccess.getRunOnceNodeAccess().getSatisficesQualityCrossReference_4_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_20);
                    	    ruleEString();

                    	    state._fsp--;


                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop212;
                        }
                    } while (true);

                    otherlv_10=(Token)match(input,RightParenthesis,FOLLOW_33); 

                    				newLeafNode(otherlv_10, grammarAccess.getRunOnceNodeAccess().getRightParenthesisKeyword_4_4());
                    			

                    }
                    break;

            }

            // InternalQualityBtCppParser.g:8208:3: (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )?
            int alt215=2;
            int LA215_0 = input.LA(1);

            if ( (LA215_0==Satisfies) ) {
                alt215=1;
            }
            switch (alt215) {
                case 1 :
                    // InternalQualityBtCppParser.g:8209:4: otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis
                    {
                    otherlv_11=(Token)match(input,Satisfies,FOLLOW_26); 

                    				newLeafNode(otherlv_11, grammarAccess.getRunOnceNodeAccess().getSatisfiesKeyword_5_0());
                    			
                    otherlv_12=(Token)match(input,LeftParenthesis,FOLLOW_3); 

                    				newLeafNode(otherlv_12, grammarAccess.getRunOnceNodeAccess().getLeftParenthesisKeyword_5_1());
                    			
                    // InternalQualityBtCppParser.g:8217:4: ( ( ruleEString ) )
                    // InternalQualityBtCppParser.g:8218:5: ( ruleEString )
                    {
                    // InternalQualityBtCppParser.g:8218:5: ( ruleEString )
                    // InternalQualityBtCppParser.g:8219:6: ruleEString
                    {

                    						if (current==null) {
                    							current = createModelElement(grammarAccess.getRunOnceNodeRule());
                    						}
                    					

                    						newCompositeNode(grammarAccess.getRunOnceNodeAccess().getSatisfiesQualityRequirementCrossReference_5_2_0());
                    					
                    pushFollow(FOLLOW_20);
                    ruleEString();

                    state._fsp--;


                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:8233:4: (otherlv_14= Comma ( ( ruleEString ) ) )*
                    loop214:
                    do {
                        int alt214=2;
                        int LA214_0 = input.LA(1);

                        if ( (LA214_0==Comma) ) {
                            alt214=1;
                        }


                        switch (alt214) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:8234:5: otherlv_14= Comma ( ( ruleEString ) )
                    	    {
                    	    otherlv_14=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_14, grammarAccess.getRunOnceNodeAccess().getCommaKeyword_5_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:8238:5: ( ( ruleEString ) )
                    	    // InternalQualityBtCppParser.g:8239:6: ( ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:8239:6: ( ruleEString )
                    	    // InternalQualityBtCppParser.g:8240:7: ruleEString
                    	    {

                    	    							if (current==null) {
                    	    								current = createModelElement(grammarAccess.getRunOnceNodeRule());
                    	    							}
                    	    						

                    	    							newCompositeNode(grammarAccess.getRunOnceNodeAccess().getSatisfiesQualityRequirementCrossReference_5_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_20);
                    	    ruleEString();

                    	    state._fsp--;


                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop214;
                        }
                    } while (true);

                    otherlv_16=(Token)match(input,RightParenthesis,FOLLOW_34); 

                    				newLeafNode(otherlv_16, grammarAccess.getRunOnceNodeAccess().getRightParenthesisKeyword_5_4());
                    			

                    }
                    break;

            }

            // InternalQualityBtCppParser.g:8260:3: (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )?
            int alt217=2;
            int LA217_0 = input.LA(1);

            if ( (LA217_0==Parameters) ) {
                alt217=1;
            }
            switch (alt217) {
                case 1 :
                    // InternalQualityBtCppParser.g:8261:4: otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket
                    {
                    otherlv_17=(Token)match(input,Parameters,FOLLOW_21); 

                    				newLeafNode(otherlv_17, grammarAccess.getRunOnceNodeAccess().getParametersKeyword_6_0());
                    			
                    otherlv_18=(Token)match(input,LeftCurlyBracket,FOLLOW_3); 

                    				newLeafNode(otherlv_18, grammarAccess.getRunOnceNodeAccess().getLeftCurlyBracketKeyword_6_1());
                    			
                    // InternalQualityBtCppParser.g:8269:4: ( (lv_parameters_19_0= ruleParameter ) )
                    // InternalQualityBtCppParser.g:8270:5: (lv_parameters_19_0= ruleParameter )
                    {
                    // InternalQualityBtCppParser.g:8270:5: (lv_parameters_19_0= ruleParameter )
                    // InternalQualityBtCppParser.g:8271:6: lv_parameters_19_0= ruleParameter
                    {

                    						newCompositeNode(grammarAccess.getRunOnceNodeAccess().getParametersParameterParserRuleCall_6_2_0());
                    					
                    pushFollow(FOLLOW_29);
                    lv_parameters_19_0=ruleParameter();

                    state._fsp--;


                    						if (current==null) {
                    							current = createModelElementForParent(grammarAccess.getRunOnceNodeRule());
                    						}
                    						add(
                    							current,
                    							"parameters",
                    							lv_parameters_19_0,
                    							"org.xtext.btcpp.QualityBtCpp.Parameter");
                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:8288:4: (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )*
                    loop216:
                    do {
                        int alt216=2;
                        int LA216_0 = input.LA(1);

                        if ( (LA216_0==Comma) ) {
                            alt216=1;
                        }


                        switch (alt216) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:8289:5: otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) )
                    	    {
                    	    otherlv_20=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_20, grammarAccess.getRunOnceNodeAccess().getCommaKeyword_6_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:8293:5: ( (lv_parameters_21_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:8294:6: (lv_parameters_21_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:8294:6: (lv_parameters_21_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:8295:7: lv_parameters_21_0= ruleParameter
                    	    {

                    	    							newCompositeNode(grammarAccess.getRunOnceNodeAccess().getParametersParameterParserRuleCall_6_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_29);
                    	    lv_parameters_21_0=ruleParameter();

                    	    state._fsp--;


                    	    							if (current==null) {
                    	    								current = createModelElementForParent(grammarAccess.getRunOnceNodeRule());
                    	    							}
                    	    							add(
                    	    								current,
                    	    								"parameters",
                    	    								lv_parameters_21_0,
                    	    								"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop216;
                        }
                    } while (true);

                    otherlv_22=(Token)match(input,RightCurlyBracket,FOLLOW_35); 

                    				newLeafNode(otherlv_22, grammarAccess.getRunOnceNodeAccess().getRightCurlyBracketKeyword_6_4());
                    			

                    }
                    break;

            }

            otherlv_23=(Token)match(input,Child,FOLLOW_9); 

            			newLeafNode(otherlv_23, grammarAccess.getRunOnceNodeAccess().getChildKeyword_7());
            		
            // InternalQualityBtCppParser.g:8322:3: ( (lv_child_24_0= ruleTreeNode ) )
            // InternalQualityBtCppParser.g:8323:4: (lv_child_24_0= ruleTreeNode )
            {
            // InternalQualityBtCppParser.g:8323:4: (lv_child_24_0= ruleTreeNode )
            // InternalQualityBtCppParser.g:8324:5: lv_child_24_0= ruleTreeNode
            {

            					newCompositeNode(grammarAccess.getRunOnceNodeAccess().getChildTreeNodeParserRuleCall_8_0());
            				
            pushFollow(FOLLOW_30);
            lv_child_24_0=ruleTreeNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getRunOnceNodeRule());
            					}
            					set(
            						current,
            						"child",
            						lv_child_24_0,
            						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            otherlv_25=(Token)match(input,RightCurlyBracket,FOLLOW_2); 

            			newLeafNode(otherlv_25, grammarAccess.getRunOnceNodeAccess().getRightCurlyBracketKeyword_9());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRunOnceNode"


    // $ANTLR start "entryRuleLoopNode"
    // InternalQualityBtCppParser.g:8349:1: entryRuleLoopNode returns [EObject current=null] : iv_ruleLoopNode= ruleLoopNode EOF ;
    public final EObject entryRuleLoopNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLoopNode = null;


        try {
            // InternalQualityBtCppParser.g:8349:49: (iv_ruleLoopNode= ruleLoopNode EOF )
            // InternalQualityBtCppParser.g:8350:2: iv_ruleLoopNode= ruleLoopNode EOF
            {
             newCompositeNode(grammarAccess.getLoopNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleLoopNode=ruleLoopNode();

            state._fsp--;

             current =iv_ruleLoopNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLoopNode"


    // $ANTLR start "ruleLoopNode"
    // InternalQualityBtCppParser.g:8356:1: ruleLoopNode returns [EObject current=null] : (otherlv_0= LoopNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )? (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )? (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )? otherlv_23= Child ( (lv_child_24_0= ruleTreeNode ) ) otherlv_25= RightCurlyBracket ) ;
    public final EObject ruleLoopNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_17=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        Token otherlv_23=null;
        Token otherlv_25=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_ID_4_0 = null;

        EObject lv_parameters_19_0 = null;

        EObject lv_parameters_21_0 = null;

        EObject lv_child_24_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:8362:2: ( (otherlv_0= LoopNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )? (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )? (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )? otherlv_23= Child ( (lv_child_24_0= ruleTreeNode ) ) otherlv_25= RightCurlyBracket ) )
            // InternalQualityBtCppParser.g:8363:2: (otherlv_0= LoopNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )? (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )? (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )? otherlv_23= Child ( (lv_child_24_0= ruleTreeNode ) ) otherlv_25= RightCurlyBracket )
            {
            // InternalQualityBtCppParser.g:8363:2: (otherlv_0= LoopNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )? (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )? (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )? otherlv_23= Child ( (lv_child_24_0= ruleTreeNode ) ) otherlv_25= RightCurlyBracket )
            // InternalQualityBtCppParser.g:8364:3: otherlv_0= LoopNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )? (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )? (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )? otherlv_23= Child ( (lv_child_24_0= ruleTreeNode ) ) otherlv_25= RightCurlyBracket
            {
            otherlv_0=(Token)match(input,LoopNode,FOLLOW_3); 

            			newLeafNode(otherlv_0, grammarAccess.getLoopNodeAccess().getLoopNodeKeyword_0());
            		
            // InternalQualityBtCppParser.g:8368:3: ( (lv_name_1_0= ruleEString ) )
            // InternalQualityBtCppParser.g:8369:4: (lv_name_1_0= ruleEString )
            {
            // InternalQualityBtCppParser.g:8369:4: (lv_name_1_0= ruleEString )
            // InternalQualityBtCppParser.g:8370:5: lv_name_1_0= ruleEString
            {

            					newCompositeNode(grammarAccess.getLoopNodeAccess().getNameEStringParserRuleCall_1_0());
            				
            pushFollow(FOLLOW_21);
            lv_name_1_0=ruleEString();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getLoopNodeRule());
            					}
            					set(
            						current,
            						"name",
            						lv_name_1_0,
            						"org.xtext.btcpp.QualityBtCpp.EString");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            otherlv_2=(Token)match(input,LeftCurlyBracket,FOLLOW_31); 

            			newLeafNode(otherlv_2, grammarAccess.getLoopNodeAccess().getLeftCurlyBracketKeyword_2());
            		
            // InternalQualityBtCppParser.g:8391:3: (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )?
            int alt218=2;
            int LA218_0 = input.LA(1);

            if ( (LA218_0==ID) ) {
                alt218=1;
            }
            switch (alt218) {
                case 1 :
                    // InternalQualityBtCppParser.g:8392:4: otherlv_3= ID ( (lv_ID_4_0= ruleEString ) )
                    {
                    otherlv_3=(Token)match(input,ID,FOLLOW_3); 

                    				newLeafNode(otherlv_3, grammarAccess.getLoopNodeAccess().getIDKeyword_3_0());
                    			
                    // InternalQualityBtCppParser.g:8396:4: ( (lv_ID_4_0= ruleEString ) )
                    // InternalQualityBtCppParser.g:8397:5: (lv_ID_4_0= ruleEString )
                    {
                    // InternalQualityBtCppParser.g:8397:5: (lv_ID_4_0= ruleEString )
                    // InternalQualityBtCppParser.g:8398:6: lv_ID_4_0= ruleEString
                    {

                    						newCompositeNode(grammarAccess.getLoopNodeAccess().getIDEStringParserRuleCall_3_1_0());
                    					
                    pushFollow(FOLLOW_32);
                    lv_ID_4_0=ruleEString();

                    state._fsp--;


                    						if (current==null) {
                    							current = createModelElementForParent(grammarAccess.getLoopNodeRule());
                    						}
                    						set(
                    							current,
                    							"ID",
                    							lv_ID_4_0,
                    							"org.xtext.btcpp.QualityBtCpp.EString");
                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }


                    }
                    break;

            }

            // InternalQualityBtCppParser.g:8416:3: (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )?
            int alt220=2;
            int LA220_0 = input.LA(1);

            if ( (LA220_0==Satisfices) ) {
                alt220=1;
            }
            switch (alt220) {
                case 1 :
                    // InternalQualityBtCppParser.g:8417:4: otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis
                    {
                    otherlv_5=(Token)match(input,Satisfices,FOLLOW_26); 

                    				newLeafNode(otherlv_5, grammarAccess.getLoopNodeAccess().getSatisficesKeyword_4_0());
                    			
                    otherlv_6=(Token)match(input,LeftParenthesis,FOLLOW_3); 

                    				newLeafNode(otherlv_6, grammarAccess.getLoopNodeAccess().getLeftParenthesisKeyword_4_1());
                    			
                    // InternalQualityBtCppParser.g:8425:4: ( ( ruleEString ) )
                    // InternalQualityBtCppParser.g:8426:5: ( ruleEString )
                    {
                    // InternalQualityBtCppParser.g:8426:5: ( ruleEString )
                    // InternalQualityBtCppParser.g:8427:6: ruleEString
                    {

                    						if (current==null) {
                    							current = createModelElement(grammarAccess.getLoopNodeRule());
                    						}
                    					

                    						newCompositeNode(grammarAccess.getLoopNodeAccess().getSatisficesQualityCrossReference_4_2_0());
                    					
                    pushFollow(FOLLOW_20);
                    ruleEString();

                    state._fsp--;


                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:8441:4: (otherlv_8= Comma ( ( ruleEString ) ) )*
                    loop219:
                    do {
                        int alt219=2;
                        int LA219_0 = input.LA(1);

                        if ( (LA219_0==Comma) ) {
                            alt219=1;
                        }


                        switch (alt219) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:8442:5: otherlv_8= Comma ( ( ruleEString ) )
                    	    {
                    	    otherlv_8=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_8, grammarAccess.getLoopNodeAccess().getCommaKeyword_4_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:8446:5: ( ( ruleEString ) )
                    	    // InternalQualityBtCppParser.g:8447:6: ( ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:8447:6: ( ruleEString )
                    	    // InternalQualityBtCppParser.g:8448:7: ruleEString
                    	    {

                    	    							if (current==null) {
                    	    								current = createModelElement(grammarAccess.getLoopNodeRule());
                    	    							}
                    	    						

                    	    							newCompositeNode(grammarAccess.getLoopNodeAccess().getSatisficesQualityCrossReference_4_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_20);
                    	    ruleEString();

                    	    state._fsp--;


                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop219;
                        }
                    } while (true);

                    otherlv_10=(Token)match(input,RightParenthesis,FOLLOW_33); 

                    				newLeafNode(otherlv_10, grammarAccess.getLoopNodeAccess().getRightParenthesisKeyword_4_4());
                    			

                    }
                    break;

            }

            // InternalQualityBtCppParser.g:8468:3: (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )?
            int alt222=2;
            int LA222_0 = input.LA(1);

            if ( (LA222_0==Satisfies) ) {
                alt222=1;
            }
            switch (alt222) {
                case 1 :
                    // InternalQualityBtCppParser.g:8469:4: otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis
                    {
                    otherlv_11=(Token)match(input,Satisfies,FOLLOW_26); 

                    				newLeafNode(otherlv_11, grammarAccess.getLoopNodeAccess().getSatisfiesKeyword_5_0());
                    			
                    otherlv_12=(Token)match(input,LeftParenthesis,FOLLOW_3); 

                    				newLeafNode(otherlv_12, grammarAccess.getLoopNodeAccess().getLeftParenthesisKeyword_5_1());
                    			
                    // InternalQualityBtCppParser.g:8477:4: ( ( ruleEString ) )
                    // InternalQualityBtCppParser.g:8478:5: ( ruleEString )
                    {
                    // InternalQualityBtCppParser.g:8478:5: ( ruleEString )
                    // InternalQualityBtCppParser.g:8479:6: ruleEString
                    {

                    						if (current==null) {
                    							current = createModelElement(grammarAccess.getLoopNodeRule());
                    						}
                    					

                    						newCompositeNode(grammarAccess.getLoopNodeAccess().getSatisfiesQualityRequirementCrossReference_5_2_0());
                    					
                    pushFollow(FOLLOW_20);
                    ruleEString();

                    state._fsp--;


                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:8493:4: (otherlv_14= Comma ( ( ruleEString ) ) )*
                    loop221:
                    do {
                        int alt221=2;
                        int LA221_0 = input.LA(1);

                        if ( (LA221_0==Comma) ) {
                            alt221=1;
                        }


                        switch (alt221) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:8494:5: otherlv_14= Comma ( ( ruleEString ) )
                    	    {
                    	    otherlv_14=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_14, grammarAccess.getLoopNodeAccess().getCommaKeyword_5_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:8498:5: ( ( ruleEString ) )
                    	    // InternalQualityBtCppParser.g:8499:6: ( ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:8499:6: ( ruleEString )
                    	    // InternalQualityBtCppParser.g:8500:7: ruleEString
                    	    {

                    	    							if (current==null) {
                    	    								current = createModelElement(grammarAccess.getLoopNodeRule());
                    	    							}
                    	    						

                    	    							newCompositeNode(grammarAccess.getLoopNodeAccess().getSatisfiesQualityRequirementCrossReference_5_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_20);
                    	    ruleEString();

                    	    state._fsp--;


                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop221;
                        }
                    } while (true);

                    otherlv_16=(Token)match(input,RightParenthesis,FOLLOW_34); 

                    				newLeafNode(otherlv_16, grammarAccess.getLoopNodeAccess().getRightParenthesisKeyword_5_4());
                    			

                    }
                    break;

            }

            // InternalQualityBtCppParser.g:8520:3: (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )?
            int alt224=2;
            int LA224_0 = input.LA(1);

            if ( (LA224_0==Parameters) ) {
                alt224=1;
            }
            switch (alt224) {
                case 1 :
                    // InternalQualityBtCppParser.g:8521:4: otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket
                    {
                    otherlv_17=(Token)match(input,Parameters,FOLLOW_21); 

                    				newLeafNode(otherlv_17, grammarAccess.getLoopNodeAccess().getParametersKeyword_6_0());
                    			
                    otherlv_18=(Token)match(input,LeftCurlyBracket,FOLLOW_3); 

                    				newLeafNode(otherlv_18, grammarAccess.getLoopNodeAccess().getLeftCurlyBracketKeyword_6_1());
                    			
                    // InternalQualityBtCppParser.g:8529:4: ( (lv_parameters_19_0= ruleParameter ) )
                    // InternalQualityBtCppParser.g:8530:5: (lv_parameters_19_0= ruleParameter )
                    {
                    // InternalQualityBtCppParser.g:8530:5: (lv_parameters_19_0= ruleParameter )
                    // InternalQualityBtCppParser.g:8531:6: lv_parameters_19_0= ruleParameter
                    {

                    						newCompositeNode(grammarAccess.getLoopNodeAccess().getParametersParameterParserRuleCall_6_2_0());
                    					
                    pushFollow(FOLLOW_29);
                    lv_parameters_19_0=ruleParameter();

                    state._fsp--;


                    						if (current==null) {
                    							current = createModelElementForParent(grammarAccess.getLoopNodeRule());
                    						}
                    						add(
                    							current,
                    							"parameters",
                    							lv_parameters_19_0,
                    							"org.xtext.btcpp.QualityBtCpp.Parameter");
                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:8548:4: (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )*
                    loop223:
                    do {
                        int alt223=2;
                        int LA223_0 = input.LA(1);

                        if ( (LA223_0==Comma) ) {
                            alt223=1;
                        }


                        switch (alt223) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:8549:5: otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) )
                    	    {
                    	    otherlv_20=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_20, grammarAccess.getLoopNodeAccess().getCommaKeyword_6_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:8553:5: ( (lv_parameters_21_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:8554:6: (lv_parameters_21_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:8554:6: (lv_parameters_21_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:8555:7: lv_parameters_21_0= ruleParameter
                    	    {

                    	    							newCompositeNode(grammarAccess.getLoopNodeAccess().getParametersParameterParserRuleCall_6_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_29);
                    	    lv_parameters_21_0=ruleParameter();

                    	    state._fsp--;


                    	    							if (current==null) {
                    	    								current = createModelElementForParent(grammarAccess.getLoopNodeRule());
                    	    							}
                    	    							add(
                    	    								current,
                    	    								"parameters",
                    	    								lv_parameters_21_0,
                    	    								"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop223;
                        }
                    } while (true);

                    otherlv_22=(Token)match(input,RightCurlyBracket,FOLLOW_35); 

                    				newLeafNode(otherlv_22, grammarAccess.getLoopNodeAccess().getRightCurlyBracketKeyword_6_4());
                    			

                    }
                    break;

            }

            otherlv_23=(Token)match(input,Child,FOLLOW_9); 

            			newLeafNode(otherlv_23, grammarAccess.getLoopNodeAccess().getChildKeyword_7());
            		
            // InternalQualityBtCppParser.g:8582:3: ( (lv_child_24_0= ruleTreeNode ) )
            // InternalQualityBtCppParser.g:8583:4: (lv_child_24_0= ruleTreeNode )
            {
            // InternalQualityBtCppParser.g:8583:4: (lv_child_24_0= ruleTreeNode )
            // InternalQualityBtCppParser.g:8584:5: lv_child_24_0= ruleTreeNode
            {

            					newCompositeNode(grammarAccess.getLoopNodeAccess().getChildTreeNodeParserRuleCall_8_0());
            				
            pushFollow(FOLLOW_30);
            lv_child_24_0=ruleTreeNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getLoopNodeRule());
            					}
            					set(
            						current,
            						"child",
            						lv_child_24_0,
            						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            otherlv_25=(Token)match(input,RightCurlyBracket,FOLLOW_2); 

            			newLeafNode(otherlv_25, grammarAccess.getLoopNodeAccess().getRightCurlyBracketKeyword_9());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLoopNode"


    // $ANTLR start "entryRuleConsumeQueueNode"
    // InternalQualityBtCppParser.g:8609:1: entryRuleConsumeQueueNode returns [EObject current=null] : iv_ruleConsumeQueueNode= ruleConsumeQueueNode EOF ;
    public final EObject entryRuleConsumeQueueNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConsumeQueueNode = null;


        try {
            // InternalQualityBtCppParser.g:8609:57: (iv_ruleConsumeQueueNode= ruleConsumeQueueNode EOF )
            // InternalQualityBtCppParser.g:8610:2: iv_ruleConsumeQueueNode= ruleConsumeQueueNode EOF
            {
             newCompositeNode(grammarAccess.getConsumeQueueNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleConsumeQueueNode=ruleConsumeQueueNode();

            state._fsp--;

             current =iv_ruleConsumeQueueNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConsumeQueueNode"


    // $ANTLR start "ruleConsumeQueueNode"
    // InternalQualityBtCppParser.g:8616:1: ruleConsumeQueueNode returns [EObject current=null] : (otherlv_0= ConsumeQueueNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )? (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )? (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )? otherlv_23= Child ( (lv_child_24_0= ruleTreeNode ) ) otherlv_25= RightCurlyBracket ) ;
    public final EObject ruleConsumeQueueNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_17=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        Token otherlv_23=null;
        Token otherlv_25=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_ID_4_0 = null;

        EObject lv_parameters_19_0 = null;

        EObject lv_parameters_21_0 = null;

        EObject lv_child_24_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:8622:2: ( (otherlv_0= ConsumeQueueNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )? (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )? (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )? otherlv_23= Child ( (lv_child_24_0= ruleTreeNode ) ) otherlv_25= RightCurlyBracket ) )
            // InternalQualityBtCppParser.g:8623:2: (otherlv_0= ConsumeQueueNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )? (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )? (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )? otherlv_23= Child ( (lv_child_24_0= ruleTreeNode ) ) otherlv_25= RightCurlyBracket )
            {
            // InternalQualityBtCppParser.g:8623:2: (otherlv_0= ConsumeQueueNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )? (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )? (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )? otherlv_23= Child ( (lv_child_24_0= ruleTreeNode ) ) otherlv_25= RightCurlyBracket )
            // InternalQualityBtCppParser.g:8624:3: otherlv_0= ConsumeQueueNode ( (lv_name_1_0= ruleEString ) ) otherlv_2= LeftCurlyBracket (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )? (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )? (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )? (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )? otherlv_23= Child ( (lv_child_24_0= ruleTreeNode ) ) otherlv_25= RightCurlyBracket
            {
            otherlv_0=(Token)match(input,ConsumeQueueNode,FOLLOW_3); 

            			newLeafNode(otherlv_0, grammarAccess.getConsumeQueueNodeAccess().getConsumeQueueNodeKeyword_0());
            		
            // InternalQualityBtCppParser.g:8628:3: ( (lv_name_1_0= ruleEString ) )
            // InternalQualityBtCppParser.g:8629:4: (lv_name_1_0= ruleEString )
            {
            // InternalQualityBtCppParser.g:8629:4: (lv_name_1_0= ruleEString )
            // InternalQualityBtCppParser.g:8630:5: lv_name_1_0= ruleEString
            {

            					newCompositeNode(grammarAccess.getConsumeQueueNodeAccess().getNameEStringParserRuleCall_1_0());
            				
            pushFollow(FOLLOW_21);
            lv_name_1_0=ruleEString();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getConsumeQueueNodeRule());
            					}
            					set(
            						current,
            						"name",
            						lv_name_1_0,
            						"org.xtext.btcpp.QualityBtCpp.EString");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            otherlv_2=(Token)match(input,LeftCurlyBracket,FOLLOW_31); 

            			newLeafNode(otherlv_2, grammarAccess.getConsumeQueueNodeAccess().getLeftCurlyBracketKeyword_2());
            		
            // InternalQualityBtCppParser.g:8651:3: (otherlv_3= ID ( (lv_ID_4_0= ruleEString ) ) )?
            int alt225=2;
            int LA225_0 = input.LA(1);

            if ( (LA225_0==ID) ) {
                alt225=1;
            }
            switch (alt225) {
                case 1 :
                    // InternalQualityBtCppParser.g:8652:4: otherlv_3= ID ( (lv_ID_4_0= ruleEString ) )
                    {
                    otherlv_3=(Token)match(input,ID,FOLLOW_3); 

                    				newLeafNode(otherlv_3, grammarAccess.getConsumeQueueNodeAccess().getIDKeyword_3_0());
                    			
                    // InternalQualityBtCppParser.g:8656:4: ( (lv_ID_4_0= ruleEString ) )
                    // InternalQualityBtCppParser.g:8657:5: (lv_ID_4_0= ruleEString )
                    {
                    // InternalQualityBtCppParser.g:8657:5: (lv_ID_4_0= ruleEString )
                    // InternalQualityBtCppParser.g:8658:6: lv_ID_4_0= ruleEString
                    {

                    						newCompositeNode(grammarAccess.getConsumeQueueNodeAccess().getIDEStringParserRuleCall_3_1_0());
                    					
                    pushFollow(FOLLOW_32);
                    lv_ID_4_0=ruleEString();

                    state._fsp--;


                    						if (current==null) {
                    							current = createModelElementForParent(grammarAccess.getConsumeQueueNodeRule());
                    						}
                    						set(
                    							current,
                    							"ID",
                    							lv_ID_4_0,
                    							"org.xtext.btcpp.QualityBtCpp.EString");
                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }


                    }
                    break;

            }

            // InternalQualityBtCppParser.g:8676:3: (otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis )?
            int alt227=2;
            int LA227_0 = input.LA(1);

            if ( (LA227_0==Satisfices) ) {
                alt227=1;
            }
            switch (alt227) {
                case 1 :
                    // InternalQualityBtCppParser.g:8677:4: otherlv_5= Satisfices otherlv_6= LeftParenthesis ( ( ruleEString ) ) (otherlv_8= Comma ( ( ruleEString ) ) )* otherlv_10= RightParenthesis
                    {
                    otherlv_5=(Token)match(input,Satisfices,FOLLOW_26); 

                    				newLeafNode(otherlv_5, grammarAccess.getConsumeQueueNodeAccess().getSatisficesKeyword_4_0());
                    			
                    otherlv_6=(Token)match(input,LeftParenthesis,FOLLOW_3); 

                    				newLeafNode(otherlv_6, grammarAccess.getConsumeQueueNodeAccess().getLeftParenthesisKeyword_4_1());
                    			
                    // InternalQualityBtCppParser.g:8685:4: ( ( ruleEString ) )
                    // InternalQualityBtCppParser.g:8686:5: ( ruleEString )
                    {
                    // InternalQualityBtCppParser.g:8686:5: ( ruleEString )
                    // InternalQualityBtCppParser.g:8687:6: ruleEString
                    {

                    						if (current==null) {
                    							current = createModelElement(grammarAccess.getConsumeQueueNodeRule());
                    						}
                    					

                    						newCompositeNode(grammarAccess.getConsumeQueueNodeAccess().getSatisficesQualityCrossReference_4_2_0());
                    					
                    pushFollow(FOLLOW_20);
                    ruleEString();

                    state._fsp--;


                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:8701:4: (otherlv_8= Comma ( ( ruleEString ) ) )*
                    loop226:
                    do {
                        int alt226=2;
                        int LA226_0 = input.LA(1);

                        if ( (LA226_0==Comma) ) {
                            alt226=1;
                        }


                        switch (alt226) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:8702:5: otherlv_8= Comma ( ( ruleEString ) )
                    	    {
                    	    otherlv_8=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_8, grammarAccess.getConsumeQueueNodeAccess().getCommaKeyword_4_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:8706:5: ( ( ruleEString ) )
                    	    // InternalQualityBtCppParser.g:8707:6: ( ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:8707:6: ( ruleEString )
                    	    // InternalQualityBtCppParser.g:8708:7: ruleEString
                    	    {

                    	    							if (current==null) {
                    	    								current = createModelElement(grammarAccess.getConsumeQueueNodeRule());
                    	    							}
                    	    						

                    	    							newCompositeNode(grammarAccess.getConsumeQueueNodeAccess().getSatisficesQualityCrossReference_4_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_20);
                    	    ruleEString();

                    	    state._fsp--;


                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop226;
                        }
                    } while (true);

                    otherlv_10=(Token)match(input,RightParenthesis,FOLLOW_33); 

                    				newLeafNode(otherlv_10, grammarAccess.getConsumeQueueNodeAccess().getRightParenthesisKeyword_4_4());
                    			

                    }
                    break;

            }

            // InternalQualityBtCppParser.g:8728:3: (otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis )?
            int alt229=2;
            int LA229_0 = input.LA(1);

            if ( (LA229_0==Satisfies) ) {
                alt229=1;
            }
            switch (alt229) {
                case 1 :
                    // InternalQualityBtCppParser.g:8729:4: otherlv_11= Satisfies otherlv_12= LeftParenthesis ( ( ruleEString ) ) (otherlv_14= Comma ( ( ruleEString ) ) )* otherlv_16= RightParenthesis
                    {
                    otherlv_11=(Token)match(input,Satisfies,FOLLOW_26); 

                    				newLeafNode(otherlv_11, grammarAccess.getConsumeQueueNodeAccess().getSatisfiesKeyword_5_0());
                    			
                    otherlv_12=(Token)match(input,LeftParenthesis,FOLLOW_3); 

                    				newLeafNode(otherlv_12, grammarAccess.getConsumeQueueNodeAccess().getLeftParenthesisKeyword_5_1());
                    			
                    // InternalQualityBtCppParser.g:8737:4: ( ( ruleEString ) )
                    // InternalQualityBtCppParser.g:8738:5: ( ruleEString )
                    {
                    // InternalQualityBtCppParser.g:8738:5: ( ruleEString )
                    // InternalQualityBtCppParser.g:8739:6: ruleEString
                    {

                    						if (current==null) {
                    							current = createModelElement(grammarAccess.getConsumeQueueNodeRule());
                    						}
                    					

                    						newCompositeNode(grammarAccess.getConsumeQueueNodeAccess().getSatisfiesQualityRequirementCrossReference_5_2_0());
                    					
                    pushFollow(FOLLOW_20);
                    ruleEString();

                    state._fsp--;


                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:8753:4: (otherlv_14= Comma ( ( ruleEString ) ) )*
                    loop228:
                    do {
                        int alt228=2;
                        int LA228_0 = input.LA(1);

                        if ( (LA228_0==Comma) ) {
                            alt228=1;
                        }


                        switch (alt228) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:8754:5: otherlv_14= Comma ( ( ruleEString ) )
                    	    {
                    	    otherlv_14=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_14, grammarAccess.getConsumeQueueNodeAccess().getCommaKeyword_5_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:8758:5: ( ( ruleEString ) )
                    	    // InternalQualityBtCppParser.g:8759:6: ( ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:8759:6: ( ruleEString )
                    	    // InternalQualityBtCppParser.g:8760:7: ruleEString
                    	    {

                    	    							if (current==null) {
                    	    								current = createModelElement(grammarAccess.getConsumeQueueNodeRule());
                    	    							}
                    	    						

                    	    							newCompositeNode(grammarAccess.getConsumeQueueNodeAccess().getSatisfiesQualityRequirementCrossReference_5_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_20);
                    	    ruleEString();

                    	    state._fsp--;


                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop228;
                        }
                    } while (true);

                    otherlv_16=(Token)match(input,RightParenthesis,FOLLOW_34); 

                    				newLeafNode(otherlv_16, grammarAccess.getConsumeQueueNodeAccess().getRightParenthesisKeyword_5_4());
                    			

                    }
                    break;

            }

            // InternalQualityBtCppParser.g:8780:3: (otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket )?
            int alt231=2;
            int LA231_0 = input.LA(1);

            if ( (LA231_0==Parameters) ) {
                alt231=1;
            }
            switch (alt231) {
                case 1 :
                    // InternalQualityBtCppParser.g:8781:4: otherlv_17= Parameters otherlv_18= LeftCurlyBracket ( (lv_parameters_19_0= ruleParameter ) ) (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )* otherlv_22= RightCurlyBracket
                    {
                    otherlv_17=(Token)match(input,Parameters,FOLLOW_21); 

                    				newLeafNode(otherlv_17, grammarAccess.getConsumeQueueNodeAccess().getParametersKeyword_6_0());
                    			
                    otherlv_18=(Token)match(input,LeftCurlyBracket,FOLLOW_3); 

                    				newLeafNode(otherlv_18, grammarAccess.getConsumeQueueNodeAccess().getLeftCurlyBracketKeyword_6_1());
                    			
                    // InternalQualityBtCppParser.g:8789:4: ( (lv_parameters_19_0= ruleParameter ) )
                    // InternalQualityBtCppParser.g:8790:5: (lv_parameters_19_0= ruleParameter )
                    {
                    // InternalQualityBtCppParser.g:8790:5: (lv_parameters_19_0= ruleParameter )
                    // InternalQualityBtCppParser.g:8791:6: lv_parameters_19_0= ruleParameter
                    {

                    						newCompositeNode(grammarAccess.getConsumeQueueNodeAccess().getParametersParameterParserRuleCall_6_2_0());
                    					
                    pushFollow(FOLLOW_29);
                    lv_parameters_19_0=ruleParameter();

                    state._fsp--;


                    						if (current==null) {
                    							current = createModelElementForParent(grammarAccess.getConsumeQueueNodeRule());
                    						}
                    						add(
                    							current,
                    							"parameters",
                    							lv_parameters_19_0,
                    							"org.xtext.btcpp.QualityBtCpp.Parameter");
                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:8808:4: (otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) ) )*
                    loop230:
                    do {
                        int alt230=2;
                        int LA230_0 = input.LA(1);

                        if ( (LA230_0==Comma) ) {
                            alt230=1;
                        }


                        switch (alt230) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:8809:5: otherlv_20= Comma ( (lv_parameters_21_0= ruleParameter ) )
                    	    {
                    	    otherlv_20=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_20, grammarAccess.getConsumeQueueNodeAccess().getCommaKeyword_6_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:8813:5: ( (lv_parameters_21_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:8814:6: (lv_parameters_21_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:8814:6: (lv_parameters_21_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:8815:7: lv_parameters_21_0= ruleParameter
                    	    {

                    	    							newCompositeNode(grammarAccess.getConsumeQueueNodeAccess().getParametersParameterParserRuleCall_6_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_29);
                    	    lv_parameters_21_0=ruleParameter();

                    	    state._fsp--;


                    	    							if (current==null) {
                    	    								current = createModelElementForParent(grammarAccess.getConsumeQueueNodeRule());
                    	    							}
                    	    							add(
                    	    								current,
                    	    								"parameters",
                    	    								lv_parameters_21_0,
                    	    								"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop230;
                        }
                    } while (true);

                    otherlv_22=(Token)match(input,RightCurlyBracket,FOLLOW_35); 

                    				newLeafNode(otherlv_22, grammarAccess.getConsumeQueueNodeAccess().getRightCurlyBracketKeyword_6_4());
                    			

                    }
                    break;

            }

            otherlv_23=(Token)match(input,Child,FOLLOW_9); 

            			newLeafNode(otherlv_23, grammarAccess.getConsumeQueueNodeAccess().getChildKeyword_7());
            		
            // InternalQualityBtCppParser.g:8842:3: ( (lv_child_24_0= ruleTreeNode ) )
            // InternalQualityBtCppParser.g:8843:4: (lv_child_24_0= ruleTreeNode )
            {
            // InternalQualityBtCppParser.g:8843:4: (lv_child_24_0= ruleTreeNode )
            // InternalQualityBtCppParser.g:8844:5: lv_child_24_0= ruleTreeNode
            {

            					newCompositeNode(grammarAccess.getConsumeQueueNodeAccess().getChildTreeNodeParserRuleCall_8_0());
            				
            pushFollow(FOLLOW_30);
            lv_child_24_0=ruleTreeNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getConsumeQueueNodeRule());
            					}
            					set(
            						current,
            						"child",
            						lv_child_24_0,
            						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            otherlv_25=(Token)match(input,RightCurlyBracket,FOLLOW_2); 

            			newLeafNode(otherlv_25, grammarAccess.getConsumeQueueNodeAccess().getRightCurlyBracketKeyword_9());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConsumeQueueNode"


    // $ANTLR start "entryRuleTestNode"
    // InternalQualityBtCppParser.g:8869:1: entryRuleTestNode returns [EObject current=null] : iv_ruleTestNode= ruleTestNode EOF ;
    public final EObject entryRuleTestNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTestNode = null;


        try {
            // InternalQualityBtCppParser.g:8869:49: (iv_ruleTestNode= ruleTestNode EOF )
            // InternalQualityBtCppParser.g:8870:2: iv_ruleTestNode= ruleTestNode EOF
            {
             newCompositeNode(grammarAccess.getTestNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleTestNode=ruleTestNode();

            state._fsp--;

             current =iv_ruleTestNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTestNode"


    // $ANTLR start "ruleTestNode"
    // InternalQualityBtCppParser.g:8876:1: ruleTestNode returns [EObject current=null] : ( () otherlv_1= TestNode ( (lv_name_2_0= ruleEString ) ) otherlv_3= LeftCurlyBracket (otherlv_4= ID ( (lv_ID_5_0= ruleEString ) ) )? (otherlv_6= Satisfices otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis )? (otherlv_12= Satisfies otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis )? (otherlv_18= Parameters otherlv_19= LeftCurlyBracket ( (lv_parameters_20_0= ruleParameter ) ) (otherlv_21= Comma ( (lv_parameters_22_0= ruleParameter ) ) )* otherlv_23= RightCurlyBracket )? otherlv_24= RightCurlyBracket ) ;
    public final EObject ruleTestNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_18=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token otherlv_23=null;
        Token otherlv_24=null;
        AntlrDatatypeRuleToken lv_name_2_0 = null;

        AntlrDatatypeRuleToken lv_ID_5_0 = null;

        EObject lv_parameters_20_0 = null;

        EObject lv_parameters_22_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:8882:2: ( ( () otherlv_1= TestNode ( (lv_name_2_0= ruleEString ) ) otherlv_3= LeftCurlyBracket (otherlv_4= ID ( (lv_ID_5_0= ruleEString ) ) )? (otherlv_6= Satisfices otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis )? (otherlv_12= Satisfies otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis )? (otherlv_18= Parameters otherlv_19= LeftCurlyBracket ( (lv_parameters_20_0= ruleParameter ) ) (otherlv_21= Comma ( (lv_parameters_22_0= ruleParameter ) ) )* otherlv_23= RightCurlyBracket )? otherlv_24= RightCurlyBracket ) )
            // InternalQualityBtCppParser.g:8883:2: ( () otherlv_1= TestNode ( (lv_name_2_0= ruleEString ) ) otherlv_3= LeftCurlyBracket (otherlv_4= ID ( (lv_ID_5_0= ruleEString ) ) )? (otherlv_6= Satisfices otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis )? (otherlv_12= Satisfies otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis )? (otherlv_18= Parameters otherlv_19= LeftCurlyBracket ( (lv_parameters_20_0= ruleParameter ) ) (otherlv_21= Comma ( (lv_parameters_22_0= ruleParameter ) ) )* otherlv_23= RightCurlyBracket )? otherlv_24= RightCurlyBracket )
            {
            // InternalQualityBtCppParser.g:8883:2: ( () otherlv_1= TestNode ( (lv_name_2_0= ruleEString ) ) otherlv_3= LeftCurlyBracket (otherlv_4= ID ( (lv_ID_5_0= ruleEString ) ) )? (otherlv_6= Satisfices otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis )? (otherlv_12= Satisfies otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis )? (otherlv_18= Parameters otherlv_19= LeftCurlyBracket ( (lv_parameters_20_0= ruleParameter ) ) (otherlv_21= Comma ( (lv_parameters_22_0= ruleParameter ) ) )* otherlv_23= RightCurlyBracket )? otherlv_24= RightCurlyBracket )
            // InternalQualityBtCppParser.g:8884:3: () otherlv_1= TestNode ( (lv_name_2_0= ruleEString ) ) otherlv_3= LeftCurlyBracket (otherlv_4= ID ( (lv_ID_5_0= ruleEString ) ) )? (otherlv_6= Satisfices otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis )? (otherlv_12= Satisfies otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis )? (otherlv_18= Parameters otherlv_19= LeftCurlyBracket ( (lv_parameters_20_0= ruleParameter ) ) (otherlv_21= Comma ( (lv_parameters_22_0= ruleParameter ) ) )* otherlv_23= RightCurlyBracket )? otherlv_24= RightCurlyBracket
            {
            // InternalQualityBtCppParser.g:8884:3: ()
            // InternalQualityBtCppParser.g:8885:4: 
            {

            				current = forceCreateModelElement(
            					grammarAccess.getTestNodeAccess().getTestNodeAction_0(),
            					current);
            			

            }

            otherlv_1=(Token)match(input,TestNode,FOLLOW_3); 

            			newLeafNode(otherlv_1, grammarAccess.getTestNodeAccess().getTestNodeKeyword_1());
            		
            // InternalQualityBtCppParser.g:8895:3: ( (lv_name_2_0= ruleEString ) )
            // InternalQualityBtCppParser.g:8896:4: (lv_name_2_0= ruleEString )
            {
            // InternalQualityBtCppParser.g:8896:4: (lv_name_2_0= ruleEString )
            // InternalQualityBtCppParser.g:8897:5: lv_name_2_0= ruleEString
            {

            					newCompositeNode(grammarAccess.getTestNodeAccess().getNameEStringParserRuleCall_2_0());
            				
            pushFollow(FOLLOW_21);
            lv_name_2_0=ruleEString();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getTestNodeRule());
            					}
            					set(
            						current,
            						"name",
            						lv_name_2_0,
            						"org.xtext.btcpp.QualityBtCpp.EString");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            otherlv_3=(Token)match(input,LeftCurlyBracket,FOLLOW_45); 

            			newLeafNode(otherlv_3, grammarAccess.getTestNodeAccess().getLeftCurlyBracketKeyword_3());
            		
            // InternalQualityBtCppParser.g:8918:3: (otherlv_4= ID ( (lv_ID_5_0= ruleEString ) ) )?
            int alt232=2;
            int LA232_0 = input.LA(1);

            if ( (LA232_0==ID) ) {
                alt232=1;
            }
            switch (alt232) {
                case 1 :
                    // InternalQualityBtCppParser.g:8919:4: otherlv_4= ID ( (lv_ID_5_0= ruleEString ) )
                    {
                    otherlv_4=(Token)match(input,ID,FOLLOW_3); 

                    				newLeafNode(otherlv_4, grammarAccess.getTestNodeAccess().getIDKeyword_4_0());
                    			
                    // InternalQualityBtCppParser.g:8923:4: ( (lv_ID_5_0= ruleEString ) )
                    // InternalQualityBtCppParser.g:8924:5: (lv_ID_5_0= ruleEString )
                    {
                    // InternalQualityBtCppParser.g:8924:5: (lv_ID_5_0= ruleEString )
                    // InternalQualityBtCppParser.g:8925:6: lv_ID_5_0= ruleEString
                    {

                    						newCompositeNode(grammarAccess.getTestNodeAccess().getIDEStringParserRuleCall_4_1_0());
                    					
                    pushFollow(FOLLOW_25);
                    lv_ID_5_0=ruleEString();

                    state._fsp--;


                    						if (current==null) {
                    							current = createModelElementForParent(grammarAccess.getTestNodeRule());
                    						}
                    						set(
                    							current,
                    							"ID",
                    							lv_ID_5_0,
                    							"org.xtext.btcpp.QualityBtCpp.EString");
                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }


                    }
                    break;

            }

            // InternalQualityBtCppParser.g:8943:3: (otherlv_6= Satisfices otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis )?
            int alt234=2;
            int LA234_0 = input.LA(1);

            if ( (LA234_0==Satisfices) ) {
                alt234=1;
            }
            switch (alt234) {
                case 1 :
                    // InternalQualityBtCppParser.g:8944:4: otherlv_6= Satisfices otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis
                    {
                    otherlv_6=(Token)match(input,Satisfices,FOLLOW_26); 

                    				newLeafNode(otherlv_6, grammarAccess.getTestNodeAccess().getSatisficesKeyword_5_0());
                    			
                    otherlv_7=(Token)match(input,LeftParenthesis,FOLLOW_3); 

                    				newLeafNode(otherlv_7, grammarAccess.getTestNodeAccess().getLeftParenthesisKeyword_5_1());
                    			
                    // InternalQualityBtCppParser.g:8952:4: ( ( ruleEString ) )
                    // InternalQualityBtCppParser.g:8953:5: ( ruleEString )
                    {
                    // InternalQualityBtCppParser.g:8953:5: ( ruleEString )
                    // InternalQualityBtCppParser.g:8954:6: ruleEString
                    {

                    						if (current==null) {
                    							current = createModelElement(grammarAccess.getTestNodeRule());
                    						}
                    					

                    						newCompositeNode(grammarAccess.getTestNodeAccess().getSatisficesQualityCrossReference_5_2_0());
                    					
                    pushFollow(FOLLOW_20);
                    ruleEString();

                    state._fsp--;


                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:8968:4: (otherlv_9= Comma ( ( ruleEString ) ) )*
                    loop233:
                    do {
                        int alt233=2;
                        int LA233_0 = input.LA(1);

                        if ( (LA233_0==Comma) ) {
                            alt233=1;
                        }


                        switch (alt233) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:8969:5: otherlv_9= Comma ( ( ruleEString ) )
                    	    {
                    	    otherlv_9=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_9, grammarAccess.getTestNodeAccess().getCommaKeyword_5_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:8973:5: ( ( ruleEString ) )
                    	    // InternalQualityBtCppParser.g:8974:6: ( ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:8974:6: ( ruleEString )
                    	    // InternalQualityBtCppParser.g:8975:7: ruleEString
                    	    {

                    	    							if (current==null) {
                    	    								current = createModelElement(grammarAccess.getTestNodeRule());
                    	    							}
                    	    						

                    	    							newCompositeNode(grammarAccess.getTestNodeAccess().getSatisficesQualityCrossReference_5_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_20);
                    	    ruleEString();

                    	    state._fsp--;


                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop233;
                        }
                    } while (true);

                    otherlv_11=(Token)match(input,RightParenthesis,FOLLOW_27); 

                    				newLeafNode(otherlv_11, grammarAccess.getTestNodeAccess().getRightParenthesisKeyword_5_4());
                    			

                    }
                    break;

            }

            // InternalQualityBtCppParser.g:8995:3: (otherlv_12= Satisfies otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis )?
            int alt236=2;
            int LA236_0 = input.LA(1);

            if ( (LA236_0==Satisfies) ) {
                alt236=1;
            }
            switch (alt236) {
                case 1 :
                    // InternalQualityBtCppParser.g:8996:4: otherlv_12= Satisfies otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis
                    {
                    otherlv_12=(Token)match(input,Satisfies,FOLLOW_26); 

                    				newLeafNode(otherlv_12, grammarAccess.getTestNodeAccess().getSatisfiesKeyword_6_0());
                    			
                    otherlv_13=(Token)match(input,LeftParenthesis,FOLLOW_3); 

                    				newLeafNode(otherlv_13, grammarAccess.getTestNodeAccess().getLeftParenthesisKeyword_6_1());
                    			
                    // InternalQualityBtCppParser.g:9004:4: ( ( ruleEString ) )
                    // InternalQualityBtCppParser.g:9005:5: ( ruleEString )
                    {
                    // InternalQualityBtCppParser.g:9005:5: ( ruleEString )
                    // InternalQualityBtCppParser.g:9006:6: ruleEString
                    {

                    						if (current==null) {
                    							current = createModelElement(grammarAccess.getTestNodeRule());
                    						}
                    					

                    						newCompositeNode(grammarAccess.getTestNodeAccess().getSatisfiesQualityRequirementCrossReference_6_2_0());
                    					
                    pushFollow(FOLLOW_20);
                    ruleEString();

                    state._fsp--;


                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:9020:4: (otherlv_15= Comma ( ( ruleEString ) ) )*
                    loop235:
                    do {
                        int alt235=2;
                        int LA235_0 = input.LA(1);

                        if ( (LA235_0==Comma) ) {
                            alt235=1;
                        }


                        switch (alt235) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:9021:5: otherlv_15= Comma ( ( ruleEString ) )
                    	    {
                    	    otherlv_15=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_15, grammarAccess.getTestNodeAccess().getCommaKeyword_6_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:9025:5: ( ( ruleEString ) )
                    	    // InternalQualityBtCppParser.g:9026:6: ( ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:9026:6: ( ruleEString )
                    	    // InternalQualityBtCppParser.g:9027:7: ruleEString
                    	    {

                    	    							if (current==null) {
                    	    								current = createModelElement(grammarAccess.getTestNodeRule());
                    	    							}
                    	    						

                    	    							newCompositeNode(grammarAccess.getTestNodeAccess().getSatisfiesQualityRequirementCrossReference_6_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_20);
                    	    ruleEString();

                    	    state._fsp--;


                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop235;
                        }
                    } while (true);

                    otherlv_17=(Token)match(input,RightParenthesis,FOLLOW_28); 

                    				newLeafNode(otherlv_17, grammarAccess.getTestNodeAccess().getRightParenthesisKeyword_6_4());
                    			

                    }
                    break;

            }

            // InternalQualityBtCppParser.g:9047:3: (otherlv_18= Parameters otherlv_19= LeftCurlyBracket ( (lv_parameters_20_0= ruleParameter ) ) (otherlv_21= Comma ( (lv_parameters_22_0= ruleParameter ) ) )* otherlv_23= RightCurlyBracket )?
            int alt238=2;
            int LA238_0 = input.LA(1);

            if ( (LA238_0==Parameters) ) {
                alt238=1;
            }
            switch (alt238) {
                case 1 :
                    // InternalQualityBtCppParser.g:9048:4: otherlv_18= Parameters otherlv_19= LeftCurlyBracket ( (lv_parameters_20_0= ruleParameter ) ) (otherlv_21= Comma ( (lv_parameters_22_0= ruleParameter ) ) )* otherlv_23= RightCurlyBracket
                    {
                    otherlv_18=(Token)match(input,Parameters,FOLLOW_21); 

                    				newLeafNode(otherlv_18, grammarAccess.getTestNodeAccess().getParametersKeyword_7_0());
                    			
                    otherlv_19=(Token)match(input,LeftCurlyBracket,FOLLOW_3); 

                    				newLeafNode(otherlv_19, grammarAccess.getTestNodeAccess().getLeftCurlyBracketKeyword_7_1());
                    			
                    // InternalQualityBtCppParser.g:9056:4: ( (lv_parameters_20_0= ruleParameter ) )
                    // InternalQualityBtCppParser.g:9057:5: (lv_parameters_20_0= ruleParameter )
                    {
                    // InternalQualityBtCppParser.g:9057:5: (lv_parameters_20_0= ruleParameter )
                    // InternalQualityBtCppParser.g:9058:6: lv_parameters_20_0= ruleParameter
                    {

                    						newCompositeNode(grammarAccess.getTestNodeAccess().getParametersParameterParserRuleCall_7_2_0());
                    					
                    pushFollow(FOLLOW_29);
                    lv_parameters_20_0=ruleParameter();

                    state._fsp--;


                    						if (current==null) {
                    							current = createModelElementForParent(grammarAccess.getTestNodeRule());
                    						}
                    						add(
                    							current,
                    							"parameters",
                    							lv_parameters_20_0,
                    							"org.xtext.btcpp.QualityBtCpp.Parameter");
                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:9075:4: (otherlv_21= Comma ( (lv_parameters_22_0= ruleParameter ) ) )*
                    loop237:
                    do {
                        int alt237=2;
                        int LA237_0 = input.LA(1);

                        if ( (LA237_0==Comma) ) {
                            alt237=1;
                        }


                        switch (alt237) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:9076:5: otherlv_21= Comma ( (lv_parameters_22_0= ruleParameter ) )
                    	    {
                    	    otherlv_21=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_21, grammarAccess.getTestNodeAccess().getCommaKeyword_7_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:9080:5: ( (lv_parameters_22_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:9081:6: (lv_parameters_22_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:9081:6: (lv_parameters_22_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:9082:7: lv_parameters_22_0= ruleParameter
                    	    {

                    	    							newCompositeNode(grammarAccess.getTestNodeAccess().getParametersParameterParserRuleCall_7_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_29);
                    	    lv_parameters_22_0=ruleParameter();

                    	    state._fsp--;


                    	    							if (current==null) {
                    	    								current = createModelElementForParent(grammarAccess.getTestNodeRule());
                    	    							}
                    	    							add(
                    	    								current,
                    	    								"parameters",
                    	    								lv_parameters_22_0,
                    	    								"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop237;
                        }
                    } while (true);

                    otherlv_23=(Token)match(input,RightCurlyBracket,FOLLOW_30); 

                    				newLeafNode(otherlv_23, grammarAccess.getTestNodeAccess().getRightCurlyBracketKeyword_7_4());
                    			

                    }
                    break;

            }

            otherlv_24=(Token)match(input,RightCurlyBracket,FOLLOW_2); 

            			newLeafNode(otherlv_24, grammarAccess.getTestNodeAccess().getRightCurlyBracketKeyword_8());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTestNode"


    // $ANTLR start "entryRuleEntryUpdatedActionNode"
    // InternalQualityBtCppParser.g:9113:1: entryRuleEntryUpdatedActionNode returns [EObject current=null] : iv_ruleEntryUpdatedActionNode= ruleEntryUpdatedActionNode EOF ;
    public final EObject entryRuleEntryUpdatedActionNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEntryUpdatedActionNode = null;


        try {
            // InternalQualityBtCppParser.g:9113:63: (iv_ruleEntryUpdatedActionNode= ruleEntryUpdatedActionNode EOF )
            // InternalQualityBtCppParser.g:9114:2: iv_ruleEntryUpdatedActionNode= ruleEntryUpdatedActionNode EOF
            {
             newCompositeNode(grammarAccess.getEntryUpdatedActionNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleEntryUpdatedActionNode=ruleEntryUpdatedActionNode();

            state._fsp--;

             current =iv_ruleEntryUpdatedActionNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEntryUpdatedActionNode"


    // $ANTLR start "ruleEntryUpdatedActionNode"
    // InternalQualityBtCppParser.g:9120:1: ruleEntryUpdatedActionNode returns [EObject current=null] : ( () otherlv_1= EntryUpdatedActionNode ( (lv_name_2_0= ruleEString ) ) otherlv_3= LeftCurlyBracket (otherlv_4= ID ( (lv_ID_5_0= ruleEString ) ) )? (otherlv_6= Satisfices otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis )? (otherlv_12= Satisfies otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis )? (otherlv_18= Parameters otherlv_19= LeftCurlyBracket ( (lv_parameters_20_0= ruleParameter ) ) (otherlv_21= Comma ( (lv_parameters_22_0= ruleParameter ) ) )* otherlv_23= RightCurlyBracket )? otherlv_24= RightCurlyBracket ) ;
    public final EObject ruleEntryUpdatedActionNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_18=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token otherlv_23=null;
        Token otherlv_24=null;
        AntlrDatatypeRuleToken lv_name_2_0 = null;

        AntlrDatatypeRuleToken lv_ID_5_0 = null;

        EObject lv_parameters_20_0 = null;

        EObject lv_parameters_22_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:9126:2: ( ( () otherlv_1= EntryUpdatedActionNode ( (lv_name_2_0= ruleEString ) ) otherlv_3= LeftCurlyBracket (otherlv_4= ID ( (lv_ID_5_0= ruleEString ) ) )? (otherlv_6= Satisfices otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis )? (otherlv_12= Satisfies otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis )? (otherlv_18= Parameters otherlv_19= LeftCurlyBracket ( (lv_parameters_20_0= ruleParameter ) ) (otherlv_21= Comma ( (lv_parameters_22_0= ruleParameter ) ) )* otherlv_23= RightCurlyBracket )? otherlv_24= RightCurlyBracket ) )
            // InternalQualityBtCppParser.g:9127:2: ( () otherlv_1= EntryUpdatedActionNode ( (lv_name_2_0= ruleEString ) ) otherlv_3= LeftCurlyBracket (otherlv_4= ID ( (lv_ID_5_0= ruleEString ) ) )? (otherlv_6= Satisfices otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis )? (otherlv_12= Satisfies otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis )? (otherlv_18= Parameters otherlv_19= LeftCurlyBracket ( (lv_parameters_20_0= ruleParameter ) ) (otherlv_21= Comma ( (lv_parameters_22_0= ruleParameter ) ) )* otherlv_23= RightCurlyBracket )? otherlv_24= RightCurlyBracket )
            {
            // InternalQualityBtCppParser.g:9127:2: ( () otherlv_1= EntryUpdatedActionNode ( (lv_name_2_0= ruleEString ) ) otherlv_3= LeftCurlyBracket (otherlv_4= ID ( (lv_ID_5_0= ruleEString ) ) )? (otherlv_6= Satisfices otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis )? (otherlv_12= Satisfies otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis )? (otherlv_18= Parameters otherlv_19= LeftCurlyBracket ( (lv_parameters_20_0= ruleParameter ) ) (otherlv_21= Comma ( (lv_parameters_22_0= ruleParameter ) ) )* otherlv_23= RightCurlyBracket )? otherlv_24= RightCurlyBracket )
            // InternalQualityBtCppParser.g:9128:3: () otherlv_1= EntryUpdatedActionNode ( (lv_name_2_0= ruleEString ) ) otherlv_3= LeftCurlyBracket (otherlv_4= ID ( (lv_ID_5_0= ruleEString ) ) )? (otherlv_6= Satisfices otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis )? (otherlv_12= Satisfies otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis )? (otherlv_18= Parameters otherlv_19= LeftCurlyBracket ( (lv_parameters_20_0= ruleParameter ) ) (otherlv_21= Comma ( (lv_parameters_22_0= ruleParameter ) ) )* otherlv_23= RightCurlyBracket )? otherlv_24= RightCurlyBracket
            {
            // InternalQualityBtCppParser.g:9128:3: ()
            // InternalQualityBtCppParser.g:9129:4: 
            {

            				current = forceCreateModelElement(
            					grammarAccess.getEntryUpdatedActionNodeAccess().getEntryUpdatedActionNodeAction_0(),
            					current);
            			

            }

            otherlv_1=(Token)match(input,EntryUpdatedActionNode,FOLLOW_3); 

            			newLeafNode(otherlv_1, grammarAccess.getEntryUpdatedActionNodeAccess().getEntryUpdatedActionNodeKeyword_1());
            		
            // InternalQualityBtCppParser.g:9139:3: ( (lv_name_2_0= ruleEString ) )
            // InternalQualityBtCppParser.g:9140:4: (lv_name_2_0= ruleEString )
            {
            // InternalQualityBtCppParser.g:9140:4: (lv_name_2_0= ruleEString )
            // InternalQualityBtCppParser.g:9141:5: lv_name_2_0= ruleEString
            {

            					newCompositeNode(grammarAccess.getEntryUpdatedActionNodeAccess().getNameEStringParserRuleCall_2_0());
            				
            pushFollow(FOLLOW_21);
            lv_name_2_0=ruleEString();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getEntryUpdatedActionNodeRule());
            					}
            					set(
            						current,
            						"name",
            						lv_name_2_0,
            						"org.xtext.btcpp.QualityBtCpp.EString");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            otherlv_3=(Token)match(input,LeftCurlyBracket,FOLLOW_45); 

            			newLeafNode(otherlv_3, grammarAccess.getEntryUpdatedActionNodeAccess().getLeftCurlyBracketKeyword_3());
            		
            // InternalQualityBtCppParser.g:9162:3: (otherlv_4= ID ( (lv_ID_5_0= ruleEString ) ) )?
            int alt239=2;
            int LA239_0 = input.LA(1);

            if ( (LA239_0==ID) ) {
                alt239=1;
            }
            switch (alt239) {
                case 1 :
                    // InternalQualityBtCppParser.g:9163:4: otherlv_4= ID ( (lv_ID_5_0= ruleEString ) )
                    {
                    otherlv_4=(Token)match(input,ID,FOLLOW_3); 

                    				newLeafNode(otherlv_4, grammarAccess.getEntryUpdatedActionNodeAccess().getIDKeyword_4_0());
                    			
                    // InternalQualityBtCppParser.g:9167:4: ( (lv_ID_5_0= ruleEString ) )
                    // InternalQualityBtCppParser.g:9168:5: (lv_ID_5_0= ruleEString )
                    {
                    // InternalQualityBtCppParser.g:9168:5: (lv_ID_5_0= ruleEString )
                    // InternalQualityBtCppParser.g:9169:6: lv_ID_5_0= ruleEString
                    {

                    						newCompositeNode(grammarAccess.getEntryUpdatedActionNodeAccess().getIDEStringParserRuleCall_4_1_0());
                    					
                    pushFollow(FOLLOW_25);
                    lv_ID_5_0=ruleEString();

                    state._fsp--;


                    						if (current==null) {
                    							current = createModelElementForParent(grammarAccess.getEntryUpdatedActionNodeRule());
                    						}
                    						set(
                    							current,
                    							"ID",
                    							lv_ID_5_0,
                    							"org.xtext.btcpp.QualityBtCpp.EString");
                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }


                    }
                    break;

            }

            // InternalQualityBtCppParser.g:9187:3: (otherlv_6= Satisfices otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis )?
            int alt241=2;
            int LA241_0 = input.LA(1);

            if ( (LA241_0==Satisfices) ) {
                alt241=1;
            }
            switch (alt241) {
                case 1 :
                    // InternalQualityBtCppParser.g:9188:4: otherlv_6= Satisfices otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis
                    {
                    otherlv_6=(Token)match(input,Satisfices,FOLLOW_26); 

                    				newLeafNode(otherlv_6, grammarAccess.getEntryUpdatedActionNodeAccess().getSatisficesKeyword_5_0());
                    			
                    otherlv_7=(Token)match(input,LeftParenthesis,FOLLOW_3); 

                    				newLeafNode(otherlv_7, grammarAccess.getEntryUpdatedActionNodeAccess().getLeftParenthesisKeyword_5_1());
                    			
                    // InternalQualityBtCppParser.g:9196:4: ( ( ruleEString ) )
                    // InternalQualityBtCppParser.g:9197:5: ( ruleEString )
                    {
                    // InternalQualityBtCppParser.g:9197:5: ( ruleEString )
                    // InternalQualityBtCppParser.g:9198:6: ruleEString
                    {

                    						if (current==null) {
                    							current = createModelElement(grammarAccess.getEntryUpdatedActionNodeRule());
                    						}
                    					

                    						newCompositeNode(grammarAccess.getEntryUpdatedActionNodeAccess().getSatisficesQualityCrossReference_5_2_0());
                    					
                    pushFollow(FOLLOW_20);
                    ruleEString();

                    state._fsp--;


                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:9212:4: (otherlv_9= Comma ( ( ruleEString ) ) )*
                    loop240:
                    do {
                        int alt240=2;
                        int LA240_0 = input.LA(1);

                        if ( (LA240_0==Comma) ) {
                            alt240=1;
                        }


                        switch (alt240) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:9213:5: otherlv_9= Comma ( ( ruleEString ) )
                    	    {
                    	    otherlv_9=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_9, grammarAccess.getEntryUpdatedActionNodeAccess().getCommaKeyword_5_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:9217:5: ( ( ruleEString ) )
                    	    // InternalQualityBtCppParser.g:9218:6: ( ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:9218:6: ( ruleEString )
                    	    // InternalQualityBtCppParser.g:9219:7: ruleEString
                    	    {

                    	    							if (current==null) {
                    	    								current = createModelElement(grammarAccess.getEntryUpdatedActionNodeRule());
                    	    							}
                    	    						

                    	    							newCompositeNode(grammarAccess.getEntryUpdatedActionNodeAccess().getSatisficesQualityCrossReference_5_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_20);
                    	    ruleEString();

                    	    state._fsp--;


                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop240;
                        }
                    } while (true);

                    otherlv_11=(Token)match(input,RightParenthesis,FOLLOW_27); 

                    				newLeafNode(otherlv_11, grammarAccess.getEntryUpdatedActionNodeAccess().getRightParenthesisKeyword_5_4());
                    			

                    }
                    break;

            }

            // InternalQualityBtCppParser.g:9239:3: (otherlv_12= Satisfies otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis )?
            int alt243=2;
            int LA243_0 = input.LA(1);

            if ( (LA243_0==Satisfies) ) {
                alt243=1;
            }
            switch (alt243) {
                case 1 :
                    // InternalQualityBtCppParser.g:9240:4: otherlv_12= Satisfies otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis
                    {
                    otherlv_12=(Token)match(input,Satisfies,FOLLOW_26); 

                    				newLeafNode(otherlv_12, grammarAccess.getEntryUpdatedActionNodeAccess().getSatisfiesKeyword_6_0());
                    			
                    otherlv_13=(Token)match(input,LeftParenthesis,FOLLOW_3); 

                    				newLeafNode(otherlv_13, grammarAccess.getEntryUpdatedActionNodeAccess().getLeftParenthesisKeyword_6_1());
                    			
                    // InternalQualityBtCppParser.g:9248:4: ( ( ruleEString ) )
                    // InternalQualityBtCppParser.g:9249:5: ( ruleEString )
                    {
                    // InternalQualityBtCppParser.g:9249:5: ( ruleEString )
                    // InternalQualityBtCppParser.g:9250:6: ruleEString
                    {

                    						if (current==null) {
                    							current = createModelElement(grammarAccess.getEntryUpdatedActionNodeRule());
                    						}
                    					

                    						newCompositeNode(grammarAccess.getEntryUpdatedActionNodeAccess().getSatisfiesQualityRequirementCrossReference_6_2_0());
                    					
                    pushFollow(FOLLOW_20);
                    ruleEString();

                    state._fsp--;


                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:9264:4: (otherlv_15= Comma ( ( ruleEString ) ) )*
                    loop242:
                    do {
                        int alt242=2;
                        int LA242_0 = input.LA(1);

                        if ( (LA242_0==Comma) ) {
                            alt242=1;
                        }


                        switch (alt242) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:9265:5: otherlv_15= Comma ( ( ruleEString ) )
                    	    {
                    	    otherlv_15=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_15, grammarAccess.getEntryUpdatedActionNodeAccess().getCommaKeyword_6_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:9269:5: ( ( ruleEString ) )
                    	    // InternalQualityBtCppParser.g:9270:6: ( ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:9270:6: ( ruleEString )
                    	    // InternalQualityBtCppParser.g:9271:7: ruleEString
                    	    {

                    	    							if (current==null) {
                    	    								current = createModelElement(grammarAccess.getEntryUpdatedActionNodeRule());
                    	    							}
                    	    						

                    	    							newCompositeNode(grammarAccess.getEntryUpdatedActionNodeAccess().getSatisfiesQualityRequirementCrossReference_6_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_20);
                    	    ruleEString();

                    	    state._fsp--;


                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop242;
                        }
                    } while (true);

                    otherlv_17=(Token)match(input,RightParenthesis,FOLLOW_28); 

                    				newLeafNode(otherlv_17, grammarAccess.getEntryUpdatedActionNodeAccess().getRightParenthesisKeyword_6_4());
                    			

                    }
                    break;

            }

            // InternalQualityBtCppParser.g:9291:3: (otherlv_18= Parameters otherlv_19= LeftCurlyBracket ( (lv_parameters_20_0= ruleParameter ) ) (otherlv_21= Comma ( (lv_parameters_22_0= ruleParameter ) ) )* otherlv_23= RightCurlyBracket )?
            int alt245=2;
            int LA245_0 = input.LA(1);

            if ( (LA245_0==Parameters) ) {
                alt245=1;
            }
            switch (alt245) {
                case 1 :
                    // InternalQualityBtCppParser.g:9292:4: otherlv_18= Parameters otherlv_19= LeftCurlyBracket ( (lv_parameters_20_0= ruleParameter ) ) (otherlv_21= Comma ( (lv_parameters_22_0= ruleParameter ) ) )* otherlv_23= RightCurlyBracket
                    {
                    otherlv_18=(Token)match(input,Parameters,FOLLOW_21); 

                    				newLeafNode(otherlv_18, grammarAccess.getEntryUpdatedActionNodeAccess().getParametersKeyword_7_0());
                    			
                    otherlv_19=(Token)match(input,LeftCurlyBracket,FOLLOW_3); 

                    				newLeafNode(otherlv_19, grammarAccess.getEntryUpdatedActionNodeAccess().getLeftCurlyBracketKeyword_7_1());
                    			
                    // InternalQualityBtCppParser.g:9300:4: ( (lv_parameters_20_0= ruleParameter ) )
                    // InternalQualityBtCppParser.g:9301:5: (lv_parameters_20_0= ruleParameter )
                    {
                    // InternalQualityBtCppParser.g:9301:5: (lv_parameters_20_0= ruleParameter )
                    // InternalQualityBtCppParser.g:9302:6: lv_parameters_20_0= ruleParameter
                    {

                    						newCompositeNode(grammarAccess.getEntryUpdatedActionNodeAccess().getParametersParameterParserRuleCall_7_2_0());
                    					
                    pushFollow(FOLLOW_29);
                    lv_parameters_20_0=ruleParameter();

                    state._fsp--;


                    						if (current==null) {
                    							current = createModelElementForParent(grammarAccess.getEntryUpdatedActionNodeRule());
                    						}
                    						add(
                    							current,
                    							"parameters",
                    							lv_parameters_20_0,
                    							"org.xtext.btcpp.QualityBtCpp.Parameter");
                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:9319:4: (otherlv_21= Comma ( (lv_parameters_22_0= ruleParameter ) ) )*
                    loop244:
                    do {
                        int alt244=2;
                        int LA244_0 = input.LA(1);

                        if ( (LA244_0==Comma) ) {
                            alt244=1;
                        }


                        switch (alt244) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:9320:5: otherlv_21= Comma ( (lv_parameters_22_0= ruleParameter ) )
                    	    {
                    	    otherlv_21=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_21, grammarAccess.getEntryUpdatedActionNodeAccess().getCommaKeyword_7_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:9324:5: ( (lv_parameters_22_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:9325:6: (lv_parameters_22_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:9325:6: (lv_parameters_22_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:9326:7: lv_parameters_22_0= ruleParameter
                    	    {

                    	    							newCompositeNode(grammarAccess.getEntryUpdatedActionNodeAccess().getParametersParameterParserRuleCall_7_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_29);
                    	    lv_parameters_22_0=ruleParameter();

                    	    state._fsp--;


                    	    							if (current==null) {
                    	    								current = createModelElementForParent(grammarAccess.getEntryUpdatedActionNodeRule());
                    	    							}
                    	    							add(
                    	    								current,
                    	    								"parameters",
                    	    								lv_parameters_22_0,
                    	    								"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop244;
                        }
                    } while (true);

                    otherlv_23=(Token)match(input,RightCurlyBracket,FOLLOW_30); 

                    				newLeafNode(otherlv_23, grammarAccess.getEntryUpdatedActionNodeAccess().getRightCurlyBracketKeyword_7_4());
                    			

                    }
                    break;

            }

            otherlv_24=(Token)match(input,RightCurlyBracket,FOLLOW_2); 

            			newLeafNode(otherlv_24, grammarAccess.getEntryUpdatedActionNodeAccess().getRightCurlyBracketKeyword_8());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEntryUpdatedActionNode"


    // $ANTLR start "entryRuleUnsetBlackboardNode"
    // InternalQualityBtCppParser.g:9357:1: entryRuleUnsetBlackboardNode returns [EObject current=null] : iv_ruleUnsetBlackboardNode= ruleUnsetBlackboardNode EOF ;
    public final EObject entryRuleUnsetBlackboardNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUnsetBlackboardNode = null;


        try {
            // InternalQualityBtCppParser.g:9357:60: (iv_ruleUnsetBlackboardNode= ruleUnsetBlackboardNode EOF )
            // InternalQualityBtCppParser.g:9358:2: iv_ruleUnsetBlackboardNode= ruleUnsetBlackboardNode EOF
            {
             newCompositeNode(grammarAccess.getUnsetBlackboardNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleUnsetBlackboardNode=ruleUnsetBlackboardNode();

            state._fsp--;

             current =iv_ruleUnsetBlackboardNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUnsetBlackboardNode"


    // $ANTLR start "ruleUnsetBlackboardNode"
    // InternalQualityBtCppParser.g:9364:1: ruleUnsetBlackboardNode returns [EObject current=null] : ( () otherlv_1= UnsetBlackboardNode ( (lv_name_2_0= ruleEString ) ) otherlv_3= LeftCurlyBracket (otherlv_4= ID ( (lv_ID_5_0= ruleEString ) ) )? (otherlv_6= Satisfices otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis )? (otherlv_12= Satisfies otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis )? (otherlv_18= Parameters otherlv_19= LeftCurlyBracket ( (lv_parameters_20_0= ruleParameter ) ) (otherlv_21= Comma ( (lv_parameters_22_0= ruleParameter ) ) )* otherlv_23= RightCurlyBracket )? otherlv_24= RightCurlyBracket ) ;
    public final EObject ruleUnsetBlackboardNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_18=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token otherlv_23=null;
        Token otherlv_24=null;
        AntlrDatatypeRuleToken lv_name_2_0 = null;

        AntlrDatatypeRuleToken lv_ID_5_0 = null;

        EObject lv_parameters_20_0 = null;

        EObject lv_parameters_22_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:9370:2: ( ( () otherlv_1= UnsetBlackboardNode ( (lv_name_2_0= ruleEString ) ) otherlv_3= LeftCurlyBracket (otherlv_4= ID ( (lv_ID_5_0= ruleEString ) ) )? (otherlv_6= Satisfices otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis )? (otherlv_12= Satisfies otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis )? (otherlv_18= Parameters otherlv_19= LeftCurlyBracket ( (lv_parameters_20_0= ruleParameter ) ) (otherlv_21= Comma ( (lv_parameters_22_0= ruleParameter ) ) )* otherlv_23= RightCurlyBracket )? otherlv_24= RightCurlyBracket ) )
            // InternalQualityBtCppParser.g:9371:2: ( () otherlv_1= UnsetBlackboardNode ( (lv_name_2_0= ruleEString ) ) otherlv_3= LeftCurlyBracket (otherlv_4= ID ( (lv_ID_5_0= ruleEString ) ) )? (otherlv_6= Satisfices otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis )? (otherlv_12= Satisfies otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis )? (otherlv_18= Parameters otherlv_19= LeftCurlyBracket ( (lv_parameters_20_0= ruleParameter ) ) (otherlv_21= Comma ( (lv_parameters_22_0= ruleParameter ) ) )* otherlv_23= RightCurlyBracket )? otherlv_24= RightCurlyBracket )
            {
            // InternalQualityBtCppParser.g:9371:2: ( () otherlv_1= UnsetBlackboardNode ( (lv_name_2_0= ruleEString ) ) otherlv_3= LeftCurlyBracket (otherlv_4= ID ( (lv_ID_5_0= ruleEString ) ) )? (otherlv_6= Satisfices otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis )? (otherlv_12= Satisfies otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis )? (otherlv_18= Parameters otherlv_19= LeftCurlyBracket ( (lv_parameters_20_0= ruleParameter ) ) (otherlv_21= Comma ( (lv_parameters_22_0= ruleParameter ) ) )* otherlv_23= RightCurlyBracket )? otherlv_24= RightCurlyBracket )
            // InternalQualityBtCppParser.g:9372:3: () otherlv_1= UnsetBlackboardNode ( (lv_name_2_0= ruleEString ) ) otherlv_3= LeftCurlyBracket (otherlv_4= ID ( (lv_ID_5_0= ruleEString ) ) )? (otherlv_6= Satisfices otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis )? (otherlv_12= Satisfies otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis )? (otherlv_18= Parameters otherlv_19= LeftCurlyBracket ( (lv_parameters_20_0= ruleParameter ) ) (otherlv_21= Comma ( (lv_parameters_22_0= ruleParameter ) ) )* otherlv_23= RightCurlyBracket )? otherlv_24= RightCurlyBracket
            {
            // InternalQualityBtCppParser.g:9372:3: ()
            // InternalQualityBtCppParser.g:9373:4: 
            {

            				current = forceCreateModelElement(
            					grammarAccess.getUnsetBlackboardNodeAccess().getUnsetBlackboardNodeAction_0(),
            					current);
            			

            }

            otherlv_1=(Token)match(input,UnsetBlackboardNode,FOLLOW_3); 

            			newLeafNode(otherlv_1, grammarAccess.getUnsetBlackboardNodeAccess().getUnsetBlackboardNodeKeyword_1());
            		
            // InternalQualityBtCppParser.g:9383:3: ( (lv_name_2_0= ruleEString ) )
            // InternalQualityBtCppParser.g:9384:4: (lv_name_2_0= ruleEString )
            {
            // InternalQualityBtCppParser.g:9384:4: (lv_name_2_0= ruleEString )
            // InternalQualityBtCppParser.g:9385:5: lv_name_2_0= ruleEString
            {

            					newCompositeNode(grammarAccess.getUnsetBlackboardNodeAccess().getNameEStringParserRuleCall_2_0());
            				
            pushFollow(FOLLOW_21);
            lv_name_2_0=ruleEString();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getUnsetBlackboardNodeRule());
            					}
            					set(
            						current,
            						"name",
            						lv_name_2_0,
            						"org.xtext.btcpp.QualityBtCpp.EString");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            otherlv_3=(Token)match(input,LeftCurlyBracket,FOLLOW_45); 

            			newLeafNode(otherlv_3, grammarAccess.getUnsetBlackboardNodeAccess().getLeftCurlyBracketKeyword_3());
            		
            // InternalQualityBtCppParser.g:9406:3: (otherlv_4= ID ( (lv_ID_5_0= ruleEString ) ) )?
            int alt246=2;
            int LA246_0 = input.LA(1);

            if ( (LA246_0==ID) ) {
                alt246=1;
            }
            switch (alt246) {
                case 1 :
                    // InternalQualityBtCppParser.g:9407:4: otherlv_4= ID ( (lv_ID_5_0= ruleEString ) )
                    {
                    otherlv_4=(Token)match(input,ID,FOLLOW_3); 

                    				newLeafNode(otherlv_4, grammarAccess.getUnsetBlackboardNodeAccess().getIDKeyword_4_0());
                    			
                    // InternalQualityBtCppParser.g:9411:4: ( (lv_ID_5_0= ruleEString ) )
                    // InternalQualityBtCppParser.g:9412:5: (lv_ID_5_0= ruleEString )
                    {
                    // InternalQualityBtCppParser.g:9412:5: (lv_ID_5_0= ruleEString )
                    // InternalQualityBtCppParser.g:9413:6: lv_ID_5_0= ruleEString
                    {

                    						newCompositeNode(grammarAccess.getUnsetBlackboardNodeAccess().getIDEStringParserRuleCall_4_1_0());
                    					
                    pushFollow(FOLLOW_25);
                    lv_ID_5_0=ruleEString();

                    state._fsp--;


                    						if (current==null) {
                    							current = createModelElementForParent(grammarAccess.getUnsetBlackboardNodeRule());
                    						}
                    						set(
                    							current,
                    							"ID",
                    							lv_ID_5_0,
                    							"org.xtext.btcpp.QualityBtCpp.EString");
                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }


                    }
                    break;

            }

            // InternalQualityBtCppParser.g:9431:3: (otherlv_6= Satisfices otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis )?
            int alt248=2;
            int LA248_0 = input.LA(1);

            if ( (LA248_0==Satisfices) ) {
                alt248=1;
            }
            switch (alt248) {
                case 1 :
                    // InternalQualityBtCppParser.g:9432:4: otherlv_6= Satisfices otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis
                    {
                    otherlv_6=(Token)match(input,Satisfices,FOLLOW_26); 

                    				newLeafNode(otherlv_6, grammarAccess.getUnsetBlackboardNodeAccess().getSatisficesKeyword_5_0());
                    			
                    otherlv_7=(Token)match(input,LeftParenthesis,FOLLOW_3); 

                    				newLeafNode(otherlv_7, grammarAccess.getUnsetBlackboardNodeAccess().getLeftParenthesisKeyword_5_1());
                    			
                    // InternalQualityBtCppParser.g:9440:4: ( ( ruleEString ) )
                    // InternalQualityBtCppParser.g:9441:5: ( ruleEString )
                    {
                    // InternalQualityBtCppParser.g:9441:5: ( ruleEString )
                    // InternalQualityBtCppParser.g:9442:6: ruleEString
                    {

                    						if (current==null) {
                    							current = createModelElement(grammarAccess.getUnsetBlackboardNodeRule());
                    						}
                    					

                    						newCompositeNode(grammarAccess.getUnsetBlackboardNodeAccess().getSatisficesQualityCrossReference_5_2_0());
                    					
                    pushFollow(FOLLOW_20);
                    ruleEString();

                    state._fsp--;


                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:9456:4: (otherlv_9= Comma ( ( ruleEString ) ) )*
                    loop247:
                    do {
                        int alt247=2;
                        int LA247_0 = input.LA(1);

                        if ( (LA247_0==Comma) ) {
                            alt247=1;
                        }


                        switch (alt247) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:9457:5: otherlv_9= Comma ( ( ruleEString ) )
                    	    {
                    	    otherlv_9=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_9, grammarAccess.getUnsetBlackboardNodeAccess().getCommaKeyword_5_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:9461:5: ( ( ruleEString ) )
                    	    // InternalQualityBtCppParser.g:9462:6: ( ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:9462:6: ( ruleEString )
                    	    // InternalQualityBtCppParser.g:9463:7: ruleEString
                    	    {

                    	    							if (current==null) {
                    	    								current = createModelElement(grammarAccess.getUnsetBlackboardNodeRule());
                    	    							}
                    	    						

                    	    							newCompositeNode(grammarAccess.getUnsetBlackboardNodeAccess().getSatisficesQualityCrossReference_5_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_20);
                    	    ruleEString();

                    	    state._fsp--;


                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop247;
                        }
                    } while (true);

                    otherlv_11=(Token)match(input,RightParenthesis,FOLLOW_27); 

                    				newLeafNode(otherlv_11, grammarAccess.getUnsetBlackboardNodeAccess().getRightParenthesisKeyword_5_4());
                    			

                    }
                    break;

            }

            // InternalQualityBtCppParser.g:9483:3: (otherlv_12= Satisfies otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis )?
            int alt250=2;
            int LA250_0 = input.LA(1);

            if ( (LA250_0==Satisfies) ) {
                alt250=1;
            }
            switch (alt250) {
                case 1 :
                    // InternalQualityBtCppParser.g:9484:4: otherlv_12= Satisfies otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis
                    {
                    otherlv_12=(Token)match(input,Satisfies,FOLLOW_26); 

                    				newLeafNode(otherlv_12, grammarAccess.getUnsetBlackboardNodeAccess().getSatisfiesKeyword_6_0());
                    			
                    otherlv_13=(Token)match(input,LeftParenthesis,FOLLOW_3); 

                    				newLeafNode(otherlv_13, grammarAccess.getUnsetBlackboardNodeAccess().getLeftParenthesisKeyword_6_1());
                    			
                    // InternalQualityBtCppParser.g:9492:4: ( ( ruleEString ) )
                    // InternalQualityBtCppParser.g:9493:5: ( ruleEString )
                    {
                    // InternalQualityBtCppParser.g:9493:5: ( ruleEString )
                    // InternalQualityBtCppParser.g:9494:6: ruleEString
                    {

                    						if (current==null) {
                    							current = createModelElement(grammarAccess.getUnsetBlackboardNodeRule());
                    						}
                    					

                    						newCompositeNode(grammarAccess.getUnsetBlackboardNodeAccess().getSatisfiesQualityRequirementCrossReference_6_2_0());
                    					
                    pushFollow(FOLLOW_20);
                    ruleEString();

                    state._fsp--;


                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:9508:4: (otherlv_15= Comma ( ( ruleEString ) ) )*
                    loop249:
                    do {
                        int alt249=2;
                        int LA249_0 = input.LA(1);

                        if ( (LA249_0==Comma) ) {
                            alt249=1;
                        }


                        switch (alt249) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:9509:5: otherlv_15= Comma ( ( ruleEString ) )
                    	    {
                    	    otherlv_15=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_15, grammarAccess.getUnsetBlackboardNodeAccess().getCommaKeyword_6_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:9513:5: ( ( ruleEString ) )
                    	    // InternalQualityBtCppParser.g:9514:6: ( ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:9514:6: ( ruleEString )
                    	    // InternalQualityBtCppParser.g:9515:7: ruleEString
                    	    {

                    	    							if (current==null) {
                    	    								current = createModelElement(grammarAccess.getUnsetBlackboardNodeRule());
                    	    							}
                    	    						

                    	    							newCompositeNode(grammarAccess.getUnsetBlackboardNodeAccess().getSatisfiesQualityRequirementCrossReference_6_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_20);
                    	    ruleEString();

                    	    state._fsp--;


                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop249;
                        }
                    } while (true);

                    otherlv_17=(Token)match(input,RightParenthesis,FOLLOW_28); 

                    				newLeafNode(otherlv_17, grammarAccess.getUnsetBlackboardNodeAccess().getRightParenthesisKeyword_6_4());
                    			

                    }
                    break;

            }

            // InternalQualityBtCppParser.g:9535:3: (otherlv_18= Parameters otherlv_19= LeftCurlyBracket ( (lv_parameters_20_0= ruleParameter ) ) (otherlv_21= Comma ( (lv_parameters_22_0= ruleParameter ) ) )* otherlv_23= RightCurlyBracket )?
            int alt252=2;
            int LA252_0 = input.LA(1);

            if ( (LA252_0==Parameters) ) {
                alt252=1;
            }
            switch (alt252) {
                case 1 :
                    // InternalQualityBtCppParser.g:9536:4: otherlv_18= Parameters otherlv_19= LeftCurlyBracket ( (lv_parameters_20_0= ruleParameter ) ) (otherlv_21= Comma ( (lv_parameters_22_0= ruleParameter ) ) )* otherlv_23= RightCurlyBracket
                    {
                    otherlv_18=(Token)match(input,Parameters,FOLLOW_21); 

                    				newLeafNode(otherlv_18, grammarAccess.getUnsetBlackboardNodeAccess().getParametersKeyword_7_0());
                    			
                    otherlv_19=(Token)match(input,LeftCurlyBracket,FOLLOW_3); 

                    				newLeafNode(otherlv_19, grammarAccess.getUnsetBlackboardNodeAccess().getLeftCurlyBracketKeyword_7_1());
                    			
                    // InternalQualityBtCppParser.g:9544:4: ( (lv_parameters_20_0= ruleParameter ) )
                    // InternalQualityBtCppParser.g:9545:5: (lv_parameters_20_0= ruleParameter )
                    {
                    // InternalQualityBtCppParser.g:9545:5: (lv_parameters_20_0= ruleParameter )
                    // InternalQualityBtCppParser.g:9546:6: lv_parameters_20_0= ruleParameter
                    {

                    						newCompositeNode(grammarAccess.getUnsetBlackboardNodeAccess().getParametersParameterParserRuleCall_7_2_0());
                    					
                    pushFollow(FOLLOW_29);
                    lv_parameters_20_0=ruleParameter();

                    state._fsp--;


                    						if (current==null) {
                    							current = createModelElementForParent(grammarAccess.getUnsetBlackboardNodeRule());
                    						}
                    						add(
                    							current,
                    							"parameters",
                    							lv_parameters_20_0,
                    							"org.xtext.btcpp.QualityBtCpp.Parameter");
                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:9563:4: (otherlv_21= Comma ( (lv_parameters_22_0= ruleParameter ) ) )*
                    loop251:
                    do {
                        int alt251=2;
                        int LA251_0 = input.LA(1);

                        if ( (LA251_0==Comma) ) {
                            alt251=1;
                        }


                        switch (alt251) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:9564:5: otherlv_21= Comma ( (lv_parameters_22_0= ruleParameter ) )
                    	    {
                    	    otherlv_21=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_21, grammarAccess.getUnsetBlackboardNodeAccess().getCommaKeyword_7_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:9568:5: ( (lv_parameters_22_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:9569:6: (lv_parameters_22_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:9569:6: (lv_parameters_22_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:9570:7: lv_parameters_22_0= ruleParameter
                    	    {

                    	    							newCompositeNode(grammarAccess.getUnsetBlackboardNodeAccess().getParametersParameterParserRuleCall_7_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_29);
                    	    lv_parameters_22_0=ruleParameter();

                    	    state._fsp--;


                    	    							if (current==null) {
                    	    								current = createModelElementForParent(grammarAccess.getUnsetBlackboardNodeRule());
                    	    							}
                    	    							add(
                    	    								current,
                    	    								"parameters",
                    	    								lv_parameters_22_0,
                    	    								"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop251;
                        }
                    } while (true);

                    otherlv_23=(Token)match(input,RightCurlyBracket,FOLLOW_30); 

                    				newLeafNode(otherlv_23, grammarAccess.getUnsetBlackboardNodeAccess().getRightCurlyBracketKeyword_7_4());
                    			

                    }
                    break;

            }

            otherlv_24=(Token)match(input,RightCurlyBracket,FOLLOW_2); 

            			newLeafNode(otherlv_24, grammarAccess.getUnsetBlackboardNodeAccess().getRightCurlyBracketKeyword_8());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUnsetBlackboardNode"


    // $ANTLR start "entryRuleThreadedActionNode"
    // InternalQualityBtCppParser.g:9601:1: entryRuleThreadedActionNode returns [EObject current=null] : iv_ruleThreadedActionNode= ruleThreadedActionNode EOF ;
    public final EObject entryRuleThreadedActionNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleThreadedActionNode = null;


        try {
            // InternalQualityBtCppParser.g:9601:59: (iv_ruleThreadedActionNode= ruleThreadedActionNode EOF )
            // InternalQualityBtCppParser.g:9602:2: iv_ruleThreadedActionNode= ruleThreadedActionNode EOF
            {
             newCompositeNode(grammarAccess.getThreadedActionNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleThreadedActionNode=ruleThreadedActionNode();

            state._fsp--;

             current =iv_ruleThreadedActionNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleThreadedActionNode"


    // $ANTLR start "ruleThreadedActionNode"
    // InternalQualityBtCppParser.g:9608:1: ruleThreadedActionNode returns [EObject current=null] : ( () otherlv_1= ThreadedActionNode ( (lv_name_2_0= ruleEString ) ) otherlv_3= LeftCurlyBracket (otherlv_4= ID ( (lv_ID_5_0= ruleEString ) ) )? (otherlv_6= Satisfices otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis )? (otherlv_12= Satisfies otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis )? (otherlv_18= Parameters otherlv_19= LeftCurlyBracket ( (lv_parameters_20_0= ruleParameter ) ) (otherlv_21= Comma ( (lv_parameters_22_0= ruleParameter ) ) )* otherlv_23= RightCurlyBracket )? otherlv_24= RightCurlyBracket ) ;
    public final EObject ruleThreadedActionNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_18=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token otherlv_23=null;
        Token otherlv_24=null;
        AntlrDatatypeRuleToken lv_name_2_0 = null;

        AntlrDatatypeRuleToken lv_ID_5_0 = null;

        EObject lv_parameters_20_0 = null;

        EObject lv_parameters_22_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:9614:2: ( ( () otherlv_1= ThreadedActionNode ( (lv_name_2_0= ruleEString ) ) otherlv_3= LeftCurlyBracket (otherlv_4= ID ( (lv_ID_5_0= ruleEString ) ) )? (otherlv_6= Satisfices otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis )? (otherlv_12= Satisfies otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis )? (otherlv_18= Parameters otherlv_19= LeftCurlyBracket ( (lv_parameters_20_0= ruleParameter ) ) (otherlv_21= Comma ( (lv_parameters_22_0= ruleParameter ) ) )* otherlv_23= RightCurlyBracket )? otherlv_24= RightCurlyBracket ) )
            // InternalQualityBtCppParser.g:9615:2: ( () otherlv_1= ThreadedActionNode ( (lv_name_2_0= ruleEString ) ) otherlv_3= LeftCurlyBracket (otherlv_4= ID ( (lv_ID_5_0= ruleEString ) ) )? (otherlv_6= Satisfices otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis )? (otherlv_12= Satisfies otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis )? (otherlv_18= Parameters otherlv_19= LeftCurlyBracket ( (lv_parameters_20_0= ruleParameter ) ) (otherlv_21= Comma ( (lv_parameters_22_0= ruleParameter ) ) )* otherlv_23= RightCurlyBracket )? otherlv_24= RightCurlyBracket )
            {
            // InternalQualityBtCppParser.g:9615:2: ( () otherlv_1= ThreadedActionNode ( (lv_name_2_0= ruleEString ) ) otherlv_3= LeftCurlyBracket (otherlv_4= ID ( (lv_ID_5_0= ruleEString ) ) )? (otherlv_6= Satisfices otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis )? (otherlv_12= Satisfies otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis )? (otherlv_18= Parameters otherlv_19= LeftCurlyBracket ( (lv_parameters_20_0= ruleParameter ) ) (otherlv_21= Comma ( (lv_parameters_22_0= ruleParameter ) ) )* otherlv_23= RightCurlyBracket )? otherlv_24= RightCurlyBracket )
            // InternalQualityBtCppParser.g:9616:3: () otherlv_1= ThreadedActionNode ( (lv_name_2_0= ruleEString ) ) otherlv_3= LeftCurlyBracket (otherlv_4= ID ( (lv_ID_5_0= ruleEString ) ) )? (otherlv_6= Satisfices otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis )? (otherlv_12= Satisfies otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis )? (otherlv_18= Parameters otherlv_19= LeftCurlyBracket ( (lv_parameters_20_0= ruleParameter ) ) (otherlv_21= Comma ( (lv_parameters_22_0= ruleParameter ) ) )* otherlv_23= RightCurlyBracket )? otherlv_24= RightCurlyBracket
            {
            // InternalQualityBtCppParser.g:9616:3: ()
            // InternalQualityBtCppParser.g:9617:4: 
            {

            				current = forceCreateModelElement(
            					grammarAccess.getThreadedActionNodeAccess().getThreadedActionNodeAction_0(),
            					current);
            			

            }

            otherlv_1=(Token)match(input,ThreadedActionNode,FOLLOW_3); 

            			newLeafNode(otherlv_1, grammarAccess.getThreadedActionNodeAccess().getThreadedActionNodeKeyword_1());
            		
            // InternalQualityBtCppParser.g:9627:3: ( (lv_name_2_0= ruleEString ) )
            // InternalQualityBtCppParser.g:9628:4: (lv_name_2_0= ruleEString )
            {
            // InternalQualityBtCppParser.g:9628:4: (lv_name_2_0= ruleEString )
            // InternalQualityBtCppParser.g:9629:5: lv_name_2_0= ruleEString
            {

            					newCompositeNode(grammarAccess.getThreadedActionNodeAccess().getNameEStringParserRuleCall_2_0());
            				
            pushFollow(FOLLOW_21);
            lv_name_2_0=ruleEString();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getThreadedActionNodeRule());
            					}
            					set(
            						current,
            						"name",
            						lv_name_2_0,
            						"org.xtext.btcpp.QualityBtCpp.EString");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            otherlv_3=(Token)match(input,LeftCurlyBracket,FOLLOW_45); 

            			newLeafNode(otherlv_3, grammarAccess.getThreadedActionNodeAccess().getLeftCurlyBracketKeyword_3());
            		
            // InternalQualityBtCppParser.g:9650:3: (otherlv_4= ID ( (lv_ID_5_0= ruleEString ) ) )?
            int alt253=2;
            int LA253_0 = input.LA(1);

            if ( (LA253_0==ID) ) {
                alt253=1;
            }
            switch (alt253) {
                case 1 :
                    // InternalQualityBtCppParser.g:9651:4: otherlv_4= ID ( (lv_ID_5_0= ruleEString ) )
                    {
                    otherlv_4=(Token)match(input,ID,FOLLOW_3); 

                    				newLeafNode(otherlv_4, grammarAccess.getThreadedActionNodeAccess().getIDKeyword_4_0());
                    			
                    // InternalQualityBtCppParser.g:9655:4: ( (lv_ID_5_0= ruleEString ) )
                    // InternalQualityBtCppParser.g:9656:5: (lv_ID_5_0= ruleEString )
                    {
                    // InternalQualityBtCppParser.g:9656:5: (lv_ID_5_0= ruleEString )
                    // InternalQualityBtCppParser.g:9657:6: lv_ID_5_0= ruleEString
                    {

                    						newCompositeNode(grammarAccess.getThreadedActionNodeAccess().getIDEStringParserRuleCall_4_1_0());
                    					
                    pushFollow(FOLLOW_25);
                    lv_ID_5_0=ruleEString();

                    state._fsp--;


                    						if (current==null) {
                    							current = createModelElementForParent(grammarAccess.getThreadedActionNodeRule());
                    						}
                    						set(
                    							current,
                    							"ID",
                    							lv_ID_5_0,
                    							"org.xtext.btcpp.QualityBtCpp.EString");
                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }


                    }
                    break;

            }

            // InternalQualityBtCppParser.g:9675:3: (otherlv_6= Satisfices otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis )?
            int alt255=2;
            int LA255_0 = input.LA(1);

            if ( (LA255_0==Satisfices) ) {
                alt255=1;
            }
            switch (alt255) {
                case 1 :
                    // InternalQualityBtCppParser.g:9676:4: otherlv_6= Satisfices otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis
                    {
                    otherlv_6=(Token)match(input,Satisfices,FOLLOW_26); 

                    				newLeafNode(otherlv_6, grammarAccess.getThreadedActionNodeAccess().getSatisficesKeyword_5_0());
                    			
                    otherlv_7=(Token)match(input,LeftParenthesis,FOLLOW_3); 

                    				newLeafNode(otherlv_7, grammarAccess.getThreadedActionNodeAccess().getLeftParenthesisKeyword_5_1());
                    			
                    // InternalQualityBtCppParser.g:9684:4: ( ( ruleEString ) )
                    // InternalQualityBtCppParser.g:9685:5: ( ruleEString )
                    {
                    // InternalQualityBtCppParser.g:9685:5: ( ruleEString )
                    // InternalQualityBtCppParser.g:9686:6: ruleEString
                    {

                    						if (current==null) {
                    							current = createModelElement(grammarAccess.getThreadedActionNodeRule());
                    						}
                    					

                    						newCompositeNode(grammarAccess.getThreadedActionNodeAccess().getSatisficesQualityCrossReference_5_2_0());
                    					
                    pushFollow(FOLLOW_20);
                    ruleEString();

                    state._fsp--;


                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:9700:4: (otherlv_9= Comma ( ( ruleEString ) ) )*
                    loop254:
                    do {
                        int alt254=2;
                        int LA254_0 = input.LA(1);

                        if ( (LA254_0==Comma) ) {
                            alt254=1;
                        }


                        switch (alt254) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:9701:5: otherlv_9= Comma ( ( ruleEString ) )
                    	    {
                    	    otherlv_9=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_9, grammarAccess.getThreadedActionNodeAccess().getCommaKeyword_5_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:9705:5: ( ( ruleEString ) )
                    	    // InternalQualityBtCppParser.g:9706:6: ( ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:9706:6: ( ruleEString )
                    	    // InternalQualityBtCppParser.g:9707:7: ruleEString
                    	    {

                    	    							if (current==null) {
                    	    								current = createModelElement(grammarAccess.getThreadedActionNodeRule());
                    	    							}
                    	    						

                    	    							newCompositeNode(grammarAccess.getThreadedActionNodeAccess().getSatisficesQualityCrossReference_5_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_20);
                    	    ruleEString();

                    	    state._fsp--;


                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop254;
                        }
                    } while (true);

                    otherlv_11=(Token)match(input,RightParenthesis,FOLLOW_27); 

                    				newLeafNode(otherlv_11, grammarAccess.getThreadedActionNodeAccess().getRightParenthesisKeyword_5_4());
                    			

                    }
                    break;

            }

            // InternalQualityBtCppParser.g:9727:3: (otherlv_12= Satisfies otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis )?
            int alt257=2;
            int LA257_0 = input.LA(1);

            if ( (LA257_0==Satisfies) ) {
                alt257=1;
            }
            switch (alt257) {
                case 1 :
                    // InternalQualityBtCppParser.g:9728:4: otherlv_12= Satisfies otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis
                    {
                    otherlv_12=(Token)match(input,Satisfies,FOLLOW_26); 

                    				newLeafNode(otherlv_12, grammarAccess.getThreadedActionNodeAccess().getSatisfiesKeyword_6_0());
                    			
                    otherlv_13=(Token)match(input,LeftParenthesis,FOLLOW_3); 

                    				newLeafNode(otherlv_13, grammarAccess.getThreadedActionNodeAccess().getLeftParenthesisKeyword_6_1());
                    			
                    // InternalQualityBtCppParser.g:9736:4: ( ( ruleEString ) )
                    // InternalQualityBtCppParser.g:9737:5: ( ruleEString )
                    {
                    // InternalQualityBtCppParser.g:9737:5: ( ruleEString )
                    // InternalQualityBtCppParser.g:9738:6: ruleEString
                    {

                    						if (current==null) {
                    							current = createModelElement(grammarAccess.getThreadedActionNodeRule());
                    						}
                    					

                    						newCompositeNode(grammarAccess.getThreadedActionNodeAccess().getSatisfiesQualityRequirementCrossReference_6_2_0());
                    					
                    pushFollow(FOLLOW_20);
                    ruleEString();

                    state._fsp--;


                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:9752:4: (otherlv_15= Comma ( ( ruleEString ) ) )*
                    loop256:
                    do {
                        int alt256=2;
                        int LA256_0 = input.LA(1);

                        if ( (LA256_0==Comma) ) {
                            alt256=1;
                        }


                        switch (alt256) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:9753:5: otherlv_15= Comma ( ( ruleEString ) )
                    	    {
                    	    otherlv_15=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_15, grammarAccess.getThreadedActionNodeAccess().getCommaKeyword_6_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:9757:5: ( ( ruleEString ) )
                    	    // InternalQualityBtCppParser.g:9758:6: ( ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:9758:6: ( ruleEString )
                    	    // InternalQualityBtCppParser.g:9759:7: ruleEString
                    	    {

                    	    							if (current==null) {
                    	    								current = createModelElement(grammarAccess.getThreadedActionNodeRule());
                    	    							}
                    	    						

                    	    							newCompositeNode(grammarAccess.getThreadedActionNodeAccess().getSatisfiesQualityRequirementCrossReference_6_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_20);
                    	    ruleEString();

                    	    state._fsp--;


                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop256;
                        }
                    } while (true);

                    otherlv_17=(Token)match(input,RightParenthesis,FOLLOW_28); 

                    				newLeafNode(otherlv_17, grammarAccess.getThreadedActionNodeAccess().getRightParenthesisKeyword_6_4());
                    			

                    }
                    break;

            }

            // InternalQualityBtCppParser.g:9779:3: (otherlv_18= Parameters otherlv_19= LeftCurlyBracket ( (lv_parameters_20_0= ruleParameter ) ) (otherlv_21= Comma ( (lv_parameters_22_0= ruleParameter ) ) )* otherlv_23= RightCurlyBracket )?
            int alt259=2;
            int LA259_0 = input.LA(1);

            if ( (LA259_0==Parameters) ) {
                alt259=1;
            }
            switch (alt259) {
                case 1 :
                    // InternalQualityBtCppParser.g:9780:4: otherlv_18= Parameters otherlv_19= LeftCurlyBracket ( (lv_parameters_20_0= ruleParameter ) ) (otherlv_21= Comma ( (lv_parameters_22_0= ruleParameter ) ) )* otherlv_23= RightCurlyBracket
                    {
                    otherlv_18=(Token)match(input,Parameters,FOLLOW_21); 

                    				newLeafNode(otherlv_18, grammarAccess.getThreadedActionNodeAccess().getParametersKeyword_7_0());
                    			
                    otherlv_19=(Token)match(input,LeftCurlyBracket,FOLLOW_3); 

                    				newLeafNode(otherlv_19, grammarAccess.getThreadedActionNodeAccess().getLeftCurlyBracketKeyword_7_1());
                    			
                    // InternalQualityBtCppParser.g:9788:4: ( (lv_parameters_20_0= ruleParameter ) )
                    // InternalQualityBtCppParser.g:9789:5: (lv_parameters_20_0= ruleParameter )
                    {
                    // InternalQualityBtCppParser.g:9789:5: (lv_parameters_20_0= ruleParameter )
                    // InternalQualityBtCppParser.g:9790:6: lv_parameters_20_0= ruleParameter
                    {

                    						newCompositeNode(grammarAccess.getThreadedActionNodeAccess().getParametersParameterParserRuleCall_7_2_0());
                    					
                    pushFollow(FOLLOW_29);
                    lv_parameters_20_0=ruleParameter();

                    state._fsp--;


                    						if (current==null) {
                    							current = createModelElementForParent(grammarAccess.getThreadedActionNodeRule());
                    						}
                    						add(
                    							current,
                    							"parameters",
                    							lv_parameters_20_0,
                    							"org.xtext.btcpp.QualityBtCpp.Parameter");
                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:9807:4: (otherlv_21= Comma ( (lv_parameters_22_0= ruleParameter ) ) )*
                    loop258:
                    do {
                        int alt258=2;
                        int LA258_0 = input.LA(1);

                        if ( (LA258_0==Comma) ) {
                            alt258=1;
                        }


                        switch (alt258) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:9808:5: otherlv_21= Comma ( (lv_parameters_22_0= ruleParameter ) )
                    	    {
                    	    otherlv_21=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_21, grammarAccess.getThreadedActionNodeAccess().getCommaKeyword_7_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:9812:5: ( (lv_parameters_22_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:9813:6: (lv_parameters_22_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:9813:6: (lv_parameters_22_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:9814:7: lv_parameters_22_0= ruleParameter
                    	    {

                    	    							newCompositeNode(grammarAccess.getThreadedActionNodeAccess().getParametersParameterParserRuleCall_7_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_29);
                    	    lv_parameters_22_0=ruleParameter();

                    	    state._fsp--;


                    	    							if (current==null) {
                    	    								current = createModelElementForParent(grammarAccess.getThreadedActionNodeRule());
                    	    							}
                    	    							add(
                    	    								current,
                    	    								"parameters",
                    	    								lv_parameters_22_0,
                    	    								"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop258;
                        }
                    } while (true);

                    otherlv_23=(Token)match(input,RightCurlyBracket,FOLLOW_30); 

                    				newLeafNode(otherlv_23, grammarAccess.getThreadedActionNodeAccess().getRightCurlyBracketKeyword_7_4());
                    			

                    }
                    break;

            }

            otherlv_24=(Token)match(input,RightCurlyBracket,FOLLOW_2); 

            			newLeafNode(otherlv_24, grammarAccess.getThreadedActionNodeAccess().getRightCurlyBracketKeyword_8());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleThreadedActionNode"


    // $ANTLR start "entryRuleCoroActionNode"
    // InternalQualityBtCppParser.g:9845:1: entryRuleCoroActionNode returns [EObject current=null] : iv_ruleCoroActionNode= ruleCoroActionNode EOF ;
    public final EObject entryRuleCoroActionNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCoroActionNode = null;


        try {
            // InternalQualityBtCppParser.g:9845:55: (iv_ruleCoroActionNode= ruleCoroActionNode EOF )
            // InternalQualityBtCppParser.g:9846:2: iv_ruleCoroActionNode= ruleCoroActionNode EOF
            {
             newCompositeNode(grammarAccess.getCoroActionNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleCoroActionNode=ruleCoroActionNode();

            state._fsp--;

             current =iv_ruleCoroActionNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCoroActionNode"


    // $ANTLR start "ruleCoroActionNode"
    // InternalQualityBtCppParser.g:9852:1: ruleCoroActionNode returns [EObject current=null] : ( () otherlv_1= CoroActionNode ( (lv_name_2_0= ruleEString ) ) otherlv_3= LeftCurlyBracket (otherlv_4= ID ( (lv_ID_5_0= ruleEString ) ) )? (otherlv_6= Satisfices otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis )? (otherlv_12= Satisfies otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis )? (otherlv_18= Parameters otherlv_19= LeftCurlyBracket ( (lv_parameters_20_0= ruleParameter ) ) (otherlv_21= Comma ( (lv_parameters_22_0= ruleParameter ) ) )* otherlv_23= RightCurlyBracket )? otherlv_24= RightCurlyBracket ) ;
    public final EObject ruleCoroActionNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_18=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token otherlv_23=null;
        Token otherlv_24=null;
        AntlrDatatypeRuleToken lv_name_2_0 = null;

        AntlrDatatypeRuleToken lv_ID_5_0 = null;

        EObject lv_parameters_20_0 = null;

        EObject lv_parameters_22_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:9858:2: ( ( () otherlv_1= CoroActionNode ( (lv_name_2_0= ruleEString ) ) otherlv_3= LeftCurlyBracket (otherlv_4= ID ( (lv_ID_5_0= ruleEString ) ) )? (otherlv_6= Satisfices otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis )? (otherlv_12= Satisfies otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis )? (otherlv_18= Parameters otherlv_19= LeftCurlyBracket ( (lv_parameters_20_0= ruleParameter ) ) (otherlv_21= Comma ( (lv_parameters_22_0= ruleParameter ) ) )* otherlv_23= RightCurlyBracket )? otherlv_24= RightCurlyBracket ) )
            // InternalQualityBtCppParser.g:9859:2: ( () otherlv_1= CoroActionNode ( (lv_name_2_0= ruleEString ) ) otherlv_3= LeftCurlyBracket (otherlv_4= ID ( (lv_ID_5_0= ruleEString ) ) )? (otherlv_6= Satisfices otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis )? (otherlv_12= Satisfies otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis )? (otherlv_18= Parameters otherlv_19= LeftCurlyBracket ( (lv_parameters_20_0= ruleParameter ) ) (otherlv_21= Comma ( (lv_parameters_22_0= ruleParameter ) ) )* otherlv_23= RightCurlyBracket )? otherlv_24= RightCurlyBracket )
            {
            // InternalQualityBtCppParser.g:9859:2: ( () otherlv_1= CoroActionNode ( (lv_name_2_0= ruleEString ) ) otherlv_3= LeftCurlyBracket (otherlv_4= ID ( (lv_ID_5_0= ruleEString ) ) )? (otherlv_6= Satisfices otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis )? (otherlv_12= Satisfies otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis )? (otherlv_18= Parameters otherlv_19= LeftCurlyBracket ( (lv_parameters_20_0= ruleParameter ) ) (otherlv_21= Comma ( (lv_parameters_22_0= ruleParameter ) ) )* otherlv_23= RightCurlyBracket )? otherlv_24= RightCurlyBracket )
            // InternalQualityBtCppParser.g:9860:3: () otherlv_1= CoroActionNode ( (lv_name_2_0= ruleEString ) ) otherlv_3= LeftCurlyBracket (otherlv_4= ID ( (lv_ID_5_0= ruleEString ) ) )? (otherlv_6= Satisfices otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis )? (otherlv_12= Satisfies otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis )? (otherlv_18= Parameters otherlv_19= LeftCurlyBracket ( (lv_parameters_20_0= ruleParameter ) ) (otherlv_21= Comma ( (lv_parameters_22_0= ruleParameter ) ) )* otherlv_23= RightCurlyBracket )? otherlv_24= RightCurlyBracket
            {
            // InternalQualityBtCppParser.g:9860:3: ()
            // InternalQualityBtCppParser.g:9861:4: 
            {

            				current = forceCreateModelElement(
            					grammarAccess.getCoroActionNodeAccess().getCoroActionNodeAction_0(),
            					current);
            			

            }

            otherlv_1=(Token)match(input,CoroActionNode,FOLLOW_3); 

            			newLeafNode(otherlv_1, grammarAccess.getCoroActionNodeAccess().getCoroActionNodeKeyword_1());
            		
            // InternalQualityBtCppParser.g:9871:3: ( (lv_name_2_0= ruleEString ) )
            // InternalQualityBtCppParser.g:9872:4: (lv_name_2_0= ruleEString )
            {
            // InternalQualityBtCppParser.g:9872:4: (lv_name_2_0= ruleEString )
            // InternalQualityBtCppParser.g:9873:5: lv_name_2_0= ruleEString
            {

            					newCompositeNode(grammarAccess.getCoroActionNodeAccess().getNameEStringParserRuleCall_2_0());
            				
            pushFollow(FOLLOW_21);
            lv_name_2_0=ruleEString();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getCoroActionNodeRule());
            					}
            					set(
            						current,
            						"name",
            						lv_name_2_0,
            						"org.xtext.btcpp.QualityBtCpp.EString");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            otherlv_3=(Token)match(input,LeftCurlyBracket,FOLLOW_45); 

            			newLeafNode(otherlv_3, grammarAccess.getCoroActionNodeAccess().getLeftCurlyBracketKeyword_3());
            		
            // InternalQualityBtCppParser.g:9894:3: (otherlv_4= ID ( (lv_ID_5_0= ruleEString ) ) )?
            int alt260=2;
            int LA260_0 = input.LA(1);

            if ( (LA260_0==ID) ) {
                alt260=1;
            }
            switch (alt260) {
                case 1 :
                    // InternalQualityBtCppParser.g:9895:4: otherlv_4= ID ( (lv_ID_5_0= ruleEString ) )
                    {
                    otherlv_4=(Token)match(input,ID,FOLLOW_3); 

                    				newLeafNode(otherlv_4, grammarAccess.getCoroActionNodeAccess().getIDKeyword_4_0());
                    			
                    // InternalQualityBtCppParser.g:9899:4: ( (lv_ID_5_0= ruleEString ) )
                    // InternalQualityBtCppParser.g:9900:5: (lv_ID_5_0= ruleEString )
                    {
                    // InternalQualityBtCppParser.g:9900:5: (lv_ID_5_0= ruleEString )
                    // InternalQualityBtCppParser.g:9901:6: lv_ID_5_0= ruleEString
                    {

                    						newCompositeNode(grammarAccess.getCoroActionNodeAccess().getIDEStringParserRuleCall_4_1_0());
                    					
                    pushFollow(FOLLOW_25);
                    lv_ID_5_0=ruleEString();

                    state._fsp--;


                    						if (current==null) {
                    							current = createModelElementForParent(grammarAccess.getCoroActionNodeRule());
                    						}
                    						set(
                    							current,
                    							"ID",
                    							lv_ID_5_0,
                    							"org.xtext.btcpp.QualityBtCpp.EString");
                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }


                    }
                    break;

            }

            // InternalQualityBtCppParser.g:9919:3: (otherlv_6= Satisfices otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis )?
            int alt262=2;
            int LA262_0 = input.LA(1);

            if ( (LA262_0==Satisfices) ) {
                alt262=1;
            }
            switch (alt262) {
                case 1 :
                    // InternalQualityBtCppParser.g:9920:4: otherlv_6= Satisfices otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis
                    {
                    otherlv_6=(Token)match(input,Satisfices,FOLLOW_26); 

                    				newLeafNode(otherlv_6, grammarAccess.getCoroActionNodeAccess().getSatisficesKeyword_5_0());
                    			
                    otherlv_7=(Token)match(input,LeftParenthesis,FOLLOW_3); 

                    				newLeafNode(otherlv_7, grammarAccess.getCoroActionNodeAccess().getLeftParenthesisKeyword_5_1());
                    			
                    // InternalQualityBtCppParser.g:9928:4: ( ( ruleEString ) )
                    // InternalQualityBtCppParser.g:9929:5: ( ruleEString )
                    {
                    // InternalQualityBtCppParser.g:9929:5: ( ruleEString )
                    // InternalQualityBtCppParser.g:9930:6: ruleEString
                    {

                    						if (current==null) {
                    							current = createModelElement(grammarAccess.getCoroActionNodeRule());
                    						}
                    					

                    						newCompositeNode(grammarAccess.getCoroActionNodeAccess().getSatisficesQualityCrossReference_5_2_0());
                    					
                    pushFollow(FOLLOW_20);
                    ruleEString();

                    state._fsp--;


                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:9944:4: (otherlv_9= Comma ( ( ruleEString ) ) )*
                    loop261:
                    do {
                        int alt261=2;
                        int LA261_0 = input.LA(1);

                        if ( (LA261_0==Comma) ) {
                            alt261=1;
                        }


                        switch (alt261) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:9945:5: otherlv_9= Comma ( ( ruleEString ) )
                    	    {
                    	    otherlv_9=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_9, grammarAccess.getCoroActionNodeAccess().getCommaKeyword_5_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:9949:5: ( ( ruleEString ) )
                    	    // InternalQualityBtCppParser.g:9950:6: ( ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:9950:6: ( ruleEString )
                    	    // InternalQualityBtCppParser.g:9951:7: ruleEString
                    	    {

                    	    							if (current==null) {
                    	    								current = createModelElement(grammarAccess.getCoroActionNodeRule());
                    	    							}
                    	    						

                    	    							newCompositeNode(grammarAccess.getCoroActionNodeAccess().getSatisficesQualityCrossReference_5_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_20);
                    	    ruleEString();

                    	    state._fsp--;


                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop261;
                        }
                    } while (true);

                    otherlv_11=(Token)match(input,RightParenthesis,FOLLOW_27); 

                    				newLeafNode(otherlv_11, grammarAccess.getCoroActionNodeAccess().getRightParenthesisKeyword_5_4());
                    			

                    }
                    break;

            }

            // InternalQualityBtCppParser.g:9971:3: (otherlv_12= Satisfies otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis )?
            int alt264=2;
            int LA264_0 = input.LA(1);

            if ( (LA264_0==Satisfies) ) {
                alt264=1;
            }
            switch (alt264) {
                case 1 :
                    // InternalQualityBtCppParser.g:9972:4: otherlv_12= Satisfies otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis
                    {
                    otherlv_12=(Token)match(input,Satisfies,FOLLOW_26); 

                    				newLeafNode(otherlv_12, grammarAccess.getCoroActionNodeAccess().getSatisfiesKeyword_6_0());
                    			
                    otherlv_13=(Token)match(input,LeftParenthesis,FOLLOW_3); 

                    				newLeafNode(otherlv_13, grammarAccess.getCoroActionNodeAccess().getLeftParenthesisKeyword_6_1());
                    			
                    // InternalQualityBtCppParser.g:9980:4: ( ( ruleEString ) )
                    // InternalQualityBtCppParser.g:9981:5: ( ruleEString )
                    {
                    // InternalQualityBtCppParser.g:9981:5: ( ruleEString )
                    // InternalQualityBtCppParser.g:9982:6: ruleEString
                    {

                    						if (current==null) {
                    							current = createModelElement(grammarAccess.getCoroActionNodeRule());
                    						}
                    					

                    						newCompositeNode(grammarAccess.getCoroActionNodeAccess().getSatisfiesQualityRequirementCrossReference_6_2_0());
                    					
                    pushFollow(FOLLOW_20);
                    ruleEString();

                    state._fsp--;


                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:9996:4: (otherlv_15= Comma ( ( ruleEString ) ) )*
                    loop263:
                    do {
                        int alt263=2;
                        int LA263_0 = input.LA(1);

                        if ( (LA263_0==Comma) ) {
                            alt263=1;
                        }


                        switch (alt263) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:9997:5: otherlv_15= Comma ( ( ruleEString ) )
                    	    {
                    	    otherlv_15=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_15, grammarAccess.getCoroActionNodeAccess().getCommaKeyword_6_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:10001:5: ( ( ruleEString ) )
                    	    // InternalQualityBtCppParser.g:10002:6: ( ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:10002:6: ( ruleEString )
                    	    // InternalQualityBtCppParser.g:10003:7: ruleEString
                    	    {

                    	    							if (current==null) {
                    	    								current = createModelElement(grammarAccess.getCoroActionNodeRule());
                    	    							}
                    	    						

                    	    							newCompositeNode(grammarAccess.getCoroActionNodeAccess().getSatisfiesQualityRequirementCrossReference_6_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_20);
                    	    ruleEString();

                    	    state._fsp--;


                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop263;
                        }
                    } while (true);

                    otherlv_17=(Token)match(input,RightParenthesis,FOLLOW_28); 

                    				newLeafNode(otherlv_17, grammarAccess.getCoroActionNodeAccess().getRightParenthesisKeyword_6_4());
                    			

                    }
                    break;

            }

            // InternalQualityBtCppParser.g:10023:3: (otherlv_18= Parameters otherlv_19= LeftCurlyBracket ( (lv_parameters_20_0= ruleParameter ) ) (otherlv_21= Comma ( (lv_parameters_22_0= ruleParameter ) ) )* otherlv_23= RightCurlyBracket )?
            int alt266=2;
            int LA266_0 = input.LA(1);

            if ( (LA266_0==Parameters) ) {
                alt266=1;
            }
            switch (alt266) {
                case 1 :
                    // InternalQualityBtCppParser.g:10024:4: otherlv_18= Parameters otherlv_19= LeftCurlyBracket ( (lv_parameters_20_0= ruleParameter ) ) (otherlv_21= Comma ( (lv_parameters_22_0= ruleParameter ) ) )* otherlv_23= RightCurlyBracket
                    {
                    otherlv_18=(Token)match(input,Parameters,FOLLOW_21); 

                    				newLeafNode(otherlv_18, grammarAccess.getCoroActionNodeAccess().getParametersKeyword_7_0());
                    			
                    otherlv_19=(Token)match(input,LeftCurlyBracket,FOLLOW_3); 

                    				newLeafNode(otherlv_19, grammarAccess.getCoroActionNodeAccess().getLeftCurlyBracketKeyword_7_1());
                    			
                    // InternalQualityBtCppParser.g:10032:4: ( (lv_parameters_20_0= ruleParameter ) )
                    // InternalQualityBtCppParser.g:10033:5: (lv_parameters_20_0= ruleParameter )
                    {
                    // InternalQualityBtCppParser.g:10033:5: (lv_parameters_20_0= ruleParameter )
                    // InternalQualityBtCppParser.g:10034:6: lv_parameters_20_0= ruleParameter
                    {

                    						newCompositeNode(grammarAccess.getCoroActionNodeAccess().getParametersParameterParserRuleCall_7_2_0());
                    					
                    pushFollow(FOLLOW_29);
                    lv_parameters_20_0=ruleParameter();

                    state._fsp--;


                    						if (current==null) {
                    							current = createModelElementForParent(grammarAccess.getCoroActionNodeRule());
                    						}
                    						add(
                    							current,
                    							"parameters",
                    							lv_parameters_20_0,
                    							"org.xtext.btcpp.QualityBtCpp.Parameter");
                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:10051:4: (otherlv_21= Comma ( (lv_parameters_22_0= ruleParameter ) ) )*
                    loop265:
                    do {
                        int alt265=2;
                        int LA265_0 = input.LA(1);

                        if ( (LA265_0==Comma) ) {
                            alt265=1;
                        }


                        switch (alt265) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:10052:5: otherlv_21= Comma ( (lv_parameters_22_0= ruleParameter ) )
                    	    {
                    	    otherlv_21=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_21, grammarAccess.getCoroActionNodeAccess().getCommaKeyword_7_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:10056:5: ( (lv_parameters_22_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:10057:6: (lv_parameters_22_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:10057:6: (lv_parameters_22_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:10058:7: lv_parameters_22_0= ruleParameter
                    	    {

                    	    							newCompositeNode(grammarAccess.getCoroActionNodeAccess().getParametersParameterParserRuleCall_7_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_29);
                    	    lv_parameters_22_0=ruleParameter();

                    	    state._fsp--;


                    	    							if (current==null) {
                    	    								current = createModelElementForParent(grammarAccess.getCoroActionNodeRule());
                    	    							}
                    	    							add(
                    	    								current,
                    	    								"parameters",
                    	    								lv_parameters_22_0,
                    	    								"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop265;
                        }
                    } while (true);

                    otherlv_23=(Token)match(input,RightCurlyBracket,FOLLOW_30); 

                    				newLeafNode(otherlv_23, grammarAccess.getCoroActionNodeAccess().getRightCurlyBracketKeyword_7_4());
                    			

                    }
                    break;

            }

            otherlv_24=(Token)match(input,RightCurlyBracket,FOLLOW_2); 

            			newLeafNode(otherlv_24, grammarAccess.getCoroActionNodeAccess().getRightCurlyBracketKeyword_8());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCoroActionNode"


    // $ANTLR start "entryRuleSleepNode"
    // InternalQualityBtCppParser.g:10089:1: entryRuleSleepNode returns [EObject current=null] : iv_ruleSleepNode= ruleSleepNode EOF ;
    public final EObject entryRuleSleepNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSleepNode = null;


        try {
            // InternalQualityBtCppParser.g:10089:50: (iv_ruleSleepNode= ruleSleepNode EOF )
            // InternalQualityBtCppParser.g:10090:2: iv_ruleSleepNode= ruleSleepNode EOF
            {
             newCompositeNode(grammarAccess.getSleepNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleSleepNode=ruleSleepNode();

            state._fsp--;

             current =iv_ruleSleepNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSleepNode"


    // $ANTLR start "ruleSleepNode"
    // InternalQualityBtCppParser.g:10096:1: ruleSleepNode returns [EObject current=null] : ( () otherlv_1= SleepNode ( (lv_name_2_0= ruleEString ) ) otherlv_3= LeftCurlyBracket (otherlv_4= ID ( (lv_ID_5_0= ruleEString ) ) )? (otherlv_6= Satisfices otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis )? (otherlv_12= Satisfies otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis )? (otherlv_18= Parameters otherlv_19= LeftCurlyBracket ( (lv_parameters_20_0= ruleParameter ) ) (otherlv_21= Comma ( (lv_parameters_22_0= ruleParameter ) ) )* otherlv_23= RightCurlyBracket )? otherlv_24= RightCurlyBracket ) ;
    public final EObject ruleSleepNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_18=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token otherlv_23=null;
        Token otherlv_24=null;
        AntlrDatatypeRuleToken lv_name_2_0 = null;

        AntlrDatatypeRuleToken lv_ID_5_0 = null;

        EObject lv_parameters_20_0 = null;

        EObject lv_parameters_22_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:10102:2: ( ( () otherlv_1= SleepNode ( (lv_name_2_0= ruleEString ) ) otherlv_3= LeftCurlyBracket (otherlv_4= ID ( (lv_ID_5_0= ruleEString ) ) )? (otherlv_6= Satisfices otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis )? (otherlv_12= Satisfies otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis )? (otherlv_18= Parameters otherlv_19= LeftCurlyBracket ( (lv_parameters_20_0= ruleParameter ) ) (otherlv_21= Comma ( (lv_parameters_22_0= ruleParameter ) ) )* otherlv_23= RightCurlyBracket )? otherlv_24= RightCurlyBracket ) )
            // InternalQualityBtCppParser.g:10103:2: ( () otherlv_1= SleepNode ( (lv_name_2_0= ruleEString ) ) otherlv_3= LeftCurlyBracket (otherlv_4= ID ( (lv_ID_5_0= ruleEString ) ) )? (otherlv_6= Satisfices otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis )? (otherlv_12= Satisfies otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis )? (otherlv_18= Parameters otherlv_19= LeftCurlyBracket ( (lv_parameters_20_0= ruleParameter ) ) (otherlv_21= Comma ( (lv_parameters_22_0= ruleParameter ) ) )* otherlv_23= RightCurlyBracket )? otherlv_24= RightCurlyBracket )
            {
            // InternalQualityBtCppParser.g:10103:2: ( () otherlv_1= SleepNode ( (lv_name_2_0= ruleEString ) ) otherlv_3= LeftCurlyBracket (otherlv_4= ID ( (lv_ID_5_0= ruleEString ) ) )? (otherlv_6= Satisfices otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis )? (otherlv_12= Satisfies otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis )? (otherlv_18= Parameters otherlv_19= LeftCurlyBracket ( (lv_parameters_20_0= ruleParameter ) ) (otherlv_21= Comma ( (lv_parameters_22_0= ruleParameter ) ) )* otherlv_23= RightCurlyBracket )? otherlv_24= RightCurlyBracket )
            // InternalQualityBtCppParser.g:10104:3: () otherlv_1= SleepNode ( (lv_name_2_0= ruleEString ) ) otherlv_3= LeftCurlyBracket (otherlv_4= ID ( (lv_ID_5_0= ruleEString ) ) )? (otherlv_6= Satisfices otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis )? (otherlv_12= Satisfies otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis )? (otherlv_18= Parameters otherlv_19= LeftCurlyBracket ( (lv_parameters_20_0= ruleParameter ) ) (otherlv_21= Comma ( (lv_parameters_22_0= ruleParameter ) ) )* otherlv_23= RightCurlyBracket )? otherlv_24= RightCurlyBracket
            {
            // InternalQualityBtCppParser.g:10104:3: ()
            // InternalQualityBtCppParser.g:10105:4: 
            {

            				current = forceCreateModelElement(
            					grammarAccess.getSleepNodeAccess().getSleepNodeAction_0(),
            					current);
            			

            }

            otherlv_1=(Token)match(input,SleepNode,FOLLOW_3); 

            			newLeafNode(otherlv_1, grammarAccess.getSleepNodeAccess().getSleepNodeKeyword_1());
            		
            // InternalQualityBtCppParser.g:10115:3: ( (lv_name_2_0= ruleEString ) )
            // InternalQualityBtCppParser.g:10116:4: (lv_name_2_0= ruleEString )
            {
            // InternalQualityBtCppParser.g:10116:4: (lv_name_2_0= ruleEString )
            // InternalQualityBtCppParser.g:10117:5: lv_name_2_0= ruleEString
            {

            					newCompositeNode(grammarAccess.getSleepNodeAccess().getNameEStringParserRuleCall_2_0());
            				
            pushFollow(FOLLOW_21);
            lv_name_2_0=ruleEString();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getSleepNodeRule());
            					}
            					set(
            						current,
            						"name",
            						lv_name_2_0,
            						"org.xtext.btcpp.QualityBtCpp.EString");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            otherlv_3=(Token)match(input,LeftCurlyBracket,FOLLOW_45); 

            			newLeafNode(otherlv_3, grammarAccess.getSleepNodeAccess().getLeftCurlyBracketKeyword_3());
            		
            // InternalQualityBtCppParser.g:10138:3: (otherlv_4= ID ( (lv_ID_5_0= ruleEString ) ) )?
            int alt267=2;
            int LA267_0 = input.LA(1);

            if ( (LA267_0==ID) ) {
                alt267=1;
            }
            switch (alt267) {
                case 1 :
                    // InternalQualityBtCppParser.g:10139:4: otherlv_4= ID ( (lv_ID_5_0= ruleEString ) )
                    {
                    otherlv_4=(Token)match(input,ID,FOLLOW_3); 

                    				newLeafNode(otherlv_4, grammarAccess.getSleepNodeAccess().getIDKeyword_4_0());
                    			
                    // InternalQualityBtCppParser.g:10143:4: ( (lv_ID_5_0= ruleEString ) )
                    // InternalQualityBtCppParser.g:10144:5: (lv_ID_5_0= ruleEString )
                    {
                    // InternalQualityBtCppParser.g:10144:5: (lv_ID_5_0= ruleEString )
                    // InternalQualityBtCppParser.g:10145:6: lv_ID_5_0= ruleEString
                    {

                    						newCompositeNode(grammarAccess.getSleepNodeAccess().getIDEStringParserRuleCall_4_1_0());
                    					
                    pushFollow(FOLLOW_25);
                    lv_ID_5_0=ruleEString();

                    state._fsp--;


                    						if (current==null) {
                    							current = createModelElementForParent(grammarAccess.getSleepNodeRule());
                    						}
                    						set(
                    							current,
                    							"ID",
                    							lv_ID_5_0,
                    							"org.xtext.btcpp.QualityBtCpp.EString");
                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }


                    }
                    break;

            }

            // InternalQualityBtCppParser.g:10163:3: (otherlv_6= Satisfices otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis )?
            int alt269=2;
            int LA269_0 = input.LA(1);

            if ( (LA269_0==Satisfices) ) {
                alt269=1;
            }
            switch (alt269) {
                case 1 :
                    // InternalQualityBtCppParser.g:10164:4: otherlv_6= Satisfices otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis
                    {
                    otherlv_6=(Token)match(input,Satisfices,FOLLOW_26); 

                    				newLeafNode(otherlv_6, grammarAccess.getSleepNodeAccess().getSatisficesKeyword_5_0());
                    			
                    otherlv_7=(Token)match(input,LeftParenthesis,FOLLOW_3); 

                    				newLeafNode(otherlv_7, grammarAccess.getSleepNodeAccess().getLeftParenthesisKeyword_5_1());
                    			
                    // InternalQualityBtCppParser.g:10172:4: ( ( ruleEString ) )
                    // InternalQualityBtCppParser.g:10173:5: ( ruleEString )
                    {
                    // InternalQualityBtCppParser.g:10173:5: ( ruleEString )
                    // InternalQualityBtCppParser.g:10174:6: ruleEString
                    {

                    						if (current==null) {
                    							current = createModelElement(grammarAccess.getSleepNodeRule());
                    						}
                    					

                    						newCompositeNode(grammarAccess.getSleepNodeAccess().getSatisficesQualityCrossReference_5_2_0());
                    					
                    pushFollow(FOLLOW_20);
                    ruleEString();

                    state._fsp--;


                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:10188:4: (otherlv_9= Comma ( ( ruleEString ) ) )*
                    loop268:
                    do {
                        int alt268=2;
                        int LA268_0 = input.LA(1);

                        if ( (LA268_0==Comma) ) {
                            alt268=1;
                        }


                        switch (alt268) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:10189:5: otherlv_9= Comma ( ( ruleEString ) )
                    	    {
                    	    otherlv_9=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_9, grammarAccess.getSleepNodeAccess().getCommaKeyword_5_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:10193:5: ( ( ruleEString ) )
                    	    // InternalQualityBtCppParser.g:10194:6: ( ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:10194:6: ( ruleEString )
                    	    // InternalQualityBtCppParser.g:10195:7: ruleEString
                    	    {

                    	    							if (current==null) {
                    	    								current = createModelElement(grammarAccess.getSleepNodeRule());
                    	    							}
                    	    						

                    	    							newCompositeNode(grammarAccess.getSleepNodeAccess().getSatisficesQualityCrossReference_5_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_20);
                    	    ruleEString();

                    	    state._fsp--;


                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop268;
                        }
                    } while (true);

                    otherlv_11=(Token)match(input,RightParenthesis,FOLLOW_27); 

                    				newLeafNode(otherlv_11, grammarAccess.getSleepNodeAccess().getRightParenthesisKeyword_5_4());
                    			

                    }
                    break;

            }

            // InternalQualityBtCppParser.g:10215:3: (otherlv_12= Satisfies otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis )?
            int alt271=2;
            int LA271_0 = input.LA(1);

            if ( (LA271_0==Satisfies) ) {
                alt271=1;
            }
            switch (alt271) {
                case 1 :
                    // InternalQualityBtCppParser.g:10216:4: otherlv_12= Satisfies otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis
                    {
                    otherlv_12=(Token)match(input,Satisfies,FOLLOW_26); 

                    				newLeafNode(otherlv_12, grammarAccess.getSleepNodeAccess().getSatisfiesKeyword_6_0());
                    			
                    otherlv_13=(Token)match(input,LeftParenthesis,FOLLOW_3); 

                    				newLeafNode(otherlv_13, grammarAccess.getSleepNodeAccess().getLeftParenthesisKeyword_6_1());
                    			
                    // InternalQualityBtCppParser.g:10224:4: ( ( ruleEString ) )
                    // InternalQualityBtCppParser.g:10225:5: ( ruleEString )
                    {
                    // InternalQualityBtCppParser.g:10225:5: ( ruleEString )
                    // InternalQualityBtCppParser.g:10226:6: ruleEString
                    {

                    						if (current==null) {
                    							current = createModelElement(grammarAccess.getSleepNodeRule());
                    						}
                    					

                    						newCompositeNode(grammarAccess.getSleepNodeAccess().getSatisfiesQualityRequirementCrossReference_6_2_0());
                    					
                    pushFollow(FOLLOW_20);
                    ruleEString();

                    state._fsp--;


                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:10240:4: (otherlv_15= Comma ( ( ruleEString ) ) )*
                    loop270:
                    do {
                        int alt270=2;
                        int LA270_0 = input.LA(1);

                        if ( (LA270_0==Comma) ) {
                            alt270=1;
                        }


                        switch (alt270) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:10241:5: otherlv_15= Comma ( ( ruleEString ) )
                    	    {
                    	    otherlv_15=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_15, grammarAccess.getSleepNodeAccess().getCommaKeyword_6_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:10245:5: ( ( ruleEString ) )
                    	    // InternalQualityBtCppParser.g:10246:6: ( ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:10246:6: ( ruleEString )
                    	    // InternalQualityBtCppParser.g:10247:7: ruleEString
                    	    {

                    	    							if (current==null) {
                    	    								current = createModelElement(grammarAccess.getSleepNodeRule());
                    	    							}
                    	    						

                    	    							newCompositeNode(grammarAccess.getSleepNodeAccess().getSatisfiesQualityRequirementCrossReference_6_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_20);
                    	    ruleEString();

                    	    state._fsp--;


                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop270;
                        }
                    } while (true);

                    otherlv_17=(Token)match(input,RightParenthesis,FOLLOW_28); 

                    				newLeafNode(otherlv_17, grammarAccess.getSleepNodeAccess().getRightParenthesisKeyword_6_4());
                    			

                    }
                    break;

            }

            // InternalQualityBtCppParser.g:10267:3: (otherlv_18= Parameters otherlv_19= LeftCurlyBracket ( (lv_parameters_20_0= ruleParameter ) ) (otherlv_21= Comma ( (lv_parameters_22_0= ruleParameter ) ) )* otherlv_23= RightCurlyBracket )?
            int alt273=2;
            int LA273_0 = input.LA(1);

            if ( (LA273_0==Parameters) ) {
                alt273=1;
            }
            switch (alt273) {
                case 1 :
                    // InternalQualityBtCppParser.g:10268:4: otherlv_18= Parameters otherlv_19= LeftCurlyBracket ( (lv_parameters_20_0= ruleParameter ) ) (otherlv_21= Comma ( (lv_parameters_22_0= ruleParameter ) ) )* otherlv_23= RightCurlyBracket
                    {
                    otherlv_18=(Token)match(input,Parameters,FOLLOW_21); 

                    				newLeafNode(otherlv_18, grammarAccess.getSleepNodeAccess().getParametersKeyword_7_0());
                    			
                    otherlv_19=(Token)match(input,LeftCurlyBracket,FOLLOW_3); 

                    				newLeafNode(otherlv_19, grammarAccess.getSleepNodeAccess().getLeftCurlyBracketKeyword_7_1());
                    			
                    // InternalQualityBtCppParser.g:10276:4: ( (lv_parameters_20_0= ruleParameter ) )
                    // InternalQualityBtCppParser.g:10277:5: (lv_parameters_20_0= ruleParameter )
                    {
                    // InternalQualityBtCppParser.g:10277:5: (lv_parameters_20_0= ruleParameter )
                    // InternalQualityBtCppParser.g:10278:6: lv_parameters_20_0= ruleParameter
                    {

                    						newCompositeNode(grammarAccess.getSleepNodeAccess().getParametersParameterParserRuleCall_7_2_0());
                    					
                    pushFollow(FOLLOW_29);
                    lv_parameters_20_0=ruleParameter();

                    state._fsp--;


                    						if (current==null) {
                    							current = createModelElementForParent(grammarAccess.getSleepNodeRule());
                    						}
                    						add(
                    							current,
                    							"parameters",
                    							lv_parameters_20_0,
                    							"org.xtext.btcpp.QualityBtCpp.Parameter");
                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:10295:4: (otherlv_21= Comma ( (lv_parameters_22_0= ruleParameter ) ) )*
                    loop272:
                    do {
                        int alt272=2;
                        int LA272_0 = input.LA(1);

                        if ( (LA272_0==Comma) ) {
                            alt272=1;
                        }


                        switch (alt272) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:10296:5: otherlv_21= Comma ( (lv_parameters_22_0= ruleParameter ) )
                    	    {
                    	    otherlv_21=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_21, grammarAccess.getSleepNodeAccess().getCommaKeyword_7_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:10300:5: ( (lv_parameters_22_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:10301:6: (lv_parameters_22_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:10301:6: (lv_parameters_22_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:10302:7: lv_parameters_22_0= ruleParameter
                    	    {

                    	    							newCompositeNode(grammarAccess.getSleepNodeAccess().getParametersParameterParserRuleCall_7_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_29);
                    	    lv_parameters_22_0=ruleParameter();

                    	    state._fsp--;


                    	    							if (current==null) {
                    	    								current = createModelElementForParent(grammarAccess.getSleepNodeRule());
                    	    							}
                    	    							add(
                    	    								current,
                    	    								"parameters",
                    	    								lv_parameters_22_0,
                    	    								"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop272;
                        }
                    } while (true);

                    otherlv_23=(Token)match(input,RightCurlyBracket,FOLLOW_30); 

                    				newLeafNode(otherlv_23, grammarAccess.getSleepNodeAccess().getRightCurlyBracketKeyword_7_4());
                    			

                    }
                    break;

            }

            otherlv_24=(Token)match(input,RightCurlyBracket,FOLLOW_2); 

            			newLeafNode(otherlv_24, grammarAccess.getSleepNodeAccess().getRightCurlyBracketKeyword_8());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSleepNode"


    // $ANTLR start "entryRulePopFromQueueNode"
    // InternalQualityBtCppParser.g:10333:1: entryRulePopFromQueueNode returns [EObject current=null] : iv_rulePopFromQueueNode= rulePopFromQueueNode EOF ;
    public final EObject entryRulePopFromQueueNode() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePopFromQueueNode = null;


        try {
            // InternalQualityBtCppParser.g:10333:57: (iv_rulePopFromQueueNode= rulePopFromQueueNode EOF )
            // InternalQualityBtCppParser.g:10334:2: iv_rulePopFromQueueNode= rulePopFromQueueNode EOF
            {
             newCompositeNode(grammarAccess.getPopFromQueueNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_rulePopFromQueueNode=rulePopFromQueueNode();

            state._fsp--;

             current =iv_rulePopFromQueueNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePopFromQueueNode"


    // $ANTLR start "rulePopFromQueueNode"
    // InternalQualityBtCppParser.g:10340:1: rulePopFromQueueNode returns [EObject current=null] : ( () otherlv_1= PopFromQueueNode ( (lv_name_2_0= ruleEString ) ) otherlv_3= LeftCurlyBracket (otherlv_4= ID ( (lv_ID_5_0= ruleEString ) ) )? (otherlv_6= Satisfices otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis )? (otherlv_12= Satisfies otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis )? (otherlv_18= Parameters otherlv_19= LeftCurlyBracket ( (lv_parameters_20_0= ruleParameter ) ) (otherlv_21= Comma ( (lv_parameters_22_0= ruleParameter ) ) )* otherlv_23= RightCurlyBracket )? otherlv_24= RightCurlyBracket ) ;
    public final EObject rulePopFromQueueNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_18=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token otherlv_23=null;
        Token otherlv_24=null;
        AntlrDatatypeRuleToken lv_name_2_0 = null;

        AntlrDatatypeRuleToken lv_ID_5_0 = null;

        EObject lv_parameters_20_0 = null;

        EObject lv_parameters_22_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:10346:2: ( ( () otherlv_1= PopFromQueueNode ( (lv_name_2_0= ruleEString ) ) otherlv_3= LeftCurlyBracket (otherlv_4= ID ( (lv_ID_5_0= ruleEString ) ) )? (otherlv_6= Satisfices otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis )? (otherlv_12= Satisfies otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis )? (otherlv_18= Parameters otherlv_19= LeftCurlyBracket ( (lv_parameters_20_0= ruleParameter ) ) (otherlv_21= Comma ( (lv_parameters_22_0= ruleParameter ) ) )* otherlv_23= RightCurlyBracket )? otherlv_24= RightCurlyBracket ) )
            // InternalQualityBtCppParser.g:10347:2: ( () otherlv_1= PopFromQueueNode ( (lv_name_2_0= ruleEString ) ) otherlv_3= LeftCurlyBracket (otherlv_4= ID ( (lv_ID_5_0= ruleEString ) ) )? (otherlv_6= Satisfices otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis )? (otherlv_12= Satisfies otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis )? (otherlv_18= Parameters otherlv_19= LeftCurlyBracket ( (lv_parameters_20_0= ruleParameter ) ) (otherlv_21= Comma ( (lv_parameters_22_0= ruleParameter ) ) )* otherlv_23= RightCurlyBracket )? otherlv_24= RightCurlyBracket )
            {
            // InternalQualityBtCppParser.g:10347:2: ( () otherlv_1= PopFromQueueNode ( (lv_name_2_0= ruleEString ) ) otherlv_3= LeftCurlyBracket (otherlv_4= ID ( (lv_ID_5_0= ruleEString ) ) )? (otherlv_6= Satisfices otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis )? (otherlv_12= Satisfies otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis )? (otherlv_18= Parameters otherlv_19= LeftCurlyBracket ( (lv_parameters_20_0= ruleParameter ) ) (otherlv_21= Comma ( (lv_parameters_22_0= ruleParameter ) ) )* otherlv_23= RightCurlyBracket )? otherlv_24= RightCurlyBracket )
            // InternalQualityBtCppParser.g:10348:3: () otherlv_1= PopFromQueueNode ( (lv_name_2_0= ruleEString ) ) otherlv_3= LeftCurlyBracket (otherlv_4= ID ( (lv_ID_5_0= ruleEString ) ) )? (otherlv_6= Satisfices otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis )? (otherlv_12= Satisfies otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis )? (otherlv_18= Parameters otherlv_19= LeftCurlyBracket ( (lv_parameters_20_0= ruleParameter ) ) (otherlv_21= Comma ( (lv_parameters_22_0= ruleParameter ) ) )* otherlv_23= RightCurlyBracket )? otherlv_24= RightCurlyBracket
            {
            // InternalQualityBtCppParser.g:10348:3: ()
            // InternalQualityBtCppParser.g:10349:4: 
            {

            				current = forceCreateModelElement(
            					grammarAccess.getPopFromQueueNodeAccess().getPopFromQueueNodeAction_0(),
            					current);
            			

            }

            otherlv_1=(Token)match(input,PopFromQueueNode,FOLLOW_3); 

            			newLeafNode(otherlv_1, grammarAccess.getPopFromQueueNodeAccess().getPopFromQueueNodeKeyword_1());
            		
            // InternalQualityBtCppParser.g:10359:3: ( (lv_name_2_0= ruleEString ) )
            // InternalQualityBtCppParser.g:10360:4: (lv_name_2_0= ruleEString )
            {
            // InternalQualityBtCppParser.g:10360:4: (lv_name_2_0= ruleEString )
            // InternalQualityBtCppParser.g:10361:5: lv_name_2_0= ruleEString
            {

            					newCompositeNode(grammarAccess.getPopFromQueueNodeAccess().getNameEStringParserRuleCall_2_0());
            				
            pushFollow(FOLLOW_21);
            lv_name_2_0=ruleEString();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getPopFromQueueNodeRule());
            					}
            					set(
            						current,
            						"name",
            						lv_name_2_0,
            						"org.xtext.btcpp.QualityBtCpp.EString");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            otherlv_3=(Token)match(input,LeftCurlyBracket,FOLLOW_45); 

            			newLeafNode(otherlv_3, grammarAccess.getPopFromQueueNodeAccess().getLeftCurlyBracketKeyword_3());
            		
            // InternalQualityBtCppParser.g:10382:3: (otherlv_4= ID ( (lv_ID_5_0= ruleEString ) ) )?
            int alt274=2;
            int LA274_0 = input.LA(1);

            if ( (LA274_0==ID) ) {
                alt274=1;
            }
            switch (alt274) {
                case 1 :
                    // InternalQualityBtCppParser.g:10383:4: otherlv_4= ID ( (lv_ID_5_0= ruleEString ) )
                    {
                    otherlv_4=(Token)match(input,ID,FOLLOW_3); 

                    				newLeafNode(otherlv_4, grammarAccess.getPopFromQueueNodeAccess().getIDKeyword_4_0());
                    			
                    // InternalQualityBtCppParser.g:10387:4: ( (lv_ID_5_0= ruleEString ) )
                    // InternalQualityBtCppParser.g:10388:5: (lv_ID_5_0= ruleEString )
                    {
                    // InternalQualityBtCppParser.g:10388:5: (lv_ID_5_0= ruleEString )
                    // InternalQualityBtCppParser.g:10389:6: lv_ID_5_0= ruleEString
                    {

                    						newCompositeNode(grammarAccess.getPopFromQueueNodeAccess().getIDEStringParserRuleCall_4_1_0());
                    					
                    pushFollow(FOLLOW_25);
                    lv_ID_5_0=ruleEString();

                    state._fsp--;


                    						if (current==null) {
                    							current = createModelElementForParent(grammarAccess.getPopFromQueueNodeRule());
                    						}
                    						set(
                    							current,
                    							"ID",
                    							lv_ID_5_0,
                    							"org.xtext.btcpp.QualityBtCpp.EString");
                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }


                    }
                    break;

            }

            // InternalQualityBtCppParser.g:10407:3: (otherlv_6= Satisfices otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis )?
            int alt276=2;
            int LA276_0 = input.LA(1);

            if ( (LA276_0==Satisfices) ) {
                alt276=1;
            }
            switch (alt276) {
                case 1 :
                    // InternalQualityBtCppParser.g:10408:4: otherlv_6= Satisfices otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis
                    {
                    otherlv_6=(Token)match(input,Satisfices,FOLLOW_26); 

                    				newLeafNode(otherlv_6, grammarAccess.getPopFromQueueNodeAccess().getSatisficesKeyword_5_0());
                    			
                    otherlv_7=(Token)match(input,LeftParenthesis,FOLLOW_3); 

                    				newLeafNode(otherlv_7, grammarAccess.getPopFromQueueNodeAccess().getLeftParenthesisKeyword_5_1());
                    			
                    // InternalQualityBtCppParser.g:10416:4: ( ( ruleEString ) )
                    // InternalQualityBtCppParser.g:10417:5: ( ruleEString )
                    {
                    // InternalQualityBtCppParser.g:10417:5: ( ruleEString )
                    // InternalQualityBtCppParser.g:10418:6: ruleEString
                    {

                    						if (current==null) {
                    							current = createModelElement(grammarAccess.getPopFromQueueNodeRule());
                    						}
                    					

                    						newCompositeNode(grammarAccess.getPopFromQueueNodeAccess().getSatisficesQualityCrossReference_5_2_0());
                    					
                    pushFollow(FOLLOW_20);
                    ruleEString();

                    state._fsp--;


                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:10432:4: (otherlv_9= Comma ( ( ruleEString ) ) )*
                    loop275:
                    do {
                        int alt275=2;
                        int LA275_0 = input.LA(1);

                        if ( (LA275_0==Comma) ) {
                            alt275=1;
                        }


                        switch (alt275) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:10433:5: otherlv_9= Comma ( ( ruleEString ) )
                    	    {
                    	    otherlv_9=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_9, grammarAccess.getPopFromQueueNodeAccess().getCommaKeyword_5_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:10437:5: ( ( ruleEString ) )
                    	    // InternalQualityBtCppParser.g:10438:6: ( ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:10438:6: ( ruleEString )
                    	    // InternalQualityBtCppParser.g:10439:7: ruleEString
                    	    {

                    	    							if (current==null) {
                    	    								current = createModelElement(grammarAccess.getPopFromQueueNodeRule());
                    	    							}
                    	    						

                    	    							newCompositeNode(grammarAccess.getPopFromQueueNodeAccess().getSatisficesQualityCrossReference_5_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_20);
                    	    ruleEString();

                    	    state._fsp--;


                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop275;
                        }
                    } while (true);

                    otherlv_11=(Token)match(input,RightParenthesis,FOLLOW_27); 

                    				newLeafNode(otherlv_11, grammarAccess.getPopFromQueueNodeAccess().getRightParenthesisKeyword_5_4());
                    			

                    }
                    break;

            }

            // InternalQualityBtCppParser.g:10459:3: (otherlv_12= Satisfies otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis )?
            int alt278=2;
            int LA278_0 = input.LA(1);

            if ( (LA278_0==Satisfies) ) {
                alt278=1;
            }
            switch (alt278) {
                case 1 :
                    // InternalQualityBtCppParser.g:10460:4: otherlv_12= Satisfies otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis
                    {
                    otherlv_12=(Token)match(input,Satisfies,FOLLOW_26); 

                    				newLeafNode(otherlv_12, grammarAccess.getPopFromQueueNodeAccess().getSatisfiesKeyword_6_0());
                    			
                    otherlv_13=(Token)match(input,LeftParenthesis,FOLLOW_3); 

                    				newLeafNode(otherlv_13, grammarAccess.getPopFromQueueNodeAccess().getLeftParenthesisKeyword_6_1());
                    			
                    // InternalQualityBtCppParser.g:10468:4: ( ( ruleEString ) )
                    // InternalQualityBtCppParser.g:10469:5: ( ruleEString )
                    {
                    // InternalQualityBtCppParser.g:10469:5: ( ruleEString )
                    // InternalQualityBtCppParser.g:10470:6: ruleEString
                    {

                    						if (current==null) {
                    							current = createModelElement(grammarAccess.getPopFromQueueNodeRule());
                    						}
                    					

                    						newCompositeNode(grammarAccess.getPopFromQueueNodeAccess().getSatisfiesQualityRequirementCrossReference_6_2_0());
                    					
                    pushFollow(FOLLOW_20);
                    ruleEString();

                    state._fsp--;


                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:10484:4: (otherlv_15= Comma ( ( ruleEString ) ) )*
                    loop277:
                    do {
                        int alt277=2;
                        int LA277_0 = input.LA(1);

                        if ( (LA277_0==Comma) ) {
                            alt277=1;
                        }


                        switch (alt277) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:10485:5: otherlv_15= Comma ( ( ruleEString ) )
                    	    {
                    	    otherlv_15=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_15, grammarAccess.getPopFromQueueNodeAccess().getCommaKeyword_6_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:10489:5: ( ( ruleEString ) )
                    	    // InternalQualityBtCppParser.g:10490:6: ( ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:10490:6: ( ruleEString )
                    	    // InternalQualityBtCppParser.g:10491:7: ruleEString
                    	    {

                    	    							if (current==null) {
                    	    								current = createModelElement(grammarAccess.getPopFromQueueNodeRule());
                    	    							}
                    	    						

                    	    							newCompositeNode(grammarAccess.getPopFromQueueNodeAccess().getSatisfiesQualityRequirementCrossReference_6_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_20);
                    	    ruleEString();

                    	    state._fsp--;


                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop277;
                        }
                    } while (true);

                    otherlv_17=(Token)match(input,RightParenthesis,FOLLOW_28); 

                    				newLeafNode(otherlv_17, grammarAccess.getPopFromQueueNodeAccess().getRightParenthesisKeyword_6_4());
                    			

                    }
                    break;

            }

            // InternalQualityBtCppParser.g:10511:3: (otherlv_18= Parameters otherlv_19= LeftCurlyBracket ( (lv_parameters_20_0= ruleParameter ) ) (otherlv_21= Comma ( (lv_parameters_22_0= ruleParameter ) ) )* otherlv_23= RightCurlyBracket )?
            int alt280=2;
            int LA280_0 = input.LA(1);

            if ( (LA280_0==Parameters) ) {
                alt280=1;
            }
            switch (alt280) {
                case 1 :
                    // InternalQualityBtCppParser.g:10512:4: otherlv_18= Parameters otherlv_19= LeftCurlyBracket ( (lv_parameters_20_0= ruleParameter ) ) (otherlv_21= Comma ( (lv_parameters_22_0= ruleParameter ) ) )* otherlv_23= RightCurlyBracket
                    {
                    otherlv_18=(Token)match(input,Parameters,FOLLOW_21); 

                    				newLeafNode(otherlv_18, grammarAccess.getPopFromQueueNodeAccess().getParametersKeyword_7_0());
                    			
                    otherlv_19=(Token)match(input,LeftCurlyBracket,FOLLOW_3); 

                    				newLeafNode(otherlv_19, grammarAccess.getPopFromQueueNodeAccess().getLeftCurlyBracketKeyword_7_1());
                    			
                    // InternalQualityBtCppParser.g:10520:4: ( (lv_parameters_20_0= ruleParameter ) )
                    // InternalQualityBtCppParser.g:10521:5: (lv_parameters_20_0= ruleParameter )
                    {
                    // InternalQualityBtCppParser.g:10521:5: (lv_parameters_20_0= ruleParameter )
                    // InternalQualityBtCppParser.g:10522:6: lv_parameters_20_0= ruleParameter
                    {

                    						newCompositeNode(grammarAccess.getPopFromQueueNodeAccess().getParametersParameterParserRuleCall_7_2_0());
                    					
                    pushFollow(FOLLOW_29);
                    lv_parameters_20_0=ruleParameter();

                    state._fsp--;


                    						if (current==null) {
                    							current = createModelElementForParent(grammarAccess.getPopFromQueueNodeRule());
                    						}
                    						add(
                    							current,
                    							"parameters",
                    							lv_parameters_20_0,
                    							"org.xtext.btcpp.QualityBtCpp.Parameter");
                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:10539:4: (otherlv_21= Comma ( (lv_parameters_22_0= ruleParameter ) ) )*
                    loop279:
                    do {
                        int alt279=2;
                        int LA279_0 = input.LA(1);

                        if ( (LA279_0==Comma) ) {
                            alt279=1;
                        }


                        switch (alt279) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:10540:5: otherlv_21= Comma ( (lv_parameters_22_0= ruleParameter ) )
                    	    {
                    	    otherlv_21=(Token)match(input,Comma,FOLLOW_3); 

                    	    					newLeafNode(otherlv_21, grammarAccess.getPopFromQueueNodeAccess().getCommaKeyword_7_3_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:10544:5: ( (lv_parameters_22_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:10545:6: (lv_parameters_22_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:10545:6: (lv_parameters_22_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:10546:7: lv_parameters_22_0= ruleParameter
                    	    {

                    	    							newCompositeNode(grammarAccess.getPopFromQueueNodeAccess().getParametersParameterParserRuleCall_7_3_1_0());
                    	    						
                    	    pushFollow(FOLLOW_29);
                    	    lv_parameters_22_0=ruleParameter();

                    	    state._fsp--;


                    	    							if (current==null) {
                    	    								current = createModelElementForParent(grammarAccess.getPopFromQueueNodeRule());
                    	    							}
                    	    							add(
                    	    								current,
                    	    								"parameters",
                    	    								lv_parameters_22_0,
                    	    								"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop279;
                        }
                    } while (true);

                    otherlv_23=(Token)match(input,RightCurlyBracket,FOLLOW_30); 

                    				newLeafNode(otherlv_23, grammarAccess.getPopFromQueueNodeAccess().getRightCurlyBracketKeyword_7_4());
                    			

                    }
                    break;

            }

            otherlv_24=(Token)match(input,RightCurlyBracket,FOLLOW_2); 

            			newLeafNode(otherlv_24, grammarAccess.getPopFromQueueNodeAccess().getRightCurlyBracketKeyword_8());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePopFromQueueNode"

    // Delegated rules


 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000028L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000040000000L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000000040000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0200000000000000L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x2000000000000000L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x000B703B3FFFFFD0L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x000B703B3FFFFFD0L,0x0000000000000004L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x1200000000000000L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x1000000000000000L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000000400000002L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0400000000000002L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x0A80880000000000L,0x0000000000000028L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0880880000000000L,0x0000000000000028L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0800880000000000L,0x0000000000000028L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x1800800000000000L,0x0000000000000028L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x1800000000000000L,0x0000000000000028L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x1800000000000000L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x4000000000000000L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0220000000000000L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0020000000000000L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x80008A0000000000L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0400000000000000L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x8000820000000000L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x8000020000000000L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x9000000000000000L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x8000000000000000L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x02108A0000000000L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x00108A0000000000L});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0010820000000000L});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0010020000000000L});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0010000000000000L});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x0240000000000000L});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0200008000000000L});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0000008000000000L});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x82108A0000000000L});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x80108A0000000000L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x8010820000000000L});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x8010020000000000L});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x8010000000000000L});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x82008A0000000000L});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0200000080000000L});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0000000080000000L});
    public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x02108A4000000000L});
    public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x00108A4000000000L});

}