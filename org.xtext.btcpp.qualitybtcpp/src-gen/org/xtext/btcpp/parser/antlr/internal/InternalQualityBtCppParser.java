package org.xtext.btcpp.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.btcpp.services.QualityBtCppGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;

@SuppressWarnings("all")
public class InternalQualityBtCppParser extends AbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "KeepRunningUntilFailure", "EntryUpdatedDecorator", "EntryUpdatedAction", "ScriptCondition", "UnsetBlackboard", "ManualSelector", "ThreadedAction", "AlwaysFailure", "AlwaysSuccess", "SetBlackboard", "BehaviorTree", "ConsumeQueue", "ForceFailure", "ForceSuccess", "PopFromQueue", "Precondition", "ScriptAction", "Num_attempts", "WhileDoElse", "Description", "CoroAction", "IfThenElse", "QualityReq", "Delay_msec", "Num_cycles", "Output_key", "Parameters", "Satisfices", "Satisfies", "Inverter", "Quality", "RunOnce", "SubTree", "Timeout", "Repeat", "Switch", "All", "Delay", "Retry", "Sleep", "Value", "Loop", "Root", "Test", "Msec", "Name", "M", "R_1", "HyphenMinusGreaterThanSign", "ID", "R", "VerticalLineVerticalLine", "LeftParenthesis", "RightParenthesis", "Comma", "EqualsSign", "QuestionMark", "RULE_NL", "RULE_BEGIN", "RULE_END", "RULE_ID", "RULE_INT", "RULE_STRING", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER"
    };
    public static final int All=40;
    public static final int QualityReq=26;
    public static final int RULE_BEGIN=62;
    public static final int Delay_msec=27;
    public static final int R_1=51;
    public static final int Precondition=19;
    public static final int SubTree=36;
    public static final int Repeat=38;
    public static final int ForceFailure=16;
    public static final int Delay=41;
    public static final int Name=49;
    public static final int AlwaysSuccess=12;
    public static final int LeftParenthesis=56;
    public static final int ForceSuccess=17;
    public static final int RunOnce=35;
    public static final int Test=47;
    public static final int AlwaysFailure=11;
    public static final int ID=53;
    public static final int PopFromQueue=18;
    public static final int ThreadedAction=10;
    public static final int UnsetBlackboard=8;
    public static final int SetBlackboard=13;
    public static final int Parameters=30;
    public static final int Root=46;
    public static final int RULE_ID=64;
    public static final int Timeout=37;
    public static final int Satisfies=32;
    public static final int Output_key=29;
    public static final int RightParenthesis=57;
    public static final int KeepRunningUntilFailure=4;
    public static final int ManualSelector=9;
    public static final int EntryUpdatedAction=6;
    public static final int Switch=39;
    public static final int RULE_INT=65;
    public static final int Value=44;
    public static final int RULE_ML_COMMENT=67;
    public static final int ScriptAction=20;
    public static final int Retry=42;
    public static final int Msec=48;
    public static final int RULE_END=63;
    public static final int Description=23;
    public static final int VerticalLineVerticalLine=55;
    public static final int RULE_STRING=66;
    public static final int CoroAction=24;
    public static final int M=50;
    public static final int RULE_SL_COMMENT=68;
    public static final int Comma=58;
    public static final int EqualsSign=59;
    public static final int R=54;
    public static final int Num_attempts=21;
    public static final int Quality=34;
    public static final int EOF=-1;
    public static final int Inverter=33;
    public static final int Loop=45;
    public static final int RULE_WS=69;
    public static final int RULE_ANY_OTHER=70;
    public static final int BehaviorTree=14;
    public static final int WhileDoElse=22;
    public static final int EntryUpdatedDecorator=5;
    public static final int Sleep=43;
    public static final int QuestionMark=60;
    public static final int Num_cycles=28;
    public static final int IfThenElse=25;
    public static final int RULE_NL=61;
    public static final int HyphenMinusGreaterThanSign=52;
    public static final int Satisfices=31;
    public static final int ScriptCondition=7;
    public static final int ConsumeQueue=15;

    // delegates
    // delegators


        public InternalQualityBtCppParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalQualityBtCppParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalQualityBtCppParser.tokenNames; }
    public String getGrammarFileName() { return "InternalQualityBtCppParser.g"; }



     	private QualityBtCppGrammarAccess grammarAccess;

        public InternalQualityBtCppParser(TokenStream input, QualityBtCppGrammarAccess grammarAccess) {
            this(input);
            this.grammarAccess = grammarAccess;
            registerRules(grammarAccess.getGrammar());
        }

        @Override
        protected String getFirstRuleName() {
        	return "Root";
       	}

       	@Override
       	protected QualityBtCppGrammarAccess getGrammarAccess() {
       		return grammarAccess;
       	}




    // $ANTLR start "entryRuleRoot"
    // InternalQualityBtCppParser.g:57:1: entryRuleRoot returns [EObject current=null] : iv_ruleRoot= ruleRoot EOF ;
    public final EObject entryRuleRoot() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRoot = null;


        try {
            // InternalQualityBtCppParser.g:57:45: (iv_ruleRoot= ruleRoot EOF )
            // InternalQualityBtCppParser.g:58:2: iv_ruleRoot= ruleRoot EOF
            {
             newCompositeNode(grammarAccess.getRootRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleRoot=ruleRoot();

            state._fsp--;

             current =iv_ruleRoot; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRoot"


    // $ANTLR start "ruleRoot"
    // InternalQualityBtCppParser.g:64:1: ruleRoot returns [EObject current=null] : (otherlv_0= Root ( (lv_main_tree_to_execute_1_0= ruleEString ) ) this_BEGIN_2= RULE_BEGIN ( (lv_behaviortrees_3_0= ruleBehaviorTree ) ) ( (lv_behaviortrees_4_0= ruleBehaviorTree ) )* this_END_5= RULE_END ) ;
    public final EObject ruleRoot() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token this_BEGIN_2=null;
        Token this_END_5=null;
        AntlrDatatypeRuleToken lv_main_tree_to_execute_1_0 = null;

        EObject lv_behaviortrees_3_0 = null;

        EObject lv_behaviortrees_4_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:70:2: ( (otherlv_0= Root ( (lv_main_tree_to_execute_1_0= ruleEString ) ) this_BEGIN_2= RULE_BEGIN ( (lv_behaviortrees_3_0= ruleBehaviorTree ) ) ( (lv_behaviortrees_4_0= ruleBehaviorTree ) )* this_END_5= RULE_END ) )
            // InternalQualityBtCppParser.g:71:2: (otherlv_0= Root ( (lv_main_tree_to_execute_1_0= ruleEString ) ) this_BEGIN_2= RULE_BEGIN ( (lv_behaviortrees_3_0= ruleBehaviorTree ) ) ( (lv_behaviortrees_4_0= ruleBehaviorTree ) )* this_END_5= RULE_END )
            {
            // InternalQualityBtCppParser.g:71:2: (otherlv_0= Root ( (lv_main_tree_to_execute_1_0= ruleEString ) ) this_BEGIN_2= RULE_BEGIN ( (lv_behaviortrees_3_0= ruleBehaviorTree ) ) ( (lv_behaviortrees_4_0= ruleBehaviorTree ) )* this_END_5= RULE_END )
            // InternalQualityBtCppParser.g:72:3: otherlv_0= Root ( (lv_main_tree_to_execute_1_0= ruleEString ) ) this_BEGIN_2= RULE_BEGIN ( (lv_behaviortrees_3_0= ruleBehaviorTree ) ) ( (lv_behaviortrees_4_0= ruleBehaviorTree ) )* this_END_5= RULE_END
            {
            otherlv_0=(Token)match(input,Root,FOLLOW_3); 

            			newLeafNode(otherlv_0, grammarAccess.getRootAccess().getRootKeyword_0());
            		
            // InternalQualityBtCppParser.g:76:3: ( (lv_main_tree_to_execute_1_0= ruleEString ) )
            // InternalQualityBtCppParser.g:77:4: (lv_main_tree_to_execute_1_0= ruleEString )
            {
            // InternalQualityBtCppParser.g:77:4: (lv_main_tree_to_execute_1_0= ruleEString )
            // InternalQualityBtCppParser.g:78:5: lv_main_tree_to_execute_1_0= ruleEString
            {

            					newCompositeNode(grammarAccess.getRootAccess().getMain_tree_to_executeEStringParserRuleCall_1_0());
            				
            pushFollow(FOLLOW_4);
            lv_main_tree_to_execute_1_0=ruleEString();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getRootRule());
            					}
            					set(
            						current,
            						"main_tree_to_execute",
            						lv_main_tree_to_execute_1_0,
            						"org.xtext.btcpp.QualityBtCpp.EString");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            this_BEGIN_2=(Token)match(input,RULE_BEGIN,FOLLOW_5); 

            			newLeafNode(this_BEGIN_2, grammarAccess.getRootAccess().getBEGINTerminalRuleCall_2());
            		
            // InternalQualityBtCppParser.g:99:3: ( (lv_behaviortrees_3_0= ruleBehaviorTree ) )
            // InternalQualityBtCppParser.g:100:4: (lv_behaviortrees_3_0= ruleBehaviorTree )
            {
            // InternalQualityBtCppParser.g:100:4: (lv_behaviortrees_3_0= ruleBehaviorTree )
            // InternalQualityBtCppParser.g:101:5: lv_behaviortrees_3_0= ruleBehaviorTree
            {

            					newCompositeNode(grammarAccess.getRootAccess().getBehaviortreesBehaviorTreeParserRuleCall_3_0());
            				
            pushFollow(FOLLOW_6);
            lv_behaviortrees_3_0=ruleBehaviorTree();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getRootRule());
            					}
            					add(
            						current,
            						"behaviortrees",
            						lv_behaviortrees_3_0,
            						"org.xtext.btcpp.QualityBtCpp.BehaviorTree");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            // InternalQualityBtCppParser.g:118:3: ( (lv_behaviortrees_4_0= ruleBehaviorTree ) )*
            loop1:
            do {
                int alt1=2;
                int LA1_0 = input.LA(1);

                if ( (LA1_0==BehaviorTree) ) {
                    alt1=1;
                }


                switch (alt1) {
            	case 1 :
            	    // InternalQualityBtCppParser.g:119:4: (lv_behaviortrees_4_0= ruleBehaviorTree )
            	    {
            	    // InternalQualityBtCppParser.g:119:4: (lv_behaviortrees_4_0= ruleBehaviorTree )
            	    // InternalQualityBtCppParser.g:120:5: lv_behaviortrees_4_0= ruleBehaviorTree
            	    {

            	    					newCompositeNode(grammarAccess.getRootAccess().getBehaviortreesBehaviorTreeParserRuleCall_4_0());
            	    				
            	    pushFollow(FOLLOW_6);
            	    lv_behaviortrees_4_0=ruleBehaviorTree();

            	    state._fsp--;


            	    					if (current==null) {
            	    						current = createModelElementForParent(grammarAccess.getRootRule());
            	    					}
            	    					add(
            	    						current,
            	    						"behaviortrees",
            	    						lv_behaviortrees_4_0,
            	    						"org.xtext.btcpp.QualityBtCpp.BehaviorTree");
            	    					afterParserOrEnumRuleCall();
            	    				

            	    }


            	    }
            	    break;

            	default :
            	    break loop1;
                }
            } while (true);

            this_END_5=(Token)match(input,RULE_END,FOLLOW_2); 

            			newLeafNode(this_END_5, grammarAccess.getRootAccess().getENDTerminalRuleCall_5());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRoot"


    // $ANTLR start "entryRuleTreeNode"
    // InternalQualityBtCppParser.g:145:1: entryRuleTreeNode returns [EObject current=null] : iv_ruleTreeNode= ruleTreeNode EOF ;
    public final EObject entryRuleTreeNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTreeNode = null;


        try {
            // InternalQualityBtCppParser.g:145:49: (iv_ruleTreeNode= ruleTreeNode EOF )
            // InternalQualityBtCppParser.g:146:2: iv_ruleTreeNode= ruleTreeNode EOF
            {
             newCompositeNode(grammarAccess.getTreeNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleTreeNode=ruleTreeNode();

            state._fsp--;

             current =iv_ruleTreeNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTreeNode"


    // $ANTLR start "ruleTreeNode"
    // InternalQualityBtCppParser.g:152:1: ruleTreeNode returns [EObject current=null] : (this_LeafNode_0= ruleLeafNode | this_ControlNode_1= ruleControlNode | this_DecoratorNode_2= ruleDecoratorNode | this_SubTree_3= ruleSubTree ) ;
    public final EObject ruleTreeNode() throws RecognitionException {
        EObject current = null;

        EObject this_LeafNode_0 = null;

        EObject this_ControlNode_1 = null;

        EObject this_DecoratorNode_2 = null;

        EObject this_SubTree_3 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:158:2: ( (this_LeafNode_0= ruleLeafNode | this_ControlNode_1= ruleControlNode | this_DecoratorNode_2= ruleDecoratorNode | this_SubTree_3= ruleSubTree ) )
            // InternalQualityBtCppParser.g:159:2: (this_LeafNode_0= ruleLeafNode | this_ControlNode_1= ruleControlNode | this_DecoratorNode_2= ruleDecoratorNode | this_SubTree_3= ruleSubTree )
            {
            // InternalQualityBtCppParser.g:159:2: (this_LeafNode_0= ruleLeafNode | this_ControlNode_1= ruleControlNode | this_DecoratorNode_2= ruleDecoratorNode | this_SubTree_3= ruleSubTree )
            int alt2=4;
            switch ( input.LA(1) ) {
            case EntryUpdatedAction:
            case ScriptCondition:
            case UnsetBlackboard:
            case ThreadedAction:
            case AlwaysFailure:
            case AlwaysSuccess:
            case SetBlackboard:
            case PopFromQueue:
            case ScriptAction:
            case CoroAction:
            case Sleep:
            case Test:
                {
                alt2=1;
                }
                break;
            case ManualSelector:
            case WhileDoElse:
            case IfThenElse:
            case Switch:
            case All:
            case M:
            case R_1:
            case HyphenMinusGreaterThanSign:
            case R:
            case VerticalLineVerticalLine:
            case QuestionMark:
                {
                alt2=2;
                }
                break;
            case KeepRunningUntilFailure:
            case EntryUpdatedDecorator:
            case ConsumeQueue:
            case ForceFailure:
            case ForceSuccess:
            case Precondition:
            case Inverter:
            case RunOnce:
            case Timeout:
            case Repeat:
            case Delay:
            case Retry:
            case Loop:
                {
                alt2=3;
                }
                break;
            case SubTree:
                {
                alt2=4;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 2, 0, input);

                throw nvae;
            }

            switch (alt2) {
                case 1 :
                    // InternalQualityBtCppParser.g:160:3: this_LeafNode_0= ruleLeafNode
                    {

                    			newCompositeNode(grammarAccess.getTreeNodeAccess().getLeafNodeParserRuleCall_0());
                    		
                    pushFollow(FOLLOW_2);
                    this_LeafNode_0=ruleLeafNode();

                    state._fsp--;


                    			current = this_LeafNode_0;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 2 :
                    // InternalQualityBtCppParser.g:169:3: this_ControlNode_1= ruleControlNode
                    {

                    			newCompositeNode(grammarAccess.getTreeNodeAccess().getControlNodeParserRuleCall_1());
                    		
                    pushFollow(FOLLOW_2);
                    this_ControlNode_1=ruleControlNode();

                    state._fsp--;


                    			current = this_ControlNode_1;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 3 :
                    // InternalQualityBtCppParser.g:178:3: this_DecoratorNode_2= ruleDecoratorNode
                    {

                    			newCompositeNode(grammarAccess.getTreeNodeAccess().getDecoratorNodeParserRuleCall_2());
                    		
                    pushFollow(FOLLOW_2);
                    this_DecoratorNode_2=ruleDecoratorNode();

                    state._fsp--;


                    			current = this_DecoratorNode_2;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 4 :
                    // InternalQualityBtCppParser.g:187:3: this_SubTree_3= ruleSubTree
                    {

                    			newCompositeNode(grammarAccess.getTreeNodeAccess().getSubTreeParserRuleCall_3());
                    		
                    pushFollow(FOLLOW_2);
                    this_SubTree_3=ruleSubTree();

                    state._fsp--;


                    			current = this_SubTree_3;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTreeNode"


    // $ANTLR start "entryRuleLeafNode"
    // InternalQualityBtCppParser.g:199:1: entryRuleLeafNode returns [EObject current=null] : iv_ruleLeafNode= ruleLeafNode EOF ;
    public final EObject entryRuleLeafNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLeafNode = null;


        try {
            // InternalQualityBtCppParser.g:199:49: (iv_ruleLeafNode= ruleLeafNode EOF )
            // InternalQualityBtCppParser.g:200:2: iv_ruleLeafNode= ruleLeafNode EOF
            {
             newCompositeNode(grammarAccess.getLeafNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleLeafNode=ruleLeafNode();

            state._fsp--;

             current =iv_ruleLeafNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLeafNode"


    // $ANTLR start "ruleLeafNode"
    // InternalQualityBtCppParser.g:206:1: ruleLeafNode returns [EObject current=null] : (this_ActionNodeBase_0= ruleActionNodeBase | this_ConditionNode_1= ruleConditionNode ) ;
    public final EObject ruleLeafNode() throws RecognitionException {
        EObject current = null;

        EObject this_ActionNodeBase_0 = null;

        EObject this_ConditionNode_1 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:212:2: ( (this_ActionNodeBase_0= ruleActionNodeBase | this_ConditionNode_1= ruleConditionNode ) )
            // InternalQualityBtCppParser.g:213:2: (this_ActionNodeBase_0= ruleActionNodeBase | this_ConditionNode_1= ruleConditionNode )
            {
            // InternalQualityBtCppParser.g:213:2: (this_ActionNodeBase_0= ruleActionNodeBase | this_ConditionNode_1= ruleConditionNode )
            int alt3=2;
            int LA3_0 = input.LA(1);

            if ( (LA3_0==EntryUpdatedAction||LA3_0==UnsetBlackboard||(LA3_0>=ThreadedAction && LA3_0<=SetBlackboard)||LA3_0==PopFromQueue||LA3_0==ScriptAction||LA3_0==CoroAction||LA3_0==Sleep||LA3_0==Test) ) {
                alt3=1;
            }
            else if ( (LA3_0==ScriptCondition) ) {
                alt3=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 3, 0, input);

                throw nvae;
            }
            switch (alt3) {
                case 1 :
                    // InternalQualityBtCppParser.g:214:3: this_ActionNodeBase_0= ruleActionNodeBase
                    {

                    			newCompositeNode(grammarAccess.getLeafNodeAccess().getActionNodeBaseParserRuleCall_0());
                    		
                    pushFollow(FOLLOW_2);
                    this_ActionNodeBase_0=ruleActionNodeBase();

                    state._fsp--;


                    			current = this_ActionNodeBase_0;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 2 :
                    // InternalQualityBtCppParser.g:223:3: this_ConditionNode_1= ruleConditionNode
                    {

                    			newCompositeNode(grammarAccess.getLeafNodeAccess().getConditionNodeParserRuleCall_1());
                    		
                    pushFollow(FOLLOW_2);
                    this_ConditionNode_1=ruleConditionNode();

                    state._fsp--;


                    			current = this_ConditionNode_1;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLeafNode"


    // $ANTLR start "entryRuleConditionNode"
    // InternalQualityBtCppParser.g:235:1: entryRuleConditionNode returns [EObject current=null] : iv_ruleConditionNode= ruleConditionNode EOF ;
    public final EObject entryRuleConditionNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConditionNode = null;


        try {
            // InternalQualityBtCppParser.g:235:54: (iv_ruleConditionNode= ruleConditionNode EOF )
            // InternalQualityBtCppParser.g:236:2: iv_ruleConditionNode= ruleConditionNode EOF
            {
             newCompositeNode(grammarAccess.getConditionNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleConditionNode=ruleConditionNode();

            state._fsp--;

             current =iv_ruleConditionNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConditionNode"


    // $ANTLR start "ruleConditionNode"
    // InternalQualityBtCppParser.g:242:1: ruleConditionNode returns [EObject current=null] : this_ScriptConditionNode_0= ruleScriptConditionNode ;
    public final EObject ruleConditionNode() throws RecognitionException {
        EObject current = null;

        EObject this_ScriptConditionNode_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:248:2: (this_ScriptConditionNode_0= ruleScriptConditionNode )
            // InternalQualityBtCppParser.g:249:2: this_ScriptConditionNode_0= ruleScriptConditionNode
            {

            		newCompositeNode(grammarAccess.getConditionNodeAccess().getScriptConditionNodeParserRuleCall());
            	
            pushFollow(FOLLOW_2);
            this_ScriptConditionNode_0=ruleScriptConditionNode();

            state._fsp--;


            		current = this_ScriptConditionNode_0;
            		afterParserOrEnumRuleCall();
            	

            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConditionNode"


    // $ANTLR start "entryRuleActionNodeBase"
    // InternalQualityBtCppParser.g:260:1: entryRuleActionNodeBase returns [EObject current=null] : iv_ruleActionNodeBase= ruleActionNodeBase EOF ;
    public final EObject entryRuleActionNodeBase() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleActionNodeBase = null;


        try {
            // InternalQualityBtCppParser.g:260:55: (iv_ruleActionNodeBase= ruleActionNodeBase EOF )
            // InternalQualityBtCppParser.g:261:2: iv_ruleActionNodeBase= ruleActionNodeBase EOF
            {
             newCompositeNode(grammarAccess.getActionNodeBaseRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleActionNodeBase=ruleActionNodeBase();

            state._fsp--;

             current =iv_ruleActionNodeBase; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleActionNodeBase"


    // $ANTLR start "ruleActionNodeBase"
    // InternalQualityBtCppParser.g:267:1: ruleActionNodeBase returns [EObject current=null] : (this_SyncActionNode_0= ruleSyncActionNode | this_AsynchActionNode_1= ruleAsynchActionNode | this_ThreadedActionNode_2= ruleThreadedActionNode ) ;
    public final EObject ruleActionNodeBase() throws RecognitionException {
        EObject current = null;

        EObject this_SyncActionNode_0 = null;

        EObject this_AsynchActionNode_1 = null;

        EObject this_ThreadedActionNode_2 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:273:2: ( (this_SyncActionNode_0= ruleSyncActionNode | this_AsynchActionNode_1= ruleAsynchActionNode | this_ThreadedActionNode_2= ruleThreadedActionNode ) )
            // InternalQualityBtCppParser.g:274:2: (this_SyncActionNode_0= ruleSyncActionNode | this_AsynchActionNode_1= ruleAsynchActionNode | this_ThreadedActionNode_2= ruleThreadedActionNode )
            {
            // InternalQualityBtCppParser.g:274:2: (this_SyncActionNode_0= ruleSyncActionNode | this_AsynchActionNode_1= ruleAsynchActionNode | this_ThreadedActionNode_2= ruleThreadedActionNode )
            int alt4=3;
            switch ( input.LA(1) ) {
            case EntryUpdatedAction:
            case UnsetBlackboard:
            case AlwaysFailure:
            case AlwaysSuccess:
            case SetBlackboard:
            case PopFromQueue:
            case ScriptAction:
                {
                alt4=1;
                }
                break;
            case CoroAction:
            case Sleep:
            case Test:
                {
                alt4=2;
                }
                break;
            case ThreadedAction:
                {
                alt4=3;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 4, 0, input);

                throw nvae;
            }

            switch (alt4) {
                case 1 :
                    // InternalQualityBtCppParser.g:275:3: this_SyncActionNode_0= ruleSyncActionNode
                    {

                    			newCompositeNode(grammarAccess.getActionNodeBaseAccess().getSyncActionNodeParserRuleCall_0());
                    		
                    pushFollow(FOLLOW_2);
                    this_SyncActionNode_0=ruleSyncActionNode();

                    state._fsp--;


                    			current = this_SyncActionNode_0;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 2 :
                    // InternalQualityBtCppParser.g:284:3: this_AsynchActionNode_1= ruleAsynchActionNode
                    {

                    			newCompositeNode(grammarAccess.getActionNodeBaseAccess().getAsynchActionNodeParserRuleCall_1());
                    		
                    pushFollow(FOLLOW_2);
                    this_AsynchActionNode_1=ruleAsynchActionNode();

                    state._fsp--;


                    			current = this_AsynchActionNode_1;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 3 :
                    // InternalQualityBtCppParser.g:293:3: this_ThreadedActionNode_2= ruleThreadedActionNode
                    {

                    			newCompositeNode(grammarAccess.getActionNodeBaseAccess().getThreadedActionNodeParserRuleCall_2());
                    		
                    pushFollow(FOLLOW_2);
                    this_ThreadedActionNode_2=ruleThreadedActionNode();

                    state._fsp--;


                    			current = this_ThreadedActionNode_2;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleActionNodeBase"


    // $ANTLR start "entryRuleSyncActionNode"
    // InternalQualityBtCppParser.g:305:1: entryRuleSyncActionNode returns [EObject current=null] : iv_ruleSyncActionNode= ruleSyncActionNode EOF ;
    public final EObject entryRuleSyncActionNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSyncActionNode = null;


        try {
            // InternalQualityBtCppParser.g:305:55: (iv_ruleSyncActionNode= ruleSyncActionNode EOF )
            // InternalQualityBtCppParser.g:306:2: iv_ruleSyncActionNode= ruleSyncActionNode EOF
            {
             newCompositeNode(grammarAccess.getSyncActionNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleSyncActionNode=ruleSyncActionNode();

            state._fsp--;

             current =iv_ruleSyncActionNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSyncActionNode"


    // $ANTLR start "ruleSyncActionNode"
    // InternalQualityBtCppParser.g:312:1: ruleSyncActionNode returns [EObject current=null] : (this_ScriptNode_0= ruleScriptNode | this_EntryUpdatedActionNode_1= ruleEntryUpdatedActionNode | this_AlwaysSuccessNode_2= ruleAlwaysSuccessNode | this_AlwaysFailureNode_3= ruleAlwaysFailureNode | this_SetBlackboardNode_4= ruleSetBlackboardNode | this_UnsetBlackboardNode_5= ruleUnsetBlackboardNode | this_PopFromQueueNode_6= rulePopFromQueueNode ) ;
    public final EObject ruleSyncActionNode() throws RecognitionException {
        EObject current = null;

        EObject this_ScriptNode_0 = null;

        EObject this_EntryUpdatedActionNode_1 = null;

        EObject this_AlwaysSuccessNode_2 = null;

        EObject this_AlwaysFailureNode_3 = null;

        EObject this_SetBlackboardNode_4 = null;

        EObject this_UnsetBlackboardNode_5 = null;

        EObject this_PopFromQueueNode_6 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:318:2: ( (this_ScriptNode_0= ruleScriptNode | this_EntryUpdatedActionNode_1= ruleEntryUpdatedActionNode | this_AlwaysSuccessNode_2= ruleAlwaysSuccessNode | this_AlwaysFailureNode_3= ruleAlwaysFailureNode | this_SetBlackboardNode_4= ruleSetBlackboardNode | this_UnsetBlackboardNode_5= ruleUnsetBlackboardNode | this_PopFromQueueNode_6= rulePopFromQueueNode ) )
            // InternalQualityBtCppParser.g:319:2: (this_ScriptNode_0= ruleScriptNode | this_EntryUpdatedActionNode_1= ruleEntryUpdatedActionNode | this_AlwaysSuccessNode_2= ruleAlwaysSuccessNode | this_AlwaysFailureNode_3= ruleAlwaysFailureNode | this_SetBlackboardNode_4= ruleSetBlackboardNode | this_UnsetBlackboardNode_5= ruleUnsetBlackboardNode | this_PopFromQueueNode_6= rulePopFromQueueNode )
            {
            // InternalQualityBtCppParser.g:319:2: (this_ScriptNode_0= ruleScriptNode | this_EntryUpdatedActionNode_1= ruleEntryUpdatedActionNode | this_AlwaysSuccessNode_2= ruleAlwaysSuccessNode | this_AlwaysFailureNode_3= ruleAlwaysFailureNode | this_SetBlackboardNode_4= ruleSetBlackboardNode | this_UnsetBlackboardNode_5= ruleUnsetBlackboardNode | this_PopFromQueueNode_6= rulePopFromQueueNode )
            int alt5=7;
            switch ( input.LA(1) ) {
            case ScriptAction:
                {
                alt5=1;
                }
                break;
            case EntryUpdatedAction:
                {
                alt5=2;
                }
                break;
            case AlwaysSuccess:
                {
                alt5=3;
                }
                break;
            case AlwaysFailure:
                {
                alt5=4;
                }
                break;
            case SetBlackboard:
                {
                alt5=5;
                }
                break;
            case UnsetBlackboard:
                {
                alt5=6;
                }
                break;
            case PopFromQueue:
                {
                alt5=7;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 5, 0, input);

                throw nvae;
            }

            switch (alt5) {
                case 1 :
                    // InternalQualityBtCppParser.g:320:3: this_ScriptNode_0= ruleScriptNode
                    {

                    			newCompositeNode(grammarAccess.getSyncActionNodeAccess().getScriptNodeParserRuleCall_0());
                    		
                    pushFollow(FOLLOW_2);
                    this_ScriptNode_0=ruleScriptNode();

                    state._fsp--;


                    			current = this_ScriptNode_0;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 2 :
                    // InternalQualityBtCppParser.g:329:3: this_EntryUpdatedActionNode_1= ruleEntryUpdatedActionNode
                    {

                    			newCompositeNode(grammarAccess.getSyncActionNodeAccess().getEntryUpdatedActionNodeParserRuleCall_1());
                    		
                    pushFollow(FOLLOW_2);
                    this_EntryUpdatedActionNode_1=ruleEntryUpdatedActionNode();

                    state._fsp--;


                    			current = this_EntryUpdatedActionNode_1;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 3 :
                    // InternalQualityBtCppParser.g:338:3: this_AlwaysSuccessNode_2= ruleAlwaysSuccessNode
                    {

                    			newCompositeNode(grammarAccess.getSyncActionNodeAccess().getAlwaysSuccessNodeParserRuleCall_2());
                    		
                    pushFollow(FOLLOW_2);
                    this_AlwaysSuccessNode_2=ruleAlwaysSuccessNode();

                    state._fsp--;


                    			current = this_AlwaysSuccessNode_2;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 4 :
                    // InternalQualityBtCppParser.g:347:3: this_AlwaysFailureNode_3= ruleAlwaysFailureNode
                    {

                    			newCompositeNode(grammarAccess.getSyncActionNodeAccess().getAlwaysFailureNodeParserRuleCall_3());
                    		
                    pushFollow(FOLLOW_2);
                    this_AlwaysFailureNode_3=ruleAlwaysFailureNode();

                    state._fsp--;


                    			current = this_AlwaysFailureNode_3;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 5 :
                    // InternalQualityBtCppParser.g:356:3: this_SetBlackboardNode_4= ruleSetBlackboardNode
                    {

                    			newCompositeNode(grammarAccess.getSyncActionNodeAccess().getSetBlackboardNodeParserRuleCall_4());
                    		
                    pushFollow(FOLLOW_2);
                    this_SetBlackboardNode_4=ruleSetBlackboardNode();

                    state._fsp--;


                    			current = this_SetBlackboardNode_4;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 6 :
                    // InternalQualityBtCppParser.g:365:3: this_UnsetBlackboardNode_5= ruleUnsetBlackboardNode
                    {

                    			newCompositeNode(grammarAccess.getSyncActionNodeAccess().getUnsetBlackboardNodeParserRuleCall_5());
                    		
                    pushFollow(FOLLOW_2);
                    this_UnsetBlackboardNode_5=ruleUnsetBlackboardNode();

                    state._fsp--;


                    			current = this_UnsetBlackboardNode_5;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 7 :
                    // InternalQualityBtCppParser.g:374:3: this_PopFromQueueNode_6= rulePopFromQueueNode
                    {

                    			newCompositeNode(grammarAccess.getSyncActionNodeAccess().getPopFromQueueNodeParserRuleCall_6());
                    		
                    pushFollow(FOLLOW_2);
                    this_PopFromQueueNode_6=rulePopFromQueueNode();

                    state._fsp--;


                    			current = this_PopFromQueueNode_6;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSyncActionNode"


    // $ANTLR start "entryRuleAsynchActionNode"
    // InternalQualityBtCppParser.g:386:1: entryRuleAsynchActionNode returns [EObject current=null] : iv_ruleAsynchActionNode= ruleAsynchActionNode EOF ;
    public final EObject entryRuleAsynchActionNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAsynchActionNode = null;


        try {
            // InternalQualityBtCppParser.g:386:57: (iv_ruleAsynchActionNode= ruleAsynchActionNode EOF )
            // InternalQualityBtCppParser.g:387:2: iv_ruleAsynchActionNode= ruleAsynchActionNode EOF
            {
             newCompositeNode(grammarAccess.getAsynchActionNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleAsynchActionNode=ruleAsynchActionNode();

            state._fsp--;

             current =iv_ruleAsynchActionNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAsynchActionNode"


    // $ANTLR start "ruleAsynchActionNode"
    // InternalQualityBtCppParser.g:393:1: ruleAsynchActionNode returns [EObject current=null] : (this_StatefulActionNode_0= ruleStatefulActionNode | this_CoroActionNode_1= ruleCoroActionNode ) ;
    public final EObject ruleAsynchActionNode() throws RecognitionException {
        EObject current = null;

        EObject this_StatefulActionNode_0 = null;

        EObject this_CoroActionNode_1 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:399:2: ( (this_StatefulActionNode_0= ruleStatefulActionNode | this_CoroActionNode_1= ruleCoroActionNode ) )
            // InternalQualityBtCppParser.g:400:2: (this_StatefulActionNode_0= ruleStatefulActionNode | this_CoroActionNode_1= ruleCoroActionNode )
            {
            // InternalQualityBtCppParser.g:400:2: (this_StatefulActionNode_0= ruleStatefulActionNode | this_CoroActionNode_1= ruleCoroActionNode )
            int alt6=2;
            int LA6_0 = input.LA(1);

            if ( (LA6_0==Sleep||LA6_0==Test) ) {
                alt6=1;
            }
            else if ( (LA6_0==CoroAction) ) {
                alt6=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 6, 0, input);

                throw nvae;
            }
            switch (alt6) {
                case 1 :
                    // InternalQualityBtCppParser.g:401:3: this_StatefulActionNode_0= ruleStatefulActionNode
                    {

                    			newCompositeNode(grammarAccess.getAsynchActionNodeAccess().getStatefulActionNodeParserRuleCall_0());
                    		
                    pushFollow(FOLLOW_2);
                    this_StatefulActionNode_0=ruleStatefulActionNode();

                    state._fsp--;


                    			current = this_StatefulActionNode_0;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 2 :
                    // InternalQualityBtCppParser.g:410:3: this_CoroActionNode_1= ruleCoroActionNode
                    {

                    			newCompositeNode(grammarAccess.getAsynchActionNodeAccess().getCoroActionNodeParserRuleCall_1());
                    		
                    pushFollow(FOLLOW_2);
                    this_CoroActionNode_1=ruleCoroActionNode();

                    state._fsp--;


                    			current = this_CoroActionNode_1;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAsynchActionNode"


    // $ANTLR start "entryRuleStatefulActionNode"
    // InternalQualityBtCppParser.g:422:1: entryRuleStatefulActionNode returns [EObject current=null] : iv_ruleStatefulActionNode= ruleStatefulActionNode EOF ;
    public final EObject entryRuleStatefulActionNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStatefulActionNode = null;


        try {
            // InternalQualityBtCppParser.g:422:59: (iv_ruleStatefulActionNode= ruleStatefulActionNode EOF )
            // InternalQualityBtCppParser.g:423:2: iv_ruleStatefulActionNode= ruleStatefulActionNode EOF
            {
             newCompositeNode(grammarAccess.getStatefulActionNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleStatefulActionNode=ruleStatefulActionNode();

            state._fsp--;

             current =iv_ruleStatefulActionNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStatefulActionNode"


    // $ANTLR start "ruleStatefulActionNode"
    // InternalQualityBtCppParser.g:429:1: ruleStatefulActionNode returns [EObject current=null] : (this_SleepNode_0= ruleSleepNode | this_TestNode_1= ruleTestNode ) ;
    public final EObject ruleStatefulActionNode() throws RecognitionException {
        EObject current = null;

        EObject this_SleepNode_0 = null;

        EObject this_TestNode_1 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:435:2: ( (this_SleepNode_0= ruleSleepNode | this_TestNode_1= ruleTestNode ) )
            // InternalQualityBtCppParser.g:436:2: (this_SleepNode_0= ruleSleepNode | this_TestNode_1= ruleTestNode )
            {
            // InternalQualityBtCppParser.g:436:2: (this_SleepNode_0= ruleSleepNode | this_TestNode_1= ruleTestNode )
            int alt7=2;
            int LA7_0 = input.LA(1);

            if ( (LA7_0==Sleep) ) {
                alt7=1;
            }
            else if ( (LA7_0==Test) ) {
                alt7=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 7, 0, input);

                throw nvae;
            }
            switch (alt7) {
                case 1 :
                    // InternalQualityBtCppParser.g:437:3: this_SleepNode_0= ruleSleepNode
                    {

                    			newCompositeNode(grammarAccess.getStatefulActionNodeAccess().getSleepNodeParserRuleCall_0());
                    		
                    pushFollow(FOLLOW_2);
                    this_SleepNode_0=ruleSleepNode();

                    state._fsp--;


                    			current = this_SleepNode_0;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 2 :
                    // InternalQualityBtCppParser.g:446:3: this_TestNode_1= ruleTestNode
                    {

                    			newCompositeNode(grammarAccess.getStatefulActionNodeAccess().getTestNodeParserRuleCall_1());
                    		
                    pushFollow(FOLLOW_2);
                    this_TestNode_1=ruleTestNode();

                    state._fsp--;


                    			current = this_TestNode_1;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStatefulActionNode"


    // $ANTLR start "entryRuleControlNode"
    // InternalQualityBtCppParser.g:458:1: entryRuleControlNode returns [EObject current=null] : iv_ruleControlNode= ruleControlNode EOF ;
    public final EObject entryRuleControlNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleControlNode = null;


        try {
            // InternalQualityBtCppParser.g:458:52: (iv_ruleControlNode= ruleControlNode EOF )
            // InternalQualityBtCppParser.g:459:2: iv_ruleControlNode= ruleControlNode EOF
            {
             newCompositeNode(grammarAccess.getControlNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleControlNode=ruleControlNode();

            state._fsp--;

             current =iv_ruleControlNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleControlNode"


    // $ANTLR start "ruleControlNode"
    // InternalQualityBtCppParser.g:465:1: ruleControlNode returns [EObject current=null] : (this_ReactiveSequenceNode_0= ruleReactiveSequenceNode | this_SequenceNode_1= ruleSequenceNode | this_SequenceWithMemoryNode_2= ruleSequenceWithMemoryNode | this_FallbackNode_3= ruleFallbackNode | this_ReactiveFallbackNode_4= ruleReactiveFallbackNode | this_ParallelNode_5= ruleParallelNode | this_ParallelAllNode_6= ruleParallelAllNode | this_IfThenElseNode_7= ruleIfThenElseNode | this_SwitchNode_8= ruleSwitchNode | this_WhileDoElseNode_9= ruleWhileDoElseNode | this_ManualSelectorNode_10= ruleManualSelectorNode ) ;
    public final EObject ruleControlNode() throws RecognitionException {
        EObject current = null;

        EObject this_ReactiveSequenceNode_0 = null;

        EObject this_SequenceNode_1 = null;

        EObject this_SequenceWithMemoryNode_2 = null;

        EObject this_FallbackNode_3 = null;

        EObject this_ReactiveFallbackNode_4 = null;

        EObject this_ParallelNode_5 = null;

        EObject this_ParallelAllNode_6 = null;

        EObject this_IfThenElseNode_7 = null;

        EObject this_SwitchNode_8 = null;

        EObject this_WhileDoElseNode_9 = null;

        EObject this_ManualSelectorNode_10 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:471:2: ( (this_ReactiveSequenceNode_0= ruleReactiveSequenceNode | this_SequenceNode_1= ruleSequenceNode | this_SequenceWithMemoryNode_2= ruleSequenceWithMemoryNode | this_FallbackNode_3= ruleFallbackNode | this_ReactiveFallbackNode_4= ruleReactiveFallbackNode | this_ParallelNode_5= ruleParallelNode | this_ParallelAllNode_6= ruleParallelAllNode | this_IfThenElseNode_7= ruleIfThenElseNode | this_SwitchNode_8= ruleSwitchNode | this_WhileDoElseNode_9= ruleWhileDoElseNode | this_ManualSelectorNode_10= ruleManualSelectorNode ) )
            // InternalQualityBtCppParser.g:472:2: (this_ReactiveSequenceNode_0= ruleReactiveSequenceNode | this_SequenceNode_1= ruleSequenceNode | this_SequenceWithMemoryNode_2= ruleSequenceWithMemoryNode | this_FallbackNode_3= ruleFallbackNode | this_ReactiveFallbackNode_4= ruleReactiveFallbackNode | this_ParallelNode_5= ruleParallelNode | this_ParallelAllNode_6= ruleParallelAllNode | this_IfThenElseNode_7= ruleIfThenElseNode | this_SwitchNode_8= ruleSwitchNode | this_WhileDoElseNode_9= ruleWhileDoElseNode | this_ManualSelectorNode_10= ruleManualSelectorNode )
            {
            // InternalQualityBtCppParser.g:472:2: (this_ReactiveSequenceNode_0= ruleReactiveSequenceNode | this_SequenceNode_1= ruleSequenceNode | this_SequenceWithMemoryNode_2= ruleSequenceWithMemoryNode | this_FallbackNode_3= ruleFallbackNode | this_ReactiveFallbackNode_4= ruleReactiveFallbackNode | this_ParallelNode_5= ruleParallelNode | this_ParallelAllNode_6= ruleParallelAllNode | this_IfThenElseNode_7= ruleIfThenElseNode | this_SwitchNode_8= ruleSwitchNode | this_WhileDoElseNode_9= ruleWhileDoElseNode | this_ManualSelectorNode_10= ruleManualSelectorNode )
            int alt8=11;
            switch ( input.LA(1) ) {
            case R_1:
                {
                alt8=1;
                }
                break;
            case HyphenMinusGreaterThanSign:
                {
                alt8=2;
                }
                break;
            case M:
                {
                alt8=3;
                }
                break;
            case QuestionMark:
                {
                alt8=4;
                }
                break;
            case R:
                {
                alt8=5;
                }
                break;
            case VerticalLineVerticalLine:
                {
                alt8=6;
                }
                break;
            case All:
                {
                alt8=7;
                }
                break;
            case IfThenElse:
                {
                alt8=8;
                }
                break;
            case Switch:
                {
                alt8=9;
                }
                break;
            case WhileDoElse:
                {
                alt8=10;
                }
                break;
            case ManualSelector:
                {
                alt8=11;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 8, 0, input);

                throw nvae;
            }

            switch (alt8) {
                case 1 :
                    // InternalQualityBtCppParser.g:473:3: this_ReactiveSequenceNode_0= ruleReactiveSequenceNode
                    {

                    			newCompositeNode(grammarAccess.getControlNodeAccess().getReactiveSequenceNodeParserRuleCall_0());
                    		
                    pushFollow(FOLLOW_2);
                    this_ReactiveSequenceNode_0=ruleReactiveSequenceNode();

                    state._fsp--;


                    			current = this_ReactiveSequenceNode_0;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 2 :
                    // InternalQualityBtCppParser.g:482:3: this_SequenceNode_1= ruleSequenceNode
                    {

                    			newCompositeNode(grammarAccess.getControlNodeAccess().getSequenceNodeParserRuleCall_1());
                    		
                    pushFollow(FOLLOW_2);
                    this_SequenceNode_1=ruleSequenceNode();

                    state._fsp--;


                    			current = this_SequenceNode_1;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 3 :
                    // InternalQualityBtCppParser.g:491:3: this_SequenceWithMemoryNode_2= ruleSequenceWithMemoryNode
                    {

                    			newCompositeNode(grammarAccess.getControlNodeAccess().getSequenceWithMemoryNodeParserRuleCall_2());
                    		
                    pushFollow(FOLLOW_2);
                    this_SequenceWithMemoryNode_2=ruleSequenceWithMemoryNode();

                    state._fsp--;


                    			current = this_SequenceWithMemoryNode_2;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 4 :
                    // InternalQualityBtCppParser.g:500:3: this_FallbackNode_3= ruleFallbackNode
                    {

                    			newCompositeNode(grammarAccess.getControlNodeAccess().getFallbackNodeParserRuleCall_3());
                    		
                    pushFollow(FOLLOW_2);
                    this_FallbackNode_3=ruleFallbackNode();

                    state._fsp--;


                    			current = this_FallbackNode_3;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 5 :
                    // InternalQualityBtCppParser.g:509:3: this_ReactiveFallbackNode_4= ruleReactiveFallbackNode
                    {

                    			newCompositeNode(grammarAccess.getControlNodeAccess().getReactiveFallbackNodeParserRuleCall_4());
                    		
                    pushFollow(FOLLOW_2);
                    this_ReactiveFallbackNode_4=ruleReactiveFallbackNode();

                    state._fsp--;


                    			current = this_ReactiveFallbackNode_4;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 6 :
                    // InternalQualityBtCppParser.g:518:3: this_ParallelNode_5= ruleParallelNode
                    {

                    			newCompositeNode(grammarAccess.getControlNodeAccess().getParallelNodeParserRuleCall_5());
                    		
                    pushFollow(FOLLOW_2);
                    this_ParallelNode_5=ruleParallelNode();

                    state._fsp--;


                    			current = this_ParallelNode_5;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 7 :
                    // InternalQualityBtCppParser.g:527:3: this_ParallelAllNode_6= ruleParallelAllNode
                    {

                    			newCompositeNode(grammarAccess.getControlNodeAccess().getParallelAllNodeParserRuleCall_6());
                    		
                    pushFollow(FOLLOW_2);
                    this_ParallelAllNode_6=ruleParallelAllNode();

                    state._fsp--;


                    			current = this_ParallelAllNode_6;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 8 :
                    // InternalQualityBtCppParser.g:536:3: this_IfThenElseNode_7= ruleIfThenElseNode
                    {

                    			newCompositeNode(grammarAccess.getControlNodeAccess().getIfThenElseNodeParserRuleCall_7());
                    		
                    pushFollow(FOLLOW_2);
                    this_IfThenElseNode_7=ruleIfThenElseNode();

                    state._fsp--;


                    			current = this_IfThenElseNode_7;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 9 :
                    // InternalQualityBtCppParser.g:545:3: this_SwitchNode_8= ruleSwitchNode
                    {

                    			newCompositeNode(grammarAccess.getControlNodeAccess().getSwitchNodeParserRuleCall_8());
                    		
                    pushFollow(FOLLOW_2);
                    this_SwitchNode_8=ruleSwitchNode();

                    state._fsp--;


                    			current = this_SwitchNode_8;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 10 :
                    // InternalQualityBtCppParser.g:554:3: this_WhileDoElseNode_9= ruleWhileDoElseNode
                    {

                    			newCompositeNode(grammarAccess.getControlNodeAccess().getWhileDoElseNodeParserRuleCall_9());
                    		
                    pushFollow(FOLLOW_2);
                    this_WhileDoElseNode_9=ruleWhileDoElseNode();

                    state._fsp--;


                    			current = this_WhileDoElseNode_9;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 11 :
                    // InternalQualityBtCppParser.g:563:3: this_ManualSelectorNode_10= ruleManualSelectorNode
                    {

                    			newCompositeNode(grammarAccess.getControlNodeAccess().getManualSelectorNodeParserRuleCall_10());
                    		
                    pushFollow(FOLLOW_2);
                    this_ManualSelectorNode_10=ruleManualSelectorNode();

                    state._fsp--;


                    			current = this_ManualSelectorNode_10;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleControlNode"


    // $ANTLR start "entryRuleDecoratorNode"
    // InternalQualityBtCppParser.g:575:1: entryRuleDecoratorNode returns [EObject current=null] : iv_ruleDecoratorNode= ruleDecoratorNode EOF ;
    public final EObject entryRuleDecoratorNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDecoratorNode = null;


        try {
            // InternalQualityBtCppParser.g:575:54: (iv_ruleDecoratorNode= ruleDecoratorNode EOF )
            // InternalQualityBtCppParser.g:576:2: iv_ruleDecoratorNode= ruleDecoratorNode EOF
            {
             newCompositeNode(grammarAccess.getDecoratorNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleDecoratorNode=ruleDecoratorNode();

            state._fsp--;

             current =iv_ruleDecoratorNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDecoratorNode"


    // $ANTLR start "ruleDecoratorNode"
    // InternalQualityBtCppParser.g:582:1: ruleDecoratorNode returns [EObject current=null] : (this_RepeatNode_0= ruleRepeatNode | this_ForceFailureNode_1= ruleForceFailureNode | this_ForceSuccessNode_2= ruleForceSuccessNode | this_RetryNode_3= ruleRetryNode | this_InverterNode_4= ruleInverterNode | this_TimeoutNode_5= ruleTimeoutNode | this_KeepRunningUntilFailureNode_6= ruleKeepRunningUntilFailureNode | this_DelayNode_7= ruleDelayNode | this_PreconditionNode_8= rulePreconditionNode | this_RunOnceNode_9= ruleRunOnceNode | this_LoopNode_10= ruleLoopNode | this_ConsumeQueueNode_11= ruleConsumeQueueNode | this_EntryUpdatedDecoratorNode_12= ruleEntryUpdatedDecoratorNode ) ;
    public final EObject ruleDecoratorNode() throws RecognitionException {
        EObject current = null;

        EObject this_RepeatNode_0 = null;

        EObject this_ForceFailureNode_1 = null;

        EObject this_ForceSuccessNode_2 = null;

        EObject this_RetryNode_3 = null;

        EObject this_InverterNode_4 = null;

        EObject this_TimeoutNode_5 = null;

        EObject this_KeepRunningUntilFailureNode_6 = null;

        EObject this_DelayNode_7 = null;

        EObject this_PreconditionNode_8 = null;

        EObject this_RunOnceNode_9 = null;

        EObject this_LoopNode_10 = null;

        EObject this_ConsumeQueueNode_11 = null;

        EObject this_EntryUpdatedDecoratorNode_12 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:588:2: ( (this_RepeatNode_0= ruleRepeatNode | this_ForceFailureNode_1= ruleForceFailureNode | this_ForceSuccessNode_2= ruleForceSuccessNode | this_RetryNode_3= ruleRetryNode | this_InverterNode_4= ruleInverterNode | this_TimeoutNode_5= ruleTimeoutNode | this_KeepRunningUntilFailureNode_6= ruleKeepRunningUntilFailureNode | this_DelayNode_7= ruleDelayNode | this_PreconditionNode_8= rulePreconditionNode | this_RunOnceNode_9= ruleRunOnceNode | this_LoopNode_10= ruleLoopNode | this_ConsumeQueueNode_11= ruleConsumeQueueNode | this_EntryUpdatedDecoratorNode_12= ruleEntryUpdatedDecoratorNode ) )
            // InternalQualityBtCppParser.g:589:2: (this_RepeatNode_0= ruleRepeatNode | this_ForceFailureNode_1= ruleForceFailureNode | this_ForceSuccessNode_2= ruleForceSuccessNode | this_RetryNode_3= ruleRetryNode | this_InverterNode_4= ruleInverterNode | this_TimeoutNode_5= ruleTimeoutNode | this_KeepRunningUntilFailureNode_6= ruleKeepRunningUntilFailureNode | this_DelayNode_7= ruleDelayNode | this_PreconditionNode_8= rulePreconditionNode | this_RunOnceNode_9= ruleRunOnceNode | this_LoopNode_10= ruleLoopNode | this_ConsumeQueueNode_11= ruleConsumeQueueNode | this_EntryUpdatedDecoratorNode_12= ruleEntryUpdatedDecoratorNode )
            {
            // InternalQualityBtCppParser.g:589:2: (this_RepeatNode_0= ruleRepeatNode | this_ForceFailureNode_1= ruleForceFailureNode | this_ForceSuccessNode_2= ruleForceSuccessNode | this_RetryNode_3= ruleRetryNode | this_InverterNode_4= ruleInverterNode | this_TimeoutNode_5= ruleTimeoutNode | this_KeepRunningUntilFailureNode_6= ruleKeepRunningUntilFailureNode | this_DelayNode_7= ruleDelayNode | this_PreconditionNode_8= rulePreconditionNode | this_RunOnceNode_9= ruleRunOnceNode | this_LoopNode_10= ruleLoopNode | this_ConsumeQueueNode_11= ruleConsumeQueueNode | this_EntryUpdatedDecoratorNode_12= ruleEntryUpdatedDecoratorNode )
            int alt9=13;
            switch ( input.LA(1) ) {
            case Repeat:
                {
                alt9=1;
                }
                break;
            case ForceFailure:
                {
                alt9=2;
                }
                break;
            case ForceSuccess:
                {
                alt9=3;
                }
                break;
            case Retry:
                {
                alt9=4;
                }
                break;
            case Inverter:
                {
                alt9=5;
                }
                break;
            case Timeout:
                {
                alt9=6;
                }
                break;
            case KeepRunningUntilFailure:
                {
                alt9=7;
                }
                break;
            case Delay:
                {
                alt9=8;
                }
                break;
            case Precondition:
                {
                alt9=9;
                }
                break;
            case RunOnce:
                {
                alt9=10;
                }
                break;
            case Loop:
                {
                alt9=11;
                }
                break;
            case ConsumeQueue:
                {
                alt9=12;
                }
                break;
            case EntryUpdatedDecorator:
                {
                alt9=13;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 9, 0, input);

                throw nvae;
            }

            switch (alt9) {
                case 1 :
                    // InternalQualityBtCppParser.g:590:3: this_RepeatNode_0= ruleRepeatNode
                    {

                    			newCompositeNode(grammarAccess.getDecoratorNodeAccess().getRepeatNodeParserRuleCall_0());
                    		
                    pushFollow(FOLLOW_2);
                    this_RepeatNode_0=ruleRepeatNode();

                    state._fsp--;


                    			current = this_RepeatNode_0;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 2 :
                    // InternalQualityBtCppParser.g:599:3: this_ForceFailureNode_1= ruleForceFailureNode
                    {

                    			newCompositeNode(grammarAccess.getDecoratorNodeAccess().getForceFailureNodeParserRuleCall_1());
                    		
                    pushFollow(FOLLOW_2);
                    this_ForceFailureNode_1=ruleForceFailureNode();

                    state._fsp--;


                    			current = this_ForceFailureNode_1;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 3 :
                    // InternalQualityBtCppParser.g:608:3: this_ForceSuccessNode_2= ruleForceSuccessNode
                    {

                    			newCompositeNode(grammarAccess.getDecoratorNodeAccess().getForceSuccessNodeParserRuleCall_2());
                    		
                    pushFollow(FOLLOW_2);
                    this_ForceSuccessNode_2=ruleForceSuccessNode();

                    state._fsp--;


                    			current = this_ForceSuccessNode_2;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 4 :
                    // InternalQualityBtCppParser.g:617:3: this_RetryNode_3= ruleRetryNode
                    {

                    			newCompositeNode(grammarAccess.getDecoratorNodeAccess().getRetryNodeParserRuleCall_3());
                    		
                    pushFollow(FOLLOW_2);
                    this_RetryNode_3=ruleRetryNode();

                    state._fsp--;


                    			current = this_RetryNode_3;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 5 :
                    // InternalQualityBtCppParser.g:626:3: this_InverterNode_4= ruleInverterNode
                    {

                    			newCompositeNode(grammarAccess.getDecoratorNodeAccess().getInverterNodeParserRuleCall_4());
                    		
                    pushFollow(FOLLOW_2);
                    this_InverterNode_4=ruleInverterNode();

                    state._fsp--;


                    			current = this_InverterNode_4;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 6 :
                    // InternalQualityBtCppParser.g:635:3: this_TimeoutNode_5= ruleTimeoutNode
                    {

                    			newCompositeNode(grammarAccess.getDecoratorNodeAccess().getTimeoutNodeParserRuleCall_5());
                    		
                    pushFollow(FOLLOW_2);
                    this_TimeoutNode_5=ruleTimeoutNode();

                    state._fsp--;


                    			current = this_TimeoutNode_5;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 7 :
                    // InternalQualityBtCppParser.g:644:3: this_KeepRunningUntilFailureNode_6= ruleKeepRunningUntilFailureNode
                    {

                    			newCompositeNode(grammarAccess.getDecoratorNodeAccess().getKeepRunningUntilFailureNodeParserRuleCall_6());
                    		
                    pushFollow(FOLLOW_2);
                    this_KeepRunningUntilFailureNode_6=ruleKeepRunningUntilFailureNode();

                    state._fsp--;


                    			current = this_KeepRunningUntilFailureNode_6;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 8 :
                    // InternalQualityBtCppParser.g:653:3: this_DelayNode_7= ruleDelayNode
                    {

                    			newCompositeNode(grammarAccess.getDecoratorNodeAccess().getDelayNodeParserRuleCall_7());
                    		
                    pushFollow(FOLLOW_2);
                    this_DelayNode_7=ruleDelayNode();

                    state._fsp--;


                    			current = this_DelayNode_7;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 9 :
                    // InternalQualityBtCppParser.g:662:3: this_PreconditionNode_8= rulePreconditionNode
                    {

                    			newCompositeNode(grammarAccess.getDecoratorNodeAccess().getPreconditionNodeParserRuleCall_8());
                    		
                    pushFollow(FOLLOW_2);
                    this_PreconditionNode_8=rulePreconditionNode();

                    state._fsp--;


                    			current = this_PreconditionNode_8;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 10 :
                    // InternalQualityBtCppParser.g:671:3: this_RunOnceNode_9= ruleRunOnceNode
                    {

                    			newCompositeNode(grammarAccess.getDecoratorNodeAccess().getRunOnceNodeParserRuleCall_9());
                    		
                    pushFollow(FOLLOW_2);
                    this_RunOnceNode_9=ruleRunOnceNode();

                    state._fsp--;


                    			current = this_RunOnceNode_9;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 11 :
                    // InternalQualityBtCppParser.g:680:3: this_LoopNode_10= ruleLoopNode
                    {

                    			newCompositeNode(grammarAccess.getDecoratorNodeAccess().getLoopNodeParserRuleCall_10());
                    		
                    pushFollow(FOLLOW_2);
                    this_LoopNode_10=ruleLoopNode();

                    state._fsp--;


                    			current = this_LoopNode_10;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 12 :
                    // InternalQualityBtCppParser.g:689:3: this_ConsumeQueueNode_11= ruleConsumeQueueNode
                    {

                    			newCompositeNode(grammarAccess.getDecoratorNodeAccess().getConsumeQueueNodeParserRuleCall_11());
                    		
                    pushFollow(FOLLOW_2);
                    this_ConsumeQueueNode_11=ruleConsumeQueueNode();

                    state._fsp--;


                    			current = this_ConsumeQueueNode_11;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 13 :
                    // InternalQualityBtCppParser.g:698:3: this_EntryUpdatedDecoratorNode_12= ruleEntryUpdatedDecoratorNode
                    {

                    			newCompositeNode(grammarAccess.getDecoratorNodeAccess().getEntryUpdatedDecoratorNodeParserRuleCall_12());
                    		
                    pushFollow(FOLLOW_2);
                    this_EntryUpdatedDecoratorNode_12=ruleEntryUpdatedDecoratorNode();

                    state._fsp--;


                    			current = this_EntryUpdatedDecoratorNode_12;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDecoratorNode"


    // $ANTLR start "entryRuleBehaviorTree"
    // InternalQualityBtCppParser.g:710:1: entryRuleBehaviorTree returns [EObject current=null] : iv_ruleBehaviorTree= ruleBehaviorTree EOF ;
    public final EObject entryRuleBehaviorTree() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBehaviorTree = null;


        try {
            // InternalQualityBtCppParser.g:710:53: (iv_ruleBehaviorTree= ruleBehaviorTree EOF )
            // InternalQualityBtCppParser.g:711:2: iv_ruleBehaviorTree= ruleBehaviorTree EOF
            {
             newCompositeNode(grammarAccess.getBehaviorTreeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleBehaviorTree=ruleBehaviorTree();

            state._fsp--;

             current =iv_ruleBehaviorTree; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBehaviorTree"


    // $ANTLR start "ruleBehaviorTree"
    // InternalQualityBtCppParser.g:717:1: ruleBehaviorTree returns [EObject current=null] : (otherlv_0= BehaviorTree otherlv_1= ID otherlv_2= EqualsSign ( (lv_ID_3_0= ruleEString ) ) this_BEGIN_4= RULE_BEGIN ( (lv_node_5_0= ruleTreeNode ) ) this_END_6= RULE_END ) ;
    public final EObject ruleBehaviorTree() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token this_BEGIN_4=null;
        Token this_END_6=null;
        AntlrDatatypeRuleToken lv_ID_3_0 = null;

        EObject lv_node_5_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:723:2: ( (otherlv_0= BehaviorTree otherlv_1= ID otherlv_2= EqualsSign ( (lv_ID_3_0= ruleEString ) ) this_BEGIN_4= RULE_BEGIN ( (lv_node_5_0= ruleTreeNode ) ) this_END_6= RULE_END ) )
            // InternalQualityBtCppParser.g:724:2: (otherlv_0= BehaviorTree otherlv_1= ID otherlv_2= EqualsSign ( (lv_ID_3_0= ruleEString ) ) this_BEGIN_4= RULE_BEGIN ( (lv_node_5_0= ruleTreeNode ) ) this_END_6= RULE_END )
            {
            // InternalQualityBtCppParser.g:724:2: (otherlv_0= BehaviorTree otherlv_1= ID otherlv_2= EqualsSign ( (lv_ID_3_0= ruleEString ) ) this_BEGIN_4= RULE_BEGIN ( (lv_node_5_0= ruleTreeNode ) ) this_END_6= RULE_END )
            // InternalQualityBtCppParser.g:725:3: otherlv_0= BehaviorTree otherlv_1= ID otherlv_2= EqualsSign ( (lv_ID_3_0= ruleEString ) ) this_BEGIN_4= RULE_BEGIN ( (lv_node_5_0= ruleTreeNode ) ) this_END_6= RULE_END
            {
            otherlv_0=(Token)match(input,BehaviorTree,FOLLOW_7); 

            			newLeafNode(otherlv_0, grammarAccess.getBehaviorTreeAccess().getBehaviorTreeKeyword_0());
            		
            otherlv_1=(Token)match(input,ID,FOLLOW_8); 

            			newLeafNode(otherlv_1, grammarAccess.getBehaviorTreeAccess().getIDKeyword_1());
            		
            otherlv_2=(Token)match(input,EqualsSign,FOLLOW_3); 

            			newLeafNode(otherlv_2, grammarAccess.getBehaviorTreeAccess().getEqualsSignKeyword_2());
            		
            // InternalQualityBtCppParser.g:737:3: ( (lv_ID_3_0= ruleEString ) )
            // InternalQualityBtCppParser.g:738:4: (lv_ID_3_0= ruleEString )
            {
            // InternalQualityBtCppParser.g:738:4: (lv_ID_3_0= ruleEString )
            // InternalQualityBtCppParser.g:739:5: lv_ID_3_0= ruleEString
            {

            					newCompositeNode(grammarAccess.getBehaviorTreeAccess().getIDEStringParserRuleCall_3_0());
            				
            pushFollow(FOLLOW_4);
            lv_ID_3_0=ruleEString();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getBehaviorTreeRule());
            					}
            					set(
            						current,
            						"ID",
            						lv_ID_3_0,
            						"org.xtext.btcpp.QualityBtCpp.EString");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            this_BEGIN_4=(Token)match(input,RULE_BEGIN,FOLLOW_9); 

            			newLeafNode(this_BEGIN_4, grammarAccess.getBehaviorTreeAccess().getBEGINTerminalRuleCall_4());
            		
            // InternalQualityBtCppParser.g:760:3: ( (lv_node_5_0= ruleTreeNode ) )
            // InternalQualityBtCppParser.g:761:4: (lv_node_5_0= ruleTreeNode )
            {
            // InternalQualityBtCppParser.g:761:4: (lv_node_5_0= ruleTreeNode )
            // InternalQualityBtCppParser.g:762:5: lv_node_5_0= ruleTreeNode
            {

            					newCompositeNode(grammarAccess.getBehaviorTreeAccess().getNodeTreeNodeParserRuleCall_5_0());
            				
            pushFollow(FOLLOW_10);
            lv_node_5_0=ruleTreeNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getBehaviorTreeRule());
            					}
            					set(
            						current,
            						"node",
            						lv_node_5_0,
            						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            this_END_6=(Token)match(input,RULE_END,FOLLOW_2); 

            			newLeafNode(this_END_6, grammarAccess.getBehaviorTreeAccess().getENDTerminalRuleCall_6());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBehaviorTree"


    // $ANTLR start "entryRuleEString"
    // InternalQualityBtCppParser.g:787:1: entryRuleEString returns [String current=null] : iv_ruleEString= ruleEString EOF ;
    public final String entryRuleEString() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleEString = null;


        try {
            // InternalQualityBtCppParser.g:787:47: (iv_ruleEString= ruleEString EOF )
            // InternalQualityBtCppParser.g:788:2: iv_ruleEString= ruleEString EOF
            {
             newCompositeNode(grammarAccess.getEStringRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleEString=ruleEString();

            state._fsp--;

             current =iv_ruleEString.getText(); 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEString"


    // $ANTLR start "ruleEString"
    // InternalQualityBtCppParser.g:794:1: ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_STRING_0= RULE_STRING | this_ID_1= RULE_ID ) ;
    public final AntlrDatatypeRuleToken ruleEString() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_STRING_0=null;
        Token this_ID_1=null;


        	enterRule();

        try {
            // InternalQualityBtCppParser.g:800:2: ( (this_STRING_0= RULE_STRING | this_ID_1= RULE_ID ) )
            // InternalQualityBtCppParser.g:801:2: (this_STRING_0= RULE_STRING | this_ID_1= RULE_ID )
            {
            // InternalQualityBtCppParser.g:801:2: (this_STRING_0= RULE_STRING | this_ID_1= RULE_ID )
            int alt10=2;
            int LA10_0 = input.LA(1);

            if ( (LA10_0==RULE_STRING) ) {
                alt10=1;
            }
            else if ( (LA10_0==RULE_ID) ) {
                alt10=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 10, 0, input);

                throw nvae;
            }
            switch (alt10) {
                case 1 :
                    // InternalQualityBtCppParser.g:802:3: this_STRING_0= RULE_STRING
                    {
                    this_STRING_0=(Token)match(input,RULE_STRING,FOLLOW_2); 

                    			current.merge(this_STRING_0);
                    		

                    			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
                    		

                    }
                    break;
                case 2 :
                    // InternalQualityBtCppParser.g:810:3: this_ID_1= RULE_ID
                    {
                    this_ID_1=(Token)match(input,RULE_ID,FOLLOW_2); 

                    			current.merge(this_ID_1);
                    		

                    			newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1());
                    		

                    }
                    break;

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEString"


    // $ANTLR start "entryRuleParameter"
    // InternalQualityBtCppParser.g:821:1: entryRuleParameter returns [EObject current=null] : iv_ruleParameter= ruleParameter EOF ;
    public final EObject entryRuleParameter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParameter = null;


        try {
            // InternalQualityBtCppParser.g:821:50: (iv_ruleParameter= ruleParameter EOF )
            // InternalQualityBtCppParser.g:822:2: iv_ruleParameter= ruleParameter EOF
            {
             newCompositeNode(grammarAccess.getParameterRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleParameter=ruleParameter();

            state._fsp--;

             current =iv_ruleParameter; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleParameter"


    // $ANTLR start "ruleParameter"
    // InternalQualityBtCppParser.g:828:1: ruleParameter returns [EObject current=null] : ( ( (lv_key_0_0= ruleEString ) ) otherlv_1= EqualsSign ( (lv_value_2_0= ruleEString ) ) ) ;
    public final EObject ruleParameter() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        AntlrDatatypeRuleToken lv_key_0_0 = null;

        AntlrDatatypeRuleToken lv_value_2_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:834:2: ( ( ( (lv_key_0_0= ruleEString ) ) otherlv_1= EqualsSign ( (lv_value_2_0= ruleEString ) ) ) )
            // InternalQualityBtCppParser.g:835:2: ( ( (lv_key_0_0= ruleEString ) ) otherlv_1= EqualsSign ( (lv_value_2_0= ruleEString ) ) )
            {
            // InternalQualityBtCppParser.g:835:2: ( ( (lv_key_0_0= ruleEString ) ) otherlv_1= EqualsSign ( (lv_value_2_0= ruleEString ) ) )
            // InternalQualityBtCppParser.g:836:3: ( (lv_key_0_0= ruleEString ) ) otherlv_1= EqualsSign ( (lv_value_2_0= ruleEString ) )
            {
            // InternalQualityBtCppParser.g:836:3: ( (lv_key_0_0= ruleEString ) )
            // InternalQualityBtCppParser.g:837:4: (lv_key_0_0= ruleEString )
            {
            // InternalQualityBtCppParser.g:837:4: (lv_key_0_0= ruleEString )
            // InternalQualityBtCppParser.g:838:5: lv_key_0_0= ruleEString
            {

            					newCompositeNode(grammarAccess.getParameterAccess().getKeyEStringParserRuleCall_0_0());
            				
            pushFollow(FOLLOW_8);
            lv_key_0_0=ruleEString();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getParameterRule());
            					}
            					set(
            						current,
            						"key",
            						lv_key_0_0,
            						"org.xtext.btcpp.QualityBtCpp.EString");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            otherlv_1=(Token)match(input,EqualsSign,FOLLOW_3); 

            			newLeafNode(otherlv_1, grammarAccess.getParameterAccess().getEqualsSignKeyword_1());
            		
            // InternalQualityBtCppParser.g:859:3: ( (lv_value_2_0= ruleEString ) )
            // InternalQualityBtCppParser.g:860:4: (lv_value_2_0= ruleEString )
            {
            // InternalQualityBtCppParser.g:860:4: (lv_value_2_0= ruleEString )
            // InternalQualityBtCppParser.g:861:5: lv_value_2_0= ruleEString
            {

            					newCompositeNode(grammarAccess.getParameterAccess().getValueEStringParserRuleCall_2_0());
            				
            pushFollow(FOLLOW_2);
            lv_value_2_0=ruleEString();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getParameterRule());
            					}
            					set(
            						current,
            						"value",
            						lv_value_2_0,
            						"org.xtext.btcpp.QualityBtCpp.EString");
            					afterParserOrEnumRuleCall();
            				

            }


            }


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleParameter"


    // $ANTLR start "entryRuleQuality"
    // InternalQualityBtCppParser.g:882:1: entryRuleQuality returns [EObject current=null] : iv_ruleQuality= ruleQuality EOF ;
    public final EObject entryRuleQuality() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleQuality = null;


        try {
            // InternalQualityBtCppParser.g:882:48: (iv_ruleQuality= ruleQuality EOF )
            // InternalQualityBtCppParser.g:883:2: iv_ruleQuality= ruleQuality EOF
            {
             newCompositeNode(grammarAccess.getQualityRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleQuality=ruleQuality();

            state._fsp--;

             current =iv_ruleQuality; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQuality"


    // $ANTLR start "ruleQuality"
    // InternalQualityBtCppParser.g:889:1: ruleQuality returns [EObject current=null] : ( () otherlv_1= Quality otherlv_2= EqualsSign ( (lv_ID_3_0= ruleEString ) ) (otherlv_4= LeftParenthesis ( (lv_qualityreq_5_0= ruleQualityRequirement ) ) (otherlv_6= Comma ( (lv_qualityreq_7_0= ruleQualityRequirement ) ) )* otherlv_8= RightParenthesis )? ) ;
    public final EObject ruleQuality() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        AntlrDatatypeRuleToken lv_ID_3_0 = null;

        EObject lv_qualityreq_5_0 = null;

        EObject lv_qualityreq_7_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:895:2: ( ( () otherlv_1= Quality otherlv_2= EqualsSign ( (lv_ID_3_0= ruleEString ) ) (otherlv_4= LeftParenthesis ( (lv_qualityreq_5_0= ruleQualityRequirement ) ) (otherlv_6= Comma ( (lv_qualityreq_7_0= ruleQualityRequirement ) ) )* otherlv_8= RightParenthesis )? ) )
            // InternalQualityBtCppParser.g:896:2: ( () otherlv_1= Quality otherlv_2= EqualsSign ( (lv_ID_3_0= ruleEString ) ) (otherlv_4= LeftParenthesis ( (lv_qualityreq_5_0= ruleQualityRequirement ) ) (otherlv_6= Comma ( (lv_qualityreq_7_0= ruleQualityRequirement ) ) )* otherlv_8= RightParenthesis )? )
            {
            // InternalQualityBtCppParser.g:896:2: ( () otherlv_1= Quality otherlv_2= EqualsSign ( (lv_ID_3_0= ruleEString ) ) (otherlv_4= LeftParenthesis ( (lv_qualityreq_5_0= ruleQualityRequirement ) ) (otherlv_6= Comma ( (lv_qualityreq_7_0= ruleQualityRequirement ) ) )* otherlv_8= RightParenthesis )? )
            // InternalQualityBtCppParser.g:897:3: () otherlv_1= Quality otherlv_2= EqualsSign ( (lv_ID_3_0= ruleEString ) ) (otherlv_4= LeftParenthesis ( (lv_qualityreq_5_0= ruleQualityRequirement ) ) (otherlv_6= Comma ( (lv_qualityreq_7_0= ruleQualityRequirement ) ) )* otherlv_8= RightParenthesis )?
            {
            // InternalQualityBtCppParser.g:897:3: ()
            // InternalQualityBtCppParser.g:898:4: 
            {

            				current = forceCreateModelElement(
            					grammarAccess.getQualityAccess().getQualityAction_0(),
            					current);
            			

            }

            otherlv_1=(Token)match(input,Quality,FOLLOW_8); 

            			newLeafNode(otherlv_1, grammarAccess.getQualityAccess().getQualityKeyword_1());
            		
            otherlv_2=(Token)match(input,EqualsSign,FOLLOW_3); 

            			newLeafNode(otherlv_2, grammarAccess.getQualityAccess().getEqualsSignKeyword_2());
            		
            // InternalQualityBtCppParser.g:912:3: ( (lv_ID_3_0= ruleEString ) )
            // InternalQualityBtCppParser.g:913:4: (lv_ID_3_0= ruleEString )
            {
            // InternalQualityBtCppParser.g:913:4: (lv_ID_3_0= ruleEString )
            // InternalQualityBtCppParser.g:914:5: lv_ID_3_0= ruleEString
            {

            					newCompositeNode(grammarAccess.getQualityAccess().getIDEStringParserRuleCall_3_0());
            				
            pushFollow(FOLLOW_11);
            lv_ID_3_0=ruleEString();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getQualityRule());
            					}
            					set(
            						current,
            						"ID",
            						lv_ID_3_0,
            						"org.xtext.btcpp.QualityBtCpp.EString");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            // InternalQualityBtCppParser.g:931:3: (otherlv_4= LeftParenthesis ( (lv_qualityreq_5_0= ruleQualityRequirement ) ) (otherlv_6= Comma ( (lv_qualityreq_7_0= ruleQualityRequirement ) ) )* otherlv_8= RightParenthesis )?
            int alt12=2;
            int LA12_0 = input.LA(1);

            if ( (LA12_0==LeftParenthesis) ) {
                int LA12_1 = input.LA(2);

                if ( (LA12_1==QualityReq) ) {
                    alt12=1;
                }
            }
            switch (alt12) {
                case 1 :
                    // InternalQualityBtCppParser.g:932:4: otherlv_4= LeftParenthesis ( (lv_qualityreq_5_0= ruleQualityRequirement ) ) (otherlv_6= Comma ( (lv_qualityreq_7_0= ruleQualityRequirement ) ) )* otherlv_8= RightParenthesis
                    {
                    otherlv_4=(Token)match(input,LeftParenthesis,FOLLOW_12); 

                    				newLeafNode(otherlv_4, grammarAccess.getQualityAccess().getLeftParenthesisKeyword_4_0());
                    			
                    // InternalQualityBtCppParser.g:936:4: ( (lv_qualityreq_5_0= ruleQualityRequirement ) )
                    // InternalQualityBtCppParser.g:937:5: (lv_qualityreq_5_0= ruleQualityRequirement )
                    {
                    // InternalQualityBtCppParser.g:937:5: (lv_qualityreq_5_0= ruleQualityRequirement )
                    // InternalQualityBtCppParser.g:938:6: lv_qualityreq_5_0= ruleQualityRequirement
                    {

                    						newCompositeNode(grammarAccess.getQualityAccess().getQualityreqQualityRequirementParserRuleCall_4_1_0());
                    					
                    pushFollow(FOLLOW_13);
                    lv_qualityreq_5_0=ruleQualityRequirement();

                    state._fsp--;


                    						if (current==null) {
                    							current = createModelElementForParent(grammarAccess.getQualityRule());
                    						}
                    						add(
                    							current,
                    							"qualityreq",
                    							lv_qualityreq_5_0,
                    							"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:955:4: (otherlv_6= Comma ( (lv_qualityreq_7_0= ruleQualityRequirement ) ) )*
                    loop11:
                    do {
                        int alt11=2;
                        int LA11_0 = input.LA(1);

                        if ( (LA11_0==Comma) ) {
                            alt11=1;
                        }


                        switch (alt11) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:956:5: otherlv_6= Comma ( (lv_qualityreq_7_0= ruleQualityRequirement ) )
                    	    {
                    	    otherlv_6=(Token)match(input,Comma,FOLLOW_12); 

                    	    					newLeafNode(otherlv_6, grammarAccess.getQualityAccess().getCommaKeyword_4_2_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:960:5: ( (lv_qualityreq_7_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:961:6: (lv_qualityreq_7_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:961:6: (lv_qualityreq_7_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:962:7: lv_qualityreq_7_0= ruleQualityRequirement
                    	    {

                    	    							newCompositeNode(grammarAccess.getQualityAccess().getQualityreqQualityRequirementParserRuleCall_4_2_1_0());
                    	    						
                    	    pushFollow(FOLLOW_13);
                    	    lv_qualityreq_7_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    							if (current==null) {
                    	    								current = createModelElementForParent(grammarAccess.getQualityRule());
                    	    							}
                    	    							add(
                    	    								current,
                    	    								"qualityreq",
                    	    								lv_qualityreq_7_0,
                    	    								"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop11;
                        }
                    } while (true);

                    otherlv_8=(Token)match(input,RightParenthesis,FOLLOW_2); 

                    				newLeafNode(otherlv_8, grammarAccess.getQualityAccess().getRightParenthesisKeyword_4_3());
                    			

                    }
                    break;

            }


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQuality"


    // $ANTLR start "entryRuleQualityRequirement"
    // InternalQualityBtCppParser.g:989:1: entryRuleQualityRequirement returns [EObject current=null] : iv_ruleQualityRequirement= ruleQualityRequirement EOF ;
    public final EObject entryRuleQualityRequirement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleQualityRequirement = null;


        try {
            // InternalQualityBtCppParser.g:989:59: (iv_ruleQualityRequirement= ruleQualityRequirement EOF )
            // InternalQualityBtCppParser.g:990:2: iv_ruleQualityRequirement= ruleQualityRequirement EOF
            {
             newCompositeNode(grammarAccess.getQualityRequirementRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleQualityRequirement=ruleQualityRequirement();

            state._fsp--;

             current =iv_ruleQualityRequirement; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQualityRequirement"


    // $ANTLR start "ruleQualityRequirement"
    // InternalQualityBtCppParser.g:996:1: ruleQualityRequirement returns [EObject current=null] : ( () otherlv_1= QualityReq otherlv_2= ID otherlv_3= EqualsSign ( (lv_ID_4_0= ruleEString ) ) otherlv_5= Description otherlv_6= EqualsSign ( (lv_description_7_0= ruleEString ) ) ) ;
    public final EObject ruleQualityRequirement() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        AntlrDatatypeRuleToken lv_ID_4_0 = null;

        AntlrDatatypeRuleToken lv_description_7_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:1002:2: ( ( () otherlv_1= QualityReq otherlv_2= ID otherlv_3= EqualsSign ( (lv_ID_4_0= ruleEString ) ) otherlv_5= Description otherlv_6= EqualsSign ( (lv_description_7_0= ruleEString ) ) ) )
            // InternalQualityBtCppParser.g:1003:2: ( () otherlv_1= QualityReq otherlv_2= ID otherlv_3= EqualsSign ( (lv_ID_4_0= ruleEString ) ) otherlv_5= Description otherlv_6= EqualsSign ( (lv_description_7_0= ruleEString ) ) )
            {
            // InternalQualityBtCppParser.g:1003:2: ( () otherlv_1= QualityReq otherlv_2= ID otherlv_3= EqualsSign ( (lv_ID_4_0= ruleEString ) ) otherlv_5= Description otherlv_6= EqualsSign ( (lv_description_7_0= ruleEString ) ) )
            // InternalQualityBtCppParser.g:1004:3: () otherlv_1= QualityReq otherlv_2= ID otherlv_3= EqualsSign ( (lv_ID_4_0= ruleEString ) ) otherlv_5= Description otherlv_6= EqualsSign ( (lv_description_7_0= ruleEString ) )
            {
            // InternalQualityBtCppParser.g:1004:3: ()
            // InternalQualityBtCppParser.g:1005:4: 
            {

            				current = forceCreateModelElement(
            					grammarAccess.getQualityRequirementAccess().getQualityRequirementAction_0(),
            					current);
            			

            }

            otherlv_1=(Token)match(input,QualityReq,FOLLOW_7); 

            			newLeafNode(otherlv_1, grammarAccess.getQualityRequirementAccess().getQualityReqKeyword_1());
            		
            otherlv_2=(Token)match(input,ID,FOLLOW_8); 

            			newLeafNode(otherlv_2, grammarAccess.getQualityRequirementAccess().getIDKeyword_2());
            		
            otherlv_3=(Token)match(input,EqualsSign,FOLLOW_3); 

            			newLeafNode(otherlv_3, grammarAccess.getQualityRequirementAccess().getEqualsSignKeyword_3());
            		
            // InternalQualityBtCppParser.g:1023:3: ( (lv_ID_4_0= ruleEString ) )
            // InternalQualityBtCppParser.g:1024:4: (lv_ID_4_0= ruleEString )
            {
            // InternalQualityBtCppParser.g:1024:4: (lv_ID_4_0= ruleEString )
            // InternalQualityBtCppParser.g:1025:5: lv_ID_4_0= ruleEString
            {

            					newCompositeNode(grammarAccess.getQualityRequirementAccess().getIDEStringParserRuleCall_4_0());
            				
            pushFollow(FOLLOW_14);
            lv_ID_4_0=ruleEString();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getQualityRequirementRule());
            					}
            					set(
            						current,
            						"ID",
            						lv_ID_4_0,
            						"org.xtext.btcpp.QualityBtCpp.EString");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            otherlv_5=(Token)match(input,Description,FOLLOW_8); 

            			newLeafNode(otherlv_5, grammarAccess.getQualityRequirementAccess().getDescriptionKeyword_5());
            		
            otherlv_6=(Token)match(input,EqualsSign,FOLLOW_3); 

            			newLeafNode(otherlv_6, grammarAccess.getQualityRequirementAccess().getEqualsSignKeyword_6());
            		
            // InternalQualityBtCppParser.g:1050:3: ( (lv_description_7_0= ruleEString ) )
            // InternalQualityBtCppParser.g:1051:4: (lv_description_7_0= ruleEString )
            {
            // InternalQualityBtCppParser.g:1051:4: (lv_description_7_0= ruleEString )
            // InternalQualityBtCppParser.g:1052:5: lv_description_7_0= ruleEString
            {

            					newCompositeNode(grammarAccess.getQualityRequirementAccess().getDescriptionEStringParserRuleCall_7_0());
            				
            pushFollow(FOLLOW_2);
            lv_description_7_0=ruleEString();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getQualityRequirementRule());
            					}
            					set(
            						current,
            						"description",
            						lv_description_7_0,
            						"org.xtext.btcpp.QualityBtCpp.EString");
            					afterParserOrEnumRuleCall();
            				

            }


            }


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQualityRequirement"


    // $ANTLR start "entryRuleFallbackNode"
    // InternalQualityBtCppParser.g:1073:1: entryRuleFallbackNode returns [EObject current=null] : iv_ruleFallbackNode= ruleFallbackNode EOF ;
    public final EObject entryRuleFallbackNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFallbackNode = null;


        try {
            // InternalQualityBtCppParser.g:1073:53: (iv_ruleFallbackNode= ruleFallbackNode EOF )
            // InternalQualityBtCppParser.g:1074:2: iv_ruleFallbackNode= ruleFallbackNode EOF
            {
             newCompositeNode(grammarAccess.getFallbackNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleFallbackNode=ruleFallbackNode();

            state._fsp--;

             current =iv_ruleFallbackNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFallbackNode"


    // $ANTLR start "ruleFallbackNode"
    // InternalQualityBtCppParser.g:1080:1: ruleFallbackNode returns [EObject current=null] : (otherlv_0= QuestionMark ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END ) ;
    public final EObject ruleFallbackNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token this_BEGIN_22=null;
        Token this_END_25=null;
        AntlrDatatypeRuleToken lv_ID_5_0 = null;

        AntlrDatatypeRuleToken lv_name_8_0 = null;

        EObject lv_parameters_10_0 = null;

        EObject lv_parameters_12_0 = null;

        EObject lv_satisfices_14_0 = null;

        EObject lv_satisfices_16_0 = null;

        EObject lv_satisfies_18_0 = null;

        EObject lv_satisfies_20_0 = null;

        EObject lv_child_23_0 = null;

        EObject lv_child_24_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:1086:2: ( (otherlv_0= QuestionMark ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END ) )
            // InternalQualityBtCppParser.g:1087:2: (otherlv_0= QuestionMark ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END )
            {
            // InternalQualityBtCppParser.g:1087:2: (otherlv_0= QuestionMark ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END )
            // InternalQualityBtCppParser.g:1088:3: otherlv_0= QuestionMark ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END
            {
            otherlv_0=(Token)match(input,QuestionMark,FOLLOW_15); 

            			newLeafNode(otherlv_0, grammarAccess.getFallbackNodeAccess().getQuestionMarkKeyword_0());
            		
            // InternalQualityBtCppParser.g:1092:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt17=2;
            int LA17_0 = input.LA(1);

            if ( ((LA17_0>=Parameters && LA17_0<=Satisfies)||LA17_0==Name||LA17_0==ID||(LA17_0>=LeftParenthesis && LA17_0<=RightParenthesis)) ) {
                alt17=1;
            }
            switch (alt17) {
                case 1 :
                    // InternalQualityBtCppParser.g:1093:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:1093:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:1094:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1());
                    				
                    // InternalQualityBtCppParser.g:1097:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:1098:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:1098:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+
                    int cnt16=0;
                    loop16:
                    do {
                        int alt16=8;
                        int LA16_0 = input.LA(1);

                        if ( LA16_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1(), 0) ) {
                            alt16=1;
                        }
                        else if ( LA16_0 == ID && getUnorderedGroupHelper().canSelect(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1(), 1) ) {
                            alt16=2;
                        }
                        else if ( LA16_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1(), 2) ) {
                            alt16=3;
                        }
                        else if ( LA16_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1(), 3) ) {
                            alt16=4;
                        }
                        else if ( LA16_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1(), 4) ) {
                            alt16=5;
                        }
                        else if ( LA16_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1(), 5) ) {
                            alt16=6;
                        }
                        else if ( LA16_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1(), 6) ) {
                            alt16=7;
                        }


                        switch (alt16) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:1099:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:1099:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:1100:5: {...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleFallbackNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:1100:109: ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:1101:6: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:1104:9: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:1104:10: {...}? => (otherlv_2= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleFallbackNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:1104:19: (otherlv_2= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:1104:20: otherlv_2= LeftParenthesis
                    	    {
                    	    otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_2, grammarAccess.getFallbackNodeAccess().getLeftParenthesisKeyword_1_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:1114:4: ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:1114:4: ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:1115:5: {...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleFallbackNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:1115:109: ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:1116:6: ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:1119:9: ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:1119:10: {...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleFallbackNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:1119:19: (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:1119:20: otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) )
                    	    {
                    	    otherlv_3=(Token)match(input,ID,FOLLOW_8); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getFallbackNodeAccess().getIDKeyword_1_1_0());
                    	    								
                    	    otherlv_4=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getFallbackNodeAccess().getEqualsSignKeyword_1_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:1127:9: ( (lv_ID_5_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:1128:10: (lv_ID_5_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:1128:10: (lv_ID_5_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:1129:11: lv_ID_5_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getFallbackNodeAccess().getIDEStringParserRuleCall_1_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_15);
                    	    lv_ID_5_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getFallbackNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"ID",
                    	    												lv_ID_5_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:1152:4: ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:1152:4: ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:1153:5: {...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleFallbackNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:1153:109: ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:1154:6: ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:1157:9: ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:1157:10: {...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleFallbackNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:1157:19: (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:1157:20: otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) )
                    	    {
                    	    otherlv_6=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_6, grammarAccess.getFallbackNodeAccess().getNameKeyword_1_2_0());
                    	    								
                    	    otherlv_7=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_7, grammarAccess.getFallbackNodeAccess().getEqualsSignKeyword_1_2_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:1165:9: ( (lv_name_8_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:1166:10: (lv_name_8_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:1166:10: (lv_name_8_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:1167:11: lv_name_8_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getFallbackNodeAccess().getNameEStringParserRuleCall_1_2_2_0());
                    	    										
                    	    pushFollow(FOLLOW_15);
                    	    lv_name_8_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getFallbackNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_8_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:1190:4: ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:1190:4: ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:1191:5: {...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleFallbackNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:1191:109: ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:1192:6: ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:1195:9: ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:1195:10: {...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleFallbackNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:1195:19: (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:1195:20: otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_9=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_9, grammarAccess.getFallbackNodeAccess().getParametersKeyword_1_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:1199:9: ( (lv_parameters_10_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:1200:10: (lv_parameters_10_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:1200:10: (lv_parameters_10_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:1201:11: lv_parameters_10_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getFallbackNodeAccess().getParametersParameterParserRuleCall_1_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_parameters_10_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getFallbackNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_10_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:1218:9: (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )*
                    	    loop13:
                    	    do {
                    	        int alt13=2;
                    	        int LA13_0 = input.LA(1);

                    	        if ( (LA13_0==Comma) ) {
                    	            alt13=1;
                    	        }


                    	        switch (alt13) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:1219:10: otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_11=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_11, grammarAccess.getFallbackNodeAccess().getCommaKeyword_1_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:1223:10: ( (lv_parameters_12_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:1224:11: (lv_parameters_12_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:1224:11: (lv_parameters_12_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:1225:12: lv_parameters_12_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getFallbackNodeAccess().getParametersParameterParserRuleCall_1_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_parameters_12_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getFallbackNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_12_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop13;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:1249:4: ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:1249:4: ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:1250:5: {...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleFallbackNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:1250:109: ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:1251:6: ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:1254:9: ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:1254:10: {...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleFallbackNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:1254:19: (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:1254:20: otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_13=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_13, grammarAccess.getFallbackNodeAccess().getSatisficesKeyword_1_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:1258:9: ( (lv_satisfices_14_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:1259:10: (lv_satisfices_14_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:1259:10: (lv_satisfices_14_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:1260:11: lv_satisfices_14_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getFallbackNodeAccess().getSatisficesQualityParserRuleCall_1_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfices_14_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getFallbackNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_14_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:1277:9: (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )*
                    	    loop14:
                    	    do {
                    	        int alt14=2;
                    	        int LA14_0 = input.LA(1);

                    	        if ( (LA14_0==Comma) ) {
                    	            alt14=1;
                    	        }


                    	        switch (alt14) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:1278:10: otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_15=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_15, grammarAccess.getFallbackNodeAccess().getCommaKeyword_1_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:1282:10: ( (lv_satisfices_16_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:1283:11: (lv_satisfices_16_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:1283:11: (lv_satisfices_16_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:1284:12: lv_satisfices_16_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getFallbackNodeAccess().getSatisficesQualityParserRuleCall_1_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfices_16_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getFallbackNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_16_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop14;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:1308:4: ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:1308:4: ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:1309:5: {...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleFallbackNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:1309:109: ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:1310:6: ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:1313:9: ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:1313:10: {...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleFallbackNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:1313:19: (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:1313:20: otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_17=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_17, grammarAccess.getFallbackNodeAccess().getSatisfiesKeyword_1_5_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:1317:9: ( (lv_satisfies_18_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:1318:10: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:1318:10: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:1319:11: lv_satisfies_18_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getFallbackNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_5_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfies_18_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getFallbackNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_18_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:1336:9: (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )*
                    	    loop15:
                    	    do {
                    	        int alt15=2;
                    	        int LA15_0 = input.LA(1);

                    	        if ( (LA15_0==Comma) ) {
                    	            alt15=1;
                    	        }


                    	        switch (alt15) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:1337:10: otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_19=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_19, grammarAccess.getFallbackNodeAccess().getCommaKeyword_1_5_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:1341:10: ( (lv_satisfies_20_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:1342:11: (lv_satisfies_20_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:1342:11: (lv_satisfies_20_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:1343:12: lv_satisfies_20_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getFallbackNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_5_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfies_20_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getFallbackNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_20_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop15;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 7 :
                    	    // InternalQualityBtCppParser.g:1367:4: ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:1367:4: ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:1368:5: {...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1(), 6) ) {
                    	        throw new FailedPredicateException(input, "ruleFallbackNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1(), 6)");
                    	    }
                    	    // InternalQualityBtCppParser.g:1368:109: ( ({...}? => (otherlv_21= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:1369:6: ({...}? => (otherlv_21= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1(), 6);
                    	    					
                    	    // InternalQualityBtCppParser.g:1372:9: ({...}? => (otherlv_21= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:1372:10: {...}? => (otherlv_21= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleFallbackNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:1372:19: (otherlv_21= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:1372:20: otherlv_21= RightParenthesis
                    	    {
                    	    otherlv_21=(Token)match(input,RightParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_21, grammarAccess.getFallbackNodeAccess().getRightParenthesisKeyword_1_6());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt16 >= 1 ) break loop16;
                                EarlyExitException eee =
                                    new EarlyExitException(16, input);
                                throw eee;
                        }
                        cnt16++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1()) ) {
                        throw new FailedPredicateException(input, "ruleFallbackNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1());
                    				

                    }
                    break;

            }

            this_BEGIN_22=(Token)match(input,RULE_BEGIN,FOLLOW_9); 

            			newLeafNode(this_BEGIN_22, grammarAccess.getFallbackNodeAccess().getBEGINTerminalRuleCall_2());
            		
            // InternalQualityBtCppParser.g:1394:3: ( (lv_child_23_0= ruleTreeNode ) )
            // InternalQualityBtCppParser.g:1395:4: (lv_child_23_0= ruleTreeNode )
            {
            // InternalQualityBtCppParser.g:1395:4: (lv_child_23_0= ruleTreeNode )
            // InternalQualityBtCppParser.g:1396:5: lv_child_23_0= ruleTreeNode
            {

            					newCompositeNode(grammarAccess.getFallbackNodeAccess().getChildTreeNodeParserRuleCall_3_0());
            				
            pushFollow(FOLLOW_18);
            lv_child_23_0=ruleTreeNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getFallbackNodeRule());
            					}
            					add(
            						current,
            						"child",
            						lv_child_23_0,
            						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            // InternalQualityBtCppParser.g:1413:3: ( (lv_child_24_0= ruleTreeNode ) )*
            loop18:
            do {
                int alt18=2;
                int LA18_0 = input.LA(1);

                if ( ((LA18_0>=KeepRunningUntilFailure && LA18_0<=SetBlackboard)||(LA18_0>=ConsumeQueue && LA18_0<=ScriptAction)||LA18_0==WhileDoElse||(LA18_0>=CoroAction && LA18_0<=IfThenElse)||LA18_0==Inverter||(LA18_0>=RunOnce && LA18_0<=Sleep)||LA18_0==Loop||LA18_0==Test||(LA18_0>=M && LA18_0<=HyphenMinusGreaterThanSign)||(LA18_0>=R && LA18_0<=VerticalLineVerticalLine)||LA18_0==QuestionMark) ) {
                    alt18=1;
                }


                switch (alt18) {
            	case 1 :
            	    // InternalQualityBtCppParser.g:1414:4: (lv_child_24_0= ruleTreeNode )
            	    {
            	    // InternalQualityBtCppParser.g:1414:4: (lv_child_24_0= ruleTreeNode )
            	    // InternalQualityBtCppParser.g:1415:5: lv_child_24_0= ruleTreeNode
            	    {

            	    					newCompositeNode(grammarAccess.getFallbackNodeAccess().getChildTreeNodeParserRuleCall_4_0());
            	    				
            	    pushFollow(FOLLOW_18);
            	    lv_child_24_0=ruleTreeNode();

            	    state._fsp--;


            	    					if (current==null) {
            	    						current = createModelElementForParent(grammarAccess.getFallbackNodeRule());
            	    					}
            	    					add(
            	    						current,
            	    						"child",
            	    						lv_child_24_0,
            	    						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            	    					afterParserOrEnumRuleCall();
            	    				

            	    }


            	    }
            	    break;

            	default :
            	    break loop18;
                }
            } while (true);

            this_END_25=(Token)match(input,RULE_END,FOLLOW_2); 

            			newLeafNode(this_END_25, grammarAccess.getFallbackNodeAccess().getENDTerminalRuleCall_5());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFallbackNode"


    // $ANTLR start "entryRuleIfThenElseNode"
    // InternalQualityBtCppParser.g:1440:1: entryRuleIfThenElseNode returns [EObject current=null] : iv_ruleIfThenElseNode= ruleIfThenElseNode EOF ;
    public final EObject entryRuleIfThenElseNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIfThenElseNode = null;


        try {
            // InternalQualityBtCppParser.g:1440:55: (iv_ruleIfThenElseNode= ruleIfThenElseNode EOF )
            // InternalQualityBtCppParser.g:1441:2: iv_ruleIfThenElseNode= ruleIfThenElseNode EOF
            {
             newCompositeNode(grammarAccess.getIfThenElseNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleIfThenElseNode=ruleIfThenElseNode();

            state._fsp--;

             current =iv_ruleIfThenElseNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIfThenElseNode"


    // $ANTLR start "ruleIfThenElseNode"
    // InternalQualityBtCppParser.g:1447:1: ruleIfThenElseNode returns [EObject current=null] : (otherlv_0= IfThenElse ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END ) ;
    public final EObject ruleIfThenElseNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token this_BEGIN_22=null;
        Token this_END_25=null;
        AntlrDatatypeRuleToken lv_ID_5_0 = null;

        AntlrDatatypeRuleToken lv_name_8_0 = null;

        EObject lv_parameters_10_0 = null;

        EObject lv_parameters_12_0 = null;

        EObject lv_satisfices_14_0 = null;

        EObject lv_satisfices_16_0 = null;

        EObject lv_satisfies_18_0 = null;

        EObject lv_satisfies_20_0 = null;

        EObject lv_child_23_0 = null;

        EObject lv_child_24_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:1453:2: ( (otherlv_0= IfThenElse ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END ) )
            // InternalQualityBtCppParser.g:1454:2: (otherlv_0= IfThenElse ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END )
            {
            // InternalQualityBtCppParser.g:1454:2: (otherlv_0= IfThenElse ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END )
            // InternalQualityBtCppParser.g:1455:3: otherlv_0= IfThenElse ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END
            {
            otherlv_0=(Token)match(input,IfThenElse,FOLLOW_15); 

            			newLeafNode(otherlv_0, grammarAccess.getIfThenElseNodeAccess().getIfThenElseKeyword_0());
            		
            // InternalQualityBtCppParser.g:1459:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt23=2;
            int LA23_0 = input.LA(1);

            if ( ((LA23_0>=Parameters && LA23_0<=Satisfies)||LA23_0==Name||LA23_0==ID||(LA23_0>=LeftParenthesis && LA23_0<=RightParenthesis)) ) {
                alt23=1;
            }
            switch (alt23) {
                case 1 :
                    // InternalQualityBtCppParser.g:1460:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:1460:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:1461:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1());
                    				
                    // InternalQualityBtCppParser.g:1464:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:1465:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:1465:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+
                    int cnt22=0;
                    loop22:
                    do {
                        int alt22=8;
                        int LA22_0 = input.LA(1);

                        if ( LA22_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1(), 0) ) {
                            alt22=1;
                        }
                        else if ( LA22_0 == ID && getUnorderedGroupHelper().canSelect(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1(), 1) ) {
                            alt22=2;
                        }
                        else if ( LA22_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1(), 2) ) {
                            alt22=3;
                        }
                        else if ( LA22_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1(), 3) ) {
                            alt22=4;
                        }
                        else if ( LA22_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1(), 4) ) {
                            alt22=5;
                        }
                        else if ( LA22_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1(), 5) ) {
                            alt22=6;
                        }
                        else if ( LA22_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1(), 6) ) {
                            alt22=7;
                        }


                        switch (alt22) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:1466:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:1466:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:1467:5: {...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleIfThenElseNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:1467:111: ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:1468:6: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:1471:9: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:1471:10: {...}? => (otherlv_2= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleIfThenElseNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:1471:19: (otherlv_2= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:1471:20: otherlv_2= LeftParenthesis
                    	    {
                    	    otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_2, grammarAccess.getIfThenElseNodeAccess().getLeftParenthesisKeyword_1_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:1481:4: ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:1481:4: ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:1482:5: {...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleIfThenElseNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:1482:111: ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:1483:6: ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:1486:9: ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:1486:10: {...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleIfThenElseNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:1486:19: (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:1486:20: otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) )
                    	    {
                    	    otherlv_3=(Token)match(input,ID,FOLLOW_8); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getIfThenElseNodeAccess().getIDKeyword_1_1_0());
                    	    								
                    	    otherlv_4=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getIfThenElseNodeAccess().getEqualsSignKeyword_1_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:1494:9: ( (lv_ID_5_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:1495:10: (lv_ID_5_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:1495:10: (lv_ID_5_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:1496:11: lv_ID_5_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getIfThenElseNodeAccess().getIDEStringParserRuleCall_1_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_15);
                    	    lv_ID_5_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getIfThenElseNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"ID",
                    	    												lv_ID_5_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:1519:4: ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:1519:4: ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:1520:5: {...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleIfThenElseNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:1520:111: ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:1521:6: ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:1524:9: ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:1524:10: {...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleIfThenElseNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:1524:19: (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:1524:20: otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) )
                    	    {
                    	    otherlv_6=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_6, grammarAccess.getIfThenElseNodeAccess().getNameKeyword_1_2_0());
                    	    								
                    	    otherlv_7=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_7, grammarAccess.getIfThenElseNodeAccess().getEqualsSignKeyword_1_2_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:1532:9: ( (lv_name_8_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:1533:10: (lv_name_8_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:1533:10: (lv_name_8_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:1534:11: lv_name_8_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getIfThenElseNodeAccess().getNameEStringParserRuleCall_1_2_2_0());
                    	    										
                    	    pushFollow(FOLLOW_15);
                    	    lv_name_8_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getIfThenElseNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_8_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:1557:4: ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:1557:4: ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:1558:5: {...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleIfThenElseNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:1558:111: ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:1559:6: ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:1562:9: ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:1562:10: {...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleIfThenElseNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:1562:19: (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:1562:20: otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_9=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_9, grammarAccess.getIfThenElseNodeAccess().getParametersKeyword_1_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:1566:9: ( (lv_parameters_10_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:1567:10: (lv_parameters_10_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:1567:10: (lv_parameters_10_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:1568:11: lv_parameters_10_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getIfThenElseNodeAccess().getParametersParameterParserRuleCall_1_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_parameters_10_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getIfThenElseNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_10_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:1585:9: (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )*
                    	    loop19:
                    	    do {
                    	        int alt19=2;
                    	        int LA19_0 = input.LA(1);

                    	        if ( (LA19_0==Comma) ) {
                    	            alt19=1;
                    	        }


                    	        switch (alt19) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:1586:10: otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_11=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_11, grammarAccess.getIfThenElseNodeAccess().getCommaKeyword_1_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:1590:10: ( (lv_parameters_12_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:1591:11: (lv_parameters_12_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:1591:11: (lv_parameters_12_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:1592:12: lv_parameters_12_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getIfThenElseNodeAccess().getParametersParameterParserRuleCall_1_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_parameters_12_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getIfThenElseNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_12_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop19;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:1616:4: ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:1616:4: ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:1617:5: {...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleIfThenElseNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:1617:111: ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:1618:6: ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:1621:9: ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:1621:10: {...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleIfThenElseNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:1621:19: (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:1621:20: otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_13=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_13, grammarAccess.getIfThenElseNodeAccess().getSatisficesKeyword_1_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:1625:9: ( (lv_satisfices_14_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:1626:10: (lv_satisfices_14_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:1626:10: (lv_satisfices_14_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:1627:11: lv_satisfices_14_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getIfThenElseNodeAccess().getSatisficesQualityParserRuleCall_1_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfices_14_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getIfThenElseNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_14_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:1644:9: (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )*
                    	    loop20:
                    	    do {
                    	        int alt20=2;
                    	        int LA20_0 = input.LA(1);

                    	        if ( (LA20_0==Comma) ) {
                    	            alt20=1;
                    	        }


                    	        switch (alt20) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:1645:10: otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_15=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_15, grammarAccess.getIfThenElseNodeAccess().getCommaKeyword_1_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:1649:10: ( (lv_satisfices_16_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:1650:11: (lv_satisfices_16_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:1650:11: (lv_satisfices_16_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:1651:12: lv_satisfices_16_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getIfThenElseNodeAccess().getSatisficesQualityParserRuleCall_1_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfices_16_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getIfThenElseNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_16_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop20;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:1675:4: ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:1675:4: ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:1676:5: {...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleIfThenElseNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:1676:111: ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:1677:6: ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:1680:9: ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:1680:10: {...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleIfThenElseNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:1680:19: (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:1680:20: otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_17=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_17, grammarAccess.getIfThenElseNodeAccess().getSatisfiesKeyword_1_5_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:1684:9: ( (lv_satisfies_18_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:1685:10: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:1685:10: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:1686:11: lv_satisfies_18_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getIfThenElseNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_5_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfies_18_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getIfThenElseNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_18_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:1703:9: (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )*
                    	    loop21:
                    	    do {
                    	        int alt21=2;
                    	        int LA21_0 = input.LA(1);

                    	        if ( (LA21_0==Comma) ) {
                    	            alt21=1;
                    	        }


                    	        switch (alt21) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:1704:10: otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_19=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_19, grammarAccess.getIfThenElseNodeAccess().getCommaKeyword_1_5_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:1708:10: ( (lv_satisfies_20_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:1709:11: (lv_satisfies_20_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:1709:11: (lv_satisfies_20_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:1710:12: lv_satisfies_20_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getIfThenElseNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_5_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfies_20_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getIfThenElseNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_20_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop21;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 7 :
                    	    // InternalQualityBtCppParser.g:1734:4: ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:1734:4: ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:1735:5: {...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1(), 6) ) {
                    	        throw new FailedPredicateException(input, "ruleIfThenElseNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1(), 6)");
                    	    }
                    	    // InternalQualityBtCppParser.g:1735:111: ( ({...}? => (otherlv_21= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:1736:6: ({...}? => (otherlv_21= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1(), 6);
                    	    					
                    	    // InternalQualityBtCppParser.g:1739:9: ({...}? => (otherlv_21= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:1739:10: {...}? => (otherlv_21= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleIfThenElseNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:1739:19: (otherlv_21= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:1739:20: otherlv_21= RightParenthesis
                    	    {
                    	    otherlv_21=(Token)match(input,RightParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_21, grammarAccess.getIfThenElseNodeAccess().getRightParenthesisKeyword_1_6());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt22 >= 1 ) break loop22;
                                EarlyExitException eee =
                                    new EarlyExitException(22, input);
                                throw eee;
                        }
                        cnt22++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1()) ) {
                        throw new FailedPredicateException(input, "ruleIfThenElseNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1());
                    				

                    }
                    break;

            }

            this_BEGIN_22=(Token)match(input,RULE_BEGIN,FOLLOW_9); 

            			newLeafNode(this_BEGIN_22, grammarAccess.getIfThenElseNodeAccess().getBEGINTerminalRuleCall_2());
            		
            // InternalQualityBtCppParser.g:1761:3: ( (lv_child_23_0= ruleTreeNode ) )
            // InternalQualityBtCppParser.g:1762:4: (lv_child_23_0= ruleTreeNode )
            {
            // InternalQualityBtCppParser.g:1762:4: (lv_child_23_0= ruleTreeNode )
            // InternalQualityBtCppParser.g:1763:5: lv_child_23_0= ruleTreeNode
            {

            					newCompositeNode(grammarAccess.getIfThenElseNodeAccess().getChildTreeNodeParserRuleCall_3_0());
            				
            pushFollow(FOLLOW_18);
            lv_child_23_0=ruleTreeNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getIfThenElseNodeRule());
            					}
            					add(
            						current,
            						"child",
            						lv_child_23_0,
            						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            // InternalQualityBtCppParser.g:1780:3: ( (lv_child_24_0= ruleTreeNode ) )*
            loop24:
            do {
                int alt24=2;
                int LA24_0 = input.LA(1);

                if ( ((LA24_0>=KeepRunningUntilFailure && LA24_0<=SetBlackboard)||(LA24_0>=ConsumeQueue && LA24_0<=ScriptAction)||LA24_0==WhileDoElse||(LA24_0>=CoroAction && LA24_0<=IfThenElse)||LA24_0==Inverter||(LA24_0>=RunOnce && LA24_0<=Sleep)||LA24_0==Loop||LA24_0==Test||(LA24_0>=M && LA24_0<=HyphenMinusGreaterThanSign)||(LA24_0>=R && LA24_0<=VerticalLineVerticalLine)||LA24_0==QuestionMark) ) {
                    alt24=1;
                }


                switch (alt24) {
            	case 1 :
            	    // InternalQualityBtCppParser.g:1781:4: (lv_child_24_0= ruleTreeNode )
            	    {
            	    // InternalQualityBtCppParser.g:1781:4: (lv_child_24_0= ruleTreeNode )
            	    // InternalQualityBtCppParser.g:1782:5: lv_child_24_0= ruleTreeNode
            	    {

            	    					newCompositeNode(grammarAccess.getIfThenElseNodeAccess().getChildTreeNodeParserRuleCall_4_0());
            	    				
            	    pushFollow(FOLLOW_18);
            	    lv_child_24_0=ruleTreeNode();

            	    state._fsp--;


            	    					if (current==null) {
            	    						current = createModelElementForParent(grammarAccess.getIfThenElseNodeRule());
            	    					}
            	    					add(
            	    						current,
            	    						"child",
            	    						lv_child_24_0,
            	    						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            	    					afterParserOrEnumRuleCall();
            	    				

            	    }


            	    }
            	    break;

            	default :
            	    break loop24;
                }
            } while (true);

            this_END_25=(Token)match(input,RULE_END,FOLLOW_2); 

            			newLeafNode(this_END_25, grammarAccess.getIfThenElseNodeAccess().getENDTerminalRuleCall_5());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIfThenElseNode"


    // $ANTLR start "entryRuleManualSelectorNode"
    // InternalQualityBtCppParser.g:1807:1: entryRuleManualSelectorNode returns [EObject current=null] : iv_ruleManualSelectorNode= ruleManualSelectorNode EOF ;
    public final EObject entryRuleManualSelectorNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleManualSelectorNode = null;


        try {
            // InternalQualityBtCppParser.g:1807:59: (iv_ruleManualSelectorNode= ruleManualSelectorNode EOF )
            // InternalQualityBtCppParser.g:1808:2: iv_ruleManualSelectorNode= ruleManualSelectorNode EOF
            {
             newCompositeNode(grammarAccess.getManualSelectorNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleManualSelectorNode=ruleManualSelectorNode();

            state._fsp--;

             current =iv_ruleManualSelectorNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleManualSelectorNode"


    // $ANTLR start "ruleManualSelectorNode"
    // InternalQualityBtCppParser.g:1814:1: ruleManualSelectorNode returns [EObject current=null] : (otherlv_0= ManualSelector ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END ) ;
    public final EObject ruleManualSelectorNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token this_BEGIN_22=null;
        Token this_END_25=null;
        AntlrDatatypeRuleToken lv_ID_5_0 = null;

        AntlrDatatypeRuleToken lv_name_8_0 = null;

        EObject lv_parameters_10_0 = null;

        EObject lv_parameters_12_0 = null;

        EObject lv_satisfices_14_0 = null;

        EObject lv_satisfices_16_0 = null;

        EObject lv_satisfies_18_0 = null;

        EObject lv_satisfies_20_0 = null;

        EObject lv_child_23_0 = null;

        EObject lv_child_24_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:1820:2: ( (otherlv_0= ManualSelector ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END ) )
            // InternalQualityBtCppParser.g:1821:2: (otherlv_0= ManualSelector ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END )
            {
            // InternalQualityBtCppParser.g:1821:2: (otherlv_0= ManualSelector ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END )
            // InternalQualityBtCppParser.g:1822:3: otherlv_0= ManualSelector ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END
            {
            otherlv_0=(Token)match(input,ManualSelector,FOLLOW_15); 

            			newLeafNode(otherlv_0, grammarAccess.getManualSelectorNodeAccess().getManualSelectorKeyword_0());
            		
            // InternalQualityBtCppParser.g:1826:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt29=2;
            int LA29_0 = input.LA(1);

            if ( ((LA29_0>=Parameters && LA29_0<=Satisfies)||LA29_0==Name||LA29_0==ID||(LA29_0>=LeftParenthesis && LA29_0<=RightParenthesis)) ) {
                alt29=1;
            }
            switch (alt29) {
                case 1 :
                    // InternalQualityBtCppParser.g:1827:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:1827:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:1828:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1());
                    				
                    // InternalQualityBtCppParser.g:1831:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:1832:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:1832:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+
                    int cnt28=0;
                    loop28:
                    do {
                        int alt28=8;
                        int LA28_0 = input.LA(1);

                        if ( LA28_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1(), 0) ) {
                            alt28=1;
                        }
                        else if ( LA28_0 == ID && getUnorderedGroupHelper().canSelect(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1(), 1) ) {
                            alt28=2;
                        }
                        else if ( LA28_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1(), 2) ) {
                            alt28=3;
                        }
                        else if ( LA28_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1(), 3) ) {
                            alt28=4;
                        }
                        else if ( LA28_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1(), 4) ) {
                            alt28=5;
                        }
                        else if ( LA28_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1(), 5) ) {
                            alt28=6;
                        }
                        else if ( LA28_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1(), 6) ) {
                            alt28=7;
                        }


                        switch (alt28) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:1833:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:1833:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:1834:5: {...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleManualSelectorNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:1834:115: ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:1835:6: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:1838:9: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:1838:10: {...}? => (otherlv_2= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleManualSelectorNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:1838:19: (otherlv_2= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:1838:20: otherlv_2= LeftParenthesis
                    	    {
                    	    otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_2, grammarAccess.getManualSelectorNodeAccess().getLeftParenthesisKeyword_1_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:1848:4: ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:1848:4: ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:1849:5: {...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleManualSelectorNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:1849:115: ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:1850:6: ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:1853:9: ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:1853:10: {...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleManualSelectorNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:1853:19: (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:1853:20: otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) )
                    	    {
                    	    otherlv_3=(Token)match(input,ID,FOLLOW_8); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getManualSelectorNodeAccess().getIDKeyword_1_1_0());
                    	    								
                    	    otherlv_4=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getManualSelectorNodeAccess().getEqualsSignKeyword_1_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:1861:9: ( (lv_ID_5_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:1862:10: (lv_ID_5_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:1862:10: (lv_ID_5_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:1863:11: lv_ID_5_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getManualSelectorNodeAccess().getIDEStringParserRuleCall_1_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_15);
                    	    lv_ID_5_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getManualSelectorNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"ID",
                    	    												lv_ID_5_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:1886:4: ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:1886:4: ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:1887:5: {...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleManualSelectorNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:1887:115: ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:1888:6: ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:1891:9: ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:1891:10: {...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleManualSelectorNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:1891:19: (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:1891:20: otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) )
                    	    {
                    	    otherlv_6=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_6, grammarAccess.getManualSelectorNodeAccess().getNameKeyword_1_2_0());
                    	    								
                    	    otherlv_7=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_7, grammarAccess.getManualSelectorNodeAccess().getEqualsSignKeyword_1_2_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:1899:9: ( (lv_name_8_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:1900:10: (lv_name_8_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:1900:10: (lv_name_8_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:1901:11: lv_name_8_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getManualSelectorNodeAccess().getNameEStringParserRuleCall_1_2_2_0());
                    	    										
                    	    pushFollow(FOLLOW_15);
                    	    lv_name_8_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getManualSelectorNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_8_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:1924:4: ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:1924:4: ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:1925:5: {...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleManualSelectorNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:1925:115: ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:1926:6: ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:1929:9: ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:1929:10: {...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleManualSelectorNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:1929:19: (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:1929:20: otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_9=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_9, grammarAccess.getManualSelectorNodeAccess().getParametersKeyword_1_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:1933:9: ( (lv_parameters_10_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:1934:10: (lv_parameters_10_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:1934:10: (lv_parameters_10_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:1935:11: lv_parameters_10_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getManualSelectorNodeAccess().getParametersParameterParserRuleCall_1_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_parameters_10_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getManualSelectorNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_10_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:1952:9: (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )*
                    	    loop25:
                    	    do {
                    	        int alt25=2;
                    	        int LA25_0 = input.LA(1);

                    	        if ( (LA25_0==Comma) ) {
                    	            alt25=1;
                    	        }


                    	        switch (alt25) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:1953:10: otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_11=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_11, grammarAccess.getManualSelectorNodeAccess().getCommaKeyword_1_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:1957:10: ( (lv_parameters_12_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:1958:11: (lv_parameters_12_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:1958:11: (lv_parameters_12_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:1959:12: lv_parameters_12_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getManualSelectorNodeAccess().getParametersParameterParserRuleCall_1_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_parameters_12_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getManualSelectorNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_12_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop25;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:1983:4: ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:1983:4: ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:1984:5: {...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleManualSelectorNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:1984:115: ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:1985:6: ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:1988:9: ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:1988:10: {...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleManualSelectorNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:1988:19: (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:1988:20: otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_13=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_13, grammarAccess.getManualSelectorNodeAccess().getSatisficesKeyword_1_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:1992:9: ( (lv_satisfices_14_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:1993:10: (lv_satisfices_14_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:1993:10: (lv_satisfices_14_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:1994:11: lv_satisfices_14_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getManualSelectorNodeAccess().getSatisficesQualityParserRuleCall_1_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfices_14_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getManualSelectorNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_14_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:2011:9: (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )*
                    	    loop26:
                    	    do {
                    	        int alt26=2;
                    	        int LA26_0 = input.LA(1);

                    	        if ( (LA26_0==Comma) ) {
                    	            alt26=1;
                    	        }


                    	        switch (alt26) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:2012:10: otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_15=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_15, grammarAccess.getManualSelectorNodeAccess().getCommaKeyword_1_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:2016:10: ( (lv_satisfices_16_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:2017:11: (lv_satisfices_16_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:2017:11: (lv_satisfices_16_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:2018:12: lv_satisfices_16_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getManualSelectorNodeAccess().getSatisficesQualityParserRuleCall_1_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfices_16_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getManualSelectorNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_16_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop26;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:2042:4: ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:2042:4: ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:2043:5: {...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleManualSelectorNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:2043:115: ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:2044:6: ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:2047:9: ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:2047:10: {...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleManualSelectorNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:2047:19: (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:2047:20: otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_17=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_17, grammarAccess.getManualSelectorNodeAccess().getSatisfiesKeyword_1_5_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:2051:9: ( (lv_satisfies_18_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:2052:10: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:2052:10: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:2053:11: lv_satisfies_18_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getManualSelectorNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_5_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfies_18_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getManualSelectorNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_18_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:2070:9: (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )*
                    	    loop27:
                    	    do {
                    	        int alt27=2;
                    	        int LA27_0 = input.LA(1);

                    	        if ( (LA27_0==Comma) ) {
                    	            alt27=1;
                    	        }


                    	        switch (alt27) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:2071:10: otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_19=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_19, grammarAccess.getManualSelectorNodeAccess().getCommaKeyword_1_5_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:2075:10: ( (lv_satisfies_20_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:2076:11: (lv_satisfies_20_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:2076:11: (lv_satisfies_20_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:2077:12: lv_satisfies_20_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getManualSelectorNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_5_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfies_20_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getManualSelectorNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_20_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop27;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 7 :
                    	    // InternalQualityBtCppParser.g:2101:4: ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:2101:4: ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:2102:5: {...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1(), 6) ) {
                    	        throw new FailedPredicateException(input, "ruleManualSelectorNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1(), 6)");
                    	    }
                    	    // InternalQualityBtCppParser.g:2102:115: ( ({...}? => (otherlv_21= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:2103:6: ({...}? => (otherlv_21= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1(), 6);
                    	    					
                    	    // InternalQualityBtCppParser.g:2106:9: ({...}? => (otherlv_21= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:2106:10: {...}? => (otherlv_21= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleManualSelectorNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:2106:19: (otherlv_21= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:2106:20: otherlv_21= RightParenthesis
                    	    {
                    	    otherlv_21=(Token)match(input,RightParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_21, grammarAccess.getManualSelectorNodeAccess().getRightParenthesisKeyword_1_6());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt28 >= 1 ) break loop28;
                                EarlyExitException eee =
                                    new EarlyExitException(28, input);
                                throw eee;
                        }
                        cnt28++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1()) ) {
                        throw new FailedPredicateException(input, "ruleManualSelectorNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1());
                    				

                    }
                    break;

            }

            this_BEGIN_22=(Token)match(input,RULE_BEGIN,FOLLOW_9); 

            			newLeafNode(this_BEGIN_22, grammarAccess.getManualSelectorNodeAccess().getBEGINTerminalRuleCall_2());
            		
            // InternalQualityBtCppParser.g:2128:3: ( (lv_child_23_0= ruleTreeNode ) )
            // InternalQualityBtCppParser.g:2129:4: (lv_child_23_0= ruleTreeNode )
            {
            // InternalQualityBtCppParser.g:2129:4: (lv_child_23_0= ruleTreeNode )
            // InternalQualityBtCppParser.g:2130:5: lv_child_23_0= ruleTreeNode
            {

            					newCompositeNode(grammarAccess.getManualSelectorNodeAccess().getChildTreeNodeParserRuleCall_3_0());
            				
            pushFollow(FOLLOW_18);
            lv_child_23_0=ruleTreeNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getManualSelectorNodeRule());
            					}
            					add(
            						current,
            						"child",
            						lv_child_23_0,
            						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            // InternalQualityBtCppParser.g:2147:3: ( (lv_child_24_0= ruleTreeNode ) )*
            loop30:
            do {
                int alt30=2;
                int LA30_0 = input.LA(1);

                if ( ((LA30_0>=KeepRunningUntilFailure && LA30_0<=SetBlackboard)||(LA30_0>=ConsumeQueue && LA30_0<=ScriptAction)||LA30_0==WhileDoElse||(LA30_0>=CoroAction && LA30_0<=IfThenElse)||LA30_0==Inverter||(LA30_0>=RunOnce && LA30_0<=Sleep)||LA30_0==Loop||LA30_0==Test||(LA30_0>=M && LA30_0<=HyphenMinusGreaterThanSign)||(LA30_0>=R && LA30_0<=VerticalLineVerticalLine)||LA30_0==QuestionMark) ) {
                    alt30=1;
                }


                switch (alt30) {
            	case 1 :
            	    // InternalQualityBtCppParser.g:2148:4: (lv_child_24_0= ruleTreeNode )
            	    {
            	    // InternalQualityBtCppParser.g:2148:4: (lv_child_24_0= ruleTreeNode )
            	    // InternalQualityBtCppParser.g:2149:5: lv_child_24_0= ruleTreeNode
            	    {

            	    					newCompositeNode(grammarAccess.getManualSelectorNodeAccess().getChildTreeNodeParserRuleCall_4_0());
            	    				
            	    pushFollow(FOLLOW_18);
            	    lv_child_24_0=ruleTreeNode();

            	    state._fsp--;


            	    					if (current==null) {
            	    						current = createModelElementForParent(grammarAccess.getManualSelectorNodeRule());
            	    					}
            	    					add(
            	    						current,
            	    						"child",
            	    						lv_child_24_0,
            	    						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            	    					afterParserOrEnumRuleCall();
            	    				

            	    }


            	    }
            	    break;

            	default :
            	    break loop30;
                }
            } while (true);

            this_END_25=(Token)match(input,RULE_END,FOLLOW_2); 

            			newLeafNode(this_END_25, grammarAccess.getManualSelectorNodeAccess().getENDTerminalRuleCall_5());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleManualSelectorNode"


    // $ANTLR start "entryRuleParallelNode"
    // InternalQualityBtCppParser.g:2174:1: entryRuleParallelNode returns [EObject current=null] : iv_ruleParallelNode= ruleParallelNode EOF ;
    public final EObject entryRuleParallelNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParallelNode = null;


        try {
            // InternalQualityBtCppParser.g:2174:53: (iv_ruleParallelNode= ruleParallelNode EOF )
            // InternalQualityBtCppParser.g:2175:2: iv_ruleParallelNode= ruleParallelNode EOF
            {
             newCompositeNode(grammarAccess.getParallelNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleParallelNode=ruleParallelNode();

            state._fsp--;

             current =iv_ruleParallelNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleParallelNode"


    // $ANTLR start "ruleParallelNode"
    // InternalQualityBtCppParser.g:2181:1: ruleParallelNode returns [EObject current=null] : (otherlv_0= VerticalLineVerticalLine ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END ) ;
    public final EObject ruleParallelNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token this_BEGIN_22=null;
        Token this_END_25=null;
        AntlrDatatypeRuleToken lv_ID_5_0 = null;

        AntlrDatatypeRuleToken lv_name_8_0 = null;

        EObject lv_parameters_10_0 = null;

        EObject lv_parameters_12_0 = null;

        EObject lv_satisfices_14_0 = null;

        EObject lv_satisfices_16_0 = null;

        EObject lv_satisfies_18_0 = null;

        EObject lv_satisfies_20_0 = null;

        EObject lv_child_23_0 = null;

        EObject lv_child_24_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:2187:2: ( (otherlv_0= VerticalLineVerticalLine ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END ) )
            // InternalQualityBtCppParser.g:2188:2: (otherlv_0= VerticalLineVerticalLine ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END )
            {
            // InternalQualityBtCppParser.g:2188:2: (otherlv_0= VerticalLineVerticalLine ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END )
            // InternalQualityBtCppParser.g:2189:3: otherlv_0= VerticalLineVerticalLine ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END
            {
            otherlv_0=(Token)match(input,VerticalLineVerticalLine,FOLLOW_15); 

            			newLeafNode(otherlv_0, grammarAccess.getParallelNodeAccess().getVerticalLineVerticalLineKeyword_0());
            		
            // InternalQualityBtCppParser.g:2193:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt35=2;
            int LA35_0 = input.LA(1);

            if ( ((LA35_0>=Parameters && LA35_0<=Satisfies)||LA35_0==Name||LA35_0==ID||(LA35_0>=LeftParenthesis && LA35_0<=RightParenthesis)) ) {
                alt35=1;
            }
            switch (alt35) {
                case 1 :
                    // InternalQualityBtCppParser.g:2194:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:2194:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:2195:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1());
                    				
                    // InternalQualityBtCppParser.g:2198:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:2199:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:2199:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+
                    int cnt34=0;
                    loop34:
                    do {
                        int alt34=8;
                        int LA34_0 = input.LA(1);

                        if ( LA34_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1(), 0) ) {
                            alt34=1;
                        }
                        else if ( LA34_0 == ID && getUnorderedGroupHelper().canSelect(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1(), 1) ) {
                            alt34=2;
                        }
                        else if ( LA34_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1(), 2) ) {
                            alt34=3;
                        }
                        else if ( LA34_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1(), 3) ) {
                            alt34=4;
                        }
                        else if ( LA34_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1(), 4) ) {
                            alt34=5;
                        }
                        else if ( LA34_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1(), 5) ) {
                            alt34=6;
                        }
                        else if ( LA34_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1(), 6) ) {
                            alt34=7;
                        }


                        switch (alt34) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:2200:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:2200:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:2201:5: {...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleParallelNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:2201:109: ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:2202:6: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:2205:9: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:2205:10: {...}? => (otherlv_2= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleParallelNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:2205:19: (otherlv_2= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:2205:20: otherlv_2= LeftParenthesis
                    	    {
                    	    otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_2, grammarAccess.getParallelNodeAccess().getLeftParenthesisKeyword_1_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:2215:4: ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:2215:4: ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:2216:5: {...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleParallelNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:2216:109: ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:2217:6: ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:2220:9: ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:2220:10: {...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleParallelNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:2220:19: (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:2220:20: otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) )
                    	    {
                    	    otherlv_3=(Token)match(input,ID,FOLLOW_8); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getParallelNodeAccess().getIDKeyword_1_1_0());
                    	    								
                    	    otherlv_4=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getParallelNodeAccess().getEqualsSignKeyword_1_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:2228:9: ( (lv_ID_5_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:2229:10: (lv_ID_5_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:2229:10: (lv_ID_5_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:2230:11: lv_ID_5_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getParallelNodeAccess().getIDEStringParserRuleCall_1_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_15);
                    	    lv_ID_5_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getParallelNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"ID",
                    	    												lv_ID_5_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:2253:4: ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:2253:4: ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:2254:5: {...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleParallelNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:2254:109: ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:2255:6: ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:2258:9: ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:2258:10: {...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleParallelNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:2258:19: (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:2258:20: otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) )
                    	    {
                    	    otherlv_6=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_6, grammarAccess.getParallelNodeAccess().getNameKeyword_1_2_0());
                    	    								
                    	    otherlv_7=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_7, grammarAccess.getParallelNodeAccess().getEqualsSignKeyword_1_2_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:2266:9: ( (lv_name_8_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:2267:10: (lv_name_8_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:2267:10: (lv_name_8_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:2268:11: lv_name_8_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getParallelNodeAccess().getNameEStringParserRuleCall_1_2_2_0());
                    	    										
                    	    pushFollow(FOLLOW_15);
                    	    lv_name_8_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getParallelNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_8_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:2291:4: ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:2291:4: ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:2292:5: {...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleParallelNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:2292:109: ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:2293:6: ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:2296:9: ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:2296:10: {...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleParallelNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:2296:19: (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:2296:20: otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_9=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_9, grammarAccess.getParallelNodeAccess().getParametersKeyword_1_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:2300:9: ( (lv_parameters_10_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:2301:10: (lv_parameters_10_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:2301:10: (lv_parameters_10_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:2302:11: lv_parameters_10_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getParallelNodeAccess().getParametersParameterParserRuleCall_1_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_parameters_10_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getParallelNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_10_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:2319:9: (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )*
                    	    loop31:
                    	    do {
                    	        int alt31=2;
                    	        int LA31_0 = input.LA(1);

                    	        if ( (LA31_0==Comma) ) {
                    	            alt31=1;
                    	        }


                    	        switch (alt31) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:2320:10: otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_11=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_11, grammarAccess.getParallelNodeAccess().getCommaKeyword_1_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:2324:10: ( (lv_parameters_12_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:2325:11: (lv_parameters_12_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:2325:11: (lv_parameters_12_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:2326:12: lv_parameters_12_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getParallelNodeAccess().getParametersParameterParserRuleCall_1_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_parameters_12_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getParallelNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_12_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop31;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:2350:4: ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:2350:4: ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:2351:5: {...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleParallelNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:2351:109: ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:2352:6: ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:2355:9: ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:2355:10: {...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleParallelNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:2355:19: (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:2355:20: otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_13=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_13, grammarAccess.getParallelNodeAccess().getSatisficesKeyword_1_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:2359:9: ( (lv_satisfices_14_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:2360:10: (lv_satisfices_14_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:2360:10: (lv_satisfices_14_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:2361:11: lv_satisfices_14_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getParallelNodeAccess().getSatisficesQualityParserRuleCall_1_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfices_14_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getParallelNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_14_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:2378:9: (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )*
                    	    loop32:
                    	    do {
                    	        int alt32=2;
                    	        int LA32_0 = input.LA(1);

                    	        if ( (LA32_0==Comma) ) {
                    	            alt32=1;
                    	        }


                    	        switch (alt32) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:2379:10: otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_15=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_15, grammarAccess.getParallelNodeAccess().getCommaKeyword_1_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:2383:10: ( (lv_satisfices_16_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:2384:11: (lv_satisfices_16_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:2384:11: (lv_satisfices_16_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:2385:12: lv_satisfices_16_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getParallelNodeAccess().getSatisficesQualityParserRuleCall_1_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfices_16_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getParallelNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_16_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop32;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:2409:4: ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:2409:4: ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:2410:5: {...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleParallelNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:2410:109: ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:2411:6: ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:2414:9: ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:2414:10: {...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleParallelNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:2414:19: (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:2414:20: otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_17=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_17, grammarAccess.getParallelNodeAccess().getSatisfiesKeyword_1_5_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:2418:9: ( (lv_satisfies_18_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:2419:10: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:2419:10: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:2420:11: lv_satisfies_18_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getParallelNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_5_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfies_18_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getParallelNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_18_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:2437:9: (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )*
                    	    loop33:
                    	    do {
                    	        int alt33=2;
                    	        int LA33_0 = input.LA(1);

                    	        if ( (LA33_0==Comma) ) {
                    	            alt33=1;
                    	        }


                    	        switch (alt33) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:2438:10: otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_19=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_19, grammarAccess.getParallelNodeAccess().getCommaKeyword_1_5_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:2442:10: ( (lv_satisfies_20_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:2443:11: (lv_satisfies_20_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:2443:11: (lv_satisfies_20_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:2444:12: lv_satisfies_20_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getParallelNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_5_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfies_20_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getParallelNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_20_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop33;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 7 :
                    	    // InternalQualityBtCppParser.g:2468:4: ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:2468:4: ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:2469:5: {...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1(), 6) ) {
                    	        throw new FailedPredicateException(input, "ruleParallelNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1(), 6)");
                    	    }
                    	    // InternalQualityBtCppParser.g:2469:109: ( ({...}? => (otherlv_21= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:2470:6: ({...}? => (otherlv_21= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1(), 6);
                    	    					
                    	    // InternalQualityBtCppParser.g:2473:9: ({...}? => (otherlv_21= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:2473:10: {...}? => (otherlv_21= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleParallelNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:2473:19: (otherlv_21= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:2473:20: otherlv_21= RightParenthesis
                    	    {
                    	    otherlv_21=(Token)match(input,RightParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_21, grammarAccess.getParallelNodeAccess().getRightParenthesisKeyword_1_6());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt34 >= 1 ) break loop34;
                                EarlyExitException eee =
                                    new EarlyExitException(34, input);
                                throw eee;
                        }
                        cnt34++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1()) ) {
                        throw new FailedPredicateException(input, "ruleParallelNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1());
                    				

                    }
                    break;

            }

            this_BEGIN_22=(Token)match(input,RULE_BEGIN,FOLLOW_9); 

            			newLeafNode(this_BEGIN_22, grammarAccess.getParallelNodeAccess().getBEGINTerminalRuleCall_2());
            		
            // InternalQualityBtCppParser.g:2495:3: ( (lv_child_23_0= ruleTreeNode ) )
            // InternalQualityBtCppParser.g:2496:4: (lv_child_23_0= ruleTreeNode )
            {
            // InternalQualityBtCppParser.g:2496:4: (lv_child_23_0= ruleTreeNode )
            // InternalQualityBtCppParser.g:2497:5: lv_child_23_0= ruleTreeNode
            {

            					newCompositeNode(grammarAccess.getParallelNodeAccess().getChildTreeNodeParserRuleCall_3_0());
            				
            pushFollow(FOLLOW_18);
            lv_child_23_0=ruleTreeNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getParallelNodeRule());
            					}
            					add(
            						current,
            						"child",
            						lv_child_23_0,
            						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            // InternalQualityBtCppParser.g:2514:3: ( (lv_child_24_0= ruleTreeNode ) )*
            loop36:
            do {
                int alt36=2;
                int LA36_0 = input.LA(1);

                if ( ((LA36_0>=KeepRunningUntilFailure && LA36_0<=SetBlackboard)||(LA36_0>=ConsumeQueue && LA36_0<=ScriptAction)||LA36_0==WhileDoElse||(LA36_0>=CoroAction && LA36_0<=IfThenElse)||LA36_0==Inverter||(LA36_0>=RunOnce && LA36_0<=Sleep)||LA36_0==Loop||LA36_0==Test||(LA36_0>=M && LA36_0<=HyphenMinusGreaterThanSign)||(LA36_0>=R && LA36_0<=VerticalLineVerticalLine)||LA36_0==QuestionMark) ) {
                    alt36=1;
                }


                switch (alt36) {
            	case 1 :
            	    // InternalQualityBtCppParser.g:2515:4: (lv_child_24_0= ruleTreeNode )
            	    {
            	    // InternalQualityBtCppParser.g:2515:4: (lv_child_24_0= ruleTreeNode )
            	    // InternalQualityBtCppParser.g:2516:5: lv_child_24_0= ruleTreeNode
            	    {

            	    					newCompositeNode(grammarAccess.getParallelNodeAccess().getChildTreeNodeParserRuleCall_4_0());
            	    				
            	    pushFollow(FOLLOW_18);
            	    lv_child_24_0=ruleTreeNode();

            	    state._fsp--;


            	    					if (current==null) {
            	    						current = createModelElementForParent(grammarAccess.getParallelNodeRule());
            	    					}
            	    					add(
            	    						current,
            	    						"child",
            	    						lv_child_24_0,
            	    						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            	    					afterParserOrEnumRuleCall();
            	    				

            	    }


            	    }
            	    break;

            	default :
            	    break loop36;
                }
            } while (true);

            this_END_25=(Token)match(input,RULE_END,FOLLOW_2); 

            			newLeafNode(this_END_25, grammarAccess.getParallelNodeAccess().getENDTerminalRuleCall_5());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleParallelNode"


    // $ANTLR start "entryRuleSequenceWithMemoryNode"
    // InternalQualityBtCppParser.g:2541:1: entryRuleSequenceWithMemoryNode returns [EObject current=null] : iv_ruleSequenceWithMemoryNode= ruleSequenceWithMemoryNode EOF ;
    public final EObject entryRuleSequenceWithMemoryNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSequenceWithMemoryNode = null;


        try {
            // InternalQualityBtCppParser.g:2541:63: (iv_ruleSequenceWithMemoryNode= ruleSequenceWithMemoryNode EOF )
            // InternalQualityBtCppParser.g:2542:2: iv_ruleSequenceWithMemoryNode= ruleSequenceWithMemoryNode EOF
            {
             newCompositeNode(grammarAccess.getSequenceWithMemoryNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleSequenceWithMemoryNode=ruleSequenceWithMemoryNode();

            state._fsp--;

             current =iv_ruleSequenceWithMemoryNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSequenceWithMemoryNode"


    // $ANTLR start "ruleSequenceWithMemoryNode"
    // InternalQualityBtCppParser.g:2548:1: ruleSequenceWithMemoryNode returns [EObject current=null] : (otherlv_0= M ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END ) ;
    public final EObject ruleSequenceWithMemoryNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token this_BEGIN_22=null;
        Token this_END_25=null;
        AntlrDatatypeRuleToken lv_ID_5_0 = null;

        AntlrDatatypeRuleToken lv_name_8_0 = null;

        EObject lv_parameters_10_0 = null;

        EObject lv_parameters_12_0 = null;

        EObject lv_satisfices_14_0 = null;

        EObject lv_satisfices_16_0 = null;

        EObject lv_satisfies_18_0 = null;

        EObject lv_satisfies_20_0 = null;

        EObject lv_child_23_0 = null;

        EObject lv_child_24_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:2554:2: ( (otherlv_0= M ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END ) )
            // InternalQualityBtCppParser.g:2555:2: (otherlv_0= M ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END )
            {
            // InternalQualityBtCppParser.g:2555:2: (otherlv_0= M ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END )
            // InternalQualityBtCppParser.g:2556:3: otherlv_0= M ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END
            {
            otherlv_0=(Token)match(input,M,FOLLOW_15); 

            			newLeafNode(otherlv_0, grammarAccess.getSequenceWithMemoryNodeAccess().getMKeyword_0());
            		
            // InternalQualityBtCppParser.g:2560:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt41=2;
            int LA41_0 = input.LA(1);

            if ( ((LA41_0>=Parameters && LA41_0<=Satisfies)||LA41_0==Name||LA41_0==ID||(LA41_0>=LeftParenthesis && LA41_0<=RightParenthesis)) ) {
                alt41=1;
            }
            switch (alt41) {
                case 1 :
                    // InternalQualityBtCppParser.g:2561:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:2561:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:2562:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1());
                    				
                    // InternalQualityBtCppParser.g:2565:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:2566:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:2566:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+
                    int cnt40=0;
                    loop40:
                    do {
                        int alt40=8;
                        int LA40_0 = input.LA(1);

                        if ( LA40_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1(), 0) ) {
                            alt40=1;
                        }
                        else if ( LA40_0 == ID && getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1(), 1) ) {
                            alt40=2;
                        }
                        else if ( LA40_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1(), 2) ) {
                            alt40=3;
                        }
                        else if ( LA40_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1(), 3) ) {
                            alt40=4;
                        }
                        else if ( LA40_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1(), 4) ) {
                            alt40=5;
                        }
                        else if ( LA40_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1(), 5) ) {
                            alt40=6;
                        }
                        else if ( LA40_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1(), 6) ) {
                            alt40=7;
                        }


                        switch (alt40) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:2567:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:2567:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:2568:5: {...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleSequenceWithMemoryNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:2568:119: ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:2569:6: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:2572:9: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:2572:10: {...}? => (otherlv_2= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSequenceWithMemoryNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:2572:19: (otherlv_2= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:2572:20: otherlv_2= LeftParenthesis
                    	    {
                    	    otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_2, grammarAccess.getSequenceWithMemoryNodeAccess().getLeftParenthesisKeyword_1_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:2582:4: ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:2582:4: ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:2583:5: {...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleSequenceWithMemoryNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:2583:119: ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:2584:6: ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:2587:9: ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:2587:10: {...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSequenceWithMemoryNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:2587:19: (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:2587:20: otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) )
                    	    {
                    	    otherlv_3=(Token)match(input,ID,FOLLOW_8); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getSequenceWithMemoryNodeAccess().getIDKeyword_1_1_0());
                    	    								
                    	    otherlv_4=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getSequenceWithMemoryNodeAccess().getEqualsSignKeyword_1_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:2595:9: ( (lv_ID_5_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:2596:10: (lv_ID_5_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:2596:10: (lv_ID_5_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:2597:11: lv_ID_5_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getSequenceWithMemoryNodeAccess().getIDEStringParserRuleCall_1_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_15);
                    	    lv_ID_5_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getSequenceWithMemoryNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"ID",
                    	    												lv_ID_5_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:2620:4: ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:2620:4: ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:2621:5: {...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleSequenceWithMemoryNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:2621:119: ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:2622:6: ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:2625:9: ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:2625:10: {...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSequenceWithMemoryNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:2625:19: (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:2625:20: otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) )
                    	    {
                    	    otherlv_6=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_6, grammarAccess.getSequenceWithMemoryNodeAccess().getNameKeyword_1_2_0());
                    	    								
                    	    otherlv_7=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_7, grammarAccess.getSequenceWithMemoryNodeAccess().getEqualsSignKeyword_1_2_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:2633:9: ( (lv_name_8_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:2634:10: (lv_name_8_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:2634:10: (lv_name_8_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:2635:11: lv_name_8_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getSequenceWithMemoryNodeAccess().getNameEStringParserRuleCall_1_2_2_0());
                    	    										
                    	    pushFollow(FOLLOW_15);
                    	    lv_name_8_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getSequenceWithMemoryNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_8_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:2658:4: ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:2658:4: ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:2659:5: {...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleSequenceWithMemoryNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:2659:119: ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:2660:6: ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:2663:9: ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:2663:10: {...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSequenceWithMemoryNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:2663:19: (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:2663:20: otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_9=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_9, grammarAccess.getSequenceWithMemoryNodeAccess().getParametersKeyword_1_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:2667:9: ( (lv_parameters_10_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:2668:10: (lv_parameters_10_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:2668:10: (lv_parameters_10_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:2669:11: lv_parameters_10_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getSequenceWithMemoryNodeAccess().getParametersParameterParserRuleCall_1_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_parameters_10_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getSequenceWithMemoryNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_10_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:2686:9: (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )*
                    	    loop37:
                    	    do {
                    	        int alt37=2;
                    	        int LA37_0 = input.LA(1);

                    	        if ( (LA37_0==Comma) ) {
                    	            alt37=1;
                    	        }


                    	        switch (alt37) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:2687:10: otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_11=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_11, grammarAccess.getSequenceWithMemoryNodeAccess().getCommaKeyword_1_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:2691:10: ( (lv_parameters_12_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:2692:11: (lv_parameters_12_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:2692:11: (lv_parameters_12_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:2693:12: lv_parameters_12_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getSequenceWithMemoryNodeAccess().getParametersParameterParserRuleCall_1_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_parameters_12_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getSequenceWithMemoryNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_12_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop37;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:2717:4: ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:2717:4: ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:2718:5: {...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleSequenceWithMemoryNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:2718:119: ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:2719:6: ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:2722:9: ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:2722:10: {...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSequenceWithMemoryNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:2722:19: (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:2722:20: otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_13=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_13, grammarAccess.getSequenceWithMemoryNodeAccess().getSatisficesKeyword_1_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:2726:9: ( (lv_satisfices_14_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:2727:10: (lv_satisfices_14_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:2727:10: (lv_satisfices_14_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:2728:11: lv_satisfices_14_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getSequenceWithMemoryNodeAccess().getSatisficesQualityParserRuleCall_1_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfices_14_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getSequenceWithMemoryNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_14_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:2745:9: (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )*
                    	    loop38:
                    	    do {
                    	        int alt38=2;
                    	        int LA38_0 = input.LA(1);

                    	        if ( (LA38_0==Comma) ) {
                    	            alt38=1;
                    	        }


                    	        switch (alt38) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:2746:10: otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_15=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_15, grammarAccess.getSequenceWithMemoryNodeAccess().getCommaKeyword_1_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:2750:10: ( (lv_satisfices_16_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:2751:11: (lv_satisfices_16_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:2751:11: (lv_satisfices_16_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:2752:12: lv_satisfices_16_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getSequenceWithMemoryNodeAccess().getSatisficesQualityParserRuleCall_1_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfices_16_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getSequenceWithMemoryNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_16_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop38;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:2776:4: ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:2776:4: ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:2777:5: {...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleSequenceWithMemoryNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:2777:119: ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:2778:6: ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:2781:9: ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:2781:10: {...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSequenceWithMemoryNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:2781:19: (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:2781:20: otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_17=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_17, grammarAccess.getSequenceWithMemoryNodeAccess().getSatisfiesKeyword_1_5_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:2785:9: ( (lv_satisfies_18_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:2786:10: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:2786:10: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:2787:11: lv_satisfies_18_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getSequenceWithMemoryNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_5_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfies_18_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getSequenceWithMemoryNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_18_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:2804:9: (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )*
                    	    loop39:
                    	    do {
                    	        int alt39=2;
                    	        int LA39_0 = input.LA(1);

                    	        if ( (LA39_0==Comma) ) {
                    	            alt39=1;
                    	        }


                    	        switch (alt39) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:2805:10: otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_19=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_19, grammarAccess.getSequenceWithMemoryNodeAccess().getCommaKeyword_1_5_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:2809:10: ( (lv_satisfies_20_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:2810:11: (lv_satisfies_20_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:2810:11: (lv_satisfies_20_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:2811:12: lv_satisfies_20_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getSequenceWithMemoryNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_5_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfies_20_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getSequenceWithMemoryNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_20_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop39;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 7 :
                    	    // InternalQualityBtCppParser.g:2835:4: ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:2835:4: ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:2836:5: {...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1(), 6) ) {
                    	        throw new FailedPredicateException(input, "ruleSequenceWithMemoryNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1(), 6)");
                    	    }
                    	    // InternalQualityBtCppParser.g:2836:119: ( ({...}? => (otherlv_21= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:2837:6: ({...}? => (otherlv_21= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1(), 6);
                    	    					
                    	    // InternalQualityBtCppParser.g:2840:9: ({...}? => (otherlv_21= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:2840:10: {...}? => (otherlv_21= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSequenceWithMemoryNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:2840:19: (otherlv_21= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:2840:20: otherlv_21= RightParenthesis
                    	    {
                    	    otherlv_21=(Token)match(input,RightParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_21, grammarAccess.getSequenceWithMemoryNodeAccess().getRightParenthesisKeyword_1_6());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt40 >= 1 ) break loop40;
                                EarlyExitException eee =
                                    new EarlyExitException(40, input);
                                throw eee;
                        }
                        cnt40++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1()) ) {
                        throw new FailedPredicateException(input, "ruleSequenceWithMemoryNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1());
                    				

                    }
                    break;

            }

            this_BEGIN_22=(Token)match(input,RULE_BEGIN,FOLLOW_9); 

            			newLeafNode(this_BEGIN_22, grammarAccess.getSequenceWithMemoryNodeAccess().getBEGINTerminalRuleCall_2());
            		
            // InternalQualityBtCppParser.g:2862:3: ( (lv_child_23_0= ruleTreeNode ) )
            // InternalQualityBtCppParser.g:2863:4: (lv_child_23_0= ruleTreeNode )
            {
            // InternalQualityBtCppParser.g:2863:4: (lv_child_23_0= ruleTreeNode )
            // InternalQualityBtCppParser.g:2864:5: lv_child_23_0= ruleTreeNode
            {

            					newCompositeNode(grammarAccess.getSequenceWithMemoryNodeAccess().getChildTreeNodeParserRuleCall_3_0());
            				
            pushFollow(FOLLOW_18);
            lv_child_23_0=ruleTreeNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getSequenceWithMemoryNodeRule());
            					}
            					add(
            						current,
            						"child",
            						lv_child_23_0,
            						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            // InternalQualityBtCppParser.g:2881:3: ( (lv_child_24_0= ruleTreeNode ) )*
            loop42:
            do {
                int alt42=2;
                int LA42_0 = input.LA(1);

                if ( ((LA42_0>=KeepRunningUntilFailure && LA42_0<=SetBlackboard)||(LA42_0>=ConsumeQueue && LA42_0<=ScriptAction)||LA42_0==WhileDoElse||(LA42_0>=CoroAction && LA42_0<=IfThenElse)||LA42_0==Inverter||(LA42_0>=RunOnce && LA42_0<=Sleep)||LA42_0==Loop||LA42_0==Test||(LA42_0>=M && LA42_0<=HyphenMinusGreaterThanSign)||(LA42_0>=R && LA42_0<=VerticalLineVerticalLine)||LA42_0==QuestionMark) ) {
                    alt42=1;
                }


                switch (alt42) {
            	case 1 :
            	    // InternalQualityBtCppParser.g:2882:4: (lv_child_24_0= ruleTreeNode )
            	    {
            	    // InternalQualityBtCppParser.g:2882:4: (lv_child_24_0= ruleTreeNode )
            	    // InternalQualityBtCppParser.g:2883:5: lv_child_24_0= ruleTreeNode
            	    {

            	    					newCompositeNode(grammarAccess.getSequenceWithMemoryNodeAccess().getChildTreeNodeParserRuleCall_4_0());
            	    				
            	    pushFollow(FOLLOW_18);
            	    lv_child_24_0=ruleTreeNode();

            	    state._fsp--;


            	    					if (current==null) {
            	    						current = createModelElementForParent(grammarAccess.getSequenceWithMemoryNodeRule());
            	    					}
            	    					add(
            	    						current,
            	    						"child",
            	    						lv_child_24_0,
            	    						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            	    					afterParserOrEnumRuleCall();
            	    				

            	    }


            	    }
            	    break;

            	default :
            	    break loop42;
                }
            } while (true);

            this_END_25=(Token)match(input,RULE_END,FOLLOW_2); 

            			newLeafNode(this_END_25, grammarAccess.getSequenceWithMemoryNodeAccess().getENDTerminalRuleCall_5());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSequenceWithMemoryNode"


    // $ANTLR start "entryRuleSwitchNode"
    // InternalQualityBtCppParser.g:2908:1: entryRuleSwitchNode returns [EObject current=null] : iv_ruleSwitchNode= ruleSwitchNode EOF ;
    public final EObject entryRuleSwitchNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSwitchNode = null;


        try {
            // InternalQualityBtCppParser.g:2908:51: (iv_ruleSwitchNode= ruleSwitchNode EOF )
            // InternalQualityBtCppParser.g:2909:2: iv_ruleSwitchNode= ruleSwitchNode EOF
            {
             newCompositeNode(grammarAccess.getSwitchNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleSwitchNode=ruleSwitchNode();

            state._fsp--;

             current =iv_ruleSwitchNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSwitchNode"


    // $ANTLR start "ruleSwitchNode"
    // InternalQualityBtCppParser.g:2915:1: ruleSwitchNode returns [EObject current=null] : (otherlv_0= Switch ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END ) ;
    public final EObject ruleSwitchNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token this_BEGIN_22=null;
        Token this_END_25=null;
        AntlrDatatypeRuleToken lv_ID_5_0 = null;

        AntlrDatatypeRuleToken lv_name_8_0 = null;

        EObject lv_parameters_10_0 = null;

        EObject lv_parameters_12_0 = null;

        EObject lv_satisfices_14_0 = null;

        EObject lv_satisfices_16_0 = null;

        EObject lv_satisfies_18_0 = null;

        EObject lv_satisfies_20_0 = null;

        EObject lv_child_23_0 = null;

        EObject lv_child_24_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:2921:2: ( (otherlv_0= Switch ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END ) )
            // InternalQualityBtCppParser.g:2922:2: (otherlv_0= Switch ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END )
            {
            // InternalQualityBtCppParser.g:2922:2: (otherlv_0= Switch ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END )
            // InternalQualityBtCppParser.g:2923:3: otherlv_0= Switch ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END
            {
            otherlv_0=(Token)match(input,Switch,FOLLOW_15); 

            			newLeafNode(otherlv_0, grammarAccess.getSwitchNodeAccess().getSwitchKeyword_0());
            		
            // InternalQualityBtCppParser.g:2927:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt47=2;
            int LA47_0 = input.LA(1);

            if ( ((LA47_0>=Parameters && LA47_0<=Satisfies)||LA47_0==Name||LA47_0==ID||(LA47_0>=LeftParenthesis && LA47_0<=RightParenthesis)) ) {
                alt47=1;
            }
            switch (alt47) {
                case 1 :
                    // InternalQualityBtCppParser.g:2928:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:2928:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:2929:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1());
                    				
                    // InternalQualityBtCppParser.g:2932:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:2933:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:2933:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+
                    int cnt46=0;
                    loop46:
                    do {
                        int alt46=8;
                        int LA46_0 = input.LA(1);

                        if ( LA46_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1(), 0) ) {
                            alt46=1;
                        }
                        else if ( LA46_0 == ID && getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1(), 1) ) {
                            alt46=2;
                        }
                        else if ( LA46_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1(), 2) ) {
                            alt46=3;
                        }
                        else if ( LA46_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1(), 3) ) {
                            alt46=4;
                        }
                        else if ( LA46_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1(), 4) ) {
                            alt46=5;
                        }
                        else if ( LA46_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1(), 5) ) {
                            alt46=6;
                        }
                        else if ( LA46_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1(), 6) ) {
                            alt46=7;
                        }


                        switch (alt46) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:2934:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:2934:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:2935:5: {...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleSwitchNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:2935:107: ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:2936:6: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:2939:9: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:2939:10: {...}? => (otherlv_2= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSwitchNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:2939:19: (otherlv_2= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:2939:20: otherlv_2= LeftParenthesis
                    	    {
                    	    otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_2, grammarAccess.getSwitchNodeAccess().getLeftParenthesisKeyword_1_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:2949:4: ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:2949:4: ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:2950:5: {...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleSwitchNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:2950:107: ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:2951:6: ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:2954:9: ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:2954:10: {...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSwitchNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:2954:19: (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:2954:20: otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) )
                    	    {
                    	    otherlv_3=(Token)match(input,ID,FOLLOW_8); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getSwitchNodeAccess().getIDKeyword_1_1_0());
                    	    								
                    	    otherlv_4=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getSwitchNodeAccess().getEqualsSignKeyword_1_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:2962:9: ( (lv_ID_5_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:2963:10: (lv_ID_5_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:2963:10: (lv_ID_5_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:2964:11: lv_ID_5_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getSwitchNodeAccess().getIDEStringParserRuleCall_1_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_15);
                    	    lv_ID_5_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getSwitchNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"ID",
                    	    												lv_ID_5_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:2987:4: ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:2987:4: ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:2988:5: {...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleSwitchNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:2988:107: ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:2989:6: ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:2992:9: ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:2992:10: {...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSwitchNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:2992:19: (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:2992:20: otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) )
                    	    {
                    	    otherlv_6=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_6, grammarAccess.getSwitchNodeAccess().getNameKeyword_1_2_0());
                    	    								
                    	    otherlv_7=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_7, grammarAccess.getSwitchNodeAccess().getEqualsSignKeyword_1_2_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:3000:9: ( (lv_name_8_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:3001:10: (lv_name_8_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:3001:10: (lv_name_8_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:3002:11: lv_name_8_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getSwitchNodeAccess().getNameEStringParserRuleCall_1_2_2_0());
                    	    										
                    	    pushFollow(FOLLOW_15);
                    	    lv_name_8_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getSwitchNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_8_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:3025:4: ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:3025:4: ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:3026:5: {...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleSwitchNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:3026:107: ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:3027:6: ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:3030:9: ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:3030:10: {...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSwitchNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:3030:19: (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:3030:20: otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_9=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_9, grammarAccess.getSwitchNodeAccess().getParametersKeyword_1_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:3034:9: ( (lv_parameters_10_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:3035:10: (lv_parameters_10_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:3035:10: (lv_parameters_10_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:3036:11: lv_parameters_10_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getSwitchNodeAccess().getParametersParameterParserRuleCall_1_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_parameters_10_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getSwitchNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_10_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:3053:9: (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )*
                    	    loop43:
                    	    do {
                    	        int alt43=2;
                    	        int LA43_0 = input.LA(1);

                    	        if ( (LA43_0==Comma) ) {
                    	            alt43=1;
                    	        }


                    	        switch (alt43) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:3054:10: otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_11=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_11, grammarAccess.getSwitchNodeAccess().getCommaKeyword_1_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:3058:10: ( (lv_parameters_12_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:3059:11: (lv_parameters_12_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:3059:11: (lv_parameters_12_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:3060:12: lv_parameters_12_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getSwitchNodeAccess().getParametersParameterParserRuleCall_1_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_parameters_12_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getSwitchNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_12_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop43;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:3084:4: ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:3084:4: ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:3085:5: {...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleSwitchNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:3085:107: ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:3086:6: ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:3089:9: ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:3089:10: {...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSwitchNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:3089:19: (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:3089:20: otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_13=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_13, grammarAccess.getSwitchNodeAccess().getSatisficesKeyword_1_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:3093:9: ( (lv_satisfices_14_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:3094:10: (lv_satisfices_14_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:3094:10: (lv_satisfices_14_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:3095:11: lv_satisfices_14_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getSwitchNodeAccess().getSatisficesQualityParserRuleCall_1_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfices_14_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getSwitchNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_14_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:3112:9: (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )*
                    	    loop44:
                    	    do {
                    	        int alt44=2;
                    	        int LA44_0 = input.LA(1);

                    	        if ( (LA44_0==Comma) ) {
                    	            alt44=1;
                    	        }


                    	        switch (alt44) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:3113:10: otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_15=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_15, grammarAccess.getSwitchNodeAccess().getCommaKeyword_1_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:3117:10: ( (lv_satisfices_16_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:3118:11: (lv_satisfices_16_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:3118:11: (lv_satisfices_16_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:3119:12: lv_satisfices_16_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getSwitchNodeAccess().getSatisficesQualityParserRuleCall_1_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfices_16_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getSwitchNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_16_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop44;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:3143:4: ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:3143:4: ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:3144:5: {...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleSwitchNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:3144:107: ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:3145:6: ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:3148:9: ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:3148:10: {...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSwitchNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:3148:19: (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:3148:20: otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_17=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_17, grammarAccess.getSwitchNodeAccess().getSatisfiesKeyword_1_5_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:3152:9: ( (lv_satisfies_18_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:3153:10: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:3153:10: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:3154:11: lv_satisfies_18_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getSwitchNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_5_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfies_18_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getSwitchNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_18_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:3171:9: (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )*
                    	    loop45:
                    	    do {
                    	        int alt45=2;
                    	        int LA45_0 = input.LA(1);

                    	        if ( (LA45_0==Comma) ) {
                    	            alt45=1;
                    	        }


                    	        switch (alt45) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:3172:10: otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_19=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_19, grammarAccess.getSwitchNodeAccess().getCommaKeyword_1_5_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:3176:10: ( (lv_satisfies_20_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:3177:11: (lv_satisfies_20_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:3177:11: (lv_satisfies_20_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:3178:12: lv_satisfies_20_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getSwitchNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_5_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfies_20_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getSwitchNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_20_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop45;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 7 :
                    	    // InternalQualityBtCppParser.g:3202:4: ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:3202:4: ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:3203:5: {...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1(), 6) ) {
                    	        throw new FailedPredicateException(input, "ruleSwitchNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1(), 6)");
                    	    }
                    	    // InternalQualityBtCppParser.g:3203:107: ( ({...}? => (otherlv_21= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:3204:6: ({...}? => (otherlv_21= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1(), 6);
                    	    					
                    	    // InternalQualityBtCppParser.g:3207:9: ({...}? => (otherlv_21= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:3207:10: {...}? => (otherlv_21= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSwitchNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:3207:19: (otherlv_21= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:3207:20: otherlv_21= RightParenthesis
                    	    {
                    	    otherlv_21=(Token)match(input,RightParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_21, grammarAccess.getSwitchNodeAccess().getRightParenthesisKeyword_1_6());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt46 >= 1 ) break loop46;
                                EarlyExitException eee =
                                    new EarlyExitException(46, input);
                                throw eee;
                        }
                        cnt46++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1()) ) {
                        throw new FailedPredicateException(input, "ruleSwitchNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1());
                    				

                    }
                    break;

            }

            this_BEGIN_22=(Token)match(input,RULE_BEGIN,FOLLOW_9); 

            			newLeafNode(this_BEGIN_22, grammarAccess.getSwitchNodeAccess().getBEGINTerminalRuleCall_2());
            		
            // InternalQualityBtCppParser.g:3229:3: ( (lv_child_23_0= ruleTreeNode ) )
            // InternalQualityBtCppParser.g:3230:4: (lv_child_23_0= ruleTreeNode )
            {
            // InternalQualityBtCppParser.g:3230:4: (lv_child_23_0= ruleTreeNode )
            // InternalQualityBtCppParser.g:3231:5: lv_child_23_0= ruleTreeNode
            {

            					newCompositeNode(grammarAccess.getSwitchNodeAccess().getChildTreeNodeParserRuleCall_3_0());
            				
            pushFollow(FOLLOW_18);
            lv_child_23_0=ruleTreeNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getSwitchNodeRule());
            					}
            					add(
            						current,
            						"child",
            						lv_child_23_0,
            						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            // InternalQualityBtCppParser.g:3248:3: ( (lv_child_24_0= ruleTreeNode ) )*
            loop48:
            do {
                int alt48=2;
                int LA48_0 = input.LA(1);

                if ( ((LA48_0>=KeepRunningUntilFailure && LA48_0<=SetBlackboard)||(LA48_0>=ConsumeQueue && LA48_0<=ScriptAction)||LA48_0==WhileDoElse||(LA48_0>=CoroAction && LA48_0<=IfThenElse)||LA48_0==Inverter||(LA48_0>=RunOnce && LA48_0<=Sleep)||LA48_0==Loop||LA48_0==Test||(LA48_0>=M && LA48_0<=HyphenMinusGreaterThanSign)||(LA48_0>=R && LA48_0<=VerticalLineVerticalLine)||LA48_0==QuestionMark) ) {
                    alt48=1;
                }


                switch (alt48) {
            	case 1 :
            	    // InternalQualityBtCppParser.g:3249:4: (lv_child_24_0= ruleTreeNode )
            	    {
            	    // InternalQualityBtCppParser.g:3249:4: (lv_child_24_0= ruleTreeNode )
            	    // InternalQualityBtCppParser.g:3250:5: lv_child_24_0= ruleTreeNode
            	    {

            	    					newCompositeNode(grammarAccess.getSwitchNodeAccess().getChildTreeNodeParserRuleCall_4_0());
            	    				
            	    pushFollow(FOLLOW_18);
            	    lv_child_24_0=ruleTreeNode();

            	    state._fsp--;


            	    					if (current==null) {
            	    						current = createModelElementForParent(grammarAccess.getSwitchNodeRule());
            	    					}
            	    					add(
            	    						current,
            	    						"child",
            	    						lv_child_24_0,
            	    						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            	    					afterParserOrEnumRuleCall();
            	    				

            	    }


            	    }
            	    break;

            	default :
            	    break loop48;
                }
            } while (true);

            this_END_25=(Token)match(input,RULE_END,FOLLOW_2); 

            			newLeafNode(this_END_25, grammarAccess.getSwitchNodeAccess().getENDTerminalRuleCall_5());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSwitchNode"


    // $ANTLR start "entryRuleReactiveFallbackNode"
    // InternalQualityBtCppParser.g:3275:1: entryRuleReactiveFallbackNode returns [EObject current=null] : iv_ruleReactiveFallbackNode= ruleReactiveFallbackNode EOF ;
    public final EObject entryRuleReactiveFallbackNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReactiveFallbackNode = null;


        try {
            // InternalQualityBtCppParser.g:3275:61: (iv_ruleReactiveFallbackNode= ruleReactiveFallbackNode EOF )
            // InternalQualityBtCppParser.g:3276:2: iv_ruleReactiveFallbackNode= ruleReactiveFallbackNode EOF
            {
             newCompositeNode(grammarAccess.getReactiveFallbackNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleReactiveFallbackNode=ruleReactiveFallbackNode();

            state._fsp--;

             current =iv_ruleReactiveFallbackNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleReactiveFallbackNode"


    // $ANTLR start "ruleReactiveFallbackNode"
    // InternalQualityBtCppParser.g:3282:1: ruleReactiveFallbackNode returns [EObject current=null] : (otherlv_0= R ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END ) ;
    public final EObject ruleReactiveFallbackNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token this_BEGIN_22=null;
        Token this_END_25=null;
        AntlrDatatypeRuleToken lv_ID_5_0 = null;

        AntlrDatatypeRuleToken lv_name_8_0 = null;

        EObject lv_parameters_10_0 = null;

        EObject lv_parameters_12_0 = null;

        EObject lv_satisfices_14_0 = null;

        EObject lv_satisfices_16_0 = null;

        EObject lv_satisfies_18_0 = null;

        EObject lv_satisfies_20_0 = null;

        EObject lv_child_23_0 = null;

        EObject lv_child_24_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:3288:2: ( (otherlv_0= R ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END ) )
            // InternalQualityBtCppParser.g:3289:2: (otherlv_0= R ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END )
            {
            // InternalQualityBtCppParser.g:3289:2: (otherlv_0= R ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END )
            // InternalQualityBtCppParser.g:3290:3: otherlv_0= R ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END
            {
            otherlv_0=(Token)match(input,R,FOLLOW_15); 

            			newLeafNode(otherlv_0, grammarAccess.getReactiveFallbackNodeAccess().getRKeyword_0());
            		
            // InternalQualityBtCppParser.g:3294:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt53=2;
            int LA53_0 = input.LA(1);

            if ( ((LA53_0>=Parameters && LA53_0<=Satisfies)||LA53_0==Name||LA53_0==ID||(LA53_0>=LeftParenthesis && LA53_0<=RightParenthesis)) ) {
                alt53=1;
            }
            switch (alt53) {
                case 1 :
                    // InternalQualityBtCppParser.g:3295:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:3295:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:3296:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1());
                    				
                    // InternalQualityBtCppParser.g:3299:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:3300:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:3300:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+
                    int cnt52=0;
                    loop52:
                    do {
                        int alt52=8;
                        int LA52_0 = input.LA(1);

                        if ( LA52_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1(), 0) ) {
                            alt52=1;
                        }
                        else if ( LA52_0 == ID && getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1(), 1) ) {
                            alt52=2;
                        }
                        else if ( LA52_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1(), 2) ) {
                            alt52=3;
                        }
                        else if ( LA52_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1(), 3) ) {
                            alt52=4;
                        }
                        else if ( LA52_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1(), 4) ) {
                            alt52=5;
                        }
                        else if ( LA52_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1(), 5) ) {
                            alt52=6;
                        }
                        else if ( LA52_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1(), 6) ) {
                            alt52=7;
                        }


                        switch (alt52) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:3301:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:3301:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:3302:5: {...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleReactiveFallbackNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:3302:117: ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:3303:6: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:3306:9: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:3306:10: {...}? => (otherlv_2= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleReactiveFallbackNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:3306:19: (otherlv_2= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:3306:20: otherlv_2= LeftParenthesis
                    	    {
                    	    otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_2, grammarAccess.getReactiveFallbackNodeAccess().getLeftParenthesisKeyword_1_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:3316:4: ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:3316:4: ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:3317:5: {...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleReactiveFallbackNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:3317:117: ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:3318:6: ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:3321:9: ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:3321:10: {...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleReactiveFallbackNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:3321:19: (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:3321:20: otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) )
                    	    {
                    	    otherlv_3=(Token)match(input,ID,FOLLOW_8); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getReactiveFallbackNodeAccess().getIDKeyword_1_1_0());
                    	    								
                    	    otherlv_4=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getReactiveFallbackNodeAccess().getEqualsSignKeyword_1_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:3329:9: ( (lv_ID_5_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:3330:10: (lv_ID_5_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:3330:10: (lv_ID_5_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:3331:11: lv_ID_5_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getReactiveFallbackNodeAccess().getIDEStringParserRuleCall_1_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_15);
                    	    lv_ID_5_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getReactiveFallbackNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"ID",
                    	    												lv_ID_5_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:3354:4: ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:3354:4: ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:3355:5: {...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleReactiveFallbackNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:3355:117: ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:3356:6: ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:3359:9: ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:3359:10: {...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleReactiveFallbackNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:3359:19: (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:3359:20: otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) )
                    	    {
                    	    otherlv_6=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_6, grammarAccess.getReactiveFallbackNodeAccess().getNameKeyword_1_2_0());
                    	    								
                    	    otherlv_7=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_7, grammarAccess.getReactiveFallbackNodeAccess().getEqualsSignKeyword_1_2_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:3367:9: ( (lv_name_8_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:3368:10: (lv_name_8_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:3368:10: (lv_name_8_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:3369:11: lv_name_8_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getReactiveFallbackNodeAccess().getNameEStringParserRuleCall_1_2_2_0());
                    	    										
                    	    pushFollow(FOLLOW_15);
                    	    lv_name_8_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getReactiveFallbackNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_8_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:3392:4: ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:3392:4: ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:3393:5: {...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleReactiveFallbackNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:3393:117: ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:3394:6: ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:3397:9: ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:3397:10: {...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleReactiveFallbackNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:3397:19: (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:3397:20: otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_9=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_9, grammarAccess.getReactiveFallbackNodeAccess().getParametersKeyword_1_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:3401:9: ( (lv_parameters_10_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:3402:10: (lv_parameters_10_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:3402:10: (lv_parameters_10_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:3403:11: lv_parameters_10_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getReactiveFallbackNodeAccess().getParametersParameterParserRuleCall_1_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_parameters_10_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getReactiveFallbackNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_10_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:3420:9: (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )*
                    	    loop49:
                    	    do {
                    	        int alt49=2;
                    	        int LA49_0 = input.LA(1);

                    	        if ( (LA49_0==Comma) ) {
                    	            alt49=1;
                    	        }


                    	        switch (alt49) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:3421:10: otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_11=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_11, grammarAccess.getReactiveFallbackNodeAccess().getCommaKeyword_1_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:3425:10: ( (lv_parameters_12_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:3426:11: (lv_parameters_12_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:3426:11: (lv_parameters_12_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:3427:12: lv_parameters_12_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getReactiveFallbackNodeAccess().getParametersParameterParserRuleCall_1_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_parameters_12_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getReactiveFallbackNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_12_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop49;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:3451:4: ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:3451:4: ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:3452:5: {...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleReactiveFallbackNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:3452:117: ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:3453:6: ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:3456:9: ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:3456:10: {...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleReactiveFallbackNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:3456:19: (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:3456:20: otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_13=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_13, grammarAccess.getReactiveFallbackNodeAccess().getSatisficesKeyword_1_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:3460:9: ( (lv_satisfices_14_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:3461:10: (lv_satisfices_14_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:3461:10: (lv_satisfices_14_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:3462:11: lv_satisfices_14_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getReactiveFallbackNodeAccess().getSatisficesQualityParserRuleCall_1_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfices_14_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getReactiveFallbackNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_14_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:3479:9: (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )*
                    	    loop50:
                    	    do {
                    	        int alt50=2;
                    	        int LA50_0 = input.LA(1);

                    	        if ( (LA50_0==Comma) ) {
                    	            alt50=1;
                    	        }


                    	        switch (alt50) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:3480:10: otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_15=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_15, grammarAccess.getReactiveFallbackNodeAccess().getCommaKeyword_1_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:3484:10: ( (lv_satisfices_16_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:3485:11: (lv_satisfices_16_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:3485:11: (lv_satisfices_16_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:3486:12: lv_satisfices_16_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getReactiveFallbackNodeAccess().getSatisficesQualityParserRuleCall_1_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfices_16_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getReactiveFallbackNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_16_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop50;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:3510:4: ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:3510:4: ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:3511:5: {...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleReactiveFallbackNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:3511:117: ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:3512:6: ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:3515:9: ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:3515:10: {...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleReactiveFallbackNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:3515:19: (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:3515:20: otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_17=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_17, grammarAccess.getReactiveFallbackNodeAccess().getSatisfiesKeyword_1_5_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:3519:9: ( (lv_satisfies_18_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:3520:10: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:3520:10: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:3521:11: lv_satisfies_18_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getReactiveFallbackNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_5_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfies_18_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getReactiveFallbackNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_18_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:3538:9: (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )*
                    	    loop51:
                    	    do {
                    	        int alt51=2;
                    	        int LA51_0 = input.LA(1);

                    	        if ( (LA51_0==Comma) ) {
                    	            alt51=1;
                    	        }


                    	        switch (alt51) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:3539:10: otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_19=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_19, grammarAccess.getReactiveFallbackNodeAccess().getCommaKeyword_1_5_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:3543:10: ( (lv_satisfies_20_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:3544:11: (lv_satisfies_20_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:3544:11: (lv_satisfies_20_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:3545:12: lv_satisfies_20_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getReactiveFallbackNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_5_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfies_20_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getReactiveFallbackNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_20_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop51;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 7 :
                    	    // InternalQualityBtCppParser.g:3569:4: ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:3569:4: ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:3570:5: {...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1(), 6) ) {
                    	        throw new FailedPredicateException(input, "ruleReactiveFallbackNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1(), 6)");
                    	    }
                    	    // InternalQualityBtCppParser.g:3570:117: ( ({...}? => (otherlv_21= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:3571:6: ({...}? => (otherlv_21= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1(), 6);
                    	    					
                    	    // InternalQualityBtCppParser.g:3574:9: ({...}? => (otherlv_21= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:3574:10: {...}? => (otherlv_21= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleReactiveFallbackNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:3574:19: (otherlv_21= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:3574:20: otherlv_21= RightParenthesis
                    	    {
                    	    otherlv_21=(Token)match(input,RightParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_21, grammarAccess.getReactiveFallbackNodeAccess().getRightParenthesisKeyword_1_6());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt52 >= 1 ) break loop52;
                                EarlyExitException eee =
                                    new EarlyExitException(52, input);
                                throw eee;
                        }
                        cnt52++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1()) ) {
                        throw new FailedPredicateException(input, "ruleReactiveFallbackNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1());
                    				

                    }
                    break;

            }

            this_BEGIN_22=(Token)match(input,RULE_BEGIN,FOLLOW_9); 

            			newLeafNode(this_BEGIN_22, grammarAccess.getReactiveFallbackNodeAccess().getBEGINTerminalRuleCall_2());
            		
            // InternalQualityBtCppParser.g:3596:3: ( (lv_child_23_0= ruleTreeNode ) )
            // InternalQualityBtCppParser.g:3597:4: (lv_child_23_0= ruleTreeNode )
            {
            // InternalQualityBtCppParser.g:3597:4: (lv_child_23_0= ruleTreeNode )
            // InternalQualityBtCppParser.g:3598:5: lv_child_23_0= ruleTreeNode
            {

            					newCompositeNode(grammarAccess.getReactiveFallbackNodeAccess().getChildTreeNodeParserRuleCall_3_0());
            				
            pushFollow(FOLLOW_18);
            lv_child_23_0=ruleTreeNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getReactiveFallbackNodeRule());
            					}
            					add(
            						current,
            						"child",
            						lv_child_23_0,
            						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            // InternalQualityBtCppParser.g:3615:3: ( (lv_child_24_0= ruleTreeNode ) )*
            loop54:
            do {
                int alt54=2;
                int LA54_0 = input.LA(1);

                if ( ((LA54_0>=KeepRunningUntilFailure && LA54_0<=SetBlackboard)||(LA54_0>=ConsumeQueue && LA54_0<=ScriptAction)||LA54_0==WhileDoElse||(LA54_0>=CoroAction && LA54_0<=IfThenElse)||LA54_0==Inverter||(LA54_0>=RunOnce && LA54_0<=Sleep)||LA54_0==Loop||LA54_0==Test||(LA54_0>=M && LA54_0<=HyphenMinusGreaterThanSign)||(LA54_0>=R && LA54_0<=VerticalLineVerticalLine)||LA54_0==QuestionMark) ) {
                    alt54=1;
                }


                switch (alt54) {
            	case 1 :
            	    // InternalQualityBtCppParser.g:3616:4: (lv_child_24_0= ruleTreeNode )
            	    {
            	    // InternalQualityBtCppParser.g:3616:4: (lv_child_24_0= ruleTreeNode )
            	    // InternalQualityBtCppParser.g:3617:5: lv_child_24_0= ruleTreeNode
            	    {

            	    					newCompositeNode(grammarAccess.getReactiveFallbackNodeAccess().getChildTreeNodeParserRuleCall_4_0());
            	    				
            	    pushFollow(FOLLOW_18);
            	    lv_child_24_0=ruleTreeNode();

            	    state._fsp--;


            	    					if (current==null) {
            	    						current = createModelElementForParent(grammarAccess.getReactiveFallbackNodeRule());
            	    					}
            	    					add(
            	    						current,
            	    						"child",
            	    						lv_child_24_0,
            	    						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            	    					afterParserOrEnumRuleCall();
            	    				

            	    }


            	    }
            	    break;

            	default :
            	    break loop54;
                }
            } while (true);

            this_END_25=(Token)match(input,RULE_END,FOLLOW_2); 

            			newLeafNode(this_END_25, grammarAccess.getReactiveFallbackNodeAccess().getENDTerminalRuleCall_5());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReactiveFallbackNode"


    // $ANTLR start "entryRuleWhileDoElseNode"
    // InternalQualityBtCppParser.g:3642:1: entryRuleWhileDoElseNode returns [EObject current=null] : iv_ruleWhileDoElseNode= ruleWhileDoElseNode EOF ;
    public final EObject entryRuleWhileDoElseNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleWhileDoElseNode = null;


        try {
            // InternalQualityBtCppParser.g:3642:56: (iv_ruleWhileDoElseNode= ruleWhileDoElseNode EOF )
            // InternalQualityBtCppParser.g:3643:2: iv_ruleWhileDoElseNode= ruleWhileDoElseNode EOF
            {
             newCompositeNode(grammarAccess.getWhileDoElseNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleWhileDoElseNode=ruleWhileDoElseNode();

            state._fsp--;

             current =iv_ruleWhileDoElseNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleWhileDoElseNode"


    // $ANTLR start "ruleWhileDoElseNode"
    // InternalQualityBtCppParser.g:3649:1: ruleWhileDoElseNode returns [EObject current=null] : (otherlv_0= WhileDoElse ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END ) ;
    public final EObject ruleWhileDoElseNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token this_BEGIN_22=null;
        Token this_END_25=null;
        AntlrDatatypeRuleToken lv_ID_5_0 = null;

        AntlrDatatypeRuleToken lv_name_8_0 = null;

        EObject lv_parameters_10_0 = null;

        EObject lv_parameters_12_0 = null;

        EObject lv_satisfices_14_0 = null;

        EObject lv_satisfices_16_0 = null;

        EObject lv_satisfies_18_0 = null;

        EObject lv_satisfies_20_0 = null;

        EObject lv_child_23_0 = null;

        EObject lv_child_24_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:3655:2: ( (otherlv_0= WhileDoElse ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END ) )
            // InternalQualityBtCppParser.g:3656:2: (otherlv_0= WhileDoElse ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END )
            {
            // InternalQualityBtCppParser.g:3656:2: (otherlv_0= WhileDoElse ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END )
            // InternalQualityBtCppParser.g:3657:3: otherlv_0= WhileDoElse ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END
            {
            otherlv_0=(Token)match(input,WhileDoElse,FOLLOW_15); 

            			newLeafNode(otherlv_0, grammarAccess.getWhileDoElseNodeAccess().getWhileDoElseKeyword_0());
            		
            // InternalQualityBtCppParser.g:3661:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt59=2;
            int LA59_0 = input.LA(1);

            if ( ((LA59_0>=Parameters && LA59_0<=Satisfies)||LA59_0==Name||LA59_0==ID||(LA59_0>=LeftParenthesis && LA59_0<=RightParenthesis)) ) {
                alt59=1;
            }
            switch (alt59) {
                case 1 :
                    // InternalQualityBtCppParser.g:3662:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:3662:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:3663:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1());
                    				
                    // InternalQualityBtCppParser.g:3666:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:3667:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:3667:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+
                    int cnt58=0;
                    loop58:
                    do {
                        int alt58=8;
                        int LA58_0 = input.LA(1);

                        if ( LA58_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1(), 0) ) {
                            alt58=1;
                        }
                        else if ( LA58_0 == ID && getUnorderedGroupHelper().canSelect(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1(), 1) ) {
                            alt58=2;
                        }
                        else if ( LA58_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1(), 2) ) {
                            alt58=3;
                        }
                        else if ( LA58_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1(), 3) ) {
                            alt58=4;
                        }
                        else if ( LA58_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1(), 4) ) {
                            alt58=5;
                        }
                        else if ( LA58_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1(), 5) ) {
                            alt58=6;
                        }
                        else if ( LA58_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1(), 6) ) {
                            alt58=7;
                        }


                        switch (alt58) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:3668:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:3668:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:3669:5: {...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleWhileDoElseNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:3669:112: ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:3670:6: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:3673:9: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:3673:10: {...}? => (otherlv_2= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleWhileDoElseNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:3673:19: (otherlv_2= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:3673:20: otherlv_2= LeftParenthesis
                    	    {
                    	    otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_2, grammarAccess.getWhileDoElseNodeAccess().getLeftParenthesisKeyword_1_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:3683:4: ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:3683:4: ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:3684:5: {...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleWhileDoElseNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:3684:112: ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:3685:6: ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:3688:9: ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:3688:10: {...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleWhileDoElseNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:3688:19: (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:3688:20: otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) )
                    	    {
                    	    otherlv_3=(Token)match(input,ID,FOLLOW_8); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getWhileDoElseNodeAccess().getIDKeyword_1_1_0());
                    	    								
                    	    otherlv_4=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getWhileDoElseNodeAccess().getEqualsSignKeyword_1_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:3696:9: ( (lv_ID_5_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:3697:10: (lv_ID_5_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:3697:10: (lv_ID_5_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:3698:11: lv_ID_5_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getWhileDoElseNodeAccess().getIDEStringParserRuleCall_1_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_15);
                    	    lv_ID_5_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getWhileDoElseNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"ID",
                    	    												lv_ID_5_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:3721:4: ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:3721:4: ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:3722:5: {...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleWhileDoElseNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:3722:112: ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:3723:6: ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:3726:9: ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:3726:10: {...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleWhileDoElseNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:3726:19: (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:3726:20: otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) )
                    	    {
                    	    otherlv_6=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_6, grammarAccess.getWhileDoElseNodeAccess().getNameKeyword_1_2_0());
                    	    								
                    	    otherlv_7=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_7, grammarAccess.getWhileDoElseNodeAccess().getEqualsSignKeyword_1_2_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:3734:9: ( (lv_name_8_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:3735:10: (lv_name_8_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:3735:10: (lv_name_8_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:3736:11: lv_name_8_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getWhileDoElseNodeAccess().getNameEStringParserRuleCall_1_2_2_0());
                    	    										
                    	    pushFollow(FOLLOW_15);
                    	    lv_name_8_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getWhileDoElseNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_8_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:3759:4: ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:3759:4: ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:3760:5: {...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleWhileDoElseNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:3760:112: ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:3761:6: ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:3764:9: ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:3764:10: {...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleWhileDoElseNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:3764:19: (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:3764:20: otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_9=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_9, grammarAccess.getWhileDoElseNodeAccess().getParametersKeyword_1_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:3768:9: ( (lv_parameters_10_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:3769:10: (lv_parameters_10_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:3769:10: (lv_parameters_10_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:3770:11: lv_parameters_10_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getWhileDoElseNodeAccess().getParametersParameterParserRuleCall_1_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_parameters_10_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getWhileDoElseNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_10_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:3787:9: (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )*
                    	    loop55:
                    	    do {
                    	        int alt55=2;
                    	        int LA55_0 = input.LA(1);

                    	        if ( (LA55_0==Comma) ) {
                    	            alt55=1;
                    	        }


                    	        switch (alt55) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:3788:10: otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_11=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_11, grammarAccess.getWhileDoElseNodeAccess().getCommaKeyword_1_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:3792:10: ( (lv_parameters_12_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:3793:11: (lv_parameters_12_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:3793:11: (lv_parameters_12_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:3794:12: lv_parameters_12_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getWhileDoElseNodeAccess().getParametersParameterParserRuleCall_1_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_parameters_12_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getWhileDoElseNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_12_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop55;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:3818:4: ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:3818:4: ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:3819:5: {...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleWhileDoElseNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:3819:112: ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:3820:6: ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:3823:9: ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:3823:10: {...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleWhileDoElseNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:3823:19: (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:3823:20: otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_13=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_13, grammarAccess.getWhileDoElseNodeAccess().getSatisficesKeyword_1_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:3827:9: ( (lv_satisfices_14_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:3828:10: (lv_satisfices_14_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:3828:10: (lv_satisfices_14_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:3829:11: lv_satisfices_14_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getWhileDoElseNodeAccess().getSatisficesQualityParserRuleCall_1_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfices_14_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getWhileDoElseNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_14_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:3846:9: (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )*
                    	    loop56:
                    	    do {
                    	        int alt56=2;
                    	        int LA56_0 = input.LA(1);

                    	        if ( (LA56_0==Comma) ) {
                    	            alt56=1;
                    	        }


                    	        switch (alt56) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:3847:10: otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_15=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_15, grammarAccess.getWhileDoElseNodeAccess().getCommaKeyword_1_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:3851:10: ( (lv_satisfices_16_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:3852:11: (lv_satisfices_16_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:3852:11: (lv_satisfices_16_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:3853:12: lv_satisfices_16_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getWhileDoElseNodeAccess().getSatisficesQualityParserRuleCall_1_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfices_16_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getWhileDoElseNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_16_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop56;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:3877:4: ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:3877:4: ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:3878:5: {...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleWhileDoElseNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:3878:112: ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:3879:6: ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:3882:9: ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:3882:10: {...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleWhileDoElseNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:3882:19: (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:3882:20: otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_17=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_17, grammarAccess.getWhileDoElseNodeAccess().getSatisfiesKeyword_1_5_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:3886:9: ( (lv_satisfies_18_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:3887:10: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:3887:10: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:3888:11: lv_satisfies_18_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getWhileDoElseNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_5_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfies_18_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getWhileDoElseNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_18_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:3905:9: (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )*
                    	    loop57:
                    	    do {
                    	        int alt57=2;
                    	        int LA57_0 = input.LA(1);

                    	        if ( (LA57_0==Comma) ) {
                    	            alt57=1;
                    	        }


                    	        switch (alt57) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:3906:10: otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_19=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_19, grammarAccess.getWhileDoElseNodeAccess().getCommaKeyword_1_5_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:3910:10: ( (lv_satisfies_20_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:3911:11: (lv_satisfies_20_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:3911:11: (lv_satisfies_20_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:3912:12: lv_satisfies_20_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getWhileDoElseNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_5_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfies_20_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getWhileDoElseNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_20_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop57;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 7 :
                    	    // InternalQualityBtCppParser.g:3936:4: ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:3936:4: ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:3937:5: {...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1(), 6) ) {
                    	        throw new FailedPredicateException(input, "ruleWhileDoElseNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1(), 6)");
                    	    }
                    	    // InternalQualityBtCppParser.g:3937:112: ( ({...}? => (otherlv_21= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:3938:6: ({...}? => (otherlv_21= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1(), 6);
                    	    					
                    	    // InternalQualityBtCppParser.g:3941:9: ({...}? => (otherlv_21= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:3941:10: {...}? => (otherlv_21= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleWhileDoElseNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:3941:19: (otherlv_21= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:3941:20: otherlv_21= RightParenthesis
                    	    {
                    	    otherlv_21=(Token)match(input,RightParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_21, grammarAccess.getWhileDoElseNodeAccess().getRightParenthesisKeyword_1_6());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt58 >= 1 ) break loop58;
                                EarlyExitException eee =
                                    new EarlyExitException(58, input);
                                throw eee;
                        }
                        cnt58++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1()) ) {
                        throw new FailedPredicateException(input, "ruleWhileDoElseNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1());
                    				

                    }
                    break;

            }

            this_BEGIN_22=(Token)match(input,RULE_BEGIN,FOLLOW_9); 

            			newLeafNode(this_BEGIN_22, grammarAccess.getWhileDoElseNodeAccess().getBEGINTerminalRuleCall_2());
            		
            // InternalQualityBtCppParser.g:3963:3: ( (lv_child_23_0= ruleTreeNode ) )
            // InternalQualityBtCppParser.g:3964:4: (lv_child_23_0= ruleTreeNode )
            {
            // InternalQualityBtCppParser.g:3964:4: (lv_child_23_0= ruleTreeNode )
            // InternalQualityBtCppParser.g:3965:5: lv_child_23_0= ruleTreeNode
            {

            					newCompositeNode(grammarAccess.getWhileDoElseNodeAccess().getChildTreeNodeParserRuleCall_3_0());
            				
            pushFollow(FOLLOW_18);
            lv_child_23_0=ruleTreeNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getWhileDoElseNodeRule());
            					}
            					add(
            						current,
            						"child",
            						lv_child_23_0,
            						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            // InternalQualityBtCppParser.g:3982:3: ( (lv_child_24_0= ruleTreeNode ) )*
            loop60:
            do {
                int alt60=2;
                int LA60_0 = input.LA(1);

                if ( ((LA60_0>=KeepRunningUntilFailure && LA60_0<=SetBlackboard)||(LA60_0>=ConsumeQueue && LA60_0<=ScriptAction)||LA60_0==WhileDoElse||(LA60_0>=CoroAction && LA60_0<=IfThenElse)||LA60_0==Inverter||(LA60_0>=RunOnce && LA60_0<=Sleep)||LA60_0==Loop||LA60_0==Test||(LA60_0>=M && LA60_0<=HyphenMinusGreaterThanSign)||(LA60_0>=R && LA60_0<=VerticalLineVerticalLine)||LA60_0==QuestionMark) ) {
                    alt60=1;
                }


                switch (alt60) {
            	case 1 :
            	    // InternalQualityBtCppParser.g:3983:4: (lv_child_24_0= ruleTreeNode )
            	    {
            	    // InternalQualityBtCppParser.g:3983:4: (lv_child_24_0= ruleTreeNode )
            	    // InternalQualityBtCppParser.g:3984:5: lv_child_24_0= ruleTreeNode
            	    {

            	    					newCompositeNode(grammarAccess.getWhileDoElseNodeAccess().getChildTreeNodeParserRuleCall_4_0());
            	    				
            	    pushFollow(FOLLOW_18);
            	    lv_child_24_0=ruleTreeNode();

            	    state._fsp--;


            	    					if (current==null) {
            	    						current = createModelElementForParent(grammarAccess.getWhileDoElseNodeRule());
            	    					}
            	    					add(
            	    						current,
            	    						"child",
            	    						lv_child_24_0,
            	    						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            	    					afterParserOrEnumRuleCall();
            	    				

            	    }


            	    }
            	    break;

            	default :
            	    break loop60;
                }
            } while (true);

            this_END_25=(Token)match(input,RULE_END,FOLLOW_2); 

            			newLeafNode(this_END_25, grammarAccess.getWhileDoElseNodeAccess().getENDTerminalRuleCall_5());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleWhileDoElseNode"


    // $ANTLR start "entryRuleReactiveSequenceNode"
    // InternalQualityBtCppParser.g:4009:1: entryRuleReactiveSequenceNode returns [EObject current=null] : iv_ruleReactiveSequenceNode= ruleReactiveSequenceNode EOF ;
    public final EObject entryRuleReactiveSequenceNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReactiveSequenceNode = null;


        try {
            // InternalQualityBtCppParser.g:4009:61: (iv_ruleReactiveSequenceNode= ruleReactiveSequenceNode EOF )
            // InternalQualityBtCppParser.g:4010:2: iv_ruleReactiveSequenceNode= ruleReactiveSequenceNode EOF
            {
             newCompositeNode(grammarAccess.getReactiveSequenceNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleReactiveSequenceNode=ruleReactiveSequenceNode();

            state._fsp--;

             current =iv_ruleReactiveSequenceNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleReactiveSequenceNode"


    // $ANTLR start "ruleReactiveSequenceNode"
    // InternalQualityBtCppParser.g:4016:1: ruleReactiveSequenceNode returns [EObject current=null] : (otherlv_0= R_1 ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END ) ;
    public final EObject ruleReactiveSequenceNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token this_BEGIN_22=null;
        Token this_END_25=null;
        AntlrDatatypeRuleToken lv_ID_5_0 = null;

        AntlrDatatypeRuleToken lv_name_8_0 = null;

        EObject lv_parameters_10_0 = null;

        EObject lv_parameters_12_0 = null;

        EObject lv_satisfices_14_0 = null;

        EObject lv_satisfices_16_0 = null;

        EObject lv_satisfies_18_0 = null;

        EObject lv_satisfies_20_0 = null;

        EObject lv_child_23_0 = null;

        EObject lv_child_24_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:4022:2: ( (otherlv_0= R_1 ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END ) )
            // InternalQualityBtCppParser.g:4023:2: (otherlv_0= R_1 ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END )
            {
            // InternalQualityBtCppParser.g:4023:2: (otherlv_0= R_1 ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END )
            // InternalQualityBtCppParser.g:4024:3: otherlv_0= R_1 ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END
            {
            otherlv_0=(Token)match(input,R_1,FOLLOW_15); 

            			newLeafNode(otherlv_0, grammarAccess.getReactiveSequenceNodeAccess().getRKeyword_0());
            		
            // InternalQualityBtCppParser.g:4028:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt65=2;
            int LA65_0 = input.LA(1);

            if ( ((LA65_0>=Parameters && LA65_0<=Satisfies)||LA65_0==Name||LA65_0==ID||(LA65_0>=LeftParenthesis && LA65_0<=RightParenthesis)) ) {
                alt65=1;
            }
            switch (alt65) {
                case 1 :
                    // InternalQualityBtCppParser.g:4029:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:4029:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:4030:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1());
                    				
                    // InternalQualityBtCppParser.g:4033:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:4034:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:4034:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+
                    int cnt64=0;
                    loop64:
                    do {
                        int alt64=8;
                        int LA64_0 = input.LA(1);

                        if ( LA64_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1(), 0) ) {
                            alt64=1;
                        }
                        else if ( LA64_0 == ID && getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1(), 1) ) {
                            alt64=2;
                        }
                        else if ( LA64_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1(), 2) ) {
                            alt64=3;
                        }
                        else if ( LA64_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1(), 3) ) {
                            alt64=4;
                        }
                        else if ( LA64_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1(), 4) ) {
                            alt64=5;
                        }
                        else if ( LA64_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1(), 5) ) {
                            alt64=6;
                        }
                        else if ( LA64_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1(), 6) ) {
                            alt64=7;
                        }


                        switch (alt64) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:4035:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:4035:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:4036:5: {...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleReactiveSequenceNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:4036:117: ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:4037:6: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:4040:9: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:4040:10: {...}? => (otherlv_2= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleReactiveSequenceNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:4040:19: (otherlv_2= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:4040:20: otherlv_2= LeftParenthesis
                    	    {
                    	    otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_2, grammarAccess.getReactiveSequenceNodeAccess().getLeftParenthesisKeyword_1_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:4050:4: ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:4050:4: ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:4051:5: {...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleReactiveSequenceNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:4051:117: ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:4052:6: ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:4055:9: ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:4055:10: {...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleReactiveSequenceNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:4055:19: (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:4055:20: otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) )
                    	    {
                    	    otherlv_3=(Token)match(input,ID,FOLLOW_8); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getReactiveSequenceNodeAccess().getIDKeyword_1_1_0());
                    	    								
                    	    otherlv_4=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getReactiveSequenceNodeAccess().getEqualsSignKeyword_1_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:4063:9: ( (lv_ID_5_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:4064:10: (lv_ID_5_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:4064:10: (lv_ID_5_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:4065:11: lv_ID_5_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getReactiveSequenceNodeAccess().getIDEStringParserRuleCall_1_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_15);
                    	    lv_ID_5_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getReactiveSequenceNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"ID",
                    	    												lv_ID_5_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:4088:4: ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:4088:4: ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:4089:5: {...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleReactiveSequenceNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:4089:117: ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:4090:6: ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:4093:9: ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:4093:10: {...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleReactiveSequenceNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:4093:19: (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:4093:20: otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) )
                    	    {
                    	    otherlv_6=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_6, grammarAccess.getReactiveSequenceNodeAccess().getNameKeyword_1_2_0());
                    	    								
                    	    otherlv_7=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_7, grammarAccess.getReactiveSequenceNodeAccess().getEqualsSignKeyword_1_2_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:4101:9: ( (lv_name_8_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:4102:10: (lv_name_8_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:4102:10: (lv_name_8_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:4103:11: lv_name_8_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getReactiveSequenceNodeAccess().getNameEStringParserRuleCall_1_2_2_0());
                    	    										
                    	    pushFollow(FOLLOW_15);
                    	    lv_name_8_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getReactiveSequenceNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_8_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:4126:4: ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:4126:4: ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:4127:5: {...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleReactiveSequenceNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:4127:117: ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:4128:6: ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:4131:9: ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:4131:10: {...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleReactiveSequenceNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:4131:19: (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:4131:20: otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_9=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_9, grammarAccess.getReactiveSequenceNodeAccess().getParametersKeyword_1_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:4135:9: ( (lv_parameters_10_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:4136:10: (lv_parameters_10_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:4136:10: (lv_parameters_10_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:4137:11: lv_parameters_10_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getReactiveSequenceNodeAccess().getParametersParameterParserRuleCall_1_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_parameters_10_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getReactiveSequenceNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_10_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:4154:9: (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )*
                    	    loop61:
                    	    do {
                    	        int alt61=2;
                    	        int LA61_0 = input.LA(1);

                    	        if ( (LA61_0==Comma) ) {
                    	            alt61=1;
                    	        }


                    	        switch (alt61) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:4155:10: otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_11=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_11, grammarAccess.getReactiveSequenceNodeAccess().getCommaKeyword_1_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:4159:10: ( (lv_parameters_12_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:4160:11: (lv_parameters_12_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:4160:11: (lv_parameters_12_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:4161:12: lv_parameters_12_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getReactiveSequenceNodeAccess().getParametersParameterParserRuleCall_1_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_parameters_12_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getReactiveSequenceNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_12_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop61;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:4185:4: ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:4185:4: ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:4186:5: {...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleReactiveSequenceNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:4186:117: ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:4187:6: ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:4190:9: ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:4190:10: {...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleReactiveSequenceNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:4190:19: (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:4190:20: otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_13=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_13, grammarAccess.getReactiveSequenceNodeAccess().getSatisficesKeyword_1_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:4194:9: ( (lv_satisfices_14_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:4195:10: (lv_satisfices_14_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:4195:10: (lv_satisfices_14_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:4196:11: lv_satisfices_14_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getReactiveSequenceNodeAccess().getSatisficesQualityParserRuleCall_1_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfices_14_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getReactiveSequenceNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_14_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:4213:9: (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )*
                    	    loop62:
                    	    do {
                    	        int alt62=2;
                    	        int LA62_0 = input.LA(1);

                    	        if ( (LA62_0==Comma) ) {
                    	            alt62=1;
                    	        }


                    	        switch (alt62) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:4214:10: otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_15=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_15, grammarAccess.getReactiveSequenceNodeAccess().getCommaKeyword_1_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:4218:10: ( (lv_satisfices_16_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:4219:11: (lv_satisfices_16_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:4219:11: (lv_satisfices_16_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:4220:12: lv_satisfices_16_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getReactiveSequenceNodeAccess().getSatisficesQualityParserRuleCall_1_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfices_16_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getReactiveSequenceNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_16_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop62;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:4244:4: ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:4244:4: ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:4245:5: {...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleReactiveSequenceNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:4245:117: ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:4246:6: ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:4249:9: ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:4249:10: {...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleReactiveSequenceNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:4249:19: (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:4249:20: otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_17=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_17, grammarAccess.getReactiveSequenceNodeAccess().getSatisfiesKeyword_1_5_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:4253:9: ( (lv_satisfies_18_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:4254:10: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:4254:10: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:4255:11: lv_satisfies_18_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getReactiveSequenceNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_5_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfies_18_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getReactiveSequenceNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_18_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:4272:9: (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )*
                    	    loop63:
                    	    do {
                    	        int alt63=2;
                    	        int LA63_0 = input.LA(1);

                    	        if ( (LA63_0==Comma) ) {
                    	            alt63=1;
                    	        }


                    	        switch (alt63) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:4273:10: otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_19=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_19, grammarAccess.getReactiveSequenceNodeAccess().getCommaKeyword_1_5_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:4277:10: ( (lv_satisfies_20_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:4278:11: (lv_satisfies_20_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:4278:11: (lv_satisfies_20_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:4279:12: lv_satisfies_20_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getReactiveSequenceNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_5_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfies_20_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getReactiveSequenceNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_20_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop63;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 7 :
                    	    // InternalQualityBtCppParser.g:4303:4: ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:4303:4: ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:4304:5: {...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1(), 6) ) {
                    	        throw new FailedPredicateException(input, "ruleReactiveSequenceNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1(), 6)");
                    	    }
                    	    // InternalQualityBtCppParser.g:4304:117: ( ({...}? => (otherlv_21= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:4305:6: ({...}? => (otherlv_21= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1(), 6);
                    	    					
                    	    // InternalQualityBtCppParser.g:4308:9: ({...}? => (otherlv_21= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:4308:10: {...}? => (otherlv_21= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleReactiveSequenceNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:4308:19: (otherlv_21= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:4308:20: otherlv_21= RightParenthesis
                    	    {
                    	    otherlv_21=(Token)match(input,RightParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_21, grammarAccess.getReactiveSequenceNodeAccess().getRightParenthesisKeyword_1_6());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt64 >= 1 ) break loop64;
                                EarlyExitException eee =
                                    new EarlyExitException(64, input);
                                throw eee;
                        }
                        cnt64++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1()) ) {
                        throw new FailedPredicateException(input, "ruleReactiveSequenceNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1());
                    				

                    }
                    break;

            }

            this_BEGIN_22=(Token)match(input,RULE_BEGIN,FOLLOW_9); 

            			newLeafNode(this_BEGIN_22, grammarAccess.getReactiveSequenceNodeAccess().getBEGINTerminalRuleCall_2());
            		
            // InternalQualityBtCppParser.g:4330:3: ( (lv_child_23_0= ruleTreeNode ) )
            // InternalQualityBtCppParser.g:4331:4: (lv_child_23_0= ruleTreeNode )
            {
            // InternalQualityBtCppParser.g:4331:4: (lv_child_23_0= ruleTreeNode )
            // InternalQualityBtCppParser.g:4332:5: lv_child_23_0= ruleTreeNode
            {

            					newCompositeNode(grammarAccess.getReactiveSequenceNodeAccess().getChildTreeNodeParserRuleCall_3_0());
            				
            pushFollow(FOLLOW_18);
            lv_child_23_0=ruleTreeNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getReactiveSequenceNodeRule());
            					}
            					add(
            						current,
            						"child",
            						lv_child_23_0,
            						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            // InternalQualityBtCppParser.g:4349:3: ( (lv_child_24_0= ruleTreeNode ) )*
            loop66:
            do {
                int alt66=2;
                int LA66_0 = input.LA(1);

                if ( ((LA66_0>=KeepRunningUntilFailure && LA66_0<=SetBlackboard)||(LA66_0>=ConsumeQueue && LA66_0<=ScriptAction)||LA66_0==WhileDoElse||(LA66_0>=CoroAction && LA66_0<=IfThenElse)||LA66_0==Inverter||(LA66_0>=RunOnce && LA66_0<=Sleep)||LA66_0==Loop||LA66_0==Test||(LA66_0>=M && LA66_0<=HyphenMinusGreaterThanSign)||(LA66_0>=R && LA66_0<=VerticalLineVerticalLine)||LA66_0==QuestionMark) ) {
                    alt66=1;
                }


                switch (alt66) {
            	case 1 :
            	    // InternalQualityBtCppParser.g:4350:4: (lv_child_24_0= ruleTreeNode )
            	    {
            	    // InternalQualityBtCppParser.g:4350:4: (lv_child_24_0= ruleTreeNode )
            	    // InternalQualityBtCppParser.g:4351:5: lv_child_24_0= ruleTreeNode
            	    {

            	    					newCompositeNode(grammarAccess.getReactiveSequenceNodeAccess().getChildTreeNodeParserRuleCall_4_0());
            	    				
            	    pushFollow(FOLLOW_18);
            	    lv_child_24_0=ruleTreeNode();

            	    state._fsp--;


            	    					if (current==null) {
            	    						current = createModelElementForParent(grammarAccess.getReactiveSequenceNodeRule());
            	    					}
            	    					add(
            	    						current,
            	    						"child",
            	    						lv_child_24_0,
            	    						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            	    					afterParserOrEnumRuleCall();
            	    				

            	    }


            	    }
            	    break;

            	default :
            	    break loop66;
                }
            } while (true);

            this_END_25=(Token)match(input,RULE_END,FOLLOW_2); 

            			newLeafNode(this_END_25, grammarAccess.getReactiveSequenceNodeAccess().getENDTerminalRuleCall_5());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReactiveSequenceNode"


    // $ANTLR start "entryRuleSequenceNode"
    // InternalQualityBtCppParser.g:4376:1: entryRuleSequenceNode returns [EObject current=null] : iv_ruleSequenceNode= ruleSequenceNode EOF ;
    public final EObject entryRuleSequenceNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSequenceNode = null;


        try {
            // InternalQualityBtCppParser.g:4376:53: (iv_ruleSequenceNode= ruleSequenceNode EOF )
            // InternalQualityBtCppParser.g:4377:2: iv_ruleSequenceNode= ruleSequenceNode EOF
            {
             newCompositeNode(grammarAccess.getSequenceNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleSequenceNode=ruleSequenceNode();

            state._fsp--;

             current =iv_ruleSequenceNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSequenceNode"


    // $ANTLR start "ruleSequenceNode"
    // InternalQualityBtCppParser.g:4383:1: ruleSequenceNode returns [EObject current=null] : (otherlv_0= HyphenMinusGreaterThanSign ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END ) ;
    public final EObject ruleSequenceNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token this_BEGIN_22=null;
        Token this_END_25=null;
        AntlrDatatypeRuleToken lv_ID_5_0 = null;

        AntlrDatatypeRuleToken lv_name_8_0 = null;

        EObject lv_parameters_10_0 = null;

        EObject lv_parameters_12_0 = null;

        EObject lv_satisfices_14_0 = null;

        EObject lv_satisfices_16_0 = null;

        EObject lv_satisfies_18_0 = null;

        EObject lv_satisfies_20_0 = null;

        EObject lv_child_23_0 = null;

        EObject lv_child_24_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:4389:2: ( (otherlv_0= HyphenMinusGreaterThanSign ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END ) )
            // InternalQualityBtCppParser.g:4390:2: (otherlv_0= HyphenMinusGreaterThanSign ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END )
            {
            // InternalQualityBtCppParser.g:4390:2: (otherlv_0= HyphenMinusGreaterThanSign ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END )
            // InternalQualityBtCppParser.g:4391:3: otherlv_0= HyphenMinusGreaterThanSign ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END
            {
            otherlv_0=(Token)match(input,HyphenMinusGreaterThanSign,FOLLOW_15); 

            			newLeafNode(otherlv_0, grammarAccess.getSequenceNodeAccess().getHyphenMinusGreaterThanSignKeyword_0());
            		
            // InternalQualityBtCppParser.g:4395:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt71=2;
            int LA71_0 = input.LA(1);

            if ( ((LA71_0>=Parameters && LA71_0<=Satisfies)||LA71_0==Name||LA71_0==ID||(LA71_0>=LeftParenthesis && LA71_0<=RightParenthesis)) ) {
                alt71=1;
            }
            switch (alt71) {
                case 1 :
                    // InternalQualityBtCppParser.g:4396:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:4396:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:4397:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1());
                    				
                    // InternalQualityBtCppParser.g:4400:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:4401:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:4401:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+
                    int cnt70=0;
                    loop70:
                    do {
                        int alt70=8;
                        int LA70_0 = input.LA(1);

                        if ( LA70_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1(), 0) ) {
                            alt70=1;
                        }
                        else if ( LA70_0 == ID && getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1(), 1) ) {
                            alt70=2;
                        }
                        else if ( LA70_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1(), 2) ) {
                            alt70=3;
                        }
                        else if ( LA70_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1(), 3) ) {
                            alt70=4;
                        }
                        else if ( LA70_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1(), 4) ) {
                            alt70=5;
                        }
                        else if ( LA70_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1(), 5) ) {
                            alt70=6;
                        }
                        else if ( LA70_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1(), 6) ) {
                            alt70=7;
                        }


                        switch (alt70) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:4402:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:4402:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:4403:5: {...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleSequenceNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:4403:109: ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:4404:6: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:4407:9: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:4407:10: {...}? => (otherlv_2= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSequenceNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:4407:19: (otherlv_2= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:4407:20: otherlv_2= LeftParenthesis
                    	    {
                    	    otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_2, grammarAccess.getSequenceNodeAccess().getLeftParenthesisKeyword_1_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:4417:4: ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:4417:4: ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:4418:5: {...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleSequenceNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:4418:109: ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:4419:6: ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:4422:9: ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:4422:10: {...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSequenceNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:4422:19: (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:4422:20: otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) )
                    	    {
                    	    otherlv_3=(Token)match(input,ID,FOLLOW_8); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getSequenceNodeAccess().getIDKeyword_1_1_0());
                    	    								
                    	    otherlv_4=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getSequenceNodeAccess().getEqualsSignKeyword_1_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:4430:9: ( (lv_ID_5_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:4431:10: (lv_ID_5_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:4431:10: (lv_ID_5_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:4432:11: lv_ID_5_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getSequenceNodeAccess().getIDEStringParserRuleCall_1_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_15);
                    	    lv_ID_5_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getSequenceNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"ID",
                    	    												lv_ID_5_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:4455:4: ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:4455:4: ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:4456:5: {...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleSequenceNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:4456:109: ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:4457:6: ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:4460:9: ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:4460:10: {...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSequenceNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:4460:19: (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:4460:20: otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) )
                    	    {
                    	    otherlv_6=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_6, grammarAccess.getSequenceNodeAccess().getNameKeyword_1_2_0());
                    	    								
                    	    otherlv_7=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_7, grammarAccess.getSequenceNodeAccess().getEqualsSignKeyword_1_2_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:4468:9: ( (lv_name_8_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:4469:10: (lv_name_8_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:4469:10: (lv_name_8_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:4470:11: lv_name_8_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getSequenceNodeAccess().getNameEStringParserRuleCall_1_2_2_0());
                    	    										
                    	    pushFollow(FOLLOW_15);
                    	    lv_name_8_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getSequenceNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_8_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:4493:4: ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:4493:4: ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:4494:5: {...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleSequenceNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:4494:109: ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:4495:6: ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:4498:9: ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:4498:10: {...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSequenceNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:4498:19: (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:4498:20: otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_9=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_9, grammarAccess.getSequenceNodeAccess().getParametersKeyword_1_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:4502:9: ( (lv_parameters_10_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:4503:10: (lv_parameters_10_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:4503:10: (lv_parameters_10_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:4504:11: lv_parameters_10_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getSequenceNodeAccess().getParametersParameterParserRuleCall_1_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_parameters_10_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getSequenceNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_10_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:4521:9: (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )*
                    	    loop67:
                    	    do {
                    	        int alt67=2;
                    	        int LA67_0 = input.LA(1);

                    	        if ( (LA67_0==Comma) ) {
                    	            alt67=1;
                    	        }


                    	        switch (alt67) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:4522:10: otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_11=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_11, grammarAccess.getSequenceNodeAccess().getCommaKeyword_1_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:4526:10: ( (lv_parameters_12_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:4527:11: (lv_parameters_12_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:4527:11: (lv_parameters_12_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:4528:12: lv_parameters_12_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getSequenceNodeAccess().getParametersParameterParserRuleCall_1_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_parameters_12_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getSequenceNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_12_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop67;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:4552:4: ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:4552:4: ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:4553:5: {...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleSequenceNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:4553:109: ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:4554:6: ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:4557:9: ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:4557:10: {...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSequenceNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:4557:19: (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:4557:20: otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_13=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_13, grammarAccess.getSequenceNodeAccess().getSatisficesKeyword_1_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:4561:9: ( (lv_satisfices_14_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:4562:10: (lv_satisfices_14_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:4562:10: (lv_satisfices_14_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:4563:11: lv_satisfices_14_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getSequenceNodeAccess().getSatisficesQualityParserRuleCall_1_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfices_14_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getSequenceNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_14_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:4580:9: (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )*
                    	    loop68:
                    	    do {
                    	        int alt68=2;
                    	        int LA68_0 = input.LA(1);

                    	        if ( (LA68_0==Comma) ) {
                    	            alt68=1;
                    	        }


                    	        switch (alt68) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:4581:10: otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_15=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_15, grammarAccess.getSequenceNodeAccess().getCommaKeyword_1_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:4585:10: ( (lv_satisfices_16_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:4586:11: (lv_satisfices_16_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:4586:11: (lv_satisfices_16_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:4587:12: lv_satisfices_16_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getSequenceNodeAccess().getSatisficesQualityParserRuleCall_1_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfices_16_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getSequenceNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_16_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop68;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:4611:4: ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:4611:4: ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:4612:5: {...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleSequenceNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:4612:109: ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:4613:6: ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:4616:9: ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:4616:10: {...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSequenceNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:4616:19: (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:4616:20: otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_17=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_17, grammarAccess.getSequenceNodeAccess().getSatisfiesKeyword_1_5_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:4620:9: ( (lv_satisfies_18_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:4621:10: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:4621:10: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:4622:11: lv_satisfies_18_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getSequenceNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_5_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfies_18_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getSequenceNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_18_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:4639:9: (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )*
                    	    loop69:
                    	    do {
                    	        int alt69=2;
                    	        int LA69_0 = input.LA(1);

                    	        if ( (LA69_0==Comma) ) {
                    	            alt69=1;
                    	        }


                    	        switch (alt69) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:4640:10: otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_19=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_19, grammarAccess.getSequenceNodeAccess().getCommaKeyword_1_5_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:4644:10: ( (lv_satisfies_20_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:4645:11: (lv_satisfies_20_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:4645:11: (lv_satisfies_20_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:4646:12: lv_satisfies_20_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getSequenceNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_5_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfies_20_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getSequenceNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_20_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop69;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 7 :
                    	    // InternalQualityBtCppParser.g:4670:4: ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:4670:4: ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:4671:5: {...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1(), 6) ) {
                    	        throw new FailedPredicateException(input, "ruleSequenceNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1(), 6)");
                    	    }
                    	    // InternalQualityBtCppParser.g:4671:109: ( ({...}? => (otherlv_21= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:4672:6: ({...}? => (otherlv_21= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1(), 6);
                    	    					
                    	    // InternalQualityBtCppParser.g:4675:9: ({...}? => (otherlv_21= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:4675:10: {...}? => (otherlv_21= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSequenceNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:4675:19: (otherlv_21= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:4675:20: otherlv_21= RightParenthesis
                    	    {
                    	    otherlv_21=(Token)match(input,RightParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_21, grammarAccess.getSequenceNodeAccess().getRightParenthesisKeyword_1_6());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt70 >= 1 ) break loop70;
                                EarlyExitException eee =
                                    new EarlyExitException(70, input);
                                throw eee;
                        }
                        cnt70++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1()) ) {
                        throw new FailedPredicateException(input, "ruleSequenceNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1());
                    				

                    }
                    break;

            }

            this_BEGIN_22=(Token)match(input,RULE_BEGIN,FOLLOW_9); 

            			newLeafNode(this_BEGIN_22, grammarAccess.getSequenceNodeAccess().getBEGINTerminalRuleCall_2());
            		
            // InternalQualityBtCppParser.g:4697:3: ( (lv_child_23_0= ruleTreeNode ) )
            // InternalQualityBtCppParser.g:4698:4: (lv_child_23_0= ruleTreeNode )
            {
            // InternalQualityBtCppParser.g:4698:4: (lv_child_23_0= ruleTreeNode )
            // InternalQualityBtCppParser.g:4699:5: lv_child_23_0= ruleTreeNode
            {

            					newCompositeNode(grammarAccess.getSequenceNodeAccess().getChildTreeNodeParserRuleCall_3_0());
            				
            pushFollow(FOLLOW_18);
            lv_child_23_0=ruleTreeNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getSequenceNodeRule());
            					}
            					add(
            						current,
            						"child",
            						lv_child_23_0,
            						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            // InternalQualityBtCppParser.g:4716:3: ( (lv_child_24_0= ruleTreeNode ) )*
            loop72:
            do {
                int alt72=2;
                int LA72_0 = input.LA(1);

                if ( ((LA72_0>=KeepRunningUntilFailure && LA72_0<=SetBlackboard)||(LA72_0>=ConsumeQueue && LA72_0<=ScriptAction)||LA72_0==WhileDoElse||(LA72_0>=CoroAction && LA72_0<=IfThenElse)||LA72_0==Inverter||(LA72_0>=RunOnce && LA72_0<=Sleep)||LA72_0==Loop||LA72_0==Test||(LA72_0>=M && LA72_0<=HyphenMinusGreaterThanSign)||(LA72_0>=R && LA72_0<=VerticalLineVerticalLine)||LA72_0==QuestionMark) ) {
                    alt72=1;
                }


                switch (alt72) {
            	case 1 :
            	    // InternalQualityBtCppParser.g:4717:4: (lv_child_24_0= ruleTreeNode )
            	    {
            	    // InternalQualityBtCppParser.g:4717:4: (lv_child_24_0= ruleTreeNode )
            	    // InternalQualityBtCppParser.g:4718:5: lv_child_24_0= ruleTreeNode
            	    {

            	    					newCompositeNode(grammarAccess.getSequenceNodeAccess().getChildTreeNodeParserRuleCall_4_0());
            	    				
            	    pushFollow(FOLLOW_18);
            	    lv_child_24_0=ruleTreeNode();

            	    state._fsp--;


            	    					if (current==null) {
            	    						current = createModelElementForParent(grammarAccess.getSequenceNodeRule());
            	    					}
            	    					add(
            	    						current,
            	    						"child",
            	    						lv_child_24_0,
            	    						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            	    					afterParserOrEnumRuleCall();
            	    				

            	    }


            	    }
            	    break;

            	default :
            	    break loop72;
                }
            } while (true);

            this_END_25=(Token)match(input,RULE_END,FOLLOW_2); 

            			newLeafNode(this_END_25, grammarAccess.getSequenceNodeAccess().getENDTerminalRuleCall_5());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSequenceNode"


    // $ANTLR start "entryRuleTimeoutNode"
    // InternalQualityBtCppParser.g:4743:1: entryRuleTimeoutNode returns [EObject current=null] : iv_ruleTimeoutNode= ruleTimeoutNode EOF ;
    public final EObject entryRuleTimeoutNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTimeoutNode = null;


        try {
            // InternalQualityBtCppParser.g:4743:52: (iv_ruleTimeoutNode= ruleTimeoutNode EOF )
            // InternalQualityBtCppParser.g:4744:2: iv_ruleTimeoutNode= ruleTimeoutNode EOF
            {
             newCompositeNode(grammarAccess.getTimeoutNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleTimeoutNode=ruleTimeoutNode();

            state._fsp--;

             current =iv_ruleTimeoutNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTimeoutNode"


    // $ANTLR start "ruleTimeoutNode"
    // InternalQualityBtCppParser.g:4750:1: ruleTimeoutNode returns [EObject current=null] : (otherlv_0= Timeout ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Msec otherlv_22= EqualsSign ( (lv_msec_23_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_25= RULE_BEGIN ( (lv_child_26_0= ruleTreeNode ) ) this_END_27= RULE_END ) ;
    public final EObject ruleTimeoutNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token otherlv_22=null;
        Token otherlv_24=null;
        Token this_BEGIN_25=null;
        Token this_END_27=null;
        AntlrDatatypeRuleToken lv_ID_5_0 = null;

        AntlrDatatypeRuleToken lv_name_8_0 = null;

        EObject lv_parameters_10_0 = null;

        EObject lv_parameters_12_0 = null;

        EObject lv_satisfices_14_0 = null;

        EObject lv_satisfices_16_0 = null;

        EObject lv_satisfies_18_0 = null;

        EObject lv_satisfies_20_0 = null;

        AntlrDatatypeRuleToken lv_msec_23_0 = null;

        EObject lv_child_26_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:4756:2: ( (otherlv_0= Timeout ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Msec otherlv_22= EqualsSign ( (lv_msec_23_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_25= RULE_BEGIN ( (lv_child_26_0= ruleTreeNode ) ) this_END_27= RULE_END ) )
            // InternalQualityBtCppParser.g:4757:2: (otherlv_0= Timeout ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Msec otherlv_22= EqualsSign ( (lv_msec_23_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_25= RULE_BEGIN ( (lv_child_26_0= ruleTreeNode ) ) this_END_27= RULE_END )
            {
            // InternalQualityBtCppParser.g:4757:2: (otherlv_0= Timeout ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Msec otherlv_22= EqualsSign ( (lv_msec_23_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_25= RULE_BEGIN ( (lv_child_26_0= ruleTreeNode ) ) this_END_27= RULE_END )
            // InternalQualityBtCppParser.g:4758:3: otherlv_0= Timeout ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Msec otherlv_22= EqualsSign ( (lv_msec_23_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_25= RULE_BEGIN ( (lv_child_26_0= ruleTreeNode ) ) this_END_27= RULE_END
            {
            otherlv_0=(Token)match(input,Timeout,FOLLOW_19); 

            			newLeafNode(otherlv_0, grammarAccess.getTimeoutNodeAccess().getTimeoutKeyword_0());
            		
            // InternalQualityBtCppParser.g:4762:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Msec otherlv_22= EqualsSign ( (lv_msec_23_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt77=2;
            int LA77_0 = input.LA(1);

            if ( ((LA77_0>=Parameters && LA77_0<=Satisfies)||(LA77_0>=Msec && LA77_0<=Name)||LA77_0==ID||(LA77_0>=LeftParenthesis && LA77_0<=RightParenthesis)) ) {
                alt77=1;
            }
            switch (alt77) {
                case 1 :
                    // InternalQualityBtCppParser.g:4763:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Msec otherlv_22= EqualsSign ( (lv_msec_23_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:4763:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Msec otherlv_22= EqualsSign ( (lv_msec_23_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:4764:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Msec otherlv_22= EqualsSign ( (lv_msec_23_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1());
                    				
                    // InternalQualityBtCppParser.g:4767:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Msec otherlv_22= EqualsSign ( (lv_msec_23_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:4768:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Msec otherlv_22= EqualsSign ( (lv_msec_23_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:4768:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Msec otherlv_22= EqualsSign ( (lv_msec_23_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+
                    int cnt76=0;
                    loop76:
                    do {
                        int alt76=9;
                        alt76 = dfa76.predict(input);
                        switch (alt76) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:4769:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:4769:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:4770:5: {...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleTimeoutNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:4770:108: ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:4771:6: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:4774:9: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:4774:10: {...}? => (otherlv_2= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleTimeoutNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:4774:19: (otherlv_2= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:4774:20: otherlv_2= LeftParenthesis
                    	    {
                    	    otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_19); 

                    	    									newLeafNode(otherlv_2, grammarAccess.getTimeoutNodeAccess().getLeftParenthesisKeyword_1_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:4784:4: ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:4784:4: ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:4785:5: {...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleTimeoutNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:4785:108: ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:4786:6: ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:4789:9: ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:4789:10: {...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleTimeoutNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:4789:19: (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:4789:20: otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) )
                    	    {
                    	    otherlv_3=(Token)match(input,ID,FOLLOW_8); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getTimeoutNodeAccess().getIDKeyword_1_1_0());
                    	    								
                    	    otherlv_4=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getTimeoutNodeAccess().getEqualsSignKeyword_1_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:4797:9: ( (lv_ID_5_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:4798:10: (lv_ID_5_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:4798:10: (lv_ID_5_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:4799:11: lv_ID_5_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getTimeoutNodeAccess().getIDEStringParserRuleCall_1_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_19);
                    	    lv_ID_5_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getTimeoutNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"ID",
                    	    												lv_ID_5_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:4822:4: ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:4822:4: ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:4823:5: {...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleTimeoutNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:4823:108: ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:4824:6: ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:4827:9: ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:4827:10: {...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleTimeoutNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:4827:19: (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:4827:20: otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) )
                    	    {
                    	    otherlv_6=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_6, grammarAccess.getTimeoutNodeAccess().getNameKeyword_1_2_0());
                    	    								
                    	    otherlv_7=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_7, grammarAccess.getTimeoutNodeAccess().getEqualsSignKeyword_1_2_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:4835:9: ( (lv_name_8_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:4836:10: (lv_name_8_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:4836:10: (lv_name_8_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:4837:11: lv_name_8_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getTimeoutNodeAccess().getNameEStringParserRuleCall_1_2_2_0());
                    	    										
                    	    pushFollow(FOLLOW_19);
                    	    lv_name_8_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getTimeoutNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_8_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:4860:4: ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:4860:4: ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:4861:5: {...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleTimeoutNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:4861:108: ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:4862:6: ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:4865:9: ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:4865:10: {...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleTimeoutNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:4865:19: (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:4865:20: otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_9=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_9, grammarAccess.getTimeoutNodeAccess().getParametersKeyword_1_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:4869:9: ( (lv_parameters_10_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:4870:10: (lv_parameters_10_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:4870:10: (lv_parameters_10_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:4871:11: lv_parameters_10_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getTimeoutNodeAccess().getParametersParameterParserRuleCall_1_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_20);
                    	    lv_parameters_10_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getTimeoutNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_10_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:4888:9: (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )*
                    	    loop73:
                    	    do {
                    	        int alt73=2;
                    	        int LA73_0 = input.LA(1);

                    	        if ( (LA73_0==Comma) ) {
                    	            alt73=1;
                    	        }


                    	        switch (alt73) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:4889:10: otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_11=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_11, grammarAccess.getTimeoutNodeAccess().getCommaKeyword_1_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:4893:10: ( (lv_parameters_12_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:4894:11: (lv_parameters_12_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:4894:11: (lv_parameters_12_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:4895:12: lv_parameters_12_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getTimeoutNodeAccess().getParametersParameterParserRuleCall_1_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_20);
                    	    	    lv_parameters_12_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getTimeoutNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_12_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop73;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:4919:4: ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:4919:4: ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:4920:5: {...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleTimeoutNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:4920:108: ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:4921:6: ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:4924:9: ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:4924:10: {...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleTimeoutNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:4924:19: (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:4924:20: otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_13=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_13, grammarAccess.getTimeoutNodeAccess().getSatisficesKeyword_1_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:4928:9: ( (lv_satisfices_14_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:4929:10: (lv_satisfices_14_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:4929:10: (lv_satisfices_14_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:4930:11: lv_satisfices_14_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getTimeoutNodeAccess().getSatisficesQualityParserRuleCall_1_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_20);
                    	    lv_satisfices_14_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getTimeoutNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_14_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:4947:9: (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )*
                    	    loop74:
                    	    do {
                    	        int alt74=2;
                    	        int LA74_0 = input.LA(1);

                    	        if ( (LA74_0==Comma) ) {
                    	            alt74=1;
                    	        }


                    	        switch (alt74) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:4948:10: otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_15=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_15, grammarAccess.getTimeoutNodeAccess().getCommaKeyword_1_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:4952:10: ( (lv_satisfices_16_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:4953:11: (lv_satisfices_16_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:4953:11: (lv_satisfices_16_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:4954:12: lv_satisfices_16_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getTimeoutNodeAccess().getSatisficesQualityParserRuleCall_1_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_20);
                    	    	    lv_satisfices_16_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getTimeoutNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_16_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop74;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:4978:4: ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:4978:4: ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:4979:5: {...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleTimeoutNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:4979:108: ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:4980:6: ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:4983:9: ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:4983:10: {...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleTimeoutNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:4983:19: (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:4983:20: otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_17=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_17, grammarAccess.getTimeoutNodeAccess().getSatisfiesKeyword_1_5_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:4987:9: ( (lv_satisfies_18_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:4988:10: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:4988:10: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:4989:11: lv_satisfies_18_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getTimeoutNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_5_1_0());
                    	    										
                    	    pushFollow(FOLLOW_20);
                    	    lv_satisfies_18_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getTimeoutNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_18_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:5006:9: (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )*
                    	    loop75:
                    	    do {
                    	        int alt75=2;
                    	        int LA75_0 = input.LA(1);

                    	        if ( (LA75_0==Comma) ) {
                    	            alt75=1;
                    	        }


                    	        switch (alt75) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:5007:10: otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_19=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_19, grammarAccess.getTimeoutNodeAccess().getCommaKeyword_1_5_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:5011:10: ( (lv_satisfies_20_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:5012:11: (lv_satisfies_20_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:5012:11: (lv_satisfies_20_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:5013:12: lv_satisfies_20_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getTimeoutNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_5_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_20);
                    	    	    lv_satisfies_20_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getTimeoutNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_20_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop75;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 7 :
                    	    // InternalQualityBtCppParser.g:5037:4: ({...}? => ( ({...}? => (otherlv_21= Msec otherlv_22= EqualsSign ( (lv_msec_23_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:5037:4: ({...}? => ( ({...}? => (otherlv_21= Msec otherlv_22= EqualsSign ( (lv_msec_23_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:5038:5: {...}? => ( ({...}? => (otherlv_21= Msec otherlv_22= EqualsSign ( (lv_msec_23_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1(), 6) ) {
                    	        throw new FailedPredicateException(input, "ruleTimeoutNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1(), 6)");
                    	    }
                    	    // InternalQualityBtCppParser.g:5038:108: ( ({...}? => (otherlv_21= Msec otherlv_22= EqualsSign ( (lv_msec_23_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:5039:6: ({...}? => (otherlv_21= Msec otherlv_22= EqualsSign ( (lv_msec_23_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1(), 6);
                    	    					
                    	    // InternalQualityBtCppParser.g:5042:9: ({...}? => (otherlv_21= Msec otherlv_22= EqualsSign ( (lv_msec_23_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:5042:10: {...}? => (otherlv_21= Msec otherlv_22= EqualsSign ( (lv_msec_23_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleTimeoutNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:5042:19: (otherlv_21= Msec otherlv_22= EqualsSign ( (lv_msec_23_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:5042:20: otherlv_21= Msec otherlv_22= EqualsSign ( (lv_msec_23_0= ruleEString ) )
                    	    {
                    	    otherlv_21=(Token)match(input,Msec,FOLLOW_8); 

                    	    									newLeafNode(otherlv_21, grammarAccess.getTimeoutNodeAccess().getMsecKeyword_1_6_0());
                    	    								
                    	    otherlv_22=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_22, grammarAccess.getTimeoutNodeAccess().getEqualsSignKeyword_1_6_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:5050:9: ( (lv_msec_23_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:5051:10: (lv_msec_23_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:5051:10: (lv_msec_23_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:5052:11: lv_msec_23_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getTimeoutNodeAccess().getMsecEStringParserRuleCall_1_6_2_0());
                    	    										
                    	    pushFollow(FOLLOW_19);
                    	    lv_msec_23_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getTimeoutNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"msec",
                    	    												lv_msec_23_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 8 :
                    	    // InternalQualityBtCppParser.g:5075:4: ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:5075:4: ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:5076:5: {...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1(), 7) ) {
                    	        throw new FailedPredicateException(input, "ruleTimeoutNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1(), 7)");
                    	    }
                    	    // InternalQualityBtCppParser.g:5076:108: ( ({...}? => (otherlv_24= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:5077:6: ({...}? => (otherlv_24= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1(), 7);
                    	    					
                    	    // InternalQualityBtCppParser.g:5080:9: ({...}? => (otherlv_24= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:5080:10: {...}? => (otherlv_24= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleTimeoutNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:5080:19: (otherlv_24= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:5080:20: otherlv_24= RightParenthesis
                    	    {
                    	    otherlv_24=(Token)match(input,RightParenthesis,FOLLOW_19); 

                    	    									newLeafNode(otherlv_24, grammarAccess.getTimeoutNodeAccess().getRightParenthesisKeyword_1_7());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt76 >= 1 ) break loop76;
                                EarlyExitException eee =
                                    new EarlyExitException(76, input);
                                throw eee;
                        }
                        cnt76++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1()) ) {
                        throw new FailedPredicateException(input, "ruleTimeoutNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1());
                    				

                    }
                    break;

            }

            this_BEGIN_25=(Token)match(input,RULE_BEGIN,FOLLOW_9); 

            			newLeafNode(this_BEGIN_25, grammarAccess.getTimeoutNodeAccess().getBEGINTerminalRuleCall_2());
            		
            // InternalQualityBtCppParser.g:5102:3: ( (lv_child_26_0= ruleTreeNode ) )
            // InternalQualityBtCppParser.g:5103:4: (lv_child_26_0= ruleTreeNode )
            {
            // InternalQualityBtCppParser.g:5103:4: (lv_child_26_0= ruleTreeNode )
            // InternalQualityBtCppParser.g:5104:5: lv_child_26_0= ruleTreeNode
            {

            					newCompositeNode(grammarAccess.getTimeoutNodeAccess().getChildTreeNodeParserRuleCall_3_0());
            				
            pushFollow(FOLLOW_10);
            lv_child_26_0=ruleTreeNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getTimeoutNodeRule());
            					}
            					set(
            						current,
            						"child",
            						lv_child_26_0,
            						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            this_END_27=(Token)match(input,RULE_END,FOLLOW_2); 

            			newLeafNode(this_END_27, grammarAccess.getTimeoutNodeAccess().getENDTerminalRuleCall_4());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTimeoutNode"


    // $ANTLR start "entryRuleKeepRunningUntilFailureNode"
    // InternalQualityBtCppParser.g:5129:1: entryRuleKeepRunningUntilFailureNode returns [EObject current=null] : iv_ruleKeepRunningUntilFailureNode= ruleKeepRunningUntilFailureNode EOF ;
    public final EObject entryRuleKeepRunningUntilFailureNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleKeepRunningUntilFailureNode = null;


        try {
            // InternalQualityBtCppParser.g:5129:68: (iv_ruleKeepRunningUntilFailureNode= ruleKeepRunningUntilFailureNode EOF )
            // InternalQualityBtCppParser.g:5130:2: iv_ruleKeepRunningUntilFailureNode= ruleKeepRunningUntilFailureNode EOF
            {
             newCompositeNode(grammarAccess.getKeepRunningUntilFailureNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleKeepRunningUntilFailureNode=ruleKeepRunningUntilFailureNode();

            state._fsp--;

             current =iv_ruleKeepRunningUntilFailureNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleKeepRunningUntilFailureNode"


    // $ANTLR start "ruleKeepRunningUntilFailureNode"
    // InternalQualityBtCppParser.g:5136:1: ruleKeepRunningUntilFailureNode returns [EObject current=null] : (otherlv_0= KeepRunningUntilFailure ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END ) ;
    public final EObject ruleKeepRunningUntilFailureNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token this_BEGIN_22=null;
        Token this_END_24=null;
        AntlrDatatypeRuleToken lv_ID_5_0 = null;

        AntlrDatatypeRuleToken lv_name_8_0 = null;

        EObject lv_parameters_10_0 = null;

        EObject lv_parameters_12_0 = null;

        EObject lv_satisfices_14_0 = null;

        EObject lv_satisfices_16_0 = null;

        EObject lv_satisfies_18_0 = null;

        EObject lv_satisfies_20_0 = null;

        EObject lv_child_23_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:5142:2: ( (otherlv_0= KeepRunningUntilFailure ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END ) )
            // InternalQualityBtCppParser.g:5143:2: (otherlv_0= KeepRunningUntilFailure ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END )
            {
            // InternalQualityBtCppParser.g:5143:2: (otherlv_0= KeepRunningUntilFailure ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END )
            // InternalQualityBtCppParser.g:5144:3: otherlv_0= KeepRunningUntilFailure ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END
            {
            otherlv_0=(Token)match(input,KeepRunningUntilFailure,FOLLOW_15); 

            			newLeafNode(otherlv_0, grammarAccess.getKeepRunningUntilFailureNodeAccess().getKeepRunningUntilFailureKeyword_0());
            		
            // InternalQualityBtCppParser.g:5148:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt82=2;
            int LA82_0 = input.LA(1);

            if ( ((LA82_0>=Parameters && LA82_0<=Satisfies)||LA82_0==Name||LA82_0==ID||(LA82_0>=LeftParenthesis && LA82_0<=RightParenthesis)) ) {
                alt82=1;
            }
            switch (alt82) {
                case 1 :
                    // InternalQualityBtCppParser.g:5149:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:5149:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:5150:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1());
                    				
                    // InternalQualityBtCppParser.g:5153:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:5154:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:5154:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+
                    int cnt81=0;
                    loop81:
                    do {
                        int alt81=8;
                        int LA81_0 = input.LA(1);

                        if ( LA81_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1(), 0) ) {
                            alt81=1;
                        }
                        else if ( LA81_0 == ID && getUnorderedGroupHelper().canSelect(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1(), 1) ) {
                            alt81=2;
                        }
                        else if ( LA81_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1(), 2) ) {
                            alt81=3;
                        }
                        else if ( LA81_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1(), 3) ) {
                            alt81=4;
                        }
                        else if ( LA81_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1(), 4) ) {
                            alt81=5;
                        }
                        else if ( LA81_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1(), 5) ) {
                            alt81=6;
                        }
                        else if ( LA81_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1(), 6) ) {
                            alt81=7;
                        }


                        switch (alt81) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:5155:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:5155:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:5156:5: {...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleKeepRunningUntilFailureNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:5156:124: ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:5157:6: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:5160:9: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:5160:10: {...}? => (otherlv_2= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleKeepRunningUntilFailureNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:5160:19: (otherlv_2= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:5160:20: otherlv_2= LeftParenthesis
                    	    {
                    	    otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_2, grammarAccess.getKeepRunningUntilFailureNodeAccess().getLeftParenthesisKeyword_1_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:5170:4: ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:5170:4: ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:5171:5: {...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleKeepRunningUntilFailureNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:5171:124: ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:5172:6: ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:5175:9: ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:5175:10: {...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleKeepRunningUntilFailureNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:5175:19: (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:5175:20: otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) )
                    	    {
                    	    otherlv_3=(Token)match(input,ID,FOLLOW_8); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getKeepRunningUntilFailureNodeAccess().getIDKeyword_1_1_0());
                    	    								
                    	    otherlv_4=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getKeepRunningUntilFailureNodeAccess().getEqualsSignKeyword_1_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:5183:9: ( (lv_ID_5_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:5184:10: (lv_ID_5_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:5184:10: (lv_ID_5_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:5185:11: lv_ID_5_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getKeepRunningUntilFailureNodeAccess().getIDEStringParserRuleCall_1_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_15);
                    	    lv_ID_5_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getKeepRunningUntilFailureNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"ID",
                    	    												lv_ID_5_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:5208:4: ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:5208:4: ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:5209:5: {...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleKeepRunningUntilFailureNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:5209:124: ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:5210:6: ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:5213:9: ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:5213:10: {...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleKeepRunningUntilFailureNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:5213:19: (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:5213:20: otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) )
                    	    {
                    	    otherlv_6=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_6, grammarAccess.getKeepRunningUntilFailureNodeAccess().getNameKeyword_1_2_0());
                    	    								
                    	    otherlv_7=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_7, grammarAccess.getKeepRunningUntilFailureNodeAccess().getEqualsSignKeyword_1_2_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:5221:9: ( (lv_name_8_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:5222:10: (lv_name_8_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:5222:10: (lv_name_8_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:5223:11: lv_name_8_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getKeepRunningUntilFailureNodeAccess().getNameEStringParserRuleCall_1_2_2_0());
                    	    										
                    	    pushFollow(FOLLOW_15);
                    	    lv_name_8_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getKeepRunningUntilFailureNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_8_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:5246:4: ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:5246:4: ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:5247:5: {...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleKeepRunningUntilFailureNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:5247:124: ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:5248:6: ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:5251:9: ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:5251:10: {...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleKeepRunningUntilFailureNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:5251:19: (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:5251:20: otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_9=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_9, grammarAccess.getKeepRunningUntilFailureNodeAccess().getParametersKeyword_1_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:5255:9: ( (lv_parameters_10_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:5256:10: (lv_parameters_10_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:5256:10: (lv_parameters_10_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:5257:11: lv_parameters_10_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getKeepRunningUntilFailureNodeAccess().getParametersParameterParserRuleCall_1_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_parameters_10_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getKeepRunningUntilFailureNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_10_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:5274:9: (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )*
                    	    loop78:
                    	    do {
                    	        int alt78=2;
                    	        int LA78_0 = input.LA(1);

                    	        if ( (LA78_0==Comma) ) {
                    	            alt78=1;
                    	        }


                    	        switch (alt78) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:5275:10: otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_11=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_11, grammarAccess.getKeepRunningUntilFailureNodeAccess().getCommaKeyword_1_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:5279:10: ( (lv_parameters_12_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:5280:11: (lv_parameters_12_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:5280:11: (lv_parameters_12_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:5281:12: lv_parameters_12_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getKeepRunningUntilFailureNodeAccess().getParametersParameterParserRuleCall_1_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_parameters_12_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getKeepRunningUntilFailureNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_12_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop78;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:5305:4: ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:5305:4: ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:5306:5: {...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleKeepRunningUntilFailureNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:5306:124: ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:5307:6: ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:5310:9: ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:5310:10: {...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleKeepRunningUntilFailureNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:5310:19: (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:5310:20: otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_13=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_13, grammarAccess.getKeepRunningUntilFailureNodeAccess().getSatisficesKeyword_1_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:5314:9: ( (lv_satisfices_14_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:5315:10: (lv_satisfices_14_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:5315:10: (lv_satisfices_14_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:5316:11: lv_satisfices_14_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getKeepRunningUntilFailureNodeAccess().getSatisficesQualityParserRuleCall_1_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfices_14_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getKeepRunningUntilFailureNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_14_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:5333:9: (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )*
                    	    loop79:
                    	    do {
                    	        int alt79=2;
                    	        int LA79_0 = input.LA(1);

                    	        if ( (LA79_0==Comma) ) {
                    	            alt79=1;
                    	        }


                    	        switch (alt79) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:5334:10: otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_15=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_15, grammarAccess.getKeepRunningUntilFailureNodeAccess().getCommaKeyword_1_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:5338:10: ( (lv_satisfices_16_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:5339:11: (lv_satisfices_16_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:5339:11: (lv_satisfices_16_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:5340:12: lv_satisfices_16_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getKeepRunningUntilFailureNodeAccess().getSatisficesQualityParserRuleCall_1_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfices_16_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getKeepRunningUntilFailureNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_16_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop79;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:5364:4: ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:5364:4: ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:5365:5: {...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleKeepRunningUntilFailureNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:5365:124: ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:5366:6: ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:5369:9: ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:5369:10: {...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleKeepRunningUntilFailureNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:5369:19: (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:5369:20: otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_17=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_17, grammarAccess.getKeepRunningUntilFailureNodeAccess().getSatisfiesKeyword_1_5_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:5373:9: ( (lv_satisfies_18_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:5374:10: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:5374:10: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:5375:11: lv_satisfies_18_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getKeepRunningUntilFailureNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_5_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfies_18_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getKeepRunningUntilFailureNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_18_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:5392:9: (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )*
                    	    loop80:
                    	    do {
                    	        int alt80=2;
                    	        int LA80_0 = input.LA(1);

                    	        if ( (LA80_0==Comma) ) {
                    	            alt80=1;
                    	        }


                    	        switch (alt80) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:5393:10: otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_19=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_19, grammarAccess.getKeepRunningUntilFailureNodeAccess().getCommaKeyword_1_5_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:5397:10: ( (lv_satisfies_20_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:5398:11: (lv_satisfies_20_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:5398:11: (lv_satisfies_20_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:5399:12: lv_satisfies_20_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getKeepRunningUntilFailureNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_5_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfies_20_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getKeepRunningUntilFailureNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_20_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop80;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 7 :
                    	    // InternalQualityBtCppParser.g:5423:4: ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:5423:4: ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:5424:5: {...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1(), 6) ) {
                    	        throw new FailedPredicateException(input, "ruleKeepRunningUntilFailureNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1(), 6)");
                    	    }
                    	    // InternalQualityBtCppParser.g:5424:124: ( ({...}? => (otherlv_21= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:5425:6: ({...}? => (otherlv_21= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1(), 6);
                    	    					
                    	    // InternalQualityBtCppParser.g:5428:9: ({...}? => (otherlv_21= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:5428:10: {...}? => (otherlv_21= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleKeepRunningUntilFailureNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:5428:19: (otherlv_21= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:5428:20: otherlv_21= RightParenthesis
                    	    {
                    	    otherlv_21=(Token)match(input,RightParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_21, grammarAccess.getKeepRunningUntilFailureNodeAccess().getRightParenthesisKeyword_1_6());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt81 >= 1 ) break loop81;
                                EarlyExitException eee =
                                    new EarlyExitException(81, input);
                                throw eee;
                        }
                        cnt81++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1()) ) {
                        throw new FailedPredicateException(input, "ruleKeepRunningUntilFailureNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1());
                    				

                    }
                    break;

            }

            this_BEGIN_22=(Token)match(input,RULE_BEGIN,FOLLOW_9); 

            			newLeafNode(this_BEGIN_22, grammarAccess.getKeepRunningUntilFailureNodeAccess().getBEGINTerminalRuleCall_2());
            		
            // InternalQualityBtCppParser.g:5450:3: ( (lv_child_23_0= ruleTreeNode ) )
            // InternalQualityBtCppParser.g:5451:4: (lv_child_23_0= ruleTreeNode )
            {
            // InternalQualityBtCppParser.g:5451:4: (lv_child_23_0= ruleTreeNode )
            // InternalQualityBtCppParser.g:5452:5: lv_child_23_0= ruleTreeNode
            {

            					newCompositeNode(grammarAccess.getKeepRunningUntilFailureNodeAccess().getChildTreeNodeParserRuleCall_3_0());
            				
            pushFollow(FOLLOW_10);
            lv_child_23_0=ruleTreeNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getKeepRunningUntilFailureNodeRule());
            					}
            					set(
            						current,
            						"child",
            						lv_child_23_0,
            						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            this_END_24=(Token)match(input,RULE_END,FOLLOW_2); 

            			newLeafNode(this_END_24, grammarAccess.getKeepRunningUntilFailureNodeAccess().getENDTerminalRuleCall_4());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleKeepRunningUntilFailureNode"


    // $ANTLR start "entryRuleInverterNode"
    // InternalQualityBtCppParser.g:5477:1: entryRuleInverterNode returns [EObject current=null] : iv_ruleInverterNode= ruleInverterNode EOF ;
    public final EObject entryRuleInverterNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleInverterNode = null;


        try {
            // InternalQualityBtCppParser.g:5477:53: (iv_ruleInverterNode= ruleInverterNode EOF )
            // InternalQualityBtCppParser.g:5478:2: iv_ruleInverterNode= ruleInverterNode EOF
            {
             newCompositeNode(grammarAccess.getInverterNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleInverterNode=ruleInverterNode();

            state._fsp--;

             current =iv_ruleInverterNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInverterNode"


    // $ANTLR start "ruleInverterNode"
    // InternalQualityBtCppParser.g:5484:1: ruleInverterNode returns [EObject current=null] : (otherlv_0= Inverter ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END ) ;
    public final EObject ruleInverterNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token this_BEGIN_22=null;
        Token this_END_24=null;
        AntlrDatatypeRuleToken lv_ID_5_0 = null;

        AntlrDatatypeRuleToken lv_name_8_0 = null;

        EObject lv_parameters_10_0 = null;

        EObject lv_parameters_12_0 = null;

        EObject lv_satisfices_14_0 = null;

        EObject lv_satisfices_16_0 = null;

        EObject lv_satisfies_18_0 = null;

        EObject lv_satisfies_20_0 = null;

        EObject lv_child_23_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:5490:2: ( (otherlv_0= Inverter ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END ) )
            // InternalQualityBtCppParser.g:5491:2: (otherlv_0= Inverter ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END )
            {
            // InternalQualityBtCppParser.g:5491:2: (otherlv_0= Inverter ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END )
            // InternalQualityBtCppParser.g:5492:3: otherlv_0= Inverter ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END
            {
            otherlv_0=(Token)match(input,Inverter,FOLLOW_15); 

            			newLeafNode(otherlv_0, grammarAccess.getInverterNodeAccess().getInverterKeyword_0());
            		
            // InternalQualityBtCppParser.g:5496:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt87=2;
            int LA87_0 = input.LA(1);

            if ( ((LA87_0>=Parameters && LA87_0<=Satisfies)||LA87_0==Name||LA87_0==ID||(LA87_0>=LeftParenthesis && LA87_0<=RightParenthesis)) ) {
                alt87=1;
            }
            switch (alt87) {
                case 1 :
                    // InternalQualityBtCppParser.g:5497:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:5497:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:5498:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1());
                    				
                    // InternalQualityBtCppParser.g:5501:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:5502:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:5502:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+
                    int cnt86=0;
                    loop86:
                    do {
                        int alt86=8;
                        int LA86_0 = input.LA(1);

                        if ( LA86_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1(), 0) ) {
                            alt86=1;
                        }
                        else if ( LA86_0 == ID && getUnorderedGroupHelper().canSelect(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1(), 1) ) {
                            alt86=2;
                        }
                        else if ( LA86_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1(), 2) ) {
                            alt86=3;
                        }
                        else if ( LA86_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1(), 3) ) {
                            alt86=4;
                        }
                        else if ( LA86_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1(), 4) ) {
                            alt86=5;
                        }
                        else if ( LA86_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1(), 5) ) {
                            alt86=6;
                        }
                        else if ( LA86_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1(), 6) ) {
                            alt86=7;
                        }


                        switch (alt86) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:5503:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:5503:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:5504:5: {...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleInverterNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:5504:109: ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:5505:6: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:5508:9: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:5508:10: {...}? => (otherlv_2= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleInverterNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:5508:19: (otherlv_2= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:5508:20: otherlv_2= LeftParenthesis
                    	    {
                    	    otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_2, grammarAccess.getInverterNodeAccess().getLeftParenthesisKeyword_1_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:5518:4: ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:5518:4: ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:5519:5: {...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleInverterNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:5519:109: ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:5520:6: ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:5523:9: ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:5523:10: {...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleInverterNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:5523:19: (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:5523:20: otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) )
                    	    {
                    	    otherlv_3=(Token)match(input,ID,FOLLOW_8); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getInverterNodeAccess().getIDKeyword_1_1_0());
                    	    								
                    	    otherlv_4=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getInverterNodeAccess().getEqualsSignKeyword_1_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:5531:9: ( (lv_ID_5_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:5532:10: (lv_ID_5_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:5532:10: (lv_ID_5_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:5533:11: lv_ID_5_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getInverterNodeAccess().getIDEStringParserRuleCall_1_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_15);
                    	    lv_ID_5_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getInverterNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"ID",
                    	    												lv_ID_5_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:5556:4: ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:5556:4: ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:5557:5: {...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleInverterNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:5557:109: ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:5558:6: ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:5561:9: ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:5561:10: {...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleInverterNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:5561:19: (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:5561:20: otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) )
                    	    {
                    	    otherlv_6=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_6, grammarAccess.getInverterNodeAccess().getNameKeyword_1_2_0());
                    	    								
                    	    otherlv_7=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_7, grammarAccess.getInverterNodeAccess().getEqualsSignKeyword_1_2_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:5569:9: ( (lv_name_8_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:5570:10: (lv_name_8_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:5570:10: (lv_name_8_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:5571:11: lv_name_8_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getInverterNodeAccess().getNameEStringParserRuleCall_1_2_2_0());
                    	    										
                    	    pushFollow(FOLLOW_15);
                    	    lv_name_8_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getInverterNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_8_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:5594:4: ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:5594:4: ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:5595:5: {...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleInverterNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:5595:109: ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:5596:6: ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:5599:9: ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:5599:10: {...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleInverterNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:5599:19: (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:5599:20: otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_9=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_9, grammarAccess.getInverterNodeAccess().getParametersKeyword_1_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:5603:9: ( (lv_parameters_10_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:5604:10: (lv_parameters_10_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:5604:10: (lv_parameters_10_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:5605:11: lv_parameters_10_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getInverterNodeAccess().getParametersParameterParserRuleCall_1_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_parameters_10_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getInverterNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_10_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:5622:9: (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )*
                    	    loop83:
                    	    do {
                    	        int alt83=2;
                    	        int LA83_0 = input.LA(1);

                    	        if ( (LA83_0==Comma) ) {
                    	            alt83=1;
                    	        }


                    	        switch (alt83) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:5623:10: otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_11=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_11, grammarAccess.getInverterNodeAccess().getCommaKeyword_1_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:5627:10: ( (lv_parameters_12_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:5628:11: (lv_parameters_12_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:5628:11: (lv_parameters_12_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:5629:12: lv_parameters_12_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getInverterNodeAccess().getParametersParameterParserRuleCall_1_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_parameters_12_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getInverterNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_12_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop83;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:5653:4: ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:5653:4: ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:5654:5: {...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleInverterNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:5654:109: ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:5655:6: ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:5658:9: ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:5658:10: {...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleInverterNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:5658:19: (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:5658:20: otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_13=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_13, grammarAccess.getInverterNodeAccess().getSatisficesKeyword_1_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:5662:9: ( (lv_satisfices_14_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:5663:10: (lv_satisfices_14_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:5663:10: (lv_satisfices_14_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:5664:11: lv_satisfices_14_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getInverterNodeAccess().getSatisficesQualityParserRuleCall_1_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfices_14_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getInverterNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_14_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:5681:9: (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )*
                    	    loop84:
                    	    do {
                    	        int alt84=2;
                    	        int LA84_0 = input.LA(1);

                    	        if ( (LA84_0==Comma) ) {
                    	            alt84=1;
                    	        }


                    	        switch (alt84) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:5682:10: otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_15=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_15, grammarAccess.getInverterNodeAccess().getCommaKeyword_1_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:5686:10: ( (lv_satisfices_16_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:5687:11: (lv_satisfices_16_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:5687:11: (lv_satisfices_16_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:5688:12: lv_satisfices_16_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getInverterNodeAccess().getSatisficesQualityParserRuleCall_1_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfices_16_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getInverterNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_16_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop84;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:5712:4: ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:5712:4: ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:5713:5: {...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleInverterNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:5713:109: ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:5714:6: ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:5717:9: ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:5717:10: {...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleInverterNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:5717:19: (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:5717:20: otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_17=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_17, grammarAccess.getInverterNodeAccess().getSatisfiesKeyword_1_5_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:5721:9: ( (lv_satisfies_18_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:5722:10: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:5722:10: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:5723:11: lv_satisfies_18_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getInverterNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_5_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfies_18_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getInverterNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_18_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:5740:9: (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )*
                    	    loop85:
                    	    do {
                    	        int alt85=2;
                    	        int LA85_0 = input.LA(1);

                    	        if ( (LA85_0==Comma) ) {
                    	            alt85=1;
                    	        }


                    	        switch (alt85) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:5741:10: otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_19=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_19, grammarAccess.getInverterNodeAccess().getCommaKeyword_1_5_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:5745:10: ( (lv_satisfies_20_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:5746:11: (lv_satisfies_20_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:5746:11: (lv_satisfies_20_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:5747:12: lv_satisfies_20_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getInverterNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_5_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfies_20_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getInverterNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_20_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop85;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 7 :
                    	    // InternalQualityBtCppParser.g:5771:4: ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:5771:4: ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:5772:5: {...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1(), 6) ) {
                    	        throw new FailedPredicateException(input, "ruleInverterNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1(), 6)");
                    	    }
                    	    // InternalQualityBtCppParser.g:5772:109: ( ({...}? => (otherlv_21= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:5773:6: ({...}? => (otherlv_21= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1(), 6);
                    	    					
                    	    // InternalQualityBtCppParser.g:5776:9: ({...}? => (otherlv_21= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:5776:10: {...}? => (otherlv_21= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleInverterNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:5776:19: (otherlv_21= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:5776:20: otherlv_21= RightParenthesis
                    	    {
                    	    otherlv_21=(Token)match(input,RightParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_21, grammarAccess.getInverterNodeAccess().getRightParenthesisKeyword_1_6());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt86 >= 1 ) break loop86;
                                EarlyExitException eee =
                                    new EarlyExitException(86, input);
                                throw eee;
                        }
                        cnt86++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1()) ) {
                        throw new FailedPredicateException(input, "ruleInverterNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1());
                    				

                    }
                    break;

            }

            this_BEGIN_22=(Token)match(input,RULE_BEGIN,FOLLOW_9); 

            			newLeafNode(this_BEGIN_22, grammarAccess.getInverterNodeAccess().getBEGINTerminalRuleCall_2());
            		
            // InternalQualityBtCppParser.g:5798:3: ( (lv_child_23_0= ruleTreeNode ) )
            // InternalQualityBtCppParser.g:5799:4: (lv_child_23_0= ruleTreeNode )
            {
            // InternalQualityBtCppParser.g:5799:4: (lv_child_23_0= ruleTreeNode )
            // InternalQualityBtCppParser.g:5800:5: lv_child_23_0= ruleTreeNode
            {

            					newCompositeNode(grammarAccess.getInverterNodeAccess().getChildTreeNodeParserRuleCall_3_0());
            				
            pushFollow(FOLLOW_10);
            lv_child_23_0=ruleTreeNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getInverterNodeRule());
            					}
            					set(
            						current,
            						"child",
            						lv_child_23_0,
            						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            this_END_24=(Token)match(input,RULE_END,FOLLOW_2); 

            			newLeafNode(this_END_24, grammarAccess.getInverterNodeAccess().getENDTerminalRuleCall_4());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInverterNode"


    // $ANTLR start "entryRuleForceSuccessNode"
    // InternalQualityBtCppParser.g:5825:1: entryRuleForceSuccessNode returns [EObject current=null] : iv_ruleForceSuccessNode= ruleForceSuccessNode EOF ;
    public final EObject entryRuleForceSuccessNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleForceSuccessNode = null;


        try {
            // InternalQualityBtCppParser.g:5825:57: (iv_ruleForceSuccessNode= ruleForceSuccessNode EOF )
            // InternalQualityBtCppParser.g:5826:2: iv_ruleForceSuccessNode= ruleForceSuccessNode EOF
            {
             newCompositeNode(grammarAccess.getForceSuccessNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleForceSuccessNode=ruleForceSuccessNode();

            state._fsp--;

             current =iv_ruleForceSuccessNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleForceSuccessNode"


    // $ANTLR start "ruleForceSuccessNode"
    // InternalQualityBtCppParser.g:5832:1: ruleForceSuccessNode returns [EObject current=null] : (otherlv_0= ForceSuccess ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END ) ;
    public final EObject ruleForceSuccessNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token this_BEGIN_22=null;
        Token this_END_24=null;
        AntlrDatatypeRuleToken lv_ID_5_0 = null;

        AntlrDatatypeRuleToken lv_name_8_0 = null;

        EObject lv_parameters_10_0 = null;

        EObject lv_parameters_12_0 = null;

        EObject lv_satisfices_14_0 = null;

        EObject lv_satisfices_16_0 = null;

        EObject lv_satisfies_18_0 = null;

        EObject lv_satisfies_20_0 = null;

        EObject lv_child_23_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:5838:2: ( (otherlv_0= ForceSuccess ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END ) )
            // InternalQualityBtCppParser.g:5839:2: (otherlv_0= ForceSuccess ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END )
            {
            // InternalQualityBtCppParser.g:5839:2: (otherlv_0= ForceSuccess ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END )
            // InternalQualityBtCppParser.g:5840:3: otherlv_0= ForceSuccess ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END
            {
            otherlv_0=(Token)match(input,ForceSuccess,FOLLOW_15); 

            			newLeafNode(otherlv_0, grammarAccess.getForceSuccessNodeAccess().getForceSuccessKeyword_0());
            		
            // InternalQualityBtCppParser.g:5844:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt92=2;
            int LA92_0 = input.LA(1);

            if ( ((LA92_0>=Parameters && LA92_0<=Satisfies)||LA92_0==Name||LA92_0==ID||(LA92_0>=LeftParenthesis && LA92_0<=RightParenthesis)) ) {
                alt92=1;
            }
            switch (alt92) {
                case 1 :
                    // InternalQualityBtCppParser.g:5845:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:5845:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:5846:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1());
                    				
                    // InternalQualityBtCppParser.g:5849:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:5850:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:5850:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+
                    int cnt91=0;
                    loop91:
                    do {
                        int alt91=8;
                        int LA91_0 = input.LA(1);

                        if ( LA91_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1(), 0) ) {
                            alt91=1;
                        }
                        else if ( LA91_0 == ID && getUnorderedGroupHelper().canSelect(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1(), 1) ) {
                            alt91=2;
                        }
                        else if ( LA91_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1(), 2) ) {
                            alt91=3;
                        }
                        else if ( LA91_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1(), 3) ) {
                            alt91=4;
                        }
                        else if ( LA91_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1(), 4) ) {
                            alt91=5;
                        }
                        else if ( LA91_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1(), 5) ) {
                            alt91=6;
                        }
                        else if ( LA91_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1(), 6) ) {
                            alt91=7;
                        }


                        switch (alt91) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:5851:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:5851:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:5852:5: {...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleForceSuccessNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:5852:113: ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:5853:6: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:5856:9: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:5856:10: {...}? => (otherlv_2= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleForceSuccessNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:5856:19: (otherlv_2= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:5856:20: otherlv_2= LeftParenthesis
                    	    {
                    	    otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_2, grammarAccess.getForceSuccessNodeAccess().getLeftParenthesisKeyword_1_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:5866:4: ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:5866:4: ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:5867:5: {...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleForceSuccessNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:5867:113: ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:5868:6: ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:5871:9: ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:5871:10: {...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleForceSuccessNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:5871:19: (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:5871:20: otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) )
                    	    {
                    	    otherlv_3=(Token)match(input,ID,FOLLOW_8); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getForceSuccessNodeAccess().getIDKeyword_1_1_0());
                    	    								
                    	    otherlv_4=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getForceSuccessNodeAccess().getEqualsSignKeyword_1_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:5879:9: ( (lv_ID_5_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:5880:10: (lv_ID_5_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:5880:10: (lv_ID_5_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:5881:11: lv_ID_5_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getForceSuccessNodeAccess().getIDEStringParserRuleCall_1_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_15);
                    	    lv_ID_5_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getForceSuccessNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"ID",
                    	    												lv_ID_5_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:5904:4: ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:5904:4: ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:5905:5: {...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleForceSuccessNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:5905:113: ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:5906:6: ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:5909:9: ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:5909:10: {...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleForceSuccessNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:5909:19: (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:5909:20: otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) )
                    	    {
                    	    otherlv_6=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_6, grammarAccess.getForceSuccessNodeAccess().getNameKeyword_1_2_0());
                    	    								
                    	    otherlv_7=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_7, grammarAccess.getForceSuccessNodeAccess().getEqualsSignKeyword_1_2_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:5917:9: ( (lv_name_8_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:5918:10: (lv_name_8_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:5918:10: (lv_name_8_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:5919:11: lv_name_8_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getForceSuccessNodeAccess().getNameEStringParserRuleCall_1_2_2_0());
                    	    										
                    	    pushFollow(FOLLOW_15);
                    	    lv_name_8_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getForceSuccessNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_8_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:5942:4: ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:5942:4: ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:5943:5: {...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleForceSuccessNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:5943:113: ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:5944:6: ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:5947:9: ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:5947:10: {...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleForceSuccessNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:5947:19: (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:5947:20: otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_9=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_9, grammarAccess.getForceSuccessNodeAccess().getParametersKeyword_1_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:5951:9: ( (lv_parameters_10_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:5952:10: (lv_parameters_10_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:5952:10: (lv_parameters_10_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:5953:11: lv_parameters_10_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getForceSuccessNodeAccess().getParametersParameterParserRuleCall_1_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_parameters_10_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getForceSuccessNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_10_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:5970:9: (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )*
                    	    loop88:
                    	    do {
                    	        int alt88=2;
                    	        int LA88_0 = input.LA(1);

                    	        if ( (LA88_0==Comma) ) {
                    	            alt88=1;
                    	        }


                    	        switch (alt88) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:5971:10: otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_11=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_11, grammarAccess.getForceSuccessNodeAccess().getCommaKeyword_1_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:5975:10: ( (lv_parameters_12_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:5976:11: (lv_parameters_12_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:5976:11: (lv_parameters_12_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:5977:12: lv_parameters_12_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getForceSuccessNodeAccess().getParametersParameterParserRuleCall_1_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_parameters_12_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getForceSuccessNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_12_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop88;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:6001:4: ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:6001:4: ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:6002:5: {...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleForceSuccessNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:6002:113: ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:6003:6: ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:6006:9: ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:6006:10: {...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleForceSuccessNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:6006:19: (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:6006:20: otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_13=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_13, grammarAccess.getForceSuccessNodeAccess().getSatisficesKeyword_1_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:6010:9: ( (lv_satisfices_14_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:6011:10: (lv_satisfices_14_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:6011:10: (lv_satisfices_14_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:6012:11: lv_satisfices_14_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getForceSuccessNodeAccess().getSatisficesQualityParserRuleCall_1_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfices_14_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getForceSuccessNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_14_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:6029:9: (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )*
                    	    loop89:
                    	    do {
                    	        int alt89=2;
                    	        int LA89_0 = input.LA(1);

                    	        if ( (LA89_0==Comma) ) {
                    	            alt89=1;
                    	        }


                    	        switch (alt89) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:6030:10: otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_15=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_15, grammarAccess.getForceSuccessNodeAccess().getCommaKeyword_1_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:6034:10: ( (lv_satisfices_16_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:6035:11: (lv_satisfices_16_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:6035:11: (lv_satisfices_16_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:6036:12: lv_satisfices_16_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getForceSuccessNodeAccess().getSatisficesQualityParserRuleCall_1_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfices_16_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getForceSuccessNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_16_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop89;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:6060:4: ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:6060:4: ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:6061:5: {...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleForceSuccessNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:6061:113: ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:6062:6: ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:6065:9: ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:6065:10: {...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleForceSuccessNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:6065:19: (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:6065:20: otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_17=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_17, grammarAccess.getForceSuccessNodeAccess().getSatisfiesKeyword_1_5_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:6069:9: ( (lv_satisfies_18_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:6070:10: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:6070:10: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:6071:11: lv_satisfies_18_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getForceSuccessNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_5_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfies_18_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getForceSuccessNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_18_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:6088:9: (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )*
                    	    loop90:
                    	    do {
                    	        int alt90=2;
                    	        int LA90_0 = input.LA(1);

                    	        if ( (LA90_0==Comma) ) {
                    	            alt90=1;
                    	        }


                    	        switch (alt90) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:6089:10: otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_19=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_19, grammarAccess.getForceSuccessNodeAccess().getCommaKeyword_1_5_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:6093:10: ( (lv_satisfies_20_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:6094:11: (lv_satisfies_20_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:6094:11: (lv_satisfies_20_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:6095:12: lv_satisfies_20_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getForceSuccessNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_5_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfies_20_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getForceSuccessNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_20_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop90;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 7 :
                    	    // InternalQualityBtCppParser.g:6119:4: ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:6119:4: ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:6120:5: {...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1(), 6) ) {
                    	        throw new FailedPredicateException(input, "ruleForceSuccessNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1(), 6)");
                    	    }
                    	    // InternalQualityBtCppParser.g:6120:113: ( ({...}? => (otherlv_21= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:6121:6: ({...}? => (otherlv_21= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1(), 6);
                    	    					
                    	    // InternalQualityBtCppParser.g:6124:9: ({...}? => (otherlv_21= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:6124:10: {...}? => (otherlv_21= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleForceSuccessNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:6124:19: (otherlv_21= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:6124:20: otherlv_21= RightParenthesis
                    	    {
                    	    otherlv_21=(Token)match(input,RightParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_21, grammarAccess.getForceSuccessNodeAccess().getRightParenthesisKeyword_1_6());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt91 >= 1 ) break loop91;
                                EarlyExitException eee =
                                    new EarlyExitException(91, input);
                                throw eee;
                        }
                        cnt91++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1()) ) {
                        throw new FailedPredicateException(input, "ruleForceSuccessNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1());
                    				

                    }
                    break;

            }

            this_BEGIN_22=(Token)match(input,RULE_BEGIN,FOLLOW_9); 

            			newLeafNode(this_BEGIN_22, grammarAccess.getForceSuccessNodeAccess().getBEGINTerminalRuleCall_2());
            		
            // InternalQualityBtCppParser.g:6146:3: ( (lv_child_23_0= ruleTreeNode ) )
            // InternalQualityBtCppParser.g:6147:4: (lv_child_23_0= ruleTreeNode )
            {
            // InternalQualityBtCppParser.g:6147:4: (lv_child_23_0= ruleTreeNode )
            // InternalQualityBtCppParser.g:6148:5: lv_child_23_0= ruleTreeNode
            {

            					newCompositeNode(grammarAccess.getForceSuccessNodeAccess().getChildTreeNodeParserRuleCall_3_0());
            				
            pushFollow(FOLLOW_10);
            lv_child_23_0=ruleTreeNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getForceSuccessNodeRule());
            					}
            					set(
            						current,
            						"child",
            						lv_child_23_0,
            						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            this_END_24=(Token)match(input,RULE_END,FOLLOW_2); 

            			newLeafNode(this_END_24, grammarAccess.getForceSuccessNodeAccess().getENDTerminalRuleCall_4());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleForceSuccessNode"


    // $ANTLR start "entryRuleForceFailureNode"
    // InternalQualityBtCppParser.g:6173:1: entryRuleForceFailureNode returns [EObject current=null] : iv_ruleForceFailureNode= ruleForceFailureNode EOF ;
    public final EObject entryRuleForceFailureNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleForceFailureNode = null;


        try {
            // InternalQualityBtCppParser.g:6173:57: (iv_ruleForceFailureNode= ruleForceFailureNode EOF )
            // InternalQualityBtCppParser.g:6174:2: iv_ruleForceFailureNode= ruleForceFailureNode EOF
            {
             newCompositeNode(grammarAccess.getForceFailureNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleForceFailureNode=ruleForceFailureNode();

            state._fsp--;

             current =iv_ruleForceFailureNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleForceFailureNode"


    // $ANTLR start "ruleForceFailureNode"
    // InternalQualityBtCppParser.g:6180:1: ruleForceFailureNode returns [EObject current=null] : (otherlv_0= ForceFailure ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END ) ;
    public final EObject ruleForceFailureNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token this_BEGIN_22=null;
        Token this_END_24=null;
        AntlrDatatypeRuleToken lv_ID_5_0 = null;

        AntlrDatatypeRuleToken lv_name_8_0 = null;

        EObject lv_parameters_10_0 = null;

        EObject lv_parameters_12_0 = null;

        EObject lv_satisfices_14_0 = null;

        EObject lv_satisfices_16_0 = null;

        EObject lv_satisfies_18_0 = null;

        EObject lv_satisfies_20_0 = null;

        EObject lv_child_23_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:6186:2: ( (otherlv_0= ForceFailure ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END ) )
            // InternalQualityBtCppParser.g:6187:2: (otherlv_0= ForceFailure ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END )
            {
            // InternalQualityBtCppParser.g:6187:2: (otherlv_0= ForceFailure ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END )
            // InternalQualityBtCppParser.g:6188:3: otherlv_0= ForceFailure ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END
            {
            otherlv_0=(Token)match(input,ForceFailure,FOLLOW_15); 

            			newLeafNode(otherlv_0, grammarAccess.getForceFailureNodeAccess().getForceFailureKeyword_0());
            		
            // InternalQualityBtCppParser.g:6192:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt97=2;
            int LA97_0 = input.LA(1);

            if ( ((LA97_0>=Parameters && LA97_0<=Satisfies)||LA97_0==Name||LA97_0==ID||(LA97_0>=LeftParenthesis && LA97_0<=RightParenthesis)) ) {
                alt97=1;
            }
            switch (alt97) {
                case 1 :
                    // InternalQualityBtCppParser.g:6193:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:6193:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:6194:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1());
                    				
                    // InternalQualityBtCppParser.g:6197:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:6198:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:6198:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+
                    int cnt96=0;
                    loop96:
                    do {
                        int alt96=8;
                        int LA96_0 = input.LA(1);

                        if ( LA96_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1(), 0) ) {
                            alt96=1;
                        }
                        else if ( LA96_0 == ID && getUnorderedGroupHelper().canSelect(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1(), 1) ) {
                            alt96=2;
                        }
                        else if ( LA96_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1(), 2) ) {
                            alt96=3;
                        }
                        else if ( LA96_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1(), 3) ) {
                            alt96=4;
                        }
                        else if ( LA96_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1(), 4) ) {
                            alt96=5;
                        }
                        else if ( LA96_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1(), 5) ) {
                            alt96=6;
                        }
                        else if ( LA96_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1(), 6) ) {
                            alt96=7;
                        }


                        switch (alt96) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:6199:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:6199:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:6200:5: {...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleForceFailureNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:6200:113: ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:6201:6: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:6204:9: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:6204:10: {...}? => (otherlv_2= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleForceFailureNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:6204:19: (otherlv_2= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:6204:20: otherlv_2= LeftParenthesis
                    	    {
                    	    otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_2, grammarAccess.getForceFailureNodeAccess().getLeftParenthesisKeyword_1_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:6214:4: ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:6214:4: ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:6215:5: {...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleForceFailureNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:6215:113: ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:6216:6: ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:6219:9: ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:6219:10: {...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleForceFailureNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:6219:19: (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:6219:20: otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) )
                    	    {
                    	    otherlv_3=(Token)match(input,ID,FOLLOW_8); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getForceFailureNodeAccess().getIDKeyword_1_1_0());
                    	    								
                    	    otherlv_4=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getForceFailureNodeAccess().getEqualsSignKeyword_1_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:6227:9: ( (lv_ID_5_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:6228:10: (lv_ID_5_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:6228:10: (lv_ID_5_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:6229:11: lv_ID_5_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getForceFailureNodeAccess().getIDEStringParserRuleCall_1_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_15);
                    	    lv_ID_5_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getForceFailureNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"ID",
                    	    												lv_ID_5_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:6252:4: ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:6252:4: ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:6253:5: {...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleForceFailureNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:6253:113: ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:6254:6: ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:6257:9: ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:6257:10: {...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleForceFailureNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:6257:19: (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:6257:20: otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) )
                    	    {
                    	    otherlv_6=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_6, grammarAccess.getForceFailureNodeAccess().getNameKeyword_1_2_0());
                    	    								
                    	    otherlv_7=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_7, grammarAccess.getForceFailureNodeAccess().getEqualsSignKeyword_1_2_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:6265:9: ( (lv_name_8_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:6266:10: (lv_name_8_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:6266:10: (lv_name_8_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:6267:11: lv_name_8_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getForceFailureNodeAccess().getNameEStringParserRuleCall_1_2_2_0());
                    	    										
                    	    pushFollow(FOLLOW_15);
                    	    lv_name_8_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getForceFailureNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_8_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:6290:4: ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:6290:4: ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:6291:5: {...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleForceFailureNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:6291:113: ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:6292:6: ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:6295:9: ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:6295:10: {...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleForceFailureNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:6295:19: (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:6295:20: otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_9=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_9, grammarAccess.getForceFailureNodeAccess().getParametersKeyword_1_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:6299:9: ( (lv_parameters_10_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:6300:10: (lv_parameters_10_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:6300:10: (lv_parameters_10_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:6301:11: lv_parameters_10_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getForceFailureNodeAccess().getParametersParameterParserRuleCall_1_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_parameters_10_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getForceFailureNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_10_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:6318:9: (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )*
                    	    loop93:
                    	    do {
                    	        int alt93=2;
                    	        int LA93_0 = input.LA(1);

                    	        if ( (LA93_0==Comma) ) {
                    	            alt93=1;
                    	        }


                    	        switch (alt93) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:6319:10: otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_11=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_11, grammarAccess.getForceFailureNodeAccess().getCommaKeyword_1_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:6323:10: ( (lv_parameters_12_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:6324:11: (lv_parameters_12_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:6324:11: (lv_parameters_12_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:6325:12: lv_parameters_12_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getForceFailureNodeAccess().getParametersParameterParserRuleCall_1_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_parameters_12_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getForceFailureNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_12_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop93;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:6349:4: ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:6349:4: ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:6350:5: {...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleForceFailureNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:6350:113: ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:6351:6: ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:6354:9: ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:6354:10: {...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleForceFailureNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:6354:19: (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:6354:20: otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_13=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_13, grammarAccess.getForceFailureNodeAccess().getSatisficesKeyword_1_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:6358:9: ( (lv_satisfices_14_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:6359:10: (lv_satisfices_14_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:6359:10: (lv_satisfices_14_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:6360:11: lv_satisfices_14_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getForceFailureNodeAccess().getSatisficesQualityParserRuleCall_1_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfices_14_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getForceFailureNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_14_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:6377:9: (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )*
                    	    loop94:
                    	    do {
                    	        int alt94=2;
                    	        int LA94_0 = input.LA(1);

                    	        if ( (LA94_0==Comma) ) {
                    	            alt94=1;
                    	        }


                    	        switch (alt94) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:6378:10: otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_15=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_15, grammarAccess.getForceFailureNodeAccess().getCommaKeyword_1_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:6382:10: ( (lv_satisfices_16_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:6383:11: (lv_satisfices_16_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:6383:11: (lv_satisfices_16_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:6384:12: lv_satisfices_16_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getForceFailureNodeAccess().getSatisficesQualityParserRuleCall_1_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfices_16_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getForceFailureNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_16_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop94;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:6408:4: ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:6408:4: ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:6409:5: {...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleForceFailureNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:6409:113: ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:6410:6: ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:6413:9: ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:6413:10: {...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleForceFailureNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:6413:19: (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:6413:20: otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_17=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_17, grammarAccess.getForceFailureNodeAccess().getSatisfiesKeyword_1_5_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:6417:9: ( (lv_satisfies_18_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:6418:10: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:6418:10: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:6419:11: lv_satisfies_18_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getForceFailureNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_5_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfies_18_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getForceFailureNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_18_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:6436:9: (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )*
                    	    loop95:
                    	    do {
                    	        int alt95=2;
                    	        int LA95_0 = input.LA(1);

                    	        if ( (LA95_0==Comma) ) {
                    	            alt95=1;
                    	        }


                    	        switch (alt95) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:6437:10: otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_19=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_19, grammarAccess.getForceFailureNodeAccess().getCommaKeyword_1_5_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:6441:10: ( (lv_satisfies_20_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:6442:11: (lv_satisfies_20_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:6442:11: (lv_satisfies_20_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:6443:12: lv_satisfies_20_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getForceFailureNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_5_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfies_20_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getForceFailureNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_20_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop95;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 7 :
                    	    // InternalQualityBtCppParser.g:6467:4: ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:6467:4: ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:6468:5: {...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1(), 6) ) {
                    	        throw new FailedPredicateException(input, "ruleForceFailureNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1(), 6)");
                    	    }
                    	    // InternalQualityBtCppParser.g:6468:113: ( ({...}? => (otherlv_21= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:6469:6: ({...}? => (otherlv_21= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1(), 6);
                    	    					
                    	    // InternalQualityBtCppParser.g:6472:9: ({...}? => (otherlv_21= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:6472:10: {...}? => (otherlv_21= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleForceFailureNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:6472:19: (otherlv_21= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:6472:20: otherlv_21= RightParenthesis
                    	    {
                    	    otherlv_21=(Token)match(input,RightParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_21, grammarAccess.getForceFailureNodeAccess().getRightParenthesisKeyword_1_6());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt96 >= 1 ) break loop96;
                                EarlyExitException eee =
                                    new EarlyExitException(96, input);
                                throw eee;
                        }
                        cnt96++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1()) ) {
                        throw new FailedPredicateException(input, "ruleForceFailureNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1());
                    				

                    }
                    break;

            }

            this_BEGIN_22=(Token)match(input,RULE_BEGIN,FOLLOW_9); 

            			newLeafNode(this_BEGIN_22, grammarAccess.getForceFailureNodeAccess().getBEGINTerminalRuleCall_2());
            		
            // InternalQualityBtCppParser.g:6494:3: ( (lv_child_23_0= ruleTreeNode ) )
            // InternalQualityBtCppParser.g:6495:4: (lv_child_23_0= ruleTreeNode )
            {
            // InternalQualityBtCppParser.g:6495:4: (lv_child_23_0= ruleTreeNode )
            // InternalQualityBtCppParser.g:6496:5: lv_child_23_0= ruleTreeNode
            {

            					newCompositeNode(grammarAccess.getForceFailureNodeAccess().getChildTreeNodeParserRuleCall_3_0());
            				
            pushFollow(FOLLOW_10);
            lv_child_23_0=ruleTreeNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getForceFailureNodeRule());
            					}
            					set(
            						current,
            						"child",
            						lv_child_23_0,
            						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            this_END_24=(Token)match(input,RULE_END,FOLLOW_2); 

            			newLeafNode(this_END_24, grammarAccess.getForceFailureNodeAccess().getENDTerminalRuleCall_4());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleForceFailureNode"


    // $ANTLR start "entryRuleRepeatNode"
    // InternalQualityBtCppParser.g:6521:1: entryRuleRepeatNode returns [EObject current=null] : iv_ruleRepeatNode= ruleRepeatNode EOF ;
    public final EObject entryRuleRepeatNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRepeatNode = null;


        try {
            // InternalQualityBtCppParser.g:6521:51: (iv_ruleRepeatNode= ruleRepeatNode EOF )
            // InternalQualityBtCppParser.g:6522:2: iv_ruleRepeatNode= ruleRepeatNode EOF
            {
             newCompositeNode(grammarAccess.getRepeatNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleRepeatNode=ruleRepeatNode();

            state._fsp--;

             current =iv_ruleRepeatNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRepeatNode"


    // $ANTLR start "ruleRepeatNode"
    // InternalQualityBtCppParser.g:6528:1: ruleRepeatNode returns [EObject current=null] : (otherlv_0= Repeat ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Num_cycles otherlv_22= EqualsSign ( (lv_num_cycles_23_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_25= RULE_BEGIN ( (lv_child_26_0= ruleTreeNode ) ) this_END_27= RULE_END ) ;
    public final EObject ruleRepeatNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token otherlv_22=null;
        Token otherlv_24=null;
        Token this_BEGIN_25=null;
        Token this_END_27=null;
        AntlrDatatypeRuleToken lv_ID_5_0 = null;

        AntlrDatatypeRuleToken lv_name_8_0 = null;

        EObject lv_parameters_10_0 = null;

        EObject lv_parameters_12_0 = null;

        EObject lv_satisfices_14_0 = null;

        EObject lv_satisfices_16_0 = null;

        EObject lv_satisfies_18_0 = null;

        EObject lv_satisfies_20_0 = null;

        AntlrDatatypeRuleToken lv_num_cycles_23_0 = null;

        EObject lv_child_26_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:6534:2: ( (otherlv_0= Repeat ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Num_cycles otherlv_22= EqualsSign ( (lv_num_cycles_23_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_25= RULE_BEGIN ( (lv_child_26_0= ruleTreeNode ) ) this_END_27= RULE_END ) )
            // InternalQualityBtCppParser.g:6535:2: (otherlv_0= Repeat ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Num_cycles otherlv_22= EqualsSign ( (lv_num_cycles_23_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_25= RULE_BEGIN ( (lv_child_26_0= ruleTreeNode ) ) this_END_27= RULE_END )
            {
            // InternalQualityBtCppParser.g:6535:2: (otherlv_0= Repeat ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Num_cycles otherlv_22= EqualsSign ( (lv_num_cycles_23_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_25= RULE_BEGIN ( (lv_child_26_0= ruleTreeNode ) ) this_END_27= RULE_END )
            // InternalQualityBtCppParser.g:6536:3: otherlv_0= Repeat ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Num_cycles otherlv_22= EqualsSign ( (lv_num_cycles_23_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_25= RULE_BEGIN ( (lv_child_26_0= ruleTreeNode ) ) this_END_27= RULE_END
            {
            otherlv_0=(Token)match(input,Repeat,FOLLOW_21); 

            			newLeafNode(otherlv_0, grammarAccess.getRepeatNodeAccess().getRepeatKeyword_0());
            		
            // InternalQualityBtCppParser.g:6540:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Num_cycles otherlv_22= EqualsSign ( (lv_num_cycles_23_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt102=2;
            int LA102_0 = input.LA(1);

            if ( (LA102_0==Num_cycles||(LA102_0>=Parameters && LA102_0<=Satisfies)||LA102_0==Name||LA102_0==ID||(LA102_0>=LeftParenthesis && LA102_0<=RightParenthesis)) ) {
                alt102=1;
            }
            switch (alt102) {
                case 1 :
                    // InternalQualityBtCppParser.g:6541:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Num_cycles otherlv_22= EqualsSign ( (lv_num_cycles_23_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:6541:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Num_cycles otherlv_22= EqualsSign ( (lv_num_cycles_23_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:6542:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Num_cycles otherlv_22= EqualsSign ( (lv_num_cycles_23_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1());
                    				
                    // InternalQualityBtCppParser.g:6545:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Num_cycles otherlv_22= EqualsSign ( (lv_num_cycles_23_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:6546:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Num_cycles otherlv_22= EqualsSign ( (lv_num_cycles_23_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:6546:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Num_cycles otherlv_22= EqualsSign ( (lv_num_cycles_23_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+
                    int cnt101=0;
                    loop101:
                    do {
                        int alt101=9;
                        alt101 = dfa101.predict(input);
                        switch (alt101) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:6547:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:6547:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:6548:5: {...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleRepeatNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:6548:107: ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:6549:6: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:6552:9: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:6552:10: {...}? => (otherlv_2= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleRepeatNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:6552:19: (otherlv_2= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:6552:20: otherlv_2= LeftParenthesis
                    	    {
                    	    otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_21); 

                    	    									newLeafNode(otherlv_2, grammarAccess.getRepeatNodeAccess().getLeftParenthesisKeyword_1_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:6562:4: ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:6562:4: ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:6563:5: {...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleRepeatNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:6563:107: ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:6564:6: ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:6567:9: ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:6567:10: {...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleRepeatNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:6567:19: (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:6567:20: otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) )
                    	    {
                    	    otherlv_3=(Token)match(input,ID,FOLLOW_8); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getRepeatNodeAccess().getIDKeyword_1_1_0());
                    	    								
                    	    otherlv_4=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getRepeatNodeAccess().getEqualsSignKeyword_1_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:6575:9: ( (lv_ID_5_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:6576:10: (lv_ID_5_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:6576:10: (lv_ID_5_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:6577:11: lv_ID_5_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getRepeatNodeAccess().getIDEStringParserRuleCall_1_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_21);
                    	    lv_ID_5_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getRepeatNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"ID",
                    	    												lv_ID_5_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:6600:4: ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:6600:4: ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:6601:5: {...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleRepeatNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:6601:107: ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:6602:6: ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:6605:9: ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:6605:10: {...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleRepeatNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:6605:19: (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:6605:20: otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) )
                    	    {
                    	    otherlv_6=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_6, grammarAccess.getRepeatNodeAccess().getNameKeyword_1_2_0());
                    	    								
                    	    otherlv_7=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_7, grammarAccess.getRepeatNodeAccess().getEqualsSignKeyword_1_2_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:6613:9: ( (lv_name_8_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:6614:10: (lv_name_8_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:6614:10: (lv_name_8_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:6615:11: lv_name_8_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getRepeatNodeAccess().getNameEStringParserRuleCall_1_2_2_0());
                    	    										
                    	    pushFollow(FOLLOW_21);
                    	    lv_name_8_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getRepeatNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_8_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:6638:4: ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:6638:4: ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:6639:5: {...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleRepeatNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:6639:107: ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:6640:6: ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:6643:9: ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:6643:10: {...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleRepeatNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:6643:19: (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:6643:20: otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_9=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_9, grammarAccess.getRepeatNodeAccess().getParametersKeyword_1_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:6647:9: ( (lv_parameters_10_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:6648:10: (lv_parameters_10_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:6648:10: (lv_parameters_10_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:6649:11: lv_parameters_10_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getRepeatNodeAccess().getParametersParameterParserRuleCall_1_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_22);
                    	    lv_parameters_10_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getRepeatNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_10_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:6666:9: (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )*
                    	    loop98:
                    	    do {
                    	        int alt98=2;
                    	        int LA98_0 = input.LA(1);

                    	        if ( (LA98_0==Comma) ) {
                    	            alt98=1;
                    	        }


                    	        switch (alt98) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:6667:10: otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_11=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_11, grammarAccess.getRepeatNodeAccess().getCommaKeyword_1_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:6671:10: ( (lv_parameters_12_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:6672:11: (lv_parameters_12_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:6672:11: (lv_parameters_12_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:6673:12: lv_parameters_12_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getRepeatNodeAccess().getParametersParameterParserRuleCall_1_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_22);
                    	    	    lv_parameters_12_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getRepeatNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_12_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop98;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:6697:4: ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:6697:4: ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:6698:5: {...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleRepeatNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:6698:107: ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:6699:6: ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:6702:9: ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:6702:10: {...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleRepeatNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:6702:19: (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:6702:20: otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_13=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_13, grammarAccess.getRepeatNodeAccess().getSatisficesKeyword_1_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:6706:9: ( (lv_satisfices_14_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:6707:10: (lv_satisfices_14_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:6707:10: (lv_satisfices_14_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:6708:11: lv_satisfices_14_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getRepeatNodeAccess().getSatisficesQualityParserRuleCall_1_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_22);
                    	    lv_satisfices_14_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getRepeatNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_14_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:6725:9: (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )*
                    	    loop99:
                    	    do {
                    	        int alt99=2;
                    	        int LA99_0 = input.LA(1);

                    	        if ( (LA99_0==Comma) ) {
                    	            alt99=1;
                    	        }


                    	        switch (alt99) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:6726:10: otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_15=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_15, grammarAccess.getRepeatNodeAccess().getCommaKeyword_1_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:6730:10: ( (lv_satisfices_16_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:6731:11: (lv_satisfices_16_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:6731:11: (lv_satisfices_16_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:6732:12: lv_satisfices_16_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getRepeatNodeAccess().getSatisficesQualityParserRuleCall_1_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_22);
                    	    	    lv_satisfices_16_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getRepeatNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_16_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop99;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:6756:4: ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:6756:4: ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:6757:5: {...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleRepeatNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:6757:107: ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:6758:6: ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:6761:9: ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:6761:10: {...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleRepeatNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:6761:19: (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:6761:20: otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_17=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_17, grammarAccess.getRepeatNodeAccess().getSatisfiesKeyword_1_5_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:6765:9: ( (lv_satisfies_18_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:6766:10: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:6766:10: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:6767:11: lv_satisfies_18_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getRepeatNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_5_1_0());
                    	    										
                    	    pushFollow(FOLLOW_22);
                    	    lv_satisfies_18_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getRepeatNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_18_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:6784:9: (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )*
                    	    loop100:
                    	    do {
                    	        int alt100=2;
                    	        int LA100_0 = input.LA(1);

                    	        if ( (LA100_0==Comma) ) {
                    	            alt100=1;
                    	        }


                    	        switch (alt100) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:6785:10: otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_19=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_19, grammarAccess.getRepeatNodeAccess().getCommaKeyword_1_5_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:6789:10: ( (lv_satisfies_20_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:6790:11: (lv_satisfies_20_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:6790:11: (lv_satisfies_20_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:6791:12: lv_satisfies_20_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getRepeatNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_5_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_22);
                    	    	    lv_satisfies_20_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getRepeatNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_20_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop100;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 7 :
                    	    // InternalQualityBtCppParser.g:6815:4: ({...}? => ( ({...}? => (otherlv_21= Num_cycles otherlv_22= EqualsSign ( (lv_num_cycles_23_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:6815:4: ({...}? => ( ({...}? => (otherlv_21= Num_cycles otherlv_22= EqualsSign ( (lv_num_cycles_23_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:6816:5: {...}? => ( ({...}? => (otherlv_21= Num_cycles otherlv_22= EqualsSign ( (lv_num_cycles_23_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1(), 6) ) {
                    	        throw new FailedPredicateException(input, "ruleRepeatNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1(), 6)");
                    	    }
                    	    // InternalQualityBtCppParser.g:6816:107: ( ({...}? => (otherlv_21= Num_cycles otherlv_22= EqualsSign ( (lv_num_cycles_23_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:6817:6: ({...}? => (otherlv_21= Num_cycles otherlv_22= EqualsSign ( (lv_num_cycles_23_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1(), 6);
                    	    					
                    	    // InternalQualityBtCppParser.g:6820:9: ({...}? => (otherlv_21= Num_cycles otherlv_22= EqualsSign ( (lv_num_cycles_23_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:6820:10: {...}? => (otherlv_21= Num_cycles otherlv_22= EqualsSign ( (lv_num_cycles_23_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleRepeatNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:6820:19: (otherlv_21= Num_cycles otherlv_22= EqualsSign ( (lv_num_cycles_23_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:6820:20: otherlv_21= Num_cycles otherlv_22= EqualsSign ( (lv_num_cycles_23_0= ruleEString ) )
                    	    {
                    	    otherlv_21=(Token)match(input,Num_cycles,FOLLOW_8); 

                    	    									newLeafNode(otherlv_21, grammarAccess.getRepeatNodeAccess().getNum_cyclesKeyword_1_6_0());
                    	    								
                    	    otherlv_22=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_22, grammarAccess.getRepeatNodeAccess().getEqualsSignKeyword_1_6_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:6828:9: ( (lv_num_cycles_23_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:6829:10: (lv_num_cycles_23_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:6829:10: (lv_num_cycles_23_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:6830:11: lv_num_cycles_23_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getRepeatNodeAccess().getNum_cyclesEStringParserRuleCall_1_6_2_0());
                    	    										
                    	    pushFollow(FOLLOW_21);
                    	    lv_num_cycles_23_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getRepeatNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"num_cycles",
                    	    												lv_num_cycles_23_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 8 :
                    	    // InternalQualityBtCppParser.g:6853:4: ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:6853:4: ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:6854:5: {...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1(), 7) ) {
                    	        throw new FailedPredicateException(input, "ruleRepeatNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1(), 7)");
                    	    }
                    	    // InternalQualityBtCppParser.g:6854:107: ( ({...}? => (otherlv_24= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:6855:6: ({...}? => (otherlv_24= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1(), 7);
                    	    					
                    	    // InternalQualityBtCppParser.g:6858:9: ({...}? => (otherlv_24= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:6858:10: {...}? => (otherlv_24= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleRepeatNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:6858:19: (otherlv_24= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:6858:20: otherlv_24= RightParenthesis
                    	    {
                    	    otherlv_24=(Token)match(input,RightParenthesis,FOLLOW_21); 

                    	    									newLeafNode(otherlv_24, grammarAccess.getRepeatNodeAccess().getRightParenthesisKeyword_1_7());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt101 >= 1 ) break loop101;
                                EarlyExitException eee =
                                    new EarlyExitException(101, input);
                                throw eee;
                        }
                        cnt101++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1()) ) {
                        throw new FailedPredicateException(input, "ruleRepeatNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1());
                    				

                    }
                    break;

            }

            this_BEGIN_25=(Token)match(input,RULE_BEGIN,FOLLOW_9); 

            			newLeafNode(this_BEGIN_25, grammarAccess.getRepeatNodeAccess().getBEGINTerminalRuleCall_2());
            		
            // InternalQualityBtCppParser.g:6880:3: ( (lv_child_26_0= ruleTreeNode ) )
            // InternalQualityBtCppParser.g:6881:4: (lv_child_26_0= ruleTreeNode )
            {
            // InternalQualityBtCppParser.g:6881:4: (lv_child_26_0= ruleTreeNode )
            // InternalQualityBtCppParser.g:6882:5: lv_child_26_0= ruleTreeNode
            {

            					newCompositeNode(grammarAccess.getRepeatNodeAccess().getChildTreeNodeParserRuleCall_3_0());
            				
            pushFollow(FOLLOW_10);
            lv_child_26_0=ruleTreeNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getRepeatNodeRule());
            					}
            					set(
            						current,
            						"child",
            						lv_child_26_0,
            						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            this_END_27=(Token)match(input,RULE_END,FOLLOW_2); 

            			newLeafNode(this_END_27, grammarAccess.getRepeatNodeAccess().getENDTerminalRuleCall_4());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRepeatNode"


    // $ANTLR start "entryRuleSubTree"
    // InternalQualityBtCppParser.g:6907:1: entryRuleSubTree returns [EObject current=null] : iv_ruleSubTree= ruleSubTree EOF ;
    public final EObject entryRuleSubTree() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSubTree = null;


        try {
            // InternalQualityBtCppParser.g:6907:48: (iv_ruleSubTree= ruleSubTree EOF )
            // InternalQualityBtCppParser.g:6908:2: iv_ruleSubTree= ruleSubTree EOF
            {
             newCompositeNode(grammarAccess.getSubTreeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleSubTree=ruleSubTree();

            state._fsp--;

             current =iv_ruleSubTree; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSubTree"


    // $ANTLR start "ruleSubTree"
    // InternalQualityBtCppParser.g:6914:1: ruleSubTree returns [EObject current=null] : ( () otherlv_1= SubTree ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? (this_BEGIN_23= RULE_BEGIN ( (lv_child_24_0= ruleTreeNode ) ) ( (lv_child_25_0= ruleTreeNode ) )* this_END_26= RULE_END )? ) ;
    public final EObject ruleSubTree() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        Token this_BEGIN_23=null;
        Token this_END_26=null;
        AntlrDatatypeRuleToken lv_ID_6_0 = null;

        AntlrDatatypeRuleToken lv_name_9_0 = null;

        EObject lv_parameters_11_0 = null;

        EObject lv_parameters_13_0 = null;

        EObject lv_satisfices_15_0 = null;

        EObject lv_satisfices_17_0 = null;

        EObject lv_satisfies_19_0 = null;

        EObject lv_satisfies_21_0 = null;

        EObject lv_child_24_0 = null;

        EObject lv_child_25_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:6920:2: ( ( () otherlv_1= SubTree ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? (this_BEGIN_23= RULE_BEGIN ( (lv_child_24_0= ruleTreeNode ) ) ( (lv_child_25_0= ruleTreeNode ) )* this_END_26= RULE_END )? ) )
            // InternalQualityBtCppParser.g:6921:2: ( () otherlv_1= SubTree ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? (this_BEGIN_23= RULE_BEGIN ( (lv_child_24_0= ruleTreeNode ) ) ( (lv_child_25_0= ruleTreeNode ) )* this_END_26= RULE_END )? )
            {
            // InternalQualityBtCppParser.g:6921:2: ( () otherlv_1= SubTree ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? (this_BEGIN_23= RULE_BEGIN ( (lv_child_24_0= ruleTreeNode ) ) ( (lv_child_25_0= ruleTreeNode ) )* this_END_26= RULE_END )? )
            // InternalQualityBtCppParser.g:6922:3: () otherlv_1= SubTree ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? (this_BEGIN_23= RULE_BEGIN ( (lv_child_24_0= ruleTreeNode ) ) ( (lv_child_25_0= ruleTreeNode ) )* this_END_26= RULE_END )?
            {
            // InternalQualityBtCppParser.g:6922:3: ()
            // InternalQualityBtCppParser.g:6923:4: 
            {

            				current = forceCreateModelElement(
            					grammarAccess.getSubTreeAccess().getSubTreeAction_0(),
            					current);
            			

            }

            otherlv_1=(Token)match(input,SubTree,FOLLOW_23); 

            			newLeafNode(otherlv_1, grammarAccess.getSubTreeAccess().getSubTreeKeyword_1());
            		
            // InternalQualityBtCppParser.g:6933:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt107=2;
            int LA107_0 = input.LA(1);

            if ( ((LA107_0>=Parameters && LA107_0<=Satisfies)||LA107_0==Name||LA107_0==ID||(LA107_0>=LeftParenthesis && LA107_0<=RightParenthesis)) ) {
                alt107=1;
            }
            switch (alt107) {
                case 1 :
                    // InternalQualityBtCppParser.g:6934:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:6934:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:6935:5: ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getSubTreeAccess().getUnorderedGroup_2());
                    				
                    // InternalQualityBtCppParser.g:6938:5: ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:6939:6: ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:6939:6: ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+
                    int cnt106=0;
                    loop106:
                    do {
                        int alt106=8;
                        int LA106_0 = input.LA(1);

                        if ( LA106_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getSubTreeAccess().getUnorderedGroup_2(), 0) ) {
                            alt106=1;
                        }
                        else if ( LA106_0 == ID && getUnorderedGroupHelper().canSelect(grammarAccess.getSubTreeAccess().getUnorderedGroup_2(), 1) ) {
                            alt106=2;
                        }
                        else if ( LA106_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getSubTreeAccess().getUnorderedGroup_2(), 2) ) {
                            alt106=3;
                        }
                        else if ( LA106_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getSubTreeAccess().getUnorderedGroup_2(), 3) ) {
                            alt106=4;
                        }
                        else if ( LA106_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getSubTreeAccess().getUnorderedGroup_2(), 4) ) {
                            alt106=5;
                        }
                        else if ( LA106_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getSubTreeAccess().getUnorderedGroup_2(), 5) ) {
                            alt106=6;
                        }
                        else if ( LA106_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getSubTreeAccess().getUnorderedGroup_2(), 6) ) {
                            alt106=7;
                        }


                        switch (alt106) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:6940:4: ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:6940:4: ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:6941:5: {...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSubTreeAccess().getUnorderedGroup_2(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleSubTree", "getUnorderedGroupHelper().canSelect(grammarAccess.getSubTreeAccess().getUnorderedGroup_2(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:6941:104: ( ({...}? => (otherlv_3= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:6942:6: ({...}? => (otherlv_3= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSubTreeAccess().getUnorderedGroup_2(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:6945:9: ({...}? => (otherlv_3= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:6945:10: {...}? => (otherlv_3= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSubTree", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:6945:19: (otherlv_3= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:6945:20: otherlv_3= LeftParenthesis
                    	    {
                    	    otherlv_3=(Token)match(input,LeftParenthesis,FOLLOW_23); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getSubTreeAccess().getLeftParenthesisKeyword_2_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSubTreeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:6955:4: ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:6955:4: ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:6956:5: {...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSubTreeAccess().getUnorderedGroup_2(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleSubTree", "getUnorderedGroupHelper().canSelect(grammarAccess.getSubTreeAccess().getUnorderedGroup_2(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:6956:104: ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:6957:6: ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSubTreeAccess().getUnorderedGroup_2(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:6960:9: ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:6960:10: {...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSubTree", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:6960:19: (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:6960:20: otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) )
                    	    {
                    	    otherlv_4=(Token)match(input,ID,FOLLOW_8); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getSubTreeAccess().getIDKeyword_2_1_0());
                    	    								
                    	    otherlv_5=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_5, grammarAccess.getSubTreeAccess().getEqualsSignKeyword_2_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:6968:9: ( (lv_ID_6_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:6969:10: (lv_ID_6_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:6969:10: (lv_ID_6_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:6970:11: lv_ID_6_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getSubTreeAccess().getIDEStringParserRuleCall_2_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_23);
                    	    lv_ID_6_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getSubTreeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"ID",
                    	    												lv_ID_6_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSubTreeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:6993:4: ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:6993:4: ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:6994:5: {...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSubTreeAccess().getUnorderedGroup_2(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleSubTree", "getUnorderedGroupHelper().canSelect(grammarAccess.getSubTreeAccess().getUnorderedGroup_2(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:6994:104: ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:6995:6: ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSubTreeAccess().getUnorderedGroup_2(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:6998:9: ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:6998:10: {...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSubTree", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:6998:19: (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:6998:20: otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) )
                    	    {
                    	    otherlv_7=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_7, grammarAccess.getSubTreeAccess().getNameKeyword_2_2_0());
                    	    								
                    	    otherlv_8=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_8, grammarAccess.getSubTreeAccess().getEqualsSignKeyword_2_2_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:7006:9: ( (lv_name_9_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:7007:10: (lv_name_9_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:7007:10: (lv_name_9_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:7008:11: lv_name_9_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getSubTreeAccess().getNameEStringParserRuleCall_2_2_2_0());
                    	    										
                    	    pushFollow(FOLLOW_23);
                    	    lv_name_9_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getSubTreeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_9_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSubTreeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:7031:4: ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:7031:4: ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:7032:5: {...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSubTreeAccess().getUnorderedGroup_2(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleSubTree", "getUnorderedGroupHelper().canSelect(grammarAccess.getSubTreeAccess().getUnorderedGroup_2(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:7032:104: ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:7033:6: ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSubTreeAccess().getUnorderedGroup_2(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:7036:9: ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:7036:10: {...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSubTree", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:7036:19: (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:7036:20: otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_10=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_10, grammarAccess.getSubTreeAccess().getParametersKeyword_2_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:7040:9: ( (lv_parameters_11_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:7041:10: (lv_parameters_11_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:7041:10: (lv_parameters_11_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:7042:11: lv_parameters_11_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getSubTreeAccess().getParametersParameterParserRuleCall_2_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_24);
                    	    lv_parameters_11_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getSubTreeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_11_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:7059:9: (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )*
                    	    loop103:
                    	    do {
                    	        int alt103=2;
                    	        int LA103_0 = input.LA(1);

                    	        if ( (LA103_0==Comma) ) {
                    	            alt103=1;
                    	        }


                    	        switch (alt103) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:7060:10: otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_12=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_12, grammarAccess.getSubTreeAccess().getCommaKeyword_2_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:7064:10: ( (lv_parameters_13_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:7065:11: (lv_parameters_13_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:7065:11: (lv_parameters_13_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:7066:12: lv_parameters_13_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getSubTreeAccess().getParametersParameterParserRuleCall_2_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_24);
                    	    	    lv_parameters_13_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getSubTreeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_13_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop103;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSubTreeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:7090:4: ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:7090:4: ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:7091:5: {...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSubTreeAccess().getUnorderedGroup_2(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleSubTree", "getUnorderedGroupHelper().canSelect(grammarAccess.getSubTreeAccess().getUnorderedGroup_2(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:7091:104: ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:7092:6: ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSubTreeAccess().getUnorderedGroup_2(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:7095:9: ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:7095:10: {...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSubTree", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:7095:19: (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:7095:20: otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_14=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_14, grammarAccess.getSubTreeAccess().getSatisficesKeyword_2_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:7099:9: ( (lv_satisfices_15_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:7100:10: (lv_satisfices_15_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:7100:10: (lv_satisfices_15_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:7101:11: lv_satisfices_15_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getSubTreeAccess().getSatisficesQualityParserRuleCall_2_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_24);
                    	    lv_satisfices_15_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getSubTreeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_15_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:7118:9: (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )*
                    	    loop104:
                    	    do {
                    	        int alt104=2;
                    	        int LA104_0 = input.LA(1);

                    	        if ( (LA104_0==Comma) ) {
                    	            alt104=1;
                    	        }


                    	        switch (alt104) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:7119:10: otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_16=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_16, grammarAccess.getSubTreeAccess().getCommaKeyword_2_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:7123:10: ( (lv_satisfices_17_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:7124:11: (lv_satisfices_17_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:7124:11: (lv_satisfices_17_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:7125:12: lv_satisfices_17_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getSubTreeAccess().getSatisficesQualityParserRuleCall_2_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_24);
                    	    	    lv_satisfices_17_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getSubTreeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_17_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop104;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSubTreeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:7149:4: ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:7149:4: ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:7150:5: {...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSubTreeAccess().getUnorderedGroup_2(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleSubTree", "getUnorderedGroupHelper().canSelect(grammarAccess.getSubTreeAccess().getUnorderedGroup_2(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:7150:104: ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:7151:6: ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSubTreeAccess().getUnorderedGroup_2(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:7154:9: ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:7154:10: {...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSubTree", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:7154:19: (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:7154:20: otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_18=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_18, grammarAccess.getSubTreeAccess().getSatisfiesKeyword_2_5_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:7158:9: ( (lv_satisfies_19_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:7159:10: (lv_satisfies_19_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:7159:10: (lv_satisfies_19_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:7160:11: lv_satisfies_19_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getSubTreeAccess().getSatisfiesQualityRequirementParserRuleCall_2_5_1_0());
                    	    										
                    	    pushFollow(FOLLOW_24);
                    	    lv_satisfies_19_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getSubTreeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_19_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:7177:9: (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )*
                    	    loop105:
                    	    do {
                    	        int alt105=2;
                    	        int LA105_0 = input.LA(1);

                    	        if ( (LA105_0==Comma) ) {
                    	            alt105=1;
                    	        }


                    	        switch (alt105) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:7178:10: otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_20=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_20, grammarAccess.getSubTreeAccess().getCommaKeyword_2_5_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:7182:10: ( (lv_satisfies_21_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:7183:11: (lv_satisfies_21_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:7183:11: (lv_satisfies_21_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:7184:12: lv_satisfies_21_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getSubTreeAccess().getSatisfiesQualityRequirementParserRuleCall_2_5_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_24);
                    	    	    lv_satisfies_21_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getSubTreeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_21_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop105;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSubTreeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 7 :
                    	    // InternalQualityBtCppParser.g:7208:4: ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:7208:4: ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:7209:5: {...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSubTreeAccess().getUnorderedGroup_2(), 6) ) {
                    	        throw new FailedPredicateException(input, "ruleSubTree", "getUnorderedGroupHelper().canSelect(grammarAccess.getSubTreeAccess().getUnorderedGroup_2(), 6)");
                    	    }
                    	    // InternalQualityBtCppParser.g:7209:104: ( ({...}? => (otherlv_22= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:7210:6: ({...}? => (otherlv_22= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSubTreeAccess().getUnorderedGroup_2(), 6);
                    	    					
                    	    // InternalQualityBtCppParser.g:7213:9: ({...}? => (otherlv_22= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:7213:10: {...}? => (otherlv_22= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSubTree", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:7213:19: (otherlv_22= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:7213:20: otherlv_22= RightParenthesis
                    	    {
                    	    otherlv_22=(Token)match(input,RightParenthesis,FOLLOW_23); 

                    	    									newLeafNode(otherlv_22, grammarAccess.getSubTreeAccess().getRightParenthesisKeyword_2_6());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSubTreeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt106 >= 1 ) break loop106;
                                EarlyExitException eee =
                                    new EarlyExitException(106, input);
                                throw eee;
                        }
                        cnt106++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getSubTreeAccess().getUnorderedGroup_2()) ) {
                        throw new FailedPredicateException(input, "ruleSubTree", "getUnorderedGroupHelper().canLeave(grammarAccess.getSubTreeAccess().getUnorderedGroup_2())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getSubTreeAccess().getUnorderedGroup_2());
                    				

                    }
                    break;

            }

            // InternalQualityBtCppParser.g:7231:3: (this_BEGIN_23= RULE_BEGIN ( (lv_child_24_0= ruleTreeNode ) ) ( (lv_child_25_0= ruleTreeNode ) )* this_END_26= RULE_END )?
            int alt109=2;
            int LA109_0 = input.LA(1);

            if ( (LA109_0==RULE_BEGIN) ) {
                alt109=1;
            }
            switch (alt109) {
                case 1 :
                    // InternalQualityBtCppParser.g:7232:4: this_BEGIN_23= RULE_BEGIN ( (lv_child_24_0= ruleTreeNode ) ) ( (lv_child_25_0= ruleTreeNode ) )* this_END_26= RULE_END
                    {
                    this_BEGIN_23=(Token)match(input,RULE_BEGIN,FOLLOW_9); 

                    				newLeafNode(this_BEGIN_23, grammarAccess.getSubTreeAccess().getBEGINTerminalRuleCall_3_0());
                    			
                    // InternalQualityBtCppParser.g:7236:4: ( (lv_child_24_0= ruleTreeNode ) )
                    // InternalQualityBtCppParser.g:7237:5: (lv_child_24_0= ruleTreeNode )
                    {
                    // InternalQualityBtCppParser.g:7237:5: (lv_child_24_0= ruleTreeNode )
                    // InternalQualityBtCppParser.g:7238:6: lv_child_24_0= ruleTreeNode
                    {

                    						newCompositeNode(grammarAccess.getSubTreeAccess().getChildTreeNodeParserRuleCall_3_1_0());
                    					
                    pushFollow(FOLLOW_18);
                    lv_child_24_0=ruleTreeNode();

                    state._fsp--;


                    						if (current==null) {
                    							current = createModelElementForParent(grammarAccess.getSubTreeRule());
                    						}
                    						add(
                    							current,
                    							"child",
                    							lv_child_24_0,
                    							"org.xtext.btcpp.QualityBtCpp.TreeNode");
                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:7255:4: ( (lv_child_25_0= ruleTreeNode ) )*
                    loop108:
                    do {
                        int alt108=2;
                        int LA108_0 = input.LA(1);

                        if ( ((LA108_0>=KeepRunningUntilFailure && LA108_0<=SetBlackboard)||(LA108_0>=ConsumeQueue && LA108_0<=ScriptAction)||LA108_0==WhileDoElse||(LA108_0>=CoroAction && LA108_0<=IfThenElse)||LA108_0==Inverter||(LA108_0>=RunOnce && LA108_0<=Sleep)||LA108_0==Loop||LA108_0==Test||(LA108_0>=M && LA108_0<=HyphenMinusGreaterThanSign)||(LA108_0>=R && LA108_0<=VerticalLineVerticalLine)||LA108_0==QuestionMark) ) {
                            alt108=1;
                        }


                        switch (alt108) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:7256:5: (lv_child_25_0= ruleTreeNode )
                    	    {
                    	    // InternalQualityBtCppParser.g:7256:5: (lv_child_25_0= ruleTreeNode )
                    	    // InternalQualityBtCppParser.g:7257:6: lv_child_25_0= ruleTreeNode
                    	    {

                    	    						newCompositeNode(grammarAccess.getSubTreeAccess().getChildTreeNodeParserRuleCall_3_2_0());
                    	    					
                    	    pushFollow(FOLLOW_18);
                    	    lv_child_25_0=ruleTreeNode();

                    	    state._fsp--;


                    	    						if (current==null) {
                    	    							current = createModelElementForParent(grammarAccess.getSubTreeRule());
                    	    						}
                    	    						add(
                    	    							current,
                    	    							"child",
                    	    							lv_child_25_0,
                    	    							"org.xtext.btcpp.QualityBtCpp.TreeNode");
                    	    						afterParserOrEnumRuleCall();
                    	    					

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop108;
                        }
                    } while (true);

                    this_END_26=(Token)match(input,RULE_END,FOLLOW_2); 

                    				newLeafNode(this_END_26, grammarAccess.getSubTreeAccess().getENDTerminalRuleCall_3_3());
                    			

                    }
                    break;

            }


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSubTree"


    // $ANTLR start "entryRuleRetryNode"
    // InternalQualityBtCppParser.g:7283:1: entryRuleRetryNode returns [EObject current=null] : iv_ruleRetryNode= ruleRetryNode EOF ;
    public final EObject entryRuleRetryNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRetryNode = null;


        try {
            // InternalQualityBtCppParser.g:7283:50: (iv_ruleRetryNode= ruleRetryNode EOF )
            // InternalQualityBtCppParser.g:7284:2: iv_ruleRetryNode= ruleRetryNode EOF
            {
             newCompositeNode(grammarAccess.getRetryNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleRetryNode=ruleRetryNode();

            state._fsp--;

             current =iv_ruleRetryNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRetryNode"


    // $ANTLR start "ruleRetryNode"
    // InternalQualityBtCppParser.g:7290:1: ruleRetryNode returns [EObject current=null] : (otherlv_0= Retry ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Num_attempts otherlv_22= EqualsSign ( (lv_num_attempts_23_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_25= RULE_BEGIN ( (lv_child_26_0= ruleTreeNode ) ) this_END_27= RULE_END ) ;
    public final EObject ruleRetryNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token otherlv_22=null;
        Token otherlv_24=null;
        Token this_BEGIN_25=null;
        Token this_END_27=null;
        AntlrDatatypeRuleToken lv_ID_5_0 = null;

        AntlrDatatypeRuleToken lv_name_8_0 = null;

        EObject lv_parameters_10_0 = null;

        EObject lv_parameters_12_0 = null;

        EObject lv_satisfices_14_0 = null;

        EObject lv_satisfices_16_0 = null;

        EObject lv_satisfies_18_0 = null;

        EObject lv_satisfies_20_0 = null;

        AntlrDatatypeRuleToken lv_num_attempts_23_0 = null;

        EObject lv_child_26_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:7296:2: ( (otherlv_0= Retry ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Num_attempts otherlv_22= EqualsSign ( (lv_num_attempts_23_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_25= RULE_BEGIN ( (lv_child_26_0= ruleTreeNode ) ) this_END_27= RULE_END ) )
            // InternalQualityBtCppParser.g:7297:2: (otherlv_0= Retry ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Num_attempts otherlv_22= EqualsSign ( (lv_num_attempts_23_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_25= RULE_BEGIN ( (lv_child_26_0= ruleTreeNode ) ) this_END_27= RULE_END )
            {
            // InternalQualityBtCppParser.g:7297:2: (otherlv_0= Retry ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Num_attempts otherlv_22= EqualsSign ( (lv_num_attempts_23_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_25= RULE_BEGIN ( (lv_child_26_0= ruleTreeNode ) ) this_END_27= RULE_END )
            // InternalQualityBtCppParser.g:7298:3: otherlv_0= Retry ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Num_attempts otherlv_22= EqualsSign ( (lv_num_attempts_23_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_25= RULE_BEGIN ( (lv_child_26_0= ruleTreeNode ) ) this_END_27= RULE_END
            {
            otherlv_0=(Token)match(input,Retry,FOLLOW_25); 

            			newLeafNode(otherlv_0, grammarAccess.getRetryNodeAccess().getRetryKeyword_0());
            		
            // InternalQualityBtCppParser.g:7302:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Num_attempts otherlv_22= EqualsSign ( (lv_num_attempts_23_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt114=2;
            int LA114_0 = input.LA(1);

            if ( (LA114_0==Num_attempts||(LA114_0>=Parameters && LA114_0<=Satisfies)||LA114_0==Name||LA114_0==ID||(LA114_0>=LeftParenthesis && LA114_0<=RightParenthesis)) ) {
                alt114=1;
            }
            switch (alt114) {
                case 1 :
                    // InternalQualityBtCppParser.g:7303:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Num_attempts otherlv_22= EqualsSign ( (lv_num_attempts_23_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:7303:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Num_attempts otherlv_22= EqualsSign ( (lv_num_attempts_23_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:7304:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Num_attempts otherlv_22= EqualsSign ( (lv_num_attempts_23_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1());
                    				
                    // InternalQualityBtCppParser.g:7307:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Num_attempts otherlv_22= EqualsSign ( (lv_num_attempts_23_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:7308:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Num_attempts otherlv_22= EqualsSign ( (lv_num_attempts_23_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:7308:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Num_attempts otherlv_22= EqualsSign ( (lv_num_attempts_23_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+
                    int cnt113=0;
                    loop113:
                    do {
                        int alt113=9;
                        alt113 = dfa113.predict(input);
                        switch (alt113) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:7309:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:7309:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:7310:5: {...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleRetryNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:7310:106: ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:7311:6: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:7314:9: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:7314:10: {...}? => (otherlv_2= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleRetryNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:7314:19: (otherlv_2= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:7314:20: otherlv_2= LeftParenthesis
                    	    {
                    	    otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_25); 

                    	    									newLeafNode(otherlv_2, grammarAccess.getRetryNodeAccess().getLeftParenthesisKeyword_1_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:7324:4: ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:7324:4: ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:7325:5: {...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleRetryNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:7325:106: ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:7326:6: ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:7329:9: ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:7329:10: {...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleRetryNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:7329:19: (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:7329:20: otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) )
                    	    {
                    	    otherlv_3=(Token)match(input,ID,FOLLOW_8); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getRetryNodeAccess().getIDKeyword_1_1_0());
                    	    								
                    	    otherlv_4=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getRetryNodeAccess().getEqualsSignKeyword_1_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:7337:9: ( (lv_ID_5_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:7338:10: (lv_ID_5_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:7338:10: (lv_ID_5_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:7339:11: lv_ID_5_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getRetryNodeAccess().getIDEStringParserRuleCall_1_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_25);
                    	    lv_ID_5_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getRetryNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"ID",
                    	    												lv_ID_5_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:7362:4: ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:7362:4: ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:7363:5: {...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleRetryNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:7363:106: ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:7364:6: ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:7367:9: ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:7367:10: {...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleRetryNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:7367:19: (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:7367:20: otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) )
                    	    {
                    	    otherlv_6=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_6, grammarAccess.getRetryNodeAccess().getNameKeyword_1_2_0());
                    	    								
                    	    otherlv_7=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_7, grammarAccess.getRetryNodeAccess().getEqualsSignKeyword_1_2_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:7375:9: ( (lv_name_8_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:7376:10: (lv_name_8_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:7376:10: (lv_name_8_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:7377:11: lv_name_8_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getRetryNodeAccess().getNameEStringParserRuleCall_1_2_2_0());
                    	    										
                    	    pushFollow(FOLLOW_25);
                    	    lv_name_8_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getRetryNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_8_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:7400:4: ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:7400:4: ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:7401:5: {...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleRetryNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:7401:106: ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:7402:6: ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:7405:9: ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:7405:10: {...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleRetryNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:7405:19: (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:7405:20: otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_9=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_9, grammarAccess.getRetryNodeAccess().getParametersKeyword_1_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:7409:9: ( (lv_parameters_10_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:7410:10: (lv_parameters_10_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:7410:10: (lv_parameters_10_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:7411:11: lv_parameters_10_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getRetryNodeAccess().getParametersParameterParserRuleCall_1_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_26);
                    	    lv_parameters_10_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getRetryNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_10_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:7428:9: (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )*
                    	    loop110:
                    	    do {
                    	        int alt110=2;
                    	        int LA110_0 = input.LA(1);

                    	        if ( (LA110_0==Comma) ) {
                    	            alt110=1;
                    	        }


                    	        switch (alt110) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:7429:10: otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_11=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_11, grammarAccess.getRetryNodeAccess().getCommaKeyword_1_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:7433:10: ( (lv_parameters_12_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:7434:11: (lv_parameters_12_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:7434:11: (lv_parameters_12_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:7435:12: lv_parameters_12_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getRetryNodeAccess().getParametersParameterParserRuleCall_1_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_26);
                    	    	    lv_parameters_12_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getRetryNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_12_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop110;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:7459:4: ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:7459:4: ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:7460:5: {...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleRetryNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:7460:106: ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:7461:6: ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:7464:9: ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:7464:10: {...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleRetryNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:7464:19: (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:7464:20: otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_13=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_13, grammarAccess.getRetryNodeAccess().getSatisficesKeyword_1_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:7468:9: ( (lv_satisfices_14_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:7469:10: (lv_satisfices_14_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:7469:10: (lv_satisfices_14_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:7470:11: lv_satisfices_14_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getRetryNodeAccess().getSatisficesQualityParserRuleCall_1_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_26);
                    	    lv_satisfices_14_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getRetryNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_14_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:7487:9: (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )*
                    	    loop111:
                    	    do {
                    	        int alt111=2;
                    	        int LA111_0 = input.LA(1);

                    	        if ( (LA111_0==Comma) ) {
                    	            alt111=1;
                    	        }


                    	        switch (alt111) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:7488:10: otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_15=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_15, grammarAccess.getRetryNodeAccess().getCommaKeyword_1_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:7492:10: ( (lv_satisfices_16_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:7493:11: (lv_satisfices_16_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:7493:11: (lv_satisfices_16_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:7494:12: lv_satisfices_16_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getRetryNodeAccess().getSatisficesQualityParserRuleCall_1_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_26);
                    	    	    lv_satisfices_16_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getRetryNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_16_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop111;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:7518:4: ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:7518:4: ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:7519:5: {...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleRetryNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:7519:106: ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:7520:6: ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:7523:9: ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:7523:10: {...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleRetryNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:7523:19: (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:7523:20: otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_17=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_17, grammarAccess.getRetryNodeAccess().getSatisfiesKeyword_1_5_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:7527:9: ( (lv_satisfies_18_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:7528:10: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:7528:10: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:7529:11: lv_satisfies_18_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getRetryNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_5_1_0());
                    	    										
                    	    pushFollow(FOLLOW_26);
                    	    lv_satisfies_18_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getRetryNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_18_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:7546:9: (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )*
                    	    loop112:
                    	    do {
                    	        int alt112=2;
                    	        int LA112_0 = input.LA(1);

                    	        if ( (LA112_0==Comma) ) {
                    	            alt112=1;
                    	        }


                    	        switch (alt112) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:7547:10: otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_19=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_19, grammarAccess.getRetryNodeAccess().getCommaKeyword_1_5_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:7551:10: ( (lv_satisfies_20_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:7552:11: (lv_satisfies_20_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:7552:11: (lv_satisfies_20_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:7553:12: lv_satisfies_20_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getRetryNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_5_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_26);
                    	    	    lv_satisfies_20_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getRetryNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_20_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop112;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 7 :
                    	    // InternalQualityBtCppParser.g:7577:4: ({...}? => ( ({...}? => (otherlv_21= Num_attempts otherlv_22= EqualsSign ( (lv_num_attempts_23_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:7577:4: ({...}? => ( ({...}? => (otherlv_21= Num_attempts otherlv_22= EqualsSign ( (lv_num_attempts_23_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:7578:5: {...}? => ( ({...}? => (otherlv_21= Num_attempts otherlv_22= EqualsSign ( (lv_num_attempts_23_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1(), 6) ) {
                    	        throw new FailedPredicateException(input, "ruleRetryNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1(), 6)");
                    	    }
                    	    // InternalQualityBtCppParser.g:7578:106: ( ({...}? => (otherlv_21= Num_attempts otherlv_22= EqualsSign ( (lv_num_attempts_23_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:7579:6: ({...}? => (otherlv_21= Num_attempts otherlv_22= EqualsSign ( (lv_num_attempts_23_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1(), 6);
                    	    					
                    	    // InternalQualityBtCppParser.g:7582:9: ({...}? => (otherlv_21= Num_attempts otherlv_22= EqualsSign ( (lv_num_attempts_23_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:7582:10: {...}? => (otherlv_21= Num_attempts otherlv_22= EqualsSign ( (lv_num_attempts_23_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleRetryNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:7582:19: (otherlv_21= Num_attempts otherlv_22= EqualsSign ( (lv_num_attempts_23_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:7582:20: otherlv_21= Num_attempts otherlv_22= EqualsSign ( (lv_num_attempts_23_0= ruleEString ) )
                    	    {
                    	    otherlv_21=(Token)match(input,Num_attempts,FOLLOW_8); 

                    	    									newLeafNode(otherlv_21, grammarAccess.getRetryNodeAccess().getNum_attemptsKeyword_1_6_0());
                    	    								
                    	    otherlv_22=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_22, grammarAccess.getRetryNodeAccess().getEqualsSignKeyword_1_6_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:7590:9: ( (lv_num_attempts_23_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:7591:10: (lv_num_attempts_23_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:7591:10: (lv_num_attempts_23_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:7592:11: lv_num_attempts_23_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getRetryNodeAccess().getNum_attemptsEStringParserRuleCall_1_6_2_0());
                    	    										
                    	    pushFollow(FOLLOW_25);
                    	    lv_num_attempts_23_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getRetryNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"num_attempts",
                    	    												lv_num_attempts_23_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 8 :
                    	    // InternalQualityBtCppParser.g:7615:4: ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:7615:4: ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:7616:5: {...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1(), 7) ) {
                    	        throw new FailedPredicateException(input, "ruleRetryNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1(), 7)");
                    	    }
                    	    // InternalQualityBtCppParser.g:7616:106: ( ({...}? => (otherlv_24= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:7617:6: ({...}? => (otherlv_24= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1(), 7);
                    	    					
                    	    // InternalQualityBtCppParser.g:7620:9: ({...}? => (otherlv_24= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:7620:10: {...}? => (otherlv_24= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleRetryNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:7620:19: (otherlv_24= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:7620:20: otherlv_24= RightParenthesis
                    	    {
                    	    otherlv_24=(Token)match(input,RightParenthesis,FOLLOW_25); 

                    	    									newLeafNode(otherlv_24, grammarAccess.getRetryNodeAccess().getRightParenthesisKeyword_1_7());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt113 >= 1 ) break loop113;
                                EarlyExitException eee =
                                    new EarlyExitException(113, input);
                                throw eee;
                        }
                        cnt113++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1()) ) {
                        throw new FailedPredicateException(input, "ruleRetryNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1());
                    				

                    }
                    break;

            }

            this_BEGIN_25=(Token)match(input,RULE_BEGIN,FOLLOW_9); 

            			newLeafNode(this_BEGIN_25, grammarAccess.getRetryNodeAccess().getBEGINTerminalRuleCall_2());
            		
            // InternalQualityBtCppParser.g:7642:3: ( (lv_child_26_0= ruleTreeNode ) )
            // InternalQualityBtCppParser.g:7643:4: (lv_child_26_0= ruleTreeNode )
            {
            // InternalQualityBtCppParser.g:7643:4: (lv_child_26_0= ruleTreeNode )
            // InternalQualityBtCppParser.g:7644:5: lv_child_26_0= ruleTreeNode
            {

            					newCompositeNode(grammarAccess.getRetryNodeAccess().getChildTreeNodeParserRuleCall_3_0());
            				
            pushFollow(FOLLOW_10);
            lv_child_26_0=ruleTreeNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getRetryNodeRule());
            					}
            					set(
            						current,
            						"child",
            						lv_child_26_0,
            						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            this_END_27=(Token)match(input,RULE_END,FOLLOW_2); 

            			newLeafNode(this_END_27, grammarAccess.getRetryNodeAccess().getENDTerminalRuleCall_4());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRetryNode"


    // $ANTLR start "entryRuleParallelAllNode"
    // InternalQualityBtCppParser.g:7669:1: entryRuleParallelAllNode returns [EObject current=null] : iv_ruleParallelAllNode= ruleParallelAllNode EOF ;
    public final EObject entryRuleParallelAllNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParallelAllNode = null;


        try {
            // InternalQualityBtCppParser.g:7669:56: (iv_ruleParallelAllNode= ruleParallelAllNode EOF )
            // InternalQualityBtCppParser.g:7670:2: iv_ruleParallelAllNode= ruleParallelAllNode EOF
            {
             newCompositeNode(grammarAccess.getParallelAllNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleParallelAllNode=ruleParallelAllNode();

            state._fsp--;

             current =iv_ruleParallelAllNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleParallelAllNode"


    // $ANTLR start "ruleParallelAllNode"
    // InternalQualityBtCppParser.g:7676:1: ruleParallelAllNode returns [EObject current=null] : (otherlv_0= All ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END ) ;
    public final EObject ruleParallelAllNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token this_BEGIN_22=null;
        Token this_END_25=null;
        AntlrDatatypeRuleToken lv_ID_5_0 = null;

        AntlrDatatypeRuleToken lv_name_8_0 = null;

        EObject lv_parameters_10_0 = null;

        EObject lv_parameters_12_0 = null;

        EObject lv_satisfices_14_0 = null;

        EObject lv_satisfices_16_0 = null;

        EObject lv_satisfies_18_0 = null;

        EObject lv_satisfies_20_0 = null;

        EObject lv_child_23_0 = null;

        EObject lv_child_24_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:7682:2: ( (otherlv_0= All ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END ) )
            // InternalQualityBtCppParser.g:7683:2: (otherlv_0= All ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END )
            {
            // InternalQualityBtCppParser.g:7683:2: (otherlv_0= All ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END )
            // InternalQualityBtCppParser.g:7684:3: otherlv_0= All ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) ( (lv_child_24_0= ruleTreeNode ) )* this_END_25= RULE_END
            {
            otherlv_0=(Token)match(input,All,FOLLOW_15); 

            			newLeafNode(otherlv_0, grammarAccess.getParallelAllNodeAccess().getAllKeyword_0());
            		
            // InternalQualityBtCppParser.g:7688:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt119=2;
            int LA119_0 = input.LA(1);

            if ( ((LA119_0>=Parameters && LA119_0<=Satisfies)||LA119_0==Name||LA119_0==ID||(LA119_0>=LeftParenthesis && LA119_0<=RightParenthesis)) ) {
                alt119=1;
            }
            switch (alt119) {
                case 1 :
                    // InternalQualityBtCppParser.g:7689:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:7689:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:7690:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1());
                    				
                    // InternalQualityBtCppParser.g:7693:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:7694:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:7694:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+
                    int cnt118=0;
                    loop118:
                    do {
                        int alt118=8;
                        int LA118_0 = input.LA(1);

                        if ( LA118_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1(), 0) ) {
                            alt118=1;
                        }
                        else if ( LA118_0 == ID && getUnorderedGroupHelper().canSelect(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1(), 1) ) {
                            alt118=2;
                        }
                        else if ( LA118_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1(), 2) ) {
                            alt118=3;
                        }
                        else if ( LA118_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1(), 3) ) {
                            alt118=4;
                        }
                        else if ( LA118_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1(), 4) ) {
                            alt118=5;
                        }
                        else if ( LA118_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1(), 5) ) {
                            alt118=6;
                        }
                        else if ( LA118_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1(), 6) ) {
                            alt118=7;
                        }


                        switch (alt118) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:7695:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:7695:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:7696:5: {...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleParallelAllNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:7696:112: ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:7697:6: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:7700:9: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:7700:10: {...}? => (otherlv_2= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleParallelAllNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:7700:19: (otherlv_2= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:7700:20: otherlv_2= LeftParenthesis
                    	    {
                    	    otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_2, grammarAccess.getParallelAllNodeAccess().getLeftParenthesisKeyword_1_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:7710:4: ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:7710:4: ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:7711:5: {...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleParallelAllNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:7711:112: ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:7712:6: ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:7715:9: ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:7715:10: {...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleParallelAllNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:7715:19: (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:7715:20: otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) )
                    	    {
                    	    otherlv_3=(Token)match(input,ID,FOLLOW_8); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getParallelAllNodeAccess().getIDKeyword_1_1_0());
                    	    								
                    	    otherlv_4=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getParallelAllNodeAccess().getEqualsSignKeyword_1_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:7723:9: ( (lv_ID_5_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:7724:10: (lv_ID_5_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:7724:10: (lv_ID_5_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:7725:11: lv_ID_5_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getParallelAllNodeAccess().getIDEStringParserRuleCall_1_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_15);
                    	    lv_ID_5_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getParallelAllNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"ID",
                    	    												lv_ID_5_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:7748:4: ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:7748:4: ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:7749:5: {...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleParallelAllNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:7749:112: ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:7750:6: ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:7753:9: ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:7753:10: {...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleParallelAllNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:7753:19: (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:7753:20: otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) )
                    	    {
                    	    otherlv_6=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_6, grammarAccess.getParallelAllNodeAccess().getNameKeyword_1_2_0());
                    	    								
                    	    otherlv_7=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_7, grammarAccess.getParallelAllNodeAccess().getEqualsSignKeyword_1_2_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:7761:9: ( (lv_name_8_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:7762:10: (lv_name_8_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:7762:10: (lv_name_8_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:7763:11: lv_name_8_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getParallelAllNodeAccess().getNameEStringParserRuleCall_1_2_2_0());
                    	    										
                    	    pushFollow(FOLLOW_15);
                    	    lv_name_8_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getParallelAllNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_8_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:7786:4: ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:7786:4: ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:7787:5: {...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleParallelAllNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:7787:112: ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:7788:6: ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:7791:9: ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:7791:10: {...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleParallelAllNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:7791:19: (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:7791:20: otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_9=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_9, grammarAccess.getParallelAllNodeAccess().getParametersKeyword_1_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:7795:9: ( (lv_parameters_10_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:7796:10: (lv_parameters_10_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:7796:10: (lv_parameters_10_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:7797:11: lv_parameters_10_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getParallelAllNodeAccess().getParametersParameterParserRuleCall_1_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_parameters_10_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getParallelAllNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_10_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:7814:9: (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )*
                    	    loop115:
                    	    do {
                    	        int alt115=2;
                    	        int LA115_0 = input.LA(1);

                    	        if ( (LA115_0==Comma) ) {
                    	            alt115=1;
                    	        }


                    	        switch (alt115) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:7815:10: otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_11=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_11, grammarAccess.getParallelAllNodeAccess().getCommaKeyword_1_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:7819:10: ( (lv_parameters_12_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:7820:11: (lv_parameters_12_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:7820:11: (lv_parameters_12_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:7821:12: lv_parameters_12_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getParallelAllNodeAccess().getParametersParameterParserRuleCall_1_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_parameters_12_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getParallelAllNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_12_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop115;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:7845:4: ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:7845:4: ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:7846:5: {...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleParallelAllNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:7846:112: ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:7847:6: ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:7850:9: ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:7850:10: {...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleParallelAllNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:7850:19: (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:7850:20: otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_13=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_13, grammarAccess.getParallelAllNodeAccess().getSatisficesKeyword_1_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:7854:9: ( (lv_satisfices_14_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:7855:10: (lv_satisfices_14_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:7855:10: (lv_satisfices_14_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:7856:11: lv_satisfices_14_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getParallelAllNodeAccess().getSatisficesQualityParserRuleCall_1_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfices_14_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getParallelAllNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_14_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:7873:9: (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )*
                    	    loop116:
                    	    do {
                    	        int alt116=2;
                    	        int LA116_0 = input.LA(1);

                    	        if ( (LA116_0==Comma) ) {
                    	            alt116=1;
                    	        }


                    	        switch (alt116) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:7874:10: otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_15=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_15, grammarAccess.getParallelAllNodeAccess().getCommaKeyword_1_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:7878:10: ( (lv_satisfices_16_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:7879:11: (lv_satisfices_16_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:7879:11: (lv_satisfices_16_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:7880:12: lv_satisfices_16_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getParallelAllNodeAccess().getSatisficesQualityParserRuleCall_1_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfices_16_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getParallelAllNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_16_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop116;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:7904:4: ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:7904:4: ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:7905:5: {...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleParallelAllNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:7905:112: ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:7906:6: ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:7909:9: ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:7909:10: {...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleParallelAllNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:7909:19: (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:7909:20: otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_17=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_17, grammarAccess.getParallelAllNodeAccess().getSatisfiesKeyword_1_5_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:7913:9: ( (lv_satisfies_18_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:7914:10: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:7914:10: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:7915:11: lv_satisfies_18_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getParallelAllNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_5_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfies_18_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getParallelAllNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_18_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:7932:9: (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )*
                    	    loop117:
                    	    do {
                    	        int alt117=2;
                    	        int LA117_0 = input.LA(1);

                    	        if ( (LA117_0==Comma) ) {
                    	            alt117=1;
                    	        }


                    	        switch (alt117) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:7933:10: otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_19=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_19, grammarAccess.getParallelAllNodeAccess().getCommaKeyword_1_5_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:7937:10: ( (lv_satisfies_20_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:7938:11: (lv_satisfies_20_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:7938:11: (lv_satisfies_20_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:7939:12: lv_satisfies_20_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getParallelAllNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_5_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfies_20_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getParallelAllNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_20_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop117;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 7 :
                    	    // InternalQualityBtCppParser.g:7963:4: ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:7963:4: ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:7964:5: {...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1(), 6) ) {
                    	        throw new FailedPredicateException(input, "ruleParallelAllNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1(), 6)");
                    	    }
                    	    // InternalQualityBtCppParser.g:7964:112: ( ({...}? => (otherlv_21= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:7965:6: ({...}? => (otherlv_21= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1(), 6);
                    	    					
                    	    // InternalQualityBtCppParser.g:7968:9: ({...}? => (otherlv_21= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:7968:10: {...}? => (otherlv_21= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleParallelAllNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:7968:19: (otherlv_21= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:7968:20: otherlv_21= RightParenthesis
                    	    {
                    	    otherlv_21=(Token)match(input,RightParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_21, grammarAccess.getParallelAllNodeAccess().getRightParenthesisKeyword_1_6());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt118 >= 1 ) break loop118;
                                EarlyExitException eee =
                                    new EarlyExitException(118, input);
                                throw eee;
                        }
                        cnt118++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1()) ) {
                        throw new FailedPredicateException(input, "ruleParallelAllNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1());
                    				

                    }
                    break;

            }

            this_BEGIN_22=(Token)match(input,RULE_BEGIN,FOLLOW_9); 

            			newLeafNode(this_BEGIN_22, grammarAccess.getParallelAllNodeAccess().getBEGINTerminalRuleCall_2());
            		
            // InternalQualityBtCppParser.g:7990:3: ( (lv_child_23_0= ruleTreeNode ) )
            // InternalQualityBtCppParser.g:7991:4: (lv_child_23_0= ruleTreeNode )
            {
            // InternalQualityBtCppParser.g:7991:4: (lv_child_23_0= ruleTreeNode )
            // InternalQualityBtCppParser.g:7992:5: lv_child_23_0= ruleTreeNode
            {

            					newCompositeNode(grammarAccess.getParallelAllNodeAccess().getChildTreeNodeParserRuleCall_3_0());
            				
            pushFollow(FOLLOW_18);
            lv_child_23_0=ruleTreeNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getParallelAllNodeRule());
            					}
            					add(
            						current,
            						"child",
            						lv_child_23_0,
            						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            // InternalQualityBtCppParser.g:8009:3: ( (lv_child_24_0= ruleTreeNode ) )*
            loop120:
            do {
                int alt120=2;
                int LA120_0 = input.LA(1);

                if ( ((LA120_0>=KeepRunningUntilFailure && LA120_0<=SetBlackboard)||(LA120_0>=ConsumeQueue && LA120_0<=ScriptAction)||LA120_0==WhileDoElse||(LA120_0>=CoroAction && LA120_0<=IfThenElse)||LA120_0==Inverter||(LA120_0>=RunOnce && LA120_0<=Sleep)||LA120_0==Loop||LA120_0==Test||(LA120_0>=M && LA120_0<=HyphenMinusGreaterThanSign)||(LA120_0>=R && LA120_0<=VerticalLineVerticalLine)||LA120_0==QuestionMark) ) {
                    alt120=1;
                }


                switch (alt120) {
            	case 1 :
            	    // InternalQualityBtCppParser.g:8010:4: (lv_child_24_0= ruleTreeNode )
            	    {
            	    // InternalQualityBtCppParser.g:8010:4: (lv_child_24_0= ruleTreeNode )
            	    // InternalQualityBtCppParser.g:8011:5: lv_child_24_0= ruleTreeNode
            	    {

            	    					newCompositeNode(grammarAccess.getParallelAllNodeAccess().getChildTreeNodeParserRuleCall_4_0());
            	    				
            	    pushFollow(FOLLOW_18);
            	    lv_child_24_0=ruleTreeNode();

            	    state._fsp--;


            	    					if (current==null) {
            	    						current = createModelElementForParent(grammarAccess.getParallelAllNodeRule());
            	    					}
            	    					add(
            	    						current,
            	    						"child",
            	    						lv_child_24_0,
            	    						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            	    					afterParserOrEnumRuleCall();
            	    				

            	    }


            	    }
            	    break;

            	default :
            	    break loop120;
                }
            } while (true);

            this_END_25=(Token)match(input,RULE_END,FOLLOW_2); 

            			newLeafNode(this_END_25, grammarAccess.getParallelAllNodeAccess().getENDTerminalRuleCall_5());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleParallelAllNode"


    // $ANTLR start "entryRuleDelayNode"
    // InternalQualityBtCppParser.g:8036:1: entryRuleDelayNode returns [EObject current=null] : iv_ruleDelayNode= ruleDelayNode EOF ;
    public final EObject entryRuleDelayNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDelayNode = null;


        try {
            // InternalQualityBtCppParser.g:8036:50: (iv_ruleDelayNode= ruleDelayNode EOF )
            // InternalQualityBtCppParser.g:8037:2: iv_ruleDelayNode= ruleDelayNode EOF
            {
             newCompositeNode(grammarAccess.getDelayNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleDelayNode=ruleDelayNode();

            state._fsp--;

             current =iv_ruleDelayNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDelayNode"


    // $ANTLR start "ruleDelayNode"
    // InternalQualityBtCppParser.g:8043:1: ruleDelayNode returns [EObject current=null] : (otherlv_0= Delay ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Delay_msec otherlv_10= EqualsSign ( (lv_delay_msec_11_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= Parameters ( (lv_parameters_13_0= ruleParameter ) ) (otherlv_14= Comma ( (lv_parameters_15_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= Satisfices ( (lv_satisfices_17_0= ruleQuality ) ) (otherlv_18= Comma ( (lv_satisfices_19_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Satisfies ( (lv_satisfies_21_0= ruleQualityRequirement ) ) (otherlv_22= Comma ( (lv_satisfies_23_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_25= RULE_BEGIN ( (lv_child_26_0= ruleTreeNode ) ) this_END_27= RULE_END ) ;
    public final EObject ruleDelayNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        Token otherlv_24=null;
        Token this_BEGIN_25=null;
        Token this_END_27=null;
        AntlrDatatypeRuleToken lv_ID_5_0 = null;

        AntlrDatatypeRuleToken lv_name_8_0 = null;

        AntlrDatatypeRuleToken lv_delay_msec_11_0 = null;

        EObject lv_parameters_13_0 = null;

        EObject lv_parameters_15_0 = null;

        EObject lv_satisfices_17_0 = null;

        EObject lv_satisfices_19_0 = null;

        EObject lv_satisfies_21_0 = null;

        EObject lv_satisfies_23_0 = null;

        EObject lv_child_26_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:8049:2: ( (otherlv_0= Delay ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Delay_msec otherlv_10= EqualsSign ( (lv_delay_msec_11_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= Parameters ( (lv_parameters_13_0= ruleParameter ) ) (otherlv_14= Comma ( (lv_parameters_15_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= Satisfices ( (lv_satisfices_17_0= ruleQuality ) ) (otherlv_18= Comma ( (lv_satisfices_19_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Satisfies ( (lv_satisfies_21_0= ruleQualityRequirement ) ) (otherlv_22= Comma ( (lv_satisfies_23_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_25= RULE_BEGIN ( (lv_child_26_0= ruleTreeNode ) ) this_END_27= RULE_END ) )
            // InternalQualityBtCppParser.g:8050:2: (otherlv_0= Delay ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Delay_msec otherlv_10= EqualsSign ( (lv_delay_msec_11_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= Parameters ( (lv_parameters_13_0= ruleParameter ) ) (otherlv_14= Comma ( (lv_parameters_15_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= Satisfices ( (lv_satisfices_17_0= ruleQuality ) ) (otherlv_18= Comma ( (lv_satisfices_19_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Satisfies ( (lv_satisfies_21_0= ruleQualityRequirement ) ) (otherlv_22= Comma ( (lv_satisfies_23_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_25= RULE_BEGIN ( (lv_child_26_0= ruleTreeNode ) ) this_END_27= RULE_END )
            {
            // InternalQualityBtCppParser.g:8050:2: (otherlv_0= Delay ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Delay_msec otherlv_10= EqualsSign ( (lv_delay_msec_11_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= Parameters ( (lv_parameters_13_0= ruleParameter ) ) (otherlv_14= Comma ( (lv_parameters_15_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= Satisfices ( (lv_satisfices_17_0= ruleQuality ) ) (otherlv_18= Comma ( (lv_satisfices_19_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Satisfies ( (lv_satisfies_21_0= ruleQualityRequirement ) ) (otherlv_22= Comma ( (lv_satisfies_23_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_25= RULE_BEGIN ( (lv_child_26_0= ruleTreeNode ) ) this_END_27= RULE_END )
            // InternalQualityBtCppParser.g:8051:3: otherlv_0= Delay ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Delay_msec otherlv_10= EqualsSign ( (lv_delay_msec_11_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= Parameters ( (lv_parameters_13_0= ruleParameter ) ) (otherlv_14= Comma ( (lv_parameters_15_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= Satisfices ( (lv_satisfices_17_0= ruleQuality ) ) (otherlv_18= Comma ( (lv_satisfices_19_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Satisfies ( (lv_satisfies_21_0= ruleQualityRequirement ) ) (otherlv_22= Comma ( (lv_satisfies_23_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_25= RULE_BEGIN ( (lv_child_26_0= ruleTreeNode ) ) this_END_27= RULE_END
            {
            otherlv_0=(Token)match(input,Delay,FOLLOW_27); 

            			newLeafNode(otherlv_0, grammarAccess.getDelayNodeAccess().getDelayKeyword_0());
            		
            // InternalQualityBtCppParser.g:8055:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Delay_msec otherlv_10= EqualsSign ( (lv_delay_msec_11_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= Parameters ( (lv_parameters_13_0= ruleParameter ) ) (otherlv_14= Comma ( (lv_parameters_15_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= Satisfices ( (lv_satisfices_17_0= ruleQuality ) ) (otherlv_18= Comma ( (lv_satisfices_19_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Satisfies ( (lv_satisfies_21_0= ruleQualityRequirement ) ) (otherlv_22= Comma ( (lv_satisfies_23_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt125=2;
            int LA125_0 = input.LA(1);

            if ( (LA125_0==Delay_msec||(LA125_0>=Parameters && LA125_0<=Satisfies)||LA125_0==Name||LA125_0==ID||(LA125_0>=LeftParenthesis && LA125_0<=RightParenthesis)) ) {
                alt125=1;
            }
            switch (alt125) {
                case 1 :
                    // InternalQualityBtCppParser.g:8056:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Delay_msec otherlv_10= EqualsSign ( (lv_delay_msec_11_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= Parameters ( (lv_parameters_13_0= ruleParameter ) ) (otherlv_14= Comma ( (lv_parameters_15_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= Satisfices ( (lv_satisfices_17_0= ruleQuality ) ) (otherlv_18= Comma ( (lv_satisfices_19_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Satisfies ( (lv_satisfies_21_0= ruleQualityRequirement ) ) (otherlv_22= Comma ( (lv_satisfies_23_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:8056:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Delay_msec otherlv_10= EqualsSign ( (lv_delay_msec_11_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= Parameters ( (lv_parameters_13_0= ruleParameter ) ) (otherlv_14= Comma ( (lv_parameters_15_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= Satisfices ( (lv_satisfices_17_0= ruleQuality ) ) (otherlv_18= Comma ( (lv_satisfices_19_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Satisfies ( (lv_satisfies_21_0= ruleQualityRequirement ) ) (otherlv_22= Comma ( (lv_satisfies_23_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:8057:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Delay_msec otherlv_10= EqualsSign ( (lv_delay_msec_11_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= Parameters ( (lv_parameters_13_0= ruleParameter ) ) (otherlv_14= Comma ( (lv_parameters_15_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= Satisfices ( (lv_satisfices_17_0= ruleQuality ) ) (otherlv_18= Comma ( (lv_satisfices_19_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Satisfies ( (lv_satisfies_21_0= ruleQualityRequirement ) ) (otherlv_22= Comma ( (lv_satisfies_23_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1());
                    				
                    // InternalQualityBtCppParser.g:8060:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Delay_msec otherlv_10= EqualsSign ( (lv_delay_msec_11_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= Parameters ( (lv_parameters_13_0= ruleParameter ) ) (otherlv_14= Comma ( (lv_parameters_15_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= Satisfices ( (lv_satisfices_17_0= ruleQuality ) ) (otherlv_18= Comma ( (lv_satisfices_19_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Satisfies ( (lv_satisfies_21_0= ruleQualityRequirement ) ) (otherlv_22= Comma ( (lv_satisfies_23_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:8061:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Delay_msec otherlv_10= EqualsSign ( (lv_delay_msec_11_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= Parameters ( (lv_parameters_13_0= ruleParameter ) ) (otherlv_14= Comma ( (lv_parameters_15_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= Satisfices ( (lv_satisfices_17_0= ruleQuality ) ) (otherlv_18= Comma ( (lv_satisfices_19_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Satisfies ( (lv_satisfies_21_0= ruleQualityRequirement ) ) (otherlv_22= Comma ( (lv_satisfies_23_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:8061:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Delay_msec otherlv_10= EqualsSign ( (lv_delay_msec_11_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= Parameters ( (lv_parameters_13_0= ruleParameter ) ) (otherlv_14= Comma ( (lv_parameters_15_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= Satisfices ( (lv_satisfices_17_0= ruleQuality ) ) (otherlv_18= Comma ( (lv_satisfices_19_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Satisfies ( (lv_satisfies_21_0= ruleQualityRequirement ) ) (otherlv_22= Comma ( (lv_satisfies_23_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+
                    int cnt124=0;
                    loop124:
                    do {
                        int alt124=9;
                        alt124 = dfa124.predict(input);
                        switch (alt124) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:8062:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:8062:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:8063:5: {...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleDelayNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:8063:106: ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:8064:6: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:8067:9: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:8067:10: {...}? => (otherlv_2= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleDelayNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:8067:19: (otherlv_2= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:8067:20: otherlv_2= LeftParenthesis
                    	    {
                    	    otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_27); 

                    	    									newLeafNode(otherlv_2, grammarAccess.getDelayNodeAccess().getLeftParenthesisKeyword_1_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:8077:4: ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:8077:4: ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:8078:5: {...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleDelayNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:8078:106: ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:8079:6: ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:8082:9: ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:8082:10: {...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleDelayNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:8082:19: (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:8082:20: otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) )
                    	    {
                    	    otherlv_3=(Token)match(input,ID,FOLLOW_8); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getDelayNodeAccess().getIDKeyword_1_1_0());
                    	    								
                    	    otherlv_4=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getDelayNodeAccess().getEqualsSignKeyword_1_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:8090:9: ( (lv_ID_5_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:8091:10: (lv_ID_5_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:8091:10: (lv_ID_5_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:8092:11: lv_ID_5_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getDelayNodeAccess().getIDEStringParserRuleCall_1_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_27);
                    	    lv_ID_5_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getDelayNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"ID",
                    	    												lv_ID_5_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:8115:4: ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:8115:4: ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:8116:5: {...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleDelayNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:8116:106: ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:8117:6: ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:8120:9: ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:8120:10: {...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleDelayNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:8120:19: (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:8120:20: otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) )
                    	    {
                    	    otherlv_6=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_6, grammarAccess.getDelayNodeAccess().getNameKeyword_1_2_0());
                    	    								
                    	    otherlv_7=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_7, grammarAccess.getDelayNodeAccess().getEqualsSignKeyword_1_2_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:8128:9: ( (lv_name_8_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:8129:10: (lv_name_8_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:8129:10: (lv_name_8_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:8130:11: lv_name_8_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getDelayNodeAccess().getNameEStringParserRuleCall_1_2_2_0());
                    	    										
                    	    pushFollow(FOLLOW_27);
                    	    lv_name_8_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getDelayNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_8_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:8153:4: ({...}? => ( ({...}? => (otherlv_9= Delay_msec otherlv_10= EqualsSign ( (lv_delay_msec_11_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:8153:4: ({...}? => ( ({...}? => (otherlv_9= Delay_msec otherlv_10= EqualsSign ( (lv_delay_msec_11_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:8154:5: {...}? => ( ({...}? => (otherlv_9= Delay_msec otherlv_10= EqualsSign ( (lv_delay_msec_11_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleDelayNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:8154:106: ( ({...}? => (otherlv_9= Delay_msec otherlv_10= EqualsSign ( (lv_delay_msec_11_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:8155:6: ({...}? => (otherlv_9= Delay_msec otherlv_10= EqualsSign ( (lv_delay_msec_11_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:8158:9: ({...}? => (otherlv_9= Delay_msec otherlv_10= EqualsSign ( (lv_delay_msec_11_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:8158:10: {...}? => (otherlv_9= Delay_msec otherlv_10= EqualsSign ( (lv_delay_msec_11_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleDelayNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:8158:19: (otherlv_9= Delay_msec otherlv_10= EqualsSign ( (lv_delay_msec_11_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:8158:20: otherlv_9= Delay_msec otherlv_10= EqualsSign ( (lv_delay_msec_11_0= ruleEString ) )
                    	    {
                    	    otherlv_9=(Token)match(input,Delay_msec,FOLLOW_8); 

                    	    									newLeafNode(otherlv_9, grammarAccess.getDelayNodeAccess().getDelay_msecKeyword_1_3_0());
                    	    								
                    	    otherlv_10=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_10, grammarAccess.getDelayNodeAccess().getEqualsSignKeyword_1_3_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:8166:9: ( (lv_delay_msec_11_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:8167:10: (lv_delay_msec_11_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:8167:10: (lv_delay_msec_11_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:8168:11: lv_delay_msec_11_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getDelayNodeAccess().getDelay_msecEStringParserRuleCall_1_3_2_0());
                    	    										
                    	    pushFollow(FOLLOW_27);
                    	    lv_delay_msec_11_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getDelayNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"delay_msec",
                    	    												lv_delay_msec_11_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:8191:4: ({...}? => ( ({...}? => (otherlv_12= Parameters ( (lv_parameters_13_0= ruleParameter ) ) (otherlv_14= Comma ( (lv_parameters_15_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:8191:4: ({...}? => ( ({...}? => (otherlv_12= Parameters ( (lv_parameters_13_0= ruleParameter ) ) (otherlv_14= Comma ( (lv_parameters_15_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:8192:5: {...}? => ( ({...}? => (otherlv_12= Parameters ( (lv_parameters_13_0= ruleParameter ) ) (otherlv_14= Comma ( (lv_parameters_15_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleDelayNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:8192:106: ( ({...}? => (otherlv_12= Parameters ( (lv_parameters_13_0= ruleParameter ) ) (otherlv_14= Comma ( (lv_parameters_15_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:8193:6: ({...}? => (otherlv_12= Parameters ( (lv_parameters_13_0= ruleParameter ) ) (otherlv_14= Comma ( (lv_parameters_15_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:8196:9: ({...}? => (otherlv_12= Parameters ( (lv_parameters_13_0= ruleParameter ) ) (otherlv_14= Comma ( (lv_parameters_15_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:8196:10: {...}? => (otherlv_12= Parameters ( (lv_parameters_13_0= ruleParameter ) ) (otherlv_14= Comma ( (lv_parameters_15_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleDelayNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:8196:19: (otherlv_12= Parameters ( (lv_parameters_13_0= ruleParameter ) ) (otherlv_14= Comma ( (lv_parameters_15_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:8196:20: otherlv_12= Parameters ( (lv_parameters_13_0= ruleParameter ) ) (otherlv_14= Comma ( (lv_parameters_15_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_12=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_12, grammarAccess.getDelayNodeAccess().getParametersKeyword_1_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:8200:9: ( (lv_parameters_13_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:8201:10: (lv_parameters_13_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:8201:10: (lv_parameters_13_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:8202:11: lv_parameters_13_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getDelayNodeAccess().getParametersParameterParserRuleCall_1_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_28);
                    	    lv_parameters_13_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getDelayNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_13_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:8219:9: (otherlv_14= Comma ( (lv_parameters_15_0= ruleParameter ) ) )*
                    	    loop121:
                    	    do {
                    	        int alt121=2;
                    	        int LA121_0 = input.LA(1);

                    	        if ( (LA121_0==Comma) ) {
                    	            alt121=1;
                    	        }


                    	        switch (alt121) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:8220:10: otherlv_14= Comma ( (lv_parameters_15_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_14=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_14, grammarAccess.getDelayNodeAccess().getCommaKeyword_1_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:8224:10: ( (lv_parameters_15_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:8225:11: (lv_parameters_15_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:8225:11: (lv_parameters_15_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:8226:12: lv_parameters_15_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getDelayNodeAccess().getParametersParameterParserRuleCall_1_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_28);
                    	    	    lv_parameters_15_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getDelayNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_15_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop121;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:8250:4: ({...}? => ( ({...}? => (otherlv_16= Satisfices ( (lv_satisfices_17_0= ruleQuality ) ) (otherlv_18= Comma ( (lv_satisfices_19_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:8250:4: ({...}? => ( ({...}? => (otherlv_16= Satisfices ( (lv_satisfices_17_0= ruleQuality ) ) (otherlv_18= Comma ( (lv_satisfices_19_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:8251:5: {...}? => ( ({...}? => (otherlv_16= Satisfices ( (lv_satisfices_17_0= ruleQuality ) ) (otherlv_18= Comma ( (lv_satisfices_19_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleDelayNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:8251:106: ( ({...}? => (otherlv_16= Satisfices ( (lv_satisfices_17_0= ruleQuality ) ) (otherlv_18= Comma ( (lv_satisfices_19_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:8252:6: ({...}? => (otherlv_16= Satisfices ( (lv_satisfices_17_0= ruleQuality ) ) (otherlv_18= Comma ( (lv_satisfices_19_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:8255:9: ({...}? => (otherlv_16= Satisfices ( (lv_satisfices_17_0= ruleQuality ) ) (otherlv_18= Comma ( (lv_satisfices_19_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:8255:10: {...}? => (otherlv_16= Satisfices ( (lv_satisfices_17_0= ruleQuality ) ) (otherlv_18= Comma ( (lv_satisfices_19_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleDelayNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:8255:19: (otherlv_16= Satisfices ( (lv_satisfices_17_0= ruleQuality ) ) (otherlv_18= Comma ( (lv_satisfices_19_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:8255:20: otherlv_16= Satisfices ( (lv_satisfices_17_0= ruleQuality ) ) (otherlv_18= Comma ( (lv_satisfices_19_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_16=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_16, grammarAccess.getDelayNodeAccess().getSatisficesKeyword_1_5_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:8259:9: ( (lv_satisfices_17_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:8260:10: (lv_satisfices_17_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:8260:10: (lv_satisfices_17_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:8261:11: lv_satisfices_17_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getDelayNodeAccess().getSatisficesQualityParserRuleCall_1_5_1_0());
                    	    										
                    	    pushFollow(FOLLOW_28);
                    	    lv_satisfices_17_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getDelayNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_17_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:8278:9: (otherlv_18= Comma ( (lv_satisfices_19_0= ruleQuality ) ) )*
                    	    loop122:
                    	    do {
                    	        int alt122=2;
                    	        int LA122_0 = input.LA(1);

                    	        if ( (LA122_0==Comma) ) {
                    	            alt122=1;
                    	        }


                    	        switch (alt122) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:8279:10: otherlv_18= Comma ( (lv_satisfices_19_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_18=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_18, grammarAccess.getDelayNodeAccess().getCommaKeyword_1_5_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:8283:10: ( (lv_satisfices_19_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:8284:11: (lv_satisfices_19_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:8284:11: (lv_satisfices_19_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:8285:12: lv_satisfices_19_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getDelayNodeAccess().getSatisficesQualityParserRuleCall_1_5_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_28);
                    	    	    lv_satisfices_19_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getDelayNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_19_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop122;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 7 :
                    	    // InternalQualityBtCppParser.g:8309:4: ({...}? => ( ({...}? => (otherlv_20= Satisfies ( (lv_satisfies_21_0= ruleQualityRequirement ) ) (otherlv_22= Comma ( (lv_satisfies_23_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:8309:4: ({...}? => ( ({...}? => (otherlv_20= Satisfies ( (lv_satisfies_21_0= ruleQualityRequirement ) ) (otherlv_22= Comma ( (lv_satisfies_23_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:8310:5: {...}? => ( ({...}? => (otherlv_20= Satisfies ( (lv_satisfies_21_0= ruleQualityRequirement ) ) (otherlv_22= Comma ( (lv_satisfies_23_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1(), 6) ) {
                    	        throw new FailedPredicateException(input, "ruleDelayNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1(), 6)");
                    	    }
                    	    // InternalQualityBtCppParser.g:8310:106: ( ({...}? => (otherlv_20= Satisfies ( (lv_satisfies_21_0= ruleQualityRequirement ) ) (otherlv_22= Comma ( (lv_satisfies_23_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:8311:6: ({...}? => (otherlv_20= Satisfies ( (lv_satisfies_21_0= ruleQualityRequirement ) ) (otherlv_22= Comma ( (lv_satisfies_23_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1(), 6);
                    	    					
                    	    // InternalQualityBtCppParser.g:8314:9: ({...}? => (otherlv_20= Satisfies ( (lv_satisfies_21_0= ruleQualityRequirement ) ) (otherlv_22= Comma ( (lv_satisfies_23_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:8314:10: {...}? => (otherlv_20= Satisfies ( (lv_satisfies_21_0= ruleQualityRequirement ) ) (otherlv_22= Comma ( (lv_satisfies_23_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleDelayNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:8314:19: (otherlv_20= Satisfies ( (lv_satisfies_21_0= ruleQualityRequirement ) ) (otherlv_22= Comma ( (lv_satisfies_23_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:8314:20: otherlv_20= Satisfies ( (lv_satisfies_21_0= ruleQualityRequirement ) ) (otherlv_22= Comma ( (lv_satisfies_23_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_20=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_20, grammarAccess.getDelayNodeAccess().getSatisfiesKeyword_1_6_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:8318:9: ( (lv_satisfies_21_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:8319:10: (lv_satisfies_21_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:8319:10: (lv_satisfies_21_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:8320:11: lv_satisfies_21_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getDelayNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_6_1_0());
                    	    										
                    	    pushFollow(FOLLOW_28);
                    	    lv_satisfies_21_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getDelayNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_21_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:8337:9: (otherlv_22= Comma ( (lv_satisfies_23_0= ruleQualityRequirement ) ) )*
                    	    loop123:
                    	    do {
                    	        int alt123=2;
                    	        int LA123_0 = input.LA(1);

                    	        if ( (LA123_0==Comma) ) {
                    	            alt123=1;
                    	        }


                    	        switch (alt123) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:8338:10: otherlv_22= Comma ( (lv_satisfies_23_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_22=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_22, grammarAccess.getDelayNodeAccess().getCommaKeyword_1_6_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:8342:10: ( (lv_satisfies_23_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:8343:11: (lv_satisfies_23_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:8343:11: (lv_satisfies_23_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:8344:12: lv_satisfies_23_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getDelayNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_6_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_28);
                    	    	    lv_satisfies_23_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getDelayNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_23_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop123;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 8 :
                    	    // InternalQualityBtCppParser.g:8368:4: ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:8368:4: ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:8369:5: {...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1(), 7) ) {
                    	        throw new FailedPredicateException(input, "ruleDelayNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1(), 7)");
                    	    }
                    	    // InternalQualityBtCppParser.g:8369:106: ( ({...}? => (otherlv_24= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:8370:6: ({...}? => (otherlv_24= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1(), 7);
                    	    					
                    	    // InternalQualityBtCppParser.g:8373:9: ({...}? => (otherlv_24= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:8373:10: {...}? => (otherlv_24= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleDelayNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:8373:19: (otherlv_24= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:8373:20: otherlv_24= RightParenthesis
                    	    {
                    	    otherlv_24=(Token)match(input,RightParenthesis,FOLLOW_27); 

                    	    									newLeafNode(otherlv_24, grammarAccess.getDelayNodeAccess().getRightParenthesisKeyword_1_7());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt124 >= 1 ) break loop124;
                                EarlyExitException eee =
                                    new EarlyExitException(124, input);
                                throw eee;
                        }
                        cnt124++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1()) ) {
                        throw new FailedPredicateException(input, "ruleDelayNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1());
                    				

                    }
                    break;

            }

            this_BEGIN_25=(Token)match(input,RULE_BEGIN,FOLLOW_9); 

            			newLeafNode(this_BEGIN_25, grammarAccess.getDelayNodeAccess().getBEGINTerminalRuleCall_2());
            		
            // InternalQualityBtCppParser.g:8395:3: ( (lv_child_26_0= ruleTreeNode ) )
            // InternalQualityBtCppParser.g:8396:4: (lv_child_26_0= ruleTreeNode )
            {
            // InternalQualityBtCppParser.g:8396:4: (lv_child_26_0= ruleTreeNode )
            // InternalQualityBtCppParser.g:8397:5: lv_child_26_0= ruleTreeNode
            {

            					newCompositeNode(grammarAccess.getDelayNodeAccess().getChildTreeNodeParserRuleCall_3_0());
            				
            pushFollow(FOLLOW_10);
            lv_child_26_0=ruleTreeNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getDelayNodeRule());
            					}
            					set(
            						current,
            						"child",
            						lv_child_26_0,
            						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            this_END_27=(Token)match(input,RULE_END,FOLLOW_2); 

            			newLeafNode(this_END_27, grammarAccess.getDelayNodeAccess().getENDTerminalRuleCall_4());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDelayNode"


    // $ANTLR start "entryRulePreconditionNode"
    // InternalQualityBtCppParser.g:8422:1: entryRulePreconditionNode returns [EObject current=null] : iv_rulePreconditionNode= rulePreconditionNode EOF ;
    public final EObject entryRulePreconditionNode() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePreconditionNode = null;


        try {
            // InternalQualityBtCppParser.g:8422:57: (iv_rulePreconditionNode= rulePreconditionNode EOF )
            // InternalQualityBtCppParser.g:8423:2: iv_rulePreconditionNode= rulePreconditionNode EOF
            {
             newCompositeNode(grammarAccess.getPreconditionNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_rulePreconditionNode=rulePreconditionNode();

            state._fsp--;

             current =iv_rulePreconditionNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePreconditionNode"


    // $ANTLR start "rulePreconditionNode"
    // InternalQualityBtCppParser.g:8429:1: rulePreconditionNode returns [EObject current=null] : (otherlv_0= Precondition ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END ) ;
    public final EObject rulePreconditionNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token this_BEGIN_22=null;
        Token this_END_24=null;
        AntlrDatatypeRuleToken lv_ID_5_0 = null;

        AntlrDatatypeRuleToken lv_name_8_0 = null;

        EObject lv_parameters_10_0 = null;

        EObject lv_parameters_12_0 = null;

        EObject lv_satisfices_14_0 = null;

        EObject lv_satisfices_16_0 = null;

        EObject lv_satisfies_18_0 = null;

        EObject lv_satisfies_20_0 = null;

        EObject lv_child_23_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:8435:2: ( (otherlv_0= Precondition ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END ) )
            // InternalQualityBtCppParser.g:8436:2: (otherlv_0= Precondition ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END )
            {
            // InternalQualityBtCppParser.g:8436:2: (otherlv_0= Precondition ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END )
            // InternalQualityBtCppParser.g:8437:3: otherlv_0= Precondition ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END
            {
            otherlv_0=(Token)match(input,Precondition,FOLLOW_15); 

            			newLeafNode(otherlv_0, grammarAccess.getPreconditionNodeAccess().getPreconditionKeyword_0());
            		
            // InternalQualityBtCppParser.g:8441:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt130=2;
            int LA130_0 = input.LA(1);

            if ( ((LA130_0>=Parameters && LA130_0<=Satisfies)||LA130_0==Name||LA130_0==ID||(LA130_0>=LeftParenthesis && LA130_0<=RightParenthesis)) ) {
                alt130=1;
            }
            switch (alt130) {
                case 1 :
                    // InternalQualityBtCppParser.g:8442:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:8442:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:8443:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1());
                    				
                    // InternalQualityBtCppParser.g:8446:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:8447:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:8447:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+
                    int cnt129=0;
                    loop129:
                    do {
                        int alt129=8;
                        int LA129_0 = input.LA(1);

                        if ( LA129_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1(), 0) ) {
                            alt129=1;
                        }
                        else if ( LA129_0 == ID && getUnorderedGroupHelper().canSelect(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1(), 1) ) {
                            alt129=2;
                        }
                        else if ( LA129_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1(), 2) ) {
                            alt129=3;
                        }
                        else if ( LA129_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1(), 3) ) {
                            alt129=4;
                        }
                        else if ( LA129_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1(), 4) ) {
                            alt129=5;
                        }
                        else if ( LA129_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1(), 5) ) {
                            alt129=6;
                        }
                        else if ( LA129_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1(), 6) ) {
                            alt129=7;
                        }


                        switch (alt129) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:8448:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:8448:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:8449:5: {...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1(), 0) ) {
                    	        throw new FailedPredicateException(input, "rulePreconditionNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:8449:113: ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:8450:6: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:8453:9: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:8453:10: {...}? => (otherlv_2= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "rulePreconditionNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:8453:19: (otherlv_2= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:8453:20: otherlv_2= LeftParenthesis
                    	    {
                    	    otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_2, grammarAccess.getPreconditionNodeAccess().getLeftParenthesisKeyword_1_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:8463:4: ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:8463:4: ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:8464:5: {...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1(), 1) ) {
                    	        throw new FailedPredicateException(input, "rulePreconditionNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:8464:113: ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:8465:6: ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:8468:9: ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:8468:10: {...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "rulePreconditionNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:8468:19: (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:8468:20: otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) )
                    	    {
                    	    otherlv_3=(Token)match(input,ID,FOLLOW_8); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getPreconditionNodeAccess().getIDKeyword_1_1_0());
                    	    								
                    	    otherlv_4=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getPreconditionNodeAccess().getEqualsSignKeyword_1_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:8476:9: ( (lv_ID_5_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:8477:10: (lv_ID_5_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:8477:10: (lv_ID_5_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:8478:11: lv_ID_5_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getPreconditionNodeAccess().getIDEStringParserRuleCall_1_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_15);
                    	    lv_ID_5_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getPreconditionNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"ID",
                    	    												lv_ID_5_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:8501:4: ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:8501:4: ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:8502:5: {...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1(), 2) ) {
                    	        throw new FailedPredicateException(input, "rulePreconditionNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:8502:113: ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:8503:6: ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:8506:9: ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:8506:10: {...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "rulePreconditionNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:8506:19: (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:8506:20: otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) )
                    	    {
                    	    otherlv_6=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_6, grammarAccess.getPreconditionNodeAccess().getNameKeyword_1_2_0());
                    	    								
                    	    otherlv_7=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_7, grammarAccess.getPreconditionNodeAccess().getEqualsSignKeyword_1_2_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:8514:9: ( (lv_name_8_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:8515:10: (lv_name_8_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:8515:10: (lv_name_8_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:8516:11: lv_name_8_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getPreconditionNodeAccess().getNameEStringParserRuleCall_1_2_2_0());
                    	    										
                    	    pushFollow(FOLLOW_15);
                    	    lv_name_8_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getPreconditionNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_8_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:8539:4: ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:8539:4: ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:8540:5: {...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1(), 3) ) {
                    	        throw new FailedPredicateException(input, "rulePreconditionNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:8540:113: ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:8541:6: ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:8544:9: ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:8544:10: {...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "rulePreconditionNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:8544:19: (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:8544:20: otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_9=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_9, grammarAccess.getPreconditionNodeAccess().getParametersKeyword_1_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:8548:9: ( (lv_parameters_10_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:8549:10: (lv_parameters_10_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:8549:10: (lv_parameters_10_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:8550:11: lv_parameters_10_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getPreconditionNodeAccess().getParametersParameterParserRuleCall_1_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_parameters_10_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getPreconditionNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_10_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:8567:9: (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )*
                    	    loop126:
                    	    do {
                    	        int alt126=2;
                    	        int LA126_0 = input.LA(1);

                    	        if ( (LA126_0==Comma) ) {
                    	            alt126=1;
                    	        }


                    	        switch (alt126) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:8568:10: otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_11=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_11, grammarAccess.getPreconditionNodeAccess().getCommaKeyword_1_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:8572:10: ( (lv_parameters_12_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:8573:11: (lv_parameters_12_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:8573:11: (lv_parameters_12_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:8574:12: lv_parameters_12_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getPreconditionNodeAccess().getParametersParameterParserRuleCall_1_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_parameters_12_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getPreconditionNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_12_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop126;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:8598:4: ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:8598:4: ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:8599:5: {...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1(), 4) ) {
                    	        throw new FailedPredicateException(input, "rulePreconditionNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:8599:113: ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:8600:6: ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:8603:9: ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:8603:10: {...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "rulePreconditionNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:8603:19: (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:8603:20: otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_13=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_13, grammarAccess.getPreconditionNodeAccess().getSatisficesKeyword_1_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:8607:9: ( (lv_satisfices_14_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:8608:10: (lv_satisfices_14_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:8608:10: (lv_satisfices_14_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:8609:11: lv_satisfices_14_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getPreconditionNodeAccess().getSatisficesQualityParserRuleCall_1_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfices_14_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getPreconditionNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_14_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:8626:9: (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )*
                    	    loop127:
                    	    do {
                    	        int alt127=2;
                    	        int LA127_0 = input.LA(1);

                    	        if ( (LA127_0==Comma) ) {
                    	            alt127=1;
                    	        }


                    	        switch (alt127) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:8627:10: otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_15=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_15, grammarAccess.getPreconditionNodeAccess().getCommaKeyword_1_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:8631:10: ( (lv_satisfices_16_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:8632:11: (lv_satisfices_16_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:8632:11: (lv_satisfices_16_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:8633:12: lv_satisfices_16_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getPreconditionNodeAccess().getSatisficesQualityParserRuleCall_1_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfices_16_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getPreconditionNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_16_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop127;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:8657:4: ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:8657:4: ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:8658:5: {...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1(), 5) ) {
                    	        throw new FailedPredicateException(input, "rulePreconditionNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:8658:113: ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:8659:6: ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:8662:9: ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:8662:10: {...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "rulePreconditionNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:8662:19: (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:8662:20: otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_17=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_17, grammarAccess.getPreconditionNodeAccess().getSatisfiesKeyword_1_5_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:8666:9: ( (lv_satisfies_18_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:8667:10: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:8667:10: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:8668:11: lv_satisfies_18_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getPreconditionNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_5_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfies_18_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getPreconditionNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_18_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:8685:9: (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )*
                    	    loop128:
                    	    do {
                    	        int alt128=2;
                    	        int LA128_0 = input.LA(1);

                    	        if ( (LA128_0==Comma) ) {
                    	            alt128=1;
                    	        }


                    	        switch (alt128) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:8686:10: otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_19=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_19, grammarAccess.getPreconditionNodeAccess().getCommaKeyword_1_5_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:8690:10: ( (lv_satisfies_20_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:8691:11: (lv_satisfies_20_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:8691:11: (lv_satisfies_20_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:8692:12: lv_satisfies_20_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getPreconditionNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_5_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfies_20_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getPreconditionNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_20_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop128;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 7 :
                    	    // InternalQualityBtCppParser.g:8716:4: ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:8716:4: ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:8717:5: {...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1(), 6) ) {
                    	        throw new FailedPredicateException(input, "rulePreconditionNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1(), 6)");
                    	    }
                    	    // InternalQualityBtCppParser.g:8717:113: ( ({...}? => (otherlv_21= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:8718:6: ({...}? => (otherlv_21= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1(), 6);
                    	    					
                    	    // InternalQualityBtCppParser.g:8721:9: ({...}? => (otherlv_21= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:8721:10: {...}? => (otherlv_21= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "rulePreconditionNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:8721:19: (otherlv_21= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:8721:20: otherlv_21= RightParenthesis
                    	    {
                    	    otherlv_21=(Token)match(input,RightParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_21, grammarAccess.getPreconditionNodeAccess().getRightParenthesisKeyword_1_6());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt129 >= 1 ) break loop129;
                                EarlyExitException eee =
                                    new EarlyExitException(129, input);
                                throw eee;
                        }
                        cnt129++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1()) ) {
                        throw new FailedPredicateException(input, "rulePreconditionNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1());
                    				

                    }
                    break;

            }

            this_BEGIN_22=(Token)match(input,RULE_BEGIN,FOLLOW_9); 

            			newLeafNode(this_BEGIN_22, grammarAccess.getPreconditionNodeAccess().getBEGINTerminalRuleCall_2());
            		
            // InternalQualityBtCppParser.g:8743:3: ( (lv_child_23_0= ruleTreeNode ) )
            // InternalQualityBtCppParser.g:8744:4: (lv_child_23_0= ruleTreeNode )
            {
            // InternalQualityBtCppParser.g:8744:4: (lv_child_23_0= ruleTreeNode )
            // InternalQualityBtCppParser.g:8745:5: lv_child_23_0= ruleTreeNode
            {

            					newCompositeNode(grammarAccess.getPreconditionNodeAccess().getChildTreeNodeParserRuleCall_3_0());
            				
            pushFollow(FOLLOW_10);
            lv_child_23_0=ruleTreeNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getPreconditionNodeRule());
            					}
            					set(
            						current,
            						"child",
            						lv_child_23_0,
            						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            this_END_24=(Token)match(input,RULE_END,FOLLOW_2); 

            			newLeafNode(this_END_24, grammarAccess.getPreconditionNodeAccess().getENDTerminalRuleCall_4());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePreconditionNode"


    // $ANTLR start "entryRuleEntryUpdatedDecoratorNode"
    // InternalQualityBtCppParser.g:8770:1: entryRuleEntryUpdatedDecoratorNode returns [EObject current=null] : iv_ruleEntryUpdatedDecoratorNode= ruleEntryUpdatedDecoratorNode EOF ;
    public final EObject entryRuleEntryUpdatedDecoratorNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEntryUpdatedDecoratorNode = null;


        try {
            // InternalQualityBtCppParser.g:8770:66: (iv_ruleEntryUpdatedDecoratorNode= ruleEntryUpdatedDecoratorNode EOF )
            // InternalQualityBtCppParser.g:8771:2: iv_ruleEntryUpdatedDecoratorNode= ruleEntryUpdatedDecoratorNode EOF
            {
             newCompositeNode(grammarAccess.getEntryUpdatedDecoratorNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleEntryUpdatedDecoratorNode=ruleEntryUpdatedDecoratorNode();

            state._fsp--;

             current =iv_ruleEntryUpdatedDecoratorNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEntryUpdatedDecoratorNode"


    // $ANTLR start "ruleEntryUpdatedDecoratorNode"
    // InternalQualityBtCppParser.g:8777:1: ruleEntryUpdatedDecoratorNode returns [EObject current=null] : (otherlv_0= EntryUpdatedDecorator ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END ) ;
    public final EObject ruleEntryUpdatedDecoratorNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token this_BEGIN_22=null;
        Token this_END_24=null;
        AntlrDatatypeRuleToken lv_ID_5_0 = null;

        AntlrDatatypeRuleToken lv_name_8_0 = null;

        EObject lv_parameters_10_0 = null;

        EObject lv_parameters_12_0 = null;

        EObject lv_satisfices_14_0 = null;

        EObject lv_satisfices_16_0 = null;

        EObject lv_satisfies_18_0 = null;

        EObject lv_satisfies_20_0 = null;

        EObject lv_child_23_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:8783:2: ( (otherlv_0= EntryUpdatedDecorator ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END ) )
            // InternalQualityBtCppParser.g:8784:2: (otherlv_0= EntryUpdatedDecorator ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END )
            {
            // InternalQualityBtCppParser.g:8784:2: (otherlv_0= EntryUpdatedDecorator ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END )
            // InternalQualityBtCppParser.g:8785:3: otherlv_0= EntryUpdatedDecorator ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END
            {
            otherlv_0=(Token)match(input,EntryUpdatedDecorator,FOLLOW_15); 

            			newLeafNode(otherlv_0, grammarAccess.getEntryUpdatedDecoratorNodeAccess().getEntryUpdatedDecoratorKeyword_0());
            		
            // InternalQualityBtCppParser.g:8789:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt135=2;
            int LA135_0 = input.LA(1);

            if ( ((LA135_0>=Parameters && LA135_0<=Satisfies)||LA135_0==Name||LA135_0==ID||(LA135_0>=LeftParenthesis && LA135_0<=RightParenthesis)) ) {
                alt135=1;
            }
            switch (alt135) {
                case 1 :
                    // InternalQualityBtCppParser.g:8790:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:8790:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:8791:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1());
                    				
                    // InternalQualityBtCppParser.g:8794:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:8795:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:8795:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+
                    int cnt134=0;
                    loop134:
                    do {
                        int alt134=8;
                        int LA134_0 = input.LA(1);

                        if ( LA134_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1(), 0) ) {
                            alt134=1;
                        }
                        else if ( LA134_0 == ID && getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1(), 1) ) {
                            alt134=2;
                        }
                        else if ( LA134_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1(), 2) ) {
                            alt134=3;
                        }
                        else if ( LA134_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1(), 3) ) {
                            alt134=4;
                        }
                        else if ( LA134_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1(), 4) ) {
                            alt134=5;
                        }
                        else if ( LA134_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1(), 5) ) {
                            alt134=6;
                        }
                        else if ( LA134_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1(), 6) ) {
                            alt134=7;
                        }


                        switch (alt134) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:8796:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:8796:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:8797:5: {...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleEntryUpdatedDecoratorNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:8797:122: ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:8798:6: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:8801:9: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:8801:10: {...}? => (otherlv_2= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleEntryUpdatedDecoratorNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:8801:19: (otherlv_2= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:8801:20: otherlv_2= LeftParenthesis
                    	    {
                    	    otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_2, grammarAccess.getEntryUpdatedDecoratorNodeAccess().getLeftParenthesisKeyword_1_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:8811:4: ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:8811:4: ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:8812:5: {...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleEntryUpdatedDecoratorNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:8812:122: ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:8813:6: ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:8816:9: ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:8816:10: {...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleEntryUpdatedDecoratorNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:8816:19: (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:8816:20: otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) )
                    	    {
                    	    otherlv_3=(Token)match(input,ID,FOLLOW_8); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getEntryUpdatedDecoratorNodeAccess().getIDKeyword_1_1_0());
                    	    								
                    	    otherlv_4=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getEntryUpdatedDecoratorNodeAccess().getEqualsSignKeyword_1_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:8824:9: ( (lv_ID_5_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:8825:10: (lv_ID_5_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:8825:10: (lv_ID_5_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:8826:11: lv_ID_5_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getIDEStringParserRuleCall_1_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_15);
                    	    lv_ID_5_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getEntryUpdatedDecoratorNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"ID",
                    	    												lv_ID_5_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:8849:4: ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:8849:4: ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:8850:5: {...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleEntryUpdatedDecoratorNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:8850:122: ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:8851:6: ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:8854:9: ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:8854:10: {...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleEntryUpdatedDecoratorNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:8854:19: (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:8854:20: otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) )
                    	    {
                    	    otherlv_6=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_6, grammarAccess.getEntryUpdatedDecoratorNodeAccess().getNameKeyword_1_2_0());
                    	    								
                    	    otherlv_7=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_7, grammarAccess.getEntryUpdatedDecoratorNodeAccess().getEqualsSignKeyword_1_2_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:8862:9: ( (lv_name_8_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:8863:10: (lv_name_8_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:8863:10: (lv_name_8_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:8864:11: lv_name_8_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getNameEStringParserRuleCall_1_2_2_0());
                    	    										
                    	    pushFollow(FOLLOW_15);
                    	    lv_name_8_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getEntryUpdatedDecoratorNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_8_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:8887:4: ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:8887:4: ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:8888:5: {...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleEntryUpdatedDecoratorNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:8888:122: ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:8889:6: ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:8892:9: ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:8892:10: {...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleEntryUpdatedDecoratorNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:8892:19: (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:8892:20: otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_9=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_9, grammarAccess.getEntryUpdatedDecoratorNodeAccess().getParametersKeyword_1_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:8896:9: ( (lv_parameters_10_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:8897:10: (lv_parameters_10_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:8897:10: (lv_parameters_10_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:8898:11: lv_parameters_10_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getParametersParameterParserRuleCall_1_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_parameters_10_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getEntryUpdatedDecoratorNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_10_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:8915:9: (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )*
                    	    loop131:
                    	    do {
                    	        int alt131=2;
                    	        int LA131_0 = input.LA(1);

                    	        if ( (LA131_0==Comma) ) {
                    	            alt131=1;
                    	        }


                    	        switch (alt131) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:8916:10: otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_11=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_11, grammarAccess.getEntryUpdatedDecoratorNodeAccess().getCommaKeyword_1_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:8920:10: ( (lv_parameters_12_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:8921:11: (lv_parameters_12_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:8921:11: (lv_parameters_12_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:8922:12: lv_parameters_12_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getParametersParameterParserRuleCall_1_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_parameters_12_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getEntryUpdatedDecoratorNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_12_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop131;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:8946:4: ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:8946:4: ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:8947:5: {...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleEntryUpdatedDecoratorNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:8947:122: ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:8948:6: ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:8951:9: ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:8951:10: {...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleEntryUpdatedDecoratorNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:8951:19: (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:8951:20: otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_13=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_13, grammarAccess.getEntryUpdatedDecoratorNodeAccess().getSatisficesKeyword_1_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:8955:9: ( (lv_satisfices_14_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:8956:10: (lv_satisfices_14_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:8956:10: (lv_satisfices_14_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:8957:11: lv_satisfices_14_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getSatisficesQualityParserRuleCall_1_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfices_14_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getEntryUpdatedDecoratorNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_14_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:8974:9: (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )*
                    	    loop132:
                    	    do {
                    	        int alt132=2;
                    	        int LA132_0 = input.LA(1);

                    	        if ( (LA132_0==Comma) ) {
                    	            alt132=1;
                    	        }


                    	        switch (alt132) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:8975:10: otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_15=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_15, grammarAccess.getEntryUpdatedDecoratorNodeAccess().getCommaKeyword_1_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:8979:10: ( (lv_satisfices_16_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:8980:11: (lv_satisfices_16_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:8980:11: (lv_satisfices_16_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:8981:12: lv_satisfices_16_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getSatisficesQualityParserRuleCall_1_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfices_16_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getEntryUpdatedDecoratorNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_16_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop132;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:9005:4: ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:9005:4: ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:9006:5: {...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleEntryUpdatedDecoratorNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:9006:122: ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:9007:6: ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:9010:9: ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:9010:10: {...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleEntryUpdatedDecoratorNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:9010:19: (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:9010:20: otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_17=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_17, grammarAccess.getEntryUpdatedDecoratorNodeAccess().getSatisfiesKeyword_1_5_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:9014:9: ( (lv_satisfies_18_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:9015:10: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:9015:10: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:9016:11: lv_satisfies_18_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_5_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfies_18_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getEntryUpdatedDecoratorNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_18_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:9033:9: (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )*
                    	    loop133:
                    	    do {
                    	        int alt133=2;
                    	        int LA133_0 = input.LA(1);

                    	        if ( (LA133_0==Comma) ) {
                    	            alt133=1;
                    	        }


                    	        switch (alt133) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:9034:10: otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_19=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_19, grammarAccess.getEntryUpdatedDecoratorNodeAccess().getCommaKeyword_1_5_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:9038:10: ( (lv_satisfies_20_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:9039:11: (lv_satisfies_20_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:9039:11: (lv_satisfies_20_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:9040:12: lv_satisfies_20_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_5_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfies_20_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getEntryUpdatedDecoratorNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_20_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop133;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 7 :
                    	    // InternalQualityBtCppParser.g:9064:4: ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:9064:4: ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:9065:5: {...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1(), 6) ) {
                    	        throw new FailedPredicateException(input, "ruleEntryUpdatedDecoratorNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1(), 6)");
                    	    }
                    	    // InternalQualityBtCppParser.g:9065:122: ( ({...}? => (otherlv_21= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:9066:6: ({...}? => (otherlv_21= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1(), 6);
                    	    					
                    	    // InternalQualityBtCppParser.g:9069:9: ({...}? => (otherlv_21= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:9069:10: {...}? => (otherlv_21= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleEntryUpdatedDecoratorNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:9069:19: (otherlv_21= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:9069:20: otherlv_21= RightParenthesis
                    	    {
                    	    otherlv_21=(Token)match(input,RightParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_21, grammarAccess.getEntryUpdatedDecoratorNodeAccess().getRightParenthesisKeyword_1_6());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt134 >= 1 ) break loop134;
                                EarlyExitException eee =
                                    new EarlyExitException(134, input);
                                throw eee;
                        }
                        cnt134++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1()) ) {
                        throw new FailedPredicateException(input, "ruleEntryUpdatedDecoratorNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1());
                    				

                    }
                    break;

            }

            this_BEGIN_22=(Token)match(input,RULE_BEGIN,FOLLOW_9); 

            			newLeafNode(this_BEGIN_22, grammarAccess.getEntryUpdatedDecoratorNodeAccess().getBEGINTerminalRuleCall_2());
            		
            // InternalQualityBtCppParser.g:9091:3: ( (lv_child_23_0= ruleTreeNode ) )
            // InternalQualityBtCppParser.g:9092:4: (lv_child_23_0= ruleTreeNode )
            {
            // InternalQualityBtCppParser.g:9092:4: (lv_child_23_0= ruleTreeNode )
            // InternalQualityBtCppParser.g:9093:5: lv_child_23_0= ruleTreeNode
            {

            					newCompositeNode(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getChildTreeNodeParserRuleCall_3_0());
            				
            pushFollow(FOLLOW_10);
            lv_child_23_0=ruleTreeNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getEntryUpdatedDecoratorNodeRule());
            					}
            					set(
            						current,
            						"child",
            						lv_child_23_0,
            						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            this_END_24=(Token)match(input,RULE_END,FOLLOW_2); 

            			newLeafNode(this_END_24, grammarAccess.getEntryUpdatedDecoratorNodeAccess().getENDTerminalRuleCall_4());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEntryUpdatedDecoratorNode"


    // $ANTLR start "entryRuleRunOnceNode"
    // InternalQualityBtCppParser.g:9118:1: entryRuleRunOnceNode returns [EObject current=null] : iv_ruleRunOnceNode= ruleRunOnceNode EOF ;
    public final EObject entryRuleRunOnceNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRunOnceNode = null;


        try {
            // InternalQualityBtCppParser.g:9118:52: (iv_ruleRunOnceNode= ruleRunOnceNode EOF )
            // InternalQualityBtCppParser.g:9119:2: iv_ruleRunOnceNode= ruleRunOnceNode EOF
            {
             newCompositeNode(grammarAccess.getRunOnceNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleRunOnceNode=ruleRunOnceNode();

            state._fsp--;

             current =iv_ruleRunOnceNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRunOnceNode"


    // $ANTLR start "ruleRunOnceNode"
    // InternalQualityBtCppParser.g:9125:1: ruleRunOnceNode returns [EObject current=null] : (otherlv_0= RunOnce ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END ) ;
    public final EObject ruleRunOnceNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token this_BEGIN_22=null;
        Token this_END_24=null;
        AntlrDatatypeRuleToken lv_ID_5_0 = null;

        AntlrDatatypeRuleToken lv_name_8_0 = null;

        EObject lv_parameters_10_0 = null;

        EObject lv_parameters_12_0 = null;

        EObject lv_satisfices_14_0 = null;

        EObject lv_satisfices_16_0 = null;

        EObject lv_satisfies_18_0 = null;

        EObject lv_satisfies_20_0 = null;

        EObject lv_child_23_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:9131:2: ( (otherlv_0= RunOnce ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END ) )
            // InternalQualityBtCppParser.g:9132:2: (otherlv_0= RunOnce ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END )
            {
            // InternalQualityBtCppParser.g:9132:2: (otherlv_0= RunOnce ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END )
            // InternalQualityBtCppParser.g:9133:3: otherlv_0= RunOnce ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END
            {
            otherlv_0=(Token)match(input,RunOnce,FOLLOW_15); 

            			newLeafNode(otherlv_0, grammarAccess.getRunOnceNodeAccess().getRunOnceKeyword_0());
            		
            // InternalQualityBtCppParser.g:9137:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt140=2;
            int LA140_0 = input.LA(1);

            if ( ((LA140_0>=Parameters && LA140_0<=Satisfies)||LA140_0==Name||LA140_0==ID||(LA140_0>=LeftParenthesis && LA140_0<=RightParenthesis)) ) {
                alt140=1;
            }
            switch (alt140) {
                case 1 :
                    // InternalQualityBtCppParser.g:9138:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:9138:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:9139:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1());
                    				
                    // InternalQualityBtCppParser.g:9142:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:9143:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:9143:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+
                    int cnt139=0;
                    loop139:
                    do {
                        int alt139=8;
                        int LA139_0 = input.LA(1);

                        if ( LA139_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1(), 0) ) {
                            alt139=1;
                        }
                        else if ( LA139_0 == ID && getUnorderedGroupHelper().canSelect(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1(), 1) ) {
                            alt139=2;
                        }
                        else if ( LA139_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1(), 2) ) {
                            alt139=3;
                        }
                        else if ( LA139_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1(), 3) ) {
                            alt139=4;
                        }
                        else if ( LA139_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1(), 4) ) {
                            alt139=5;
                        }
                        else if ( LA139_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1(), 5) ) {
                            alt139=6;
                        }
                        else if ( LA139_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1(), 6) ) {
                            alt139=7;
                        }


                        switch (alt139) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:9144:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:9144:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:9145:5: {...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleRunOnceNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:9145:108: ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:9146:6: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:9149:9: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:9149:10: {...}? => (otherlv_2= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleRunOnceNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:9149:19: (otherlv_2= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:9149:20: otherlv_2= LeftParenthesis
                    	    {
                    	    otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_2, grammarAccess.getRunOnceNodeAccess().getLeftParenthesisKeyword_1_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:9159:4: ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:9159:4: ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:9160:5: {...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleRunOnceNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:9160:108: ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:9161:6: ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:9164:9: ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:9164:10: {...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleRunOnceNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:9164:19: (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:9164:20: otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) )
                    	    {
                    	    otherlv_3=(Token)match(input,ID,FOLLOW_8); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getRunOnceNodeAccess().getIDKeyword_1_1_0());
                    	    								
                    	    otherlv_4=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getRunOnceNodeAccess().getEqualsSignKeyword_1_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:9172:9: ( (lv_ID_5_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:9173:10: (lv_ID_5_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:9173:10: (lv_ID_5_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:9174:11: lv_ID_5_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getRunOnceNodeAccess().getIDEStringParserRuleCall_1_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_15);
                    	    lv_ID_5_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getRunOnceNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"ID",
                    	    												lv_ID_5_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:9197:4: ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:9197:4: ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:9198:5: {...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleRunOnceNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:9198:108: ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:9199:6: ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:9202:9: ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:9202:10: {...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleRunOnceNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:9202:19: (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:9202:20: otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) )
                    	    {
                    	    otherlv_6=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_6, grammarAccess.getRunOnceNodeAccess().getNameKeyword_1_2_0());
                    	    								
                    	    otherlv_7=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_7, grammarAccess.getRunOnceNodeAccess().getEqualsSignKeyword_1_2_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:9210:9: ( (lv_name_8_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:9211:10: (lv_name_8_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:9211:10: (lv_name_8_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:9212:11: lv_name_8_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getRunOnceNodeAccess().getNameEStringParserRuleCall_1_2_2_0());
                    	    										
                    	    pushFollow(FOLLOW_15);
                    	    lv_name_8_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getRunOnceNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_8_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:9235:4: ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:9235:4: ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:9236:5: {...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleRunOnceNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:9236:108: ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:9237:6: ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:9240:9: ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:9240:10: {...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleRunOnceNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:9240:19: (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:9240:20: otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_9=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_9, grammarAccess.getRunOnceNodeAccess().getParametersKeyword_1_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:9244:9: ( (lv_parameters_10_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:9245:10: (lv_parameters_10_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:9245:10: (lv_parameters_10_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:9246:11: lv_parameters_10_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getRunOnceNodeAccess().getParametersParameterParserRuleCall_1_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_parameters_10_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getRunOnceNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_10_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:9263:9: (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )*
                    	    loop136:
                    	    do {
                    	        int alt136=2;
                    	        int LA136_0 = input.LA(1);

                    	        if ( (LA136_0==Comma) ) {
                    	            alt136=1;
                    	        }


                    	        switch (alt136) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:9264:10: otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_11=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_11, grammarAccess.getRunOnceNodeAccess().getCommaKeyword_1_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:9268:10: ( (lv_parameters_12_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:9269:11: (lv_parameters_12_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:9269:11: (lv_parameters_12_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:9270:12: lv_parameters_12_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getRunOnceNodeAccess().getParametersParameterParserRuleCall_1_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_parameters_12_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getRunOnceNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_12_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop136;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:9294:4: ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:9294:4: ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:9295:5: {...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleRunOnceNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:9295:108: ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:9296:6: ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:9299:9: ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:9299:10: {...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleRunOnceNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:9299:19: (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:9299:20: otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_13=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_13, grammarAccess.getRunOnceNodeAccess().getSatisficesKeyword_1_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:9303:9: ( (lv_satisfices_14_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:9304:10: (lv_satisfices_14_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:9304:10: (lv_satisfices_14_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:9305:11: lv_satisfices_14_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getRunOnceNodeAccess().getSatisficesQualityParserRuleCall_1_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfices_14_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getRunOnceNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_14_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:9322:9: (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )*
                    	    loop137:
                    	    do {
                    	        int alt137=2;
                    	        int LA137_0 = input.LA(1);

                    	        if ( (LA137_0==Comma) ) {
                    	            alt137=1;
                    	        }


                    	        switch (alt137) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:9323:10: otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_15=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_15, grammarAccess.getRunOnceNodeAccess().getCommaKeyword_1_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:9327:10: ( (lv_satisfices_16_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:9328:11: (lv_satisfices_16_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:9328:11: (lv_satisfices_16_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:9329:12: lv_satisfices_16_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getRunOnceNodeAccess().getSatisficesQualityParserRuleCall_1_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfices_16_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getRunOnceNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_16_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop137;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:9353:4: ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:9353:4: ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:9354:5: {...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleRunOnceNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:9354:108: ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:9355:6: ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:9358:9: ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:9358:10: {...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleRunOnceNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:9358:19: (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:9358:20: otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_17=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_17, grammarAccess.getRunOnceNodeAccess().getSatisfiesKeyword_1_5_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:9362:9: ( (lv_satisfies_18_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:9363:10: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:9363:10: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:9364:11: lv_satisfies_18_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getRunOnceNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_5_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfies_18_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getRunOnceNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_18_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:9381:9: (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )*
                    	    loop138:
                    	    do {
                    	        int alt138=2;
                    	        int LA138_0 = input.LA(1);

                    	        if ( (LA138_0==Comma) ) {
                    	            alt138=1;
                    	        }


                    	        switch (alt138) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:9382:10: otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_19=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_19, grammarAccess.getRunOnceNodeAccess().getCommaKeyword_1_5_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:9386:10: ( (lv_satisfies_20_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:9387:11: (lv_satisfies_20_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:9387:11: (lv_satisfies_20_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:9388:12: lv_satisfies_20_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getRunOnceNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_5_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfies_20_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getRunOnceNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_20_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop138;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 7 :
                    	    // InternalQualityBtCppParser.g:9412:4: ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:9412:4: ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:9413:5: {...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1(), 6) ) {
                    	        throw new FailedPredicateException(input, "ruleRunOnceNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1(), 6)");
                    	    }
                    	    // InternalQualityBtCppParser.g:9413:108: ( ({...}? => (otherlv_21= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:9414:6: ({...}? => (otherlv_21= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1(), 6);
                    	    					
                    	    // InternalQualityBtCppParser.g:9417:9: ({...}? => (otherlv_21= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:9417:10: {...}? => (otherlv_21= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleRunOnceNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:9417:19: (otherlv_21= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:9417:20: otherlv_21= RightParenthesis
                    	    {
                    	    otherlv_21=(Token)match(input,RightParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_21, grammarAccess.getRunOnceNodeAccess().getRightParenthesisKeyword_1_6());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt139 >= 1 ) break loop139;
                                EarlyExitException eee =
                                    new EarlyExitException(139, input);
                                throw eee;
                        }
                        cnt139++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1()) ) {
                        throw new FailedPredicateException(input, "ruleRunOnceNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1());
                    				

                    }
                    break;

            }

            this_BEGIN_22=(Token)match(input,RULE_BEGIN,FOLLOW_9); 

            			newLeafNode(this_BEGIN_22, grammarAccess.getRunOnceNodeAccess().getBEGINTerminalRuleCall_2());
            		
            // InternalQualityBtCppParser.g:9439:3: ( (lv_child_23_0= ruleTreeNode ) )
            // InternalQualityBtCppParser.g:9440:4: (lv_child_23_0= ruleTreeNode )
            {
            // InternalQualityBtCppParser.g:9440:4: (lv_child_23_0= ruleTreeNode )
            // InternalQualityBtCppParser.g:9441:5: lv_child_23_0= ruleTreeNode
            {

            					newCompositeNode(grammarAccess.getRunOnceNodeAccess().getChildTreeNodeParserRuleCall_3_0());
            				
            pushFollow(FOLLOW_10);
            lv_child_23_0=ruleTreeNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getRunOnceNodeRule());
            					}
            					set(
            						current,
            						"child",
            						lv_child_23_0,
            						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            this_END_24=(Token)match(input,RULE_END,FOLLOW_2); 

            			newLeafNode(this_END_24, grammarAccess.getRunOnceNodeAccess().getENDTerminalRuleCall_4());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRunOnceNode"


    // $ANTLR start "entryRuleLoopNode"
    // InternalQualityBtCppParser.g:9466:1: entryRuleLoopNode returns [EObject current=null] : iv_ruleLoopNode= ruleLoopNode EOF ;
    public final EObject entryRuleLoopNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLoopNode = null;


        try {
            // InternalQualityBtCppParser.g:9466:49: (iv_ruleLoopNode= ruleLoopNode EOF )
            // InternalQualityBtCppParser.g:9467:2: iv_ruleLoopNode= ruleLoopNode EOF
            {
             newCompositeNode(grammarAccess.getLoopNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleLoopNode=ruleLoopNode();

            state._fsp--;

             current =iv_ruleLoopNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLoopNode"


    // $ANTLR start "ruleLoopNode"
    // InternalQualityBtCppParser.g:9473:1: ruleLoopNode returns [EObject current=null] : (otherlv_0= Loop ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END ) ;
    public final EObject ruleLoopNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token this_BEGIN_22=null;
        Token this_END_24=null;
        AntlrDatatypeRuleToken lv_ID_5_0 = null;

        AntlrDatatypeRuleToken lv_name_8_0 = null;

        EObject lv_parameters_10_0 = null;

        EObject lv_parameters_12_0 = null;

        EObject lv_satisfices_14_0 = null;

        EObject lv_satisfices_16_0 = null;

        EObject lv_satisfies_18_0 = null;

        EObject lv_satisfies_20_0 = null;

        EObject lv_child_23_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:9479:2: ( (otherlv_0= Loop ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END ) )
            // InternalQualityBtCppParser.g:9480:2: (otherlv_0= Loop ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END )
            {
            // InternalQualityBtCppParser.g:9480:2: (otherlv_0= Loop ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END )
            // InternalQualityBtCppParser.g:9481:3: otherlv_0= Loop ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END
            {
            otherlv_0=(Token)match(input,Loop,FOLLOW_15); 

            			newLeafNode(otherlv_0, grammarAccess.getLoopNodeAccess().getLoopKeyword_0());
            		
            // InternalQualityBtCppParser.g:9485:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt145=2;
            int LA145_0 = input.LA(1);

            if ( ((LA145_0>=Parameters && LA145_0<=Satisfies)||LA145_0==Name||LA145_0==ID||(LA145_0>=LeftParenthesis && LA145_0<=RightParenthesis)) ) {
                alt145=1;
            }
            switch (alt145) {
                case 1 :
                    // InternalQualityBtCppParser.g:9486:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:9486:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:9487:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1());
                    				
                    // InternalQualityBtCppParser.g:9490:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:9491:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:9491:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+
                    int cnt144=0;
                    loop144:
                    do {
                        int alt144=8;
                        int LA144_0 = input.LA(1);

                        if ( LA144_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1(), 0) ) {
                            alt144=1;
                        }
                        else if ( LA144_0 == ID && getUnorderedGroupHelper().canSelect(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1(), 1) ) {
                            alt144=2;
                        }
                        else if ( LA144_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1(), 2) ) {
                            alt144=3;
                        }
                        else if ( LA144_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1(), 3) ) {
                            alt144=4;
                        }
                        else if ( LA144_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1(), 4) ) {
                            alt144=5;
                        }
                        else if ( LA144_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1(), 5) ) {
                            alt144=6;
                        }
                        else if ( LA144_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1(), 6) ) {
                            alt144=7;
                        }


                        switch (alt144) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:9492:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:9492:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:9493:5: {...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleLoopNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:9493:105: ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:9494:6: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:9497:9: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:9497:10: {...}? => (otherlv_2= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleLoopNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:9497:19: (otherlv_2= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:9497:20: otherlv_2= LeftParenthesis
                    	    {
                    	    otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_2, grammarAccess.getLoopNodeAccess().getLeftParenthesisKeyword_1_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:9507:4: ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:9507:4: ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:9508:5: {...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleLoopNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:9508:105: ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:9509:6: ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:9512:9: ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:9512:10: {...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleLoopNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:9512:19: (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:9512:20: otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) )
                    	    {
                    	    otherlv_3=(Token)match(input,ID,FOLLOW_8); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getLoopNodeAccess().getIDKeyword_1_1_0());
                    	    								
                    	    otherlv_4=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getLoopNodeAccess().getEqualsSignKeyword_1_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:9520:9: ( (lv_ID_5_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:9521:10: (lv_ID_5_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:9521:10: (lv_ID_5_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:9522:11: lv_ID_5_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getLoopNodeAccess().getIDEStringParserRuleCall_1_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_15);
                    	    lv_ID_5_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getLoopNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"ID",
                    	    												lv_ID_5_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:9545:4: ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:9545:4: ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:9546:5: {...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleLoopNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:9546:105: ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:9547:6: ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:9550:9: ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:9550:10: {...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleLoopNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:9550:19: (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:9550:20: otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) )
                    	    {
                    	    otherlv_6=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_6, grammarAccess.getLoopNodeAccess().getNameKeyword_1_2_0());
                    	    								
                    	    otherlv_7=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_7, grammarAccess.getLoopNodeAccess().getEqualsSignKeyword_1_2_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:9558:9: ( (lv_name_8_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:9559:10: (lv_name_8_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:9559:10: (lv_name_8_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:9560:11: lv_name_8_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getLoopNodeAccess().getNameEStringParserRuleCall_1_2_2_0());
                    	    										
                    	    pushFollow(FOLLOW_15);
                    	    lv_name_8_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getLoopNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_8_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:9583:4: ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:9583:4: ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:9584:5: {...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleLoopNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:9584:105: ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:9585:6: ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:9588:9: ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:9588:10: {...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleLoopNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:9588:19: (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:9588:20: otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_9=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_9, grammarAccess.getLoopNodeAccess().getParametersKeyword_1_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:9592:9: ( (lv_parameters_10_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:9593:10: (lv_parameters_10_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:9593:10: (lv_parameters_10_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:9594:11: lv_parameters_10_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getLoopNodeAccess().getParametersParameterParserRuleCall_1_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_parameters_10_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getLoopNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_10_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:9611:9: (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )*
                    	    loop141:
                    	    do {
                    	        int alt141=2;
                    	        int LA141_0 = input.LA(1);

                    	        if ( (LA141_0==Comma) ) {
                    	            alt141=1;
                    	        }


                    	        switch (alt141) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:9612:10: otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_11=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_11, grammarAccess.getLoopNodeAccess().getCommaKeyword_1_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:9616:10: ( (lv_parameters_12_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:9617:11: (lv_parameters_12_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:9617:11: (lv_parameters_12_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:9618:12: lv_parameters_12_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getLoopNodeAccess().getParametersParameterParserRuleCall_1_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_parameters_12_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getLoopNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_12_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop141;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:9642:4: ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:9642:4: ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:9643:5: {...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleLoopNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:9643:105: ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:9644:6: ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:9647:9: ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:9647:10: {...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleLoopNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:9647:19: (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:9647:20: otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_13=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_13, grammarAccess.getLoopNodeAccess().getSatisficesKeyword_1_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:9651:9: ( (lv_satisfices_14_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:9652:10: (lv_satisfices_14_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:9652:10: (lv_satisfices_14_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:9653:11: lv_satisfices_14_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getLoopNodeAccess().getSatisficesQualityParserRuleCall_1_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfices_14_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getLoopNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_14_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:9670:9: (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )*
                    	    loop142:
                    	    do {
                    	        int alt142=2;
                    	        int LA142_0 = input.LA(1);

                    	        if ( (LA142_0==Comma) ) {
                    	            alt142=1;
                    	        }


                    	        switch (alt142) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:9671:10: otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_15=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_15, grammarAccess.getLoopNodeAccess().getCommaKeyword_1_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:9675:10: ( (lv_satisfices_16_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:9676:11: (lv_satisfices_16_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:9676:11: (lv_satisfices_16_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:9677:12: lv_satisfices_16_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getLoopNodeAccess().getSatisficesQualityParserRuleCall_1_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfices_16_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getLoopNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_16_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop142;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:9701:4: ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:9701:4: ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:9702:5: {...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleLoopNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:9702:105: ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:9703:6: ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:9706:9: ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:9706:10: {...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleLoopNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:9706:19: (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:9706:20: otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_17=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_17, grammarAccess.getLoopNodeAccess().getSatisfiesKeyword_1_5_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:9710:9: ( (lv_satisfies_18_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:9711:10: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:9711:10: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:9712:11: lv_satisfies_18_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getLoopNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_5_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfies_18_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getLoopNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_18_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:9729:9: (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )*
                    	    loop143:
                    	    do {
                    	        int alt143=2;
                    	        int LA143_0 = input.LA(1);

                    	        if ( (LA143_0==Comma) ) {
                    	            alt143=1;
                    	        }


                    	        switch (alt143) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:9730:10: otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_19=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_19, grammarAccess.getLoopNodeAccess().getCommaKeyword_1_5_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:9734:10: ( (lv_satisfies_20_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:9735:11: (lv_satisfies_20_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:9735:11: (lv_satisfies_20_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:9736:12: lv_satisfies_20_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getLoopNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_5_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfies_20_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getLoopNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_20_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop143;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 7 :
                    	    // InternalQualityBtCppParser.g:9760:4: ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:9760:4: ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:9761:5: {...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1(), 6) ) {
                    	        throw new FailedPredicateException(input, "ruleLoopNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1(), 6)");
                    	    }
                    	    // InternalQualityBtCppParser.g:9761:105: ( ({...}? => (otherlv_21= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:9762:6: ({...}? => (otherlv_21= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1(), 6);
                    	    					
                    	    // InternalQualityBtCppParser.g:9765:9: ({...}? => (otherlv_21= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:9765:10: {...}? => (otherlv_21= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleLoopNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:9765:19: (otherlv_21= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:9765:20: otherlv_21= RightParenthesis
                    	    {
                    	    otherlv_21=(Token)match(input,RightParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_21, grammarAccess.getLoopNodeAccess().getRightParenthesisKeyword_1_6());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt144 >= 1 ) break loop144;
                                EarlyExitException eee =
                                    new EarlyExitException(144, input);
                                throw eee;
                        }
                        cnt144++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1()) ) {
                        throw new FailedPredicateException(input, "ruleLoopNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1());
                    				

                    }
                    break;

            }

            this_BEGIN_22=(Token)match(input,RULE_BEGIN,FOLLOW_9); 

            			newLeafNode(this_BEGIN_22, grammarAccess.getLoopNodeAccess().getBEGINTerminalRuleCall_2());
            		
            // InternalQualityBtCppParser.g:9787:3: ( (lv_child_23_0= ruleTreeNode ) )
            // InternalQualityBtCppParser.g:9788:4: (lv_child_23_0= ruleTreeNode )
            {
            // InternalQualityBtCppParser.g:9788:4: (lv_child_23_0= ruleTreeNode )
            // InternalQualityBtCppParser.g:9789:5: lv_child_23_0= ruleTreeNode
            {

            					newCompositeNode(grammarAccess.getLoopNodeAccess().getChildTreeNodeParserRuleCall_3_0());
            				
            pushFollow(FOLLOW_10);
            lv_child_23_0=ruleTreeNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getLoopNodeRule());
            					}
            					set(
            						current,
            						"child",
            						lv_child_23_0,
            						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            this_END_24=(Token)match(input,RULE_END,FOLLOW_2); 

            			newLeafNode(this_END_24, grammarAccess.getLoopNodeAccess().getENDTerminalRuleCall_4());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLoopNode"


    // $ANTLR start "entryRuleConsumeQueueNode"
    // InternalQualityBtCppParser.g:9814:1: entryRuleConsumeQueueNode returns [EObject current=null] : iv_ruleConsumeQueueNode= ruleConsumeQueueNode EOF ;
    public final EObject entryRuleConsumeQueueNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConsumeQueueNode = null;


        try {
            // InternalQualityBtCppParser.g:9814:57: (iv_ruleConsumeQueueNode= ruleConsumeQueueNode EOF )
            // InternalQualityBtCppParser.g:9815:2: iv_ruleConsumeQueueNode= ruleConsumeQueueNode EOF
            {
             newCompositeNode(grammarAccess.getConsumeQueueNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleConsumeQueueNode=ruleConsumeQueueNode();

            state._fsp--;

             current =iv_ruleConsumeQueueNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConsumeQueueNode"


    // $ANTLR start "ruleConsumeQueueNode"
    // InternalQualityBtCppParser.g:9821:1: ruleConsumeQueueNode returns [EObject current=null] : (otherlv_0= ConsumeQueue ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END ) ;
    public final EObject ruleConsumeQueueNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token this_BEGIN_22=null;
        Token this_END_24=null;
        AntlrDatatypeRuleToken lv_ID_5_0 = null;

        AntlrDatatypeRuleToken lv_name_8_0 = null;

        EObject lv_parameters_10_0 = null;

        EObject lv_parameters_12_0 = null;

        EObject lv_satisfices_14_0 = null;

        EObject lv_satisfices_16_0 = null;

        EObject lv_satisfies_18_0 = null;

        EObject lv_satisfies_20_0 = null;

        EObject lv_child_23_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:9827:2: ( (otherlv_0= ConsumeQueue ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END ) )
            // InternalQualityBtCppParser.g:9828:2: (otherlv_0= ConsumeQueue ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END )
            {
            // InternalQualityBtCppParser.g:9828:2: (otherlv_0= ConsumeQueue ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END )
            // InternalQualityBtCppParser.g:9829:3: otherlv_0= ConsumeQueue ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END
            {
            otherlv_0=(Token)match(input,ConsumeQueue,FOLLOW_15); 

            			newLeafNode(otherlv_0, grammarAccess.getConsumeQueueNodeAccess().getConsumeQueueKeyword_0());
            		
            // InternalQualityBtCppParser.g:9833:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt150=2;
            int LA150_0 = input.LA(1);

            if ( ((LA150_0>=Parameters && LA150_0<=Satisfies)||LA150_0==Name||LA150_0==ID||(LA150_0>=LeftParenthesis && LA150_0<=RightParenthesis)) ) {
                alt150=1;
            }
            switch (alt150) {
                case 1 :
                    // InternalQualityBtCppParser.g:9834:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:9834:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:9835:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1());
                    				
                    // InternalQualityBtCppParser.g:9838:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:9839:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:9839:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+
                    int cnt149=0;
                    loop149:
                    do {
                        int alt149=8;
                        int LA149_0 = input.LA(1);

                        if ( LA149_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1(), 0) ) {
                            alt149=1;
                        }
                        else if ( LA149_0 == ID && getUnorderedGroupHelper().canSelect(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1(), 1) ) {
                            alt149=2;
                        }
                        else if ( LA149_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1(), 2) ) {
                            alt149=3;
                        }
                        else if ( LA149_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1(), 3) ) {
                            alt149=4;
                        }
                        else if ( LA149_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1(), 4) ) {
                            alt149=5;
                        }
                        else if ( LA149_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1(), 5) ) {
                            alt149=6;
                        }
                        else if ( LA149_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1(), 6) ) {
                            alt149=7;
                        }


                        switch (alt149) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:9840:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:9840:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:9841:5: {...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleConsumeQueueNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:9841:113: ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:9842:6: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:9845:9: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:9845:10: {...}? => (otherlv_2= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleConsumeQueueNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:9845:19: (otherlv_2= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:9845:20: otherlv_2= LeftParenthesis
                    	    {
                    	    otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_2, grammarAccess.getConsumeQueueNodeAccess().getLeftParenthesisKeyword_1_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:9855:4: ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:9855:4: ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:9856:5: {...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleConsumeQueueNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:9856:113: ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:9857:6: ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:9860:9: ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:9860:10: {...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleConsumeQueueNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:9860:19: (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:9860:20: otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) )
                    	    {
                    	    otherlv_3=(Token)match(input,ID,FOLLOW_8); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getConsumeQueueNodeAccess().getIDKeyword_1_1_0());
                    	    								
                    	    otherlv_4=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getConsumeQueueNodeAccess().getEqualsSignKeyword_1_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:9868:9: ( (lv_ID_5_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:9869:10: (lv_ID_5_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:9869:10: (lv_ID_5_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:9870:11: lv_ID_5_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getConsumeQueueNodeAccess().getIDEStringParserRuleCall_1_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_15);
                    	    lv_ID_5_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getConsumeQueueNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"ID",
                    	    												lv_ID_5_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:9893:4: ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:9893:4: ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:9894:5: {...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleConsumeQueueNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:9894:113: ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:9895:6: ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:9898:9: ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:9898:10: {...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleConsumeQueueNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:9898:19: (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:9898:20: otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) )
                    	    {
                    	    otherlv_6=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_6, grammarAccess.getConsumeQueueNodeAccess().getNameKeyword_1_2_0());
                    	    								
                    	    otherlv_7=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_7, grammarAccess.getConsumeQueueNodeAccess().getEqualsSignKeyword_1_2_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:9906:9: ( (lv_name_8_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:9907:10: (lv_name_8_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:9907:10: (lv_name_8_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:9908:11: lv_name_8_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getConsumeQueueNodeAccess().getNameEStringParserRuleCall_1_2_2_0());
                    	    										
                    	    pushFollow(FOLLOW_15);
                    	    lv_name_8_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getConsumeQueueNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_8_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:9931:4: ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:9931:4: ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:9932:5: {...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleConsumeQueueNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:9932:113: ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:9933:6: ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:9936:9: ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:9936:10: {...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleConsumeQueueNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:9936:19: (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:9936:20: otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_9=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_9, grammarAccess.getConsumeQueueNodeAccess().getParametersKeyword_1_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:9940:9: ( (lv_parameters_10_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:9941:10: (lv_parameters_10_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:9941:10: (lv_parameters_10_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:9942:11: lv_parameters_10_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getConsumeQueueNodeAccess().getParametersParameterParserRuleCall_1_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_parameters_10_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getConsumeQueueNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_10_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:9959:9: (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )*
                    	    loop146:
                    	    do {
                    	        int alt146=2;
                    	        int LA146_0 = input.LA(1);

                    	        if ( (LA146_0==Comma) ) {
                    	            alt146=1;
                    	        }


                    	        switch (alt146) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:9960:10: otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_11=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_11, grammarAccess.getConsumeQueueNodeAccess().getCommaKeyword_1_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:9964:10: ( (lv_parameters_12_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:9965:11: (lv_parameters_12_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:9965:11: (lv_parameters_12_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:9966:12: lv_parameters_12_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getConsumeQueueNodeAccess().getParametersParameterParserRuleCall_1_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_parameters_12_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getConsumeQueueNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_12_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop146;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:9990:4: ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:9990:4: ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:9991:5: {...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleConsumeQueueNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:9991:113: ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:9992:6: ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:9995:9: ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:9995:10: {...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleConsumeQueueNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:9995:19: (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:9995:20: otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_13=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_13, grammarAccess.getConsumeQueueNodeAccess().getSatisficesKeyword_1_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:9999:9: ( (lv_satisfices_14_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:10000:10: (lv_satisfices_14_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:10000:10: (lv_satisfices_14_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:10001:11: lv_satisfices_14_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getConsumeQueueNodeAccess().getSatisficesQualityParserRuleCall_1_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfices_14_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getConsumeQueueNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_14_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:10018:9: (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )*
                    	    loop147:
                    	    do {
                    	        int alt147=2;
                    	        int LA147_0 = input.LA(1);

                    	        if ( (LA147_0==Comma) ) {
                    	            alt147=1;
                    	        }


                    	        switch (alt147) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:10019:10: otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_15=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_15, grammarAccess.getConsumeQueueNodeAccess().getCommaKeyword_1_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:10023:10: ( (lv_satisfices_16_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:10024:11: (lv_satisfices_16_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:10024:11: (lv_satisfices_16_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:10025:12: lv_satisfices_16_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getConsumeQueueNodeAccess().getSatisficesQualityParserRuleCall_1_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfices_16_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getConsumeQueueNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_16_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop147;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:10049:4: ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:10049:4: ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:10050:5: {...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleConsumeQueueNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:10050:113: ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:10051:6: ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:10054:9: ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:10054:10: {...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleConsumeQueueNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:10054:19: (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:10054:20: otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_17=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_17, grammarAccess.getConsumeQueueNodeAccess().getSatisfiesKeyword_1_5_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:10058:9: ( (lv_satisfies_18_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:10059:10: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:10059:10: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:10060:11: lv_satisfies_18_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getConsumeQueueNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_5_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfies_18_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getConsumeQueueNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_18_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:10077:9: (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )*
                    	    loop148:
                    	    do {
                    	        int alt148=2;
                    	        int LA148_0 = input.LA(1);

                    	        if ( (LA148_0==Comma) ) {
                    	            alt148=1;
                    	        }


                    	        switch (alt148) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:10078:10: otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_19=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_19, grammarAccess.getConsumeQueueNodeAccess().getCommaKeyword_1_5_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:10082:10: ( (lv_satisfies_20_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:10083:11: (lv_satisfies_20_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:10083:11: (lv_satisfies_20_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:10084:12: lv_satisfies_20_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getConsumeQueueNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_5_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfies_20_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getConsumeQueueNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_20_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop148;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 7 :
                    	    // InternalQualityBtCppParser.g:10108:4: ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:10108:4: ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:10109:5: {...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1(), 6) ) {
                    	        throw new FailedPredicateException(input, "ruleConsumeQueueNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1(), 6)");
                    	    }
                    	    // InternalQualityBtCppParser.g:10109:113: ( ({...}? => (otherlv_21= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:10110:6: ({...}? => (otherlv_21= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1(), 6);
                    	    					
                    	    // InternalQualityBtCppParser.g:10113:9: ({...}? => (otherlv_21= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:10113:10: {...}? => (otherlv_21= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleConsumeQueueNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:10113:19: (otherlv_21= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:10113:20: otherlv_21= RightParenthesis
                    	    {
                    	    otherlv_21=(Token)match(input,RightParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_21, grammarAccess.getConsumeQueueNodeAccess().getRightParenthesisKeyword_1_6());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt149 >= 1 ) break loop149;
                                EarlyExitException eee =
                                    new EarlyExitException(149, input);
                                throw eee;
                        }
                        cnt149++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1()) ) {
                        throw new FailedPredicateException(input, "ruleConsumeQueueNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1());
                    				

                    }
                    break;

            }

            this_BEGIN_22=(Token)match(input,RULE_BEGIN,FOLLOW_9); 

            			newLeafNode(this_BEGIN_22, grammarAccess.getConsumeQueueNodeAccess().getBEGINTerminalRuleCall_2());
            		
            // InternalQualityBtCppParser.g:10135:3: ( (lv_child_23_0= ruleTreeNode ) )
            // InternalQualityBtCppParser.g:10136:4: (lv_child_23_0= ruleTreeNode )
            {
            // InternalQualityBtCppParser.g:10136:4: (lv_child_23_0= ruleTreeNode )
            // InternalQualityBtCppParser.g:10137:5: lv_child_23_0= ruleTreeNode
            {

            					newCompositeNode(grammarAccess.getConsumeQueueNodeAccess().getChildTreeNodeParserRuleCall_3_0());
            				
            pushFollow(FOLLOW_10);
            lv_child_23_0=ruleTreeNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getConsumeQueueNodeRule());
            					}
            					set(
            						current,
            						"child",
            						lv_child_23_0,
            						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            this_END_24=(Token)match(input,RULE_END,FOLLOW_2); 

            			newLeafNode(this_END_24, grammarAccess.getConsumeQueueNodeAccess().getENDTerminalRuleCall_4());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConsumeQueueNode"


    // $ANTLR start "entryRuleScriptNode"
    // InternalQualityBtCppParser.g:10162:1: entryRuleScriptNode returns [EObject current=null] : iv_ruleScriptNode= ruleScriptNode EOF ;
    public final EObject entryRuleScriptNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleScriptNode = null;


        try {
            // InternalQualityBtCppParser.g:10162:51: (iv_ruleScriptNode= ruleScriptNode EOF )
            // InternalQualityBtCppParser.g:10163:2: iv_ruleScriptNode= ruleScriptNode EOF
            {
             newCompositeNode(grammarAccess.getScriptNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleScriptNode=ruleScriptNode();

            state._fsp--;

             current =iv_ruleScriptNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleScriptNode"


    // $ANTLR start "ruleScriptNode"
    // InternalQualityBtCppParser.g:10169:1: ruleScriptNode returns [EObject current=null] : ( () otherlv_1= ScriptAction ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? ) ;
    public final EObject ruleScriptNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        AntlrDatatypeRuleToken lv_ID_6_0 = null;

        AntlrDatatypeRuleToken lv_name_9_0 = null;

        EObject lv_parameters_11_0 = null;

        EObject lv_parameters_13_0 = null;

        EObject lv_satisfices_15_0 = null;

        EObject lv_satisfices_17_0 = null;

        EObject lv_satisfies_19_0 = null;

        EObject lv_satisfies_21_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:10175:2: ( ( () otherlv_1= ScriptAction ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? ) )
            // InternalQualityBtCppParser.g:10176:2: ( () otherlv_1= ScriptAction ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? )
            {
            // InternalQualityBtCppParser.g:10176:2: ( () otherlv_1= ScriptAction ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? )
            // InternalQualityBtCppParser.g:10177:3: () otherlv_1= ScriptAction ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            {
            // InternalQualityBtCppParser.g:10177:3: ()
            // InternalQualityBtCppParser.g:10178:4: 
            {

            				current = forceCreateModelElement(
            					grammarAccess.getScriptNodeAccess().getScriptNodeAction_0(),
            					current);
            			

            }

            otherlv_1=(Token)match(input,ScriptAction,FOLLOW_29); 

            			newLeafNode(otherlv_1, grammarAccess.getScriptNodeAccess().getScriptActionKeyword_1());
            		
            // InternalQualityBtCppParser.g:10188:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt155=2;
            int LA155_0 = input.LA(1);

            if ( ((LA155_0>=Parameters && LA155_0<=Satisfies)||LA155_0==Name||LA155_0==ID||(LA155_0>=LeftParenthesis && LA155_0<=RightParenthesis)) ) {
                alt155=1;
            }
            switch (alt155) {
                case 1 :
                    // InternalQualityBtCppParser.g:10189:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:10189:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:10190:5: ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2());
                    				
                    // InternalQualityBtCppParser.g:10193:5: ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:10194:6: ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:10194:6: ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+
                    int cnt154=0;
                    loop154:
                    do {
                        int alt154=8;
                        int LA154_0 = input.LA(1);

                        if ( LA154_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2(), 0) ) {
                            alt154=1;
                        }
                        else if ( LA154_0 == ID && getUnorderedGroupHelper().canSelect(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2(), 1) ) {
                            alt154=2;
                        }
                        else if ( LA154_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2(), 2) ) {
                            alt154=3;
                        }
                        else if ( LA154_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2(), 3) ) {
                            alt154=4;
                        }
                        else if ( LA154_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2(), 4) ) {
                            alt154=5;
                        }
                        else if ( LA154_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2(), 5) ) {
                            alt154=6;
                        }
                        else if ( LA154_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2(), 6) ) {
                            alt154=7;
                        }


                        switch (alt154) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:10195:4: ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:10195:4: ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:10196:5: {...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleScriptNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:10196:107: ( ({...}? => (otherlv_3= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:10197:6: ({...}? => (otherlv_3= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:10200:9: ({...}? => (otherlv_3= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:10200:10: {...}? => (otherlv_3= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleScriptNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:10200:19: (otherlv_3= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:10200:20: otherlv_3= LeftParenthesis
                    	    {
                    	    otherlv_3=(Token)match(input,LeftParenthesis,FOLLOW_29); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getScriptNodeAccess().getLeftParenthesisKeyword_2_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:10210:4: ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:10210:4: ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:10211:5: {...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleScriptNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:10211:107: ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:10212:6: ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:10215:9: ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:10215:10: {...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleScriptNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:10215:19: (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:10215:20: otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) )
                    	    {
                    	    otherlv_4=(Token)match(input,ID,FOLLOW_8); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getScriptNodeAccess().getIDKeyword_2_1_0());
                    	    								
                    	    otherlv_5=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_5, grammarAccess.getScriptNodeAccess().getEqualsSignKeyword_2_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:10223:9: ( (lv_ID_6_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:10224:10: (lv_ID_6_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:10224:10: (lv_ID_6_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:10225:11: lv_ID_6_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getScriptNodeAccess().getIDEStringParserRuleCall_2_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_29);
                    	    lv_ID_6_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getScriptNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"ID",
                    	    												lv_ID_6_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:10248:4: ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:10248:4: ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:10249:5: {...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleScriptNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:10249:107: ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:10250:6: ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:10253:9: ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:10253:10: {...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleScriptNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:10253:19: (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:10253:20: otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) )
                    	    {
                    	    otherlv_7=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_7, grammarAccess.getScriptNodeAccess().getNameKeyword_2_2_0());
                    	    								
                    	    otherlv_8=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_8, grammarAccess.getScriptNodeAccess().getEqualsSignKeyword_2_2_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:10261:9: ( (lv_name_9_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:10262:10: (lv_name_9_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:10262:10: (lv_name_9_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:10263:11: lv_name_9_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getScriptNodeAccess().getNameEStringParserRuleCall_2_2_2_0());
                    	    										
                    	    pushFollow(FOLLOW_29);
                    	    lv_name_9_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getScriptNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_9_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:10286:4: ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:10286:4: ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:10287:5: {...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleScriptNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:10287:107: ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:10288:6: ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:10291:9: ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:10291:10: {...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleScriptNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:10291:19: (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:10291:20: otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_10=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_10, grammarAccess.getScriptNodeAccess().getParametersKeyword_2_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:10295:9: ( (lv_parameters_11_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:10296:10: (lv_parameters_11_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:10296:10: (lv_parameters_11_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:10297:11: lv_parameters_11_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getScriptNodeAccess().getParametersParameterParserRuleCall_2_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_30);
                    	    lv_parameters_11_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getScriptNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_11_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:10314:9: (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )*
                    	    loop151:
                    	    do {
                    	        int alt151=2;
                    	        int LA151_0 = input.LA(1);

                    	        if ( (LA151_0==Comma) ) {
                    	            alt151=1;
                    	        }


                    	        switch (alt151) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:10315:10: otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_12=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_12, grammarAccess.getScriptNodeAccess().getCommaKeyword_2_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:10319:10: ( (lv_parameters_13_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:10320:11: (lv_parameters_13_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:10320:11: (lv_parameters_13_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:10321:12: lv_parameters_13_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getScriptNodeAccess().getParametersParameterParserRuleCall_2_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_30);
                    	    	    lv_parameters_13_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getScriptNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_13_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop151;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:10345:4: ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:10345:4: ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:10346:5: {...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleScriptNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:10346:107: ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:10347:6: ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:10350:9: ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:10350:10: {...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleScriptNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:10350:19: (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:10350:20: otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_14=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_14, grammarAccess.getScriptNodeAccess().getSatisficesKeyword_2_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:10354:9: ( (lv_satisfices_15_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:10355:10: (lv_satisfices_15_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:10355:10: (lv_satisfices_15_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:10356:11: lv_satisfices_15_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getScriptNodeAccess().getSatisficesQualityParserRuleCall_2_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_30);
                    	    lv_satisfices_15_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getScriptNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_15_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:10373:9: (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )*
                    	    loop152:
                    	    do {
                    	        int alt152=2;
                    	        int LA152_0 = input.LA(1);

                    	        if ( (LA152_0==Comma) ) {
                    	            alt152=1;
                    	        }


                    	        switch (alt152) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:10374:10: otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_16=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_16, grammarAccess.getScriptNodeAccess().getCommaKeyword_2_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:10378:10: ( (lv_satisfices_17_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:10379:11: (lv_satisfices_17_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:10379:11: (lv_satisfices_17_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:10380:12: lv_satisfices_17_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getScriptNodeAccess().getSatisficesQualityParserRuleCall_2_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_30);
                    	    	    lv_satisfices_17_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getScriptNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_17_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop152;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:10404:4: ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:10404:4: ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:10405:5: {...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleScriptNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:10405:107: ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:10406:6: ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:10409:9: ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:10409:10: {...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleScriptNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:10409:19: (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:10409:20: otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_18=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_18, grammarAccess.getScriptNodeAccess().getSatisfiesKeyword_2_5_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:10413:9: ( (lv_satisfies_19_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:10414:10: (lv_satisfies_19_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:10414:10: (lv_satisfies_19_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:10415:11: lv_satisfies_19_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getScriptNodeAccess().getSatisfiesQualityRequirementParserRuleCall_2_5_1_0());
                    	    										
                    	    pushFollow(FOLLOW_30);
                    	    lv_satisfies_19_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getScriptNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_19_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:10432:9: (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )*
                    	    loop153:
                    	    do {
                    	        int alt153=2;
                    	        int LA153_0 = input.LA(1);

                    	        if ( (LA153_0==Comma) ) {
                    	            alt153=1;
                    	        }


                    	        switch (alt153) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:10433:10: otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_20=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_20, grammarAccess.getScriptNodeAccess().getCommaKeyword_2_5_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:10437:10: ( (lv_satisfies_21_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:10438:11: (lv_satisfies_21_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:10438:11: (lv_satisfies_21_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:10439:12: lv_satisfies_21_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getScriptNodeAccess().getSatisfiesQualityRequirementParserRuleCall_2_5_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_30);
                    	    	    lv_satisfies_21_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getScriptNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_21_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop153;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 7 :
                    	    // InternalQualityBtCppParser.g:10463:4: ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:10463:4: ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:10464:5: {...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2(), 6) ) {
                    	        throw new FailedPredicateException(input, "ruleScriptNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2(), 6)");
                    	    }
                    	    // InternalQualityBtCppParser.g:10464:107: ( ({...}? => (otherlv_22= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:10465:6: ({...}? => (otherlv_22= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2(), 6);
                    	    					
                    	    // InternalQualityBtCppParser.g:10468:9: ({...}? => (otherlv_22= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:10468:10: {...}? => (otherlv_22= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleScriptNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:10468:19: (otherlv_22= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:10468:20: otherlv_22= RightParenthesis
                    	    {
                    	    otherlv_22=(Token)match(input,RightParenthesis,FOLLOW_29); 

                    	    									newLeafNode(otherlv_22, grammarAccess.getScriptNodeAccess().getRightParenthesisKeyword_2_6());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt154 >= 1 ) break loop154;
                                EarlyExitException eee =
                                    new EarlyExitException(154, input);
                                throw eee;
                        }
                        cnt154++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2()) ) {
                        throw new FailedPredicateException(input, "ruleScriptNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2());
                    				

                    }
                    break;

            }


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleScriptNode"


    // $ANTLR start "entryRuleScriptConditionNode"
    // InternalQualityBtCppParser.g:10490:1: entryRuleScriptConditionNode returns [EObject current=null] : iv_ruleScriptConditionNode= ruleScriptConditionNode EOF ;
    public final EObject entryRuleScriptConditionNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleScriptConditionNode = null;


        try {
            // InternalQualityBtCppParser.g:10490:60: (iv_ruleScriptConditionNode= ruleScriptConditionNode EOF )
            // InternalQualityBtCppParser.g:10491:2: iv_ruleScriptConditionNode= ruleScriptConditionNode EOF
            {
             newCompositeNode(grammarAccess.getScriptConditionNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleScriptConditionNode=ruleScriptConditionNode();

            state._fsp--;

             current =iv_ruleScriptConditionNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleScriptConditionNode"


    // $ANTLR start "ruleScriptConditionNode"
    // InternalQualityBtCppParser.g:10497:1: ruleScriptConditionNode returns [EObject current=null] : ( () otherlv_1= ScriptCondition ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? ) ;
    public final EObject ruleScriptConditionNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        AntlrDatatypeRuleToken lv_ID_6_0 = null;

        AntlrDatatypeRuleToken lv_name_9_0 = null;

        EObject lv_parameters_11_0 = null;

        EObject lv_parameters_13_0 = null;

        EObject lv_satisfices_15_0 = null;

        EObject lv_satisfices_17_0 = null;

        EObject lv_satisfies_19_0 = null;

        EObject lv_satisfies_21_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:10503:2: ( ( () otherlv_1= ScriptCondition ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? ) )
            // InternalQualityBtCppParser.g:10504:2: ( () otherlv_1= ScriptCondition ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? )
            {
            // InternalQualityBtCppParser.g:10504:2: ( () otherlv_1= ScriptCondition ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? )
            // InternalQualityBtCppParser.g:10505:3: () otherlv_1= ScriptCondition ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            {
            // InternalQualityBtCppParser.g:10505:3: ()
            // InternalQualityBtCppParser.g:10506:4: 
            {

            				current = forceCreateModelElement(
            					grammarAccess.getScriptConditionNodeAccess().getScriptConditionNodeAction_0(),
            					current);
            			

            }

            otherlv_1=(Token)match(input,ScriptCondition,FOLLOW_29); 

            			newLeafNode(otherlv_1, grammarAccess.getScriptConditionNodeAccess().getScriptConditionKeyword_1());
            		
            // InternalQualityBtCppParser.g:10516:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt160=2;
            int LA160_0 = input.LA(1);

            if ( ((LA160_0>=Parameters && LA160_0<=Satisfies)||LA160_0==Name||LA160_0==ID||(LA160_0>=LeftParenthesis && LA160_0<=RightParenthesis)) ) {
                alt160=1;
            }
            switch (alt160) {
                case 1 :
                    // InternalQualityBtCppParser.g:10517:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:10517:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:10518:5: ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2());
                    				
                    // InternalQualityBtCppParser.g:10521:5: ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:10522:6: ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:10522:6: ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+
                    int cnt159=0;
                    loop159:
                    do {
                        int alt159=8;
                        int LA159_0 = input.LA(1);

                        if ( LA159_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2(), 0) ) {
                            alt159=1;
                        }
                        else if ( LA159_0 == ID && getUnorderedGroupHelper().canSelect(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2(), 1) ) {
                            alt159=2;
                        }
                        else if ( LA159_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2(), 2) ) {
                            alt159=3;
                        }
                        else if ( LA159_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2(), 3) ) {
                            alt159=4;
                        }
                        else if ( LA159_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2(), 4) ) {
                            alt159=5;
                        }
                        else if ( LA159_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2(), 5) ) {
                            alt159=6;
                        }
                        else if ( LA159_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2(), 6) ) {
                            alt159=7;
                        }


                        switch (alt159) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:10523:4: ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:10523:4: ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:10524:5: {...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleScriptConditionNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:10524:116: ( ({...}? => (otherlv_3= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:10525:6: ({...}? => (otherlv_3= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:10528:9: ({...}? => (otherlv_3= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:10528:10: {...}? => (otherlv_3= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleScriptConditionNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:10528:19: (otherlv_3= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:10528:20: otherlv_3= LeftParenthesis
                    	    {
                    	    otherlv_3=(Token)match(input,LeftParenthesis,FOLLOW_29); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getScriptConditionNodeAccess().getLeftParenthesisKeyword_2_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:10538:4: ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:10538:4: ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:10539:5: {...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleScriptConditionNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:10539:116: ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:10540:6: ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:10543:9: ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:10543:10: {...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleScriptConditionNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:10543:19: (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:10543:20: otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) )
                    	    {
                    	    otherlv_4=(Token)match(input,ID,FOLLOW_8); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getScriptConditionNodeAccess().getIDKeyword_2_1_0());
                    	    								
                    	    otherlv_5=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_5, grammarAccess.getScriptConditionNodeAccess().getEqualsSignKeyword_2_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:10551:9: ( (lv_ID_6_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:10552:10: (lv_ID_6_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:10552:10: (lv_ID_6_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:10553:11: lv_ID_6_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getScriptConditionNodeAccess().getIDEStringParserRuleCall_2_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_29);
                    	    lv_ID_6_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getScriptConditionNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"ID",
                    	    												lv_ID_6_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:10576:4: ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:10576:4: ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:10577:5: {...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleScriptConditionNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:10577:116: ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:10578:6: ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:10581:9: ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:10581:10: {...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleScriptConditionNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:10581:19: (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:10581:20: otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) )
                    	    {
                    	    otherlv_7=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_7, grammarAccess.getScriptConditionNodeAccess().getNameKeyword_2_2_0());
                    	    								
                    	    otherlv_8=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_8, grammarAccess.getScriptConditionNodeAccess().getEqualsSignKeyword_2_2_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:10589:9: ( (lv_name_9_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:10590:10: (lv_name_9_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:10590:10: (lv_name_9_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:10591:11: lv_name_9_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getScriptConditionNodeAccess().getNameEStringParserRuleCall_2_2_2_0());
                    	    										
                    	    pushFollow(FOLLOW_29);
                    	    lv_name_9_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getScriptConditionNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_9_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:10614:4: ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:10614:4: ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:10615:5: {...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleScriptConditionNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:10615:116: ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:10616:6: ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:10619:9: ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:10619:10: {...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleScriptConditionNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:10619:19: (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:10619:20: otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_10=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_10, grammarAccess.getScriptConditionNodeAccess().getParametersKeyword_2_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:10623:9: ( (lv_parameters_11_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:10624:10: (lv_parameters_11_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:10624:10: (lv_parameters_11_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:10625:11: lv_parameters_11_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getScriptConditionNodeAccess().getParametersParameterParserRuleCall_2_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_30);
                    	    lv_parameters_11_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getScriptConditionNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_11_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:10642:9: (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )*
                    	    loop156:
                    	    do {
                    	        int alt156=2;
                    	        int LA156_0 = input.LA(1);

                    	        if ( (LA156_0==Comma) ) {
                    	            alt156=1;
                    	        }


                    	        switch (alt156) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:10643:10: otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_12=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_12, grammarAccess.getScriptConditionNodeAccess().getCommaKeyword_2_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:10647:10: ( (lv_parameters_13_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:10648:11: (lv_parameters_13_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:10648:11: (lv_parameters_13_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:10649:12: lv_parameters_13_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getScriptConditionNodeAccess().getParametersParameterParserRuleCall_2_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_30);
                    	    	    lv_parameters_13_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getScriptConditionNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_13_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop156;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:10673:4: ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:10673:4: ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:10674:5: {...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleScriptConditionNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:10674:116: ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:10675:6: ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:10678:9: ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:10678:10: {...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleScriptConditionNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:10678:19: (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:10678:20: otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_14=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_14, grammarAccess.getScriptConditionNodeAccess().getSatisficesKeyword_2_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:10682:9: ( (lv_satisfices_15_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:10683:10: (lv_satisfices_15_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:10683:10: (lv_satisfices_15_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:10684:11: lv_satisfices_15_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getScriptConditionNodeAccess().getSatisficesQualityParserRuleCall_2_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_30);
                    	    lv_satisfices_15_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getScriptConditionNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_15_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:10701:9: (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )*
                    	    loop157:
                    	    do {
                    	        int alt157=2;
                    	        int LA157_0 = input.LA(1);

                    	        if ( (LA157_0==Comma) ) {
                    	            alt157=1;
                    	        }


                    	        switch (alt157) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:10702:10: otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_16=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_16, grammarAccess.getScriptConditionNodeAccess().getCommaKeyword_2_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:10706:10: ( (lv_satisfices_17_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:10707:11: (lv_satisfices_17_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:10707:11: (lv_satisfices_17_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:10708:12: lv_satisfices_17_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getScriptConditionNodeAccess().getSatisficesQualityParserRuleCall_2_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_30);
                    	    	    lv_satisfices_17_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getScriptConditionNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_17_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop157;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:10732:4: ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:10732:4: ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:10733:5: {...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleScriptConditionNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:10733:116: ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:10734:6: ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:10737:9: ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:10737:10: {...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleScriptConditionNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:10737:19: (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:10737:20: otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_18=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_18, grammarAccess.getScriptConditionNodeAccess().getSatisfiesKeyword_2_5_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:10741:9: ( (lv_satisfies_19_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:10742:10: (lv_satisfies_19_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:10742:10: (lv_satisfies_19_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:10743:11: lv_satisfies_19_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getScriptConditionNodeAccess().getSatisfiesQualityRequirementParserRuleCall_2_5_1_0());
                    	    										
                    	    pushFollow(FOLLOW_30);
                    	    lv_satisfies_19_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getScriptConditionNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_19_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:10760:9: (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )*
                    	    loop158:
                    	    do {
                    	        int alt158=2;
                    	        int LA158_0 = input.LA(1);

                    	        if ( (LA158_0==Comma) ) {
                    	            alt158=1;
                    	        }


                    	        switch (alt158) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:10761:10: otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_20=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_20, grammarAccess.getScriptConditionNodeAccess().getCommaKeyword_2_5_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:10765:10: ( (lv_satisfies_21_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:10766:11: (lv_satisfies_21_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:10766:11: (lv_satisfies_21_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:10767:12: lv_satisfies_21_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getScriptConditionNodeAccess().getSatisfiesQualityRequirementParserRuleCall_2_5_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_30);
                    	    	    lv_satisfies_21_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getScriptConditionNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_21_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop158;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 7 :
                    	    // InternalQualityBtCppParser.g:10791:4: ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:10791:4: ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:10792:5: {...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2(), 6) ) {
                    	        throw new FailedPredicateException(input, "ruleScriptConditionNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2(), 6)");
                    	    }
                    	    // InternalQualityBtCppParser.g:10792:116: ( ({...}? => (otherlv_22= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:10793:6: ({...}? => (otherlv_22= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2(), 6);
                    	    					
                    	    // InternalQualityBtCppParser.g:10796:9: ({...}? => (otherlv_22= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:10796:10: {...}? => (otherlv_22= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleScriptConditionNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:10796:19: (otherlv_22= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:10796:20: otherlv_22= RightParenthesis
                    	    {
                    	    otherlv_22=(Token)match(input,RightParenthesis,FOLLOW_29); 

                    	    									newLeafNode(otherlv_22, grammarAccess.getScriptConditionNodeAccess().getRightParenthesisKeyword_2_6());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt159 >= 1 ) break loop159;
                                EarlyExitException eee =
                                    new EarlyExitException(159, input);
                                throw eee;
                        }
                        cnt159++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2()) ) {
                        throw new FailedPredicateException(input, "ruleScriptConditionNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2());
                    				

                    }
                    break;

            }


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleScriptConditionNode"


    // $ANTLR start "entryRuleAlwaysFailureNode"
    // InternalQualityBtCppParser.g:10818:1: entryRuleAlwaysFailureNode returns [EObject current=null] : iv_ruleAlwaysFailureNode= ruleAlwaysFailureNode EOF ;
    public final EObject entryRuleAlwaysFailureNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAlwaysFailureNode = null;


        try {
            // InternalQualityBtCppParser.g:10818:58: (iv_ruleAlwaysFailureNode= ruleAlwaysFailureNode EOF )
            // InternalQualityBtCppParser.g:10819:2: iv_ruleAlwaysFailureNode= ruleAlwaysFailureNode EOF
            {
             newCompositeNode(grammarAccess.getAlwaysFailureNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleAlwaysFailureNode=ruleAlwaysFailureNode();

            state._fsp--;

             current =iv_ruleAlwaysFailureNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAlwaysFailureNode"


    // $ANTLR start "ruleAlwaysFailureNode"
    // InternalQualityBtCppParser.g:10825:1: ruleAlwaysFailureNode returns [EObject current=null] : ( () otherlv_1= AlwaysFailure ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? ) ;
    public final EObject ruleAlwaysFailureNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        AntlrDatatypeRuleToken lv_ID_6_0 = null;

        AntlrDatatypeRuleToken lv_name_9_0 = null;

        EObject lv_parameters_11_0 = null;

        EObject lv_parameters_13_0 = null;

        EObject lv_satisfices_15_0 = null;

        EObject lv_satisfices_17_0 = null;

        EObject lv_satisfies_19_0 = null;

        EObject lv_satisfies_21_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:10831:2: ( ( () otherlv_1= AlwaysFailure ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? ) )
            // InternalQualityBtCppParser.g:10832:2: ( () otherlv_1= AlwaysFailure ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? )
            {
            // InternalQualityBtCppParser.g:10832:2: ( () otherlv_1= AlwaysFailure ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? )
            // InternalQualityBtCppParser.g:10833:3: () otherlv_1= AlwaysFailure ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            {
            // InternalQualityBtCppParser.g:10833:3: ()
            // InternalQualityBtCppParser.g:10834:4: 
            {

            				current = forceCreateModelElement(
            					grammarAccess.getAlwaysFailureNodeAccess().getAlwaysFailureNodeAction_0(),
            					current);
            			

            }

            otherlv_1=(Token)match(input,AlwaysFailure,FOLLOW_29); 

            			newLeafNode(otherlv_1, grammarAccess.getAlwaysFailureNodeAccess().getAlwaysFailureKeyword_1());
            		
            // InternalQualityBtCppParser.g:10844:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt165=2;
            int LA165_0 = input.LA(1);

            if ( ((LA165_0>=Parameters && LA165_0<=Satisfies)||LA165_0==Name||LA165_0==ID||(LA165_0>=LeftParenthesis && LA165_0<=RightParenthesis)) ) {
                alt165=1;
            }
            switch (alt165) {
                case 1 :
                    // InternalQualityBtCppParser.g:10845:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:10845:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:10846:5: ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2());
                    				
                    // InternalQualityBtCppParser.g:10849:5: ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:10850:6: ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:10850:6: ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+
                    int cnt164=0;
                    loop164:
                    do {
                        int alt164=8;
                        int LA164_0 = input.LA(1);

                        if ( LA164_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2(), 0) ) {
                            alt164=1;
                        }
                        else if ( LA164_0 == ID && getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2(), 1) ) {
                            alt164=2;
                        }
                        else if ( LA164_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2(), 2) ) {
                            alt164=3;
                        }
                        else if ( LA164_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2(), 3) ) {
                            alt164=4;
                        }
                        else if ( LA164_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2(), 4) ) {
                            alt164=5;
                        }
                        else if ( LA164_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2(), 5) ) {
                            alt164=6;
                        }
                        else if ( LA164_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2(), 6) ) {
                            alt164=7;
                        }


                        switch (alt164) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:10851:4: ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:10851:4: ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:10852:5: {...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleAlwaysFailureNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:10852:114: ( ({...}? => (otherlv_3= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:10853:6: ({...}? => (otherlv_3= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:10856:9: ({...}? => (otherlv_3= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:10856:10: {...}? => (otherlv_3= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleAlwaysFailureNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:10856:19: (otherlv_3= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:10856:20: otherlv_3= LeftParenthesis
                    	    {
                    	    otherlv_3=(Token)match(input,LeftParenthesis,FOLLOW_29); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getAlwaysFailureNodeAccess().getLeftParenthesisKeyword_2_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:10866:4: ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:10866:4: ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:10867:5: {...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleAlwaysFailureNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:10867:114: ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:10868:6: ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:10871:9: ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:10871:10: {...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleAlwaysFailureNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:10871:19: (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:10871:20: otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) )
                    	    {
                    	    otherlv_4=(Token)match(input,ID,FOLLOW_8); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getAlwaysFailureNodeAccess().getIDKeyword_2_1_0());
                    	    								
                    	    otherlv_5=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_5, grammarAccess.getAlwaysFailureNodeAccess().getEqualsSignKeyword_2_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:10879:9: ( (lv_ID_6_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:10880:10: (lv_ID_6_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:10880:10: (lv_ID_6_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:10881:11: lv_ID_6_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getAlwaysFailureNodeAccess().getIDEStringParserRuleCall_2_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_29);
                    	    lv_ID_6_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getAlwaysFailureNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"ID",
                    	    												lv_ID_6_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:10904:4: ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:10904:4: ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:10905:5: {...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleAlwaysFailureNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:10905:114: ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:10906:6: ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:10909:9: ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:10909:10: {...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleAlwaysFailureNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:10909:19: (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:10909:20: otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) )
                    	    {
                    	    otherlv_7=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_7, grammarAccess.getAlwaysFailureNodeAccess().getNameKeyword_2_2_0());
                    	    								
                    	    otherlv_8=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_8, grammarAccess.getAlwaysFailureNodeAccess().getEqualsSignKeyword_2_2_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:10917:9: ( (lv_name_9_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:10918:10: (lv_name_9_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:10918:10: (lv_name_9_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:10919:11: lv_name_9_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getAlwaysFailureNodeAccess().getNameEStringParserRuleCall_2_2_2_0());
                    	    										
                    	    pushFollow(FOLLOW_29);
                    	    lv_name_9_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getAlwaysFailureNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_9_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:10942:4: ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:10942:4: ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:10943:5: {...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleAlwaysFailureNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:10943:114: ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:10944:6: ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:10947:9: ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:10947:10: {...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleAlwaysFailureNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:10947:19: (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:10947:20: otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_10=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_10, grammarAccess.getAlwaysFailureNodeAccess().getParametersKeyword_2_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:10951:9: ( (lv_parameters_11_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:10952:10: (lv_parameters_11_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:10952:10: (lv_parameters_11_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:10953:11: lv_parameters_11_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getAlwaysFailureNodeAccess().getParametersParameterParserRuleCall_2_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_30);
                    	    lv_parameters_11_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getAlwaysFailureNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_11_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:10970:9: (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )*
                    	    loop161:
                    	    do {
                    	        int alt161=2;
                    	        int LA161_0 = input.LA(1);

                    	        if ( (LA161_0==Comma) ) {
                    	            alt161=1;
                    	        }


                    	        switch (alt161) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:10971:10: otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_12=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_12, grammarAccess.getAlwaysFailureNodeAccess().getCommaKeyword_2_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:10975:10: ( (lv_parameters_13_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:10976:11: (lv_parameters_13_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:10976:11: (lv_parameters_13_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:10977:12: lv_parameters_13_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getAlwaysFailureNodeAccess().getParametersParameterParserRuleCall_2_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_30);
                    	    	    lv_parameters_13_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getAlwaysFailureNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_13_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop161;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:11001:4: ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:11001:4: ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:11002:5: {...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleAlwaysFailureNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:11002:114: ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:11003:6: ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:11006:9: ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:11006:10: {...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleAlwaysFailureNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:11006:19: (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:11006:20: otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_14=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_14, grammarAccess.getAlwaysFailureNodeAccess().getSatisficesKeyword_2_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:11010:9: ( (lv_satisfices_15_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:11011:10: (lv_satisfices_15_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:11011:10: (lv_satisfices_15_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:11012:11: lv_satisfices_15_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getAlwaysFailureNodeAccess().getSatisficesQualityParserRuleCall_2_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_30);
                    	    lv_satisfices_15_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getAlwaysFailureNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_15_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:11029:9: (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )*
                    	    loop162:
                    	    do {
                    	        int alt162=2;
                    	        int LA162_0 = input.LA(1);

                    	        if ( (LA162_0==Comma) ) {
                    	            alt162=1;
                    	        }


                    	        switch (alt162) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:11030:10: otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_16=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_16, grammarAccess.getAlwaysFailureNodeAccess().getCommaKeyword_2_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:11034:10: ( (lv_satisfices_17_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:11035:11: (lv_satisfices_17_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:11035:11: (lv_satisfices_17_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:11036:12: lv_satisfices_17_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getAlwaysFailureNodeAccess().getSatisficesQualityParserRuleCall_2_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_30);
                    	    	    lv_satisfices_17_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getAlwaysFailureNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_17_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop162;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:11060:4: ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:11060:4: ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:11061:5: {...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleAlwaysFailureNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:11061:114: ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:11062:6: ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:11065:9: ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:11065:10: {...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleAlwaysFailureNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:11065:19: (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:11065:20: otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_18=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_18, grammarAccess.getAlwaysFailureNodeAccess().getSatisfiesKeyword_2_5_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:11069:9: ( (lv_satisfies_19_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:11070:10: (lv_satisfies_19_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:11070:10: (lv_satisfies_19_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:11071:11: lv_satisfies_19_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getAlwaysFailureNodeAccess().getSatisfiesQualityRequirementParserRuleCall_2_5_1_0());
                    	    										
                    	    pushFollow(FOLLOW_30);
                    	    lv_satisfies_19_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getAlwaysFailureNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_19_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:11088:9: (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )*
                    	    loop163:
                    	    do {
                    	        int alt163=2;
                    	        int LA163_0 = input.LA(1);

                    	        if ( (LA163_0==Comma) ) {
                    	            alt163=1;
                    	        }


                    	        switch (alt163) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:11089:10: otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_20=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_20, grammarAccess.getAlwaysFailureNodeAccess().getCommaKeyword_2_5_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:11093:10: ( (lv_satisfies_21_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:11094:11: (lv_satisfies_21_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:11094:11: (lv_satisfies_21_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:11095:12: lv_satisfies_21_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getAlwaysFailureNodeAccess().getSatisfiesQualityRequirementParserRuleCall_2_5_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_30);
                    	    	    lv_satisfies_21_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getAlwaysFailureNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_21_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop163;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 7 :
                    	    // InternalQualityBtCppParser.g:11119:4: ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:11119:4: ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:11120:5: {...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2(), 6) ) {
                    	        throw new FailedPredicateException(input, "ruleAlwaysFailureNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2(), 6)");
                    	    }
                    	    // InternalQualityBtCppParser.g:11120:114: ( ({...}? => (otherlv_22= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:11121:6: ({...}? => (otherlv_22= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2(), 6);
                    	    					
                    	    // InternalQualityBtCppParser.g:11124:9: ({...}? => (otherlv_22= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:11124:10: {...}? => (otherlv_22= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleAlwaysFailureNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:11124:19: (otherlv_22= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:11124:20: otherlv_22= RightParenthesis
                    	    {
                    	    otherlv_22=(Token)match(input,RightParenthesis,FOLLOW_29); 

                    	    									newLeafNode(otherlv_22, grammarAccess.getAlwaysFailureNodeAccess().getRightParenthesisKeyword_2_6());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt164 >= 1 ) break loop164;
                                EarlyExitException eee =
                                    new EarlyExitException(164, input);
                                throw eee;
                        }
                        cnt164++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2()) ) {
                        throw new FailedPredicateException(input, "ruleAlwaysFailureNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2());
                    				

                    }
                    break;

            }


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAlwaysFailureNode"


    // $ANTLR start "entryRuleAlwaysSuccessNode"
    // InternalQualityBtCppParser.g:11146:1: entryRuleAlwaysSuccessNode returns [EObject current=null] : iv_ruleAlwaysSuccessNode= ruleAlwaysSuccessNode EOF ;
    public final EObject entryRuleAlwaysSuccessNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAlwaysSuccessNode = null;


        try {
            // InternalQualityBtCppParser.g:11146:58: (iv_ruleAlwaysSuccessNode= ruleAlwaysSuccessNode EOF )
            // InternalQualityBtCppParser.g:11147:2: iv_ruleAlwaysSuccessNode= ruleAlwaysSuccessNode EOF
            {
             newCompositeNode(grammarAccess.getAlwaysSuccessNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleAlwaysSuccessNode=ruleAlwaysSuccessNode();

            state._fsp--;

             current =iv_ruleAlwaysSuccessNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAlwaysSuccessNode"


    // $ANTLR start "ruleAlwaysSuccessNode"
    // InternalQualityBtCppParser.g:11153:1: ruleAlwaysSuccessNode returns [EObject current=null] : ( () otherlv_1= AlwaysSuccess ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? ) ;
    public final EObject ruleAlwaysSuccessNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        AntlrDatatypeRuleToken lv_ID_6_0 = null;

        AntlrDatatypeRuleToken lv_name_9_0 = null;

        EObject lv_parameters_11_0 = null;

        EObject lv_parameters_13_0 = null;

        EObject lv_satisfices_15_0 = null;

        EObject lv_satisfices_17_0 = null;

        EObject lv_satisfies_19_0 = null;

        EObject lv_satisfies_21_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:11159:2: ( ( () otherlv_1= AlwaysSuccess ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? ) )
            // InternalQualityBtCppParser.g:11160:2: ( () otherlv_1= AlwaysSuccess ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? )
            {
            // InternalQualityBtCppParser.g:11160:2: ( () otherlv_1= AlwaysSuccess ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? )
            // InternalQualityBtCppParser.g:11161:3: () otherlv_1= AlwaysSuccess ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            {
            // InternalQualityBtCppParser.g:11161:3: ()
            // InternalQualityBtCppParser.g:11162:4: 
            {

            				current = forceCreateModelElement(
            					grammarAccess.getAlwaysSuccessNodeAccess().getAlwaysSuccessNodeAction_0(),
            					current);
            			

            }

            otherlv_1=(Token)match(input,AlwaysSuccess,FOLLOW_29); 

            			newLeafNode(otherlv_1, grammarAccess.getAlwaysSuccessNodeAccess().getAlwaysSuccessKeyword_1());
            		
            // InternalQualityBtCppParser.g:11172:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt170=2;
            int LA170_0 = input.LA(1);

            if ( ((LA170_0>=Parameters && LA170_0<=Satisfies)||LA170_0==Name||LA170_0==ID||(LA170_0>=LeftParenthesis && LA170_0<=RightParenthesis)) ) {
                alt170=1;
            }
            switch (alt170) {
                case 1 :
                    // InternalQualityBtCppParser.g:11173:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:11173:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:11174:5: ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2());
                    				
                    // InternalQualityBtCppParser.g:11177:5: ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:11178:6: ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:11178:6: ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+
                    int cnt169=0;
                    loop169:
                    do {
                        int alt169=8;
                        int LA169_0 = input.LA(1);

                        if ( LA169_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2(), 0) ) {
                            alt169=1;
                        }
                        else if ( LA169_0 == ID && getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2(), 1) ) {
                            alt169=2;
                        }
                        else if ( LA169_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2(), 2) ) {
                            alt169=3;
                        }
                        else if ( LA169_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2(), 3) ) {
                            alt169=4;
                        }
                        else if ( LA169_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2(), 4) ) {
                            alt169=5;
                        }
                        else if ( LA169_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2(), 5) ) {
                            alt169=6;
                        }
                        else if ( LA169_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2(), 6) ) {
                            alt169=7;
                        }


                        switch (alt169) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:11179:4: ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:11179:4: ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:11180:5: {...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleAlwaysSuccessNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:11180:114: ( ({...}? => (otherlv_3= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:11181:6: ({...}? => (otherlv_3= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:11184:9: ({...}? => (otherlv_3= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:11184:10: {...}? => (otherlv_3= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleAlwaysSuccessNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:11184:19: (otherlv_3= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:11184:20: otherlv_3= LeftParenthesis
                    	    {
                    	    otherlv_3=(Token)match(input,LeftParenthesis,FOLLOW_29); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getAlwaysSuccessNodeAccess().getLeftParenthesisKeyword_2_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:11194:4: ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:11194:4: ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:11195:5: {...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleAlwaysSuccessNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:11195:114: ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:11196:6: ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:11199:9: ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:11199:10: {...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleAlwaysSuccessNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:11199:19: (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:11199:20: otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) )
                    	    {
                    	    otherlv_4=(Token)match(input,ID,FOLLOW_8); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getAlwaysSuccessNodeAccess().getIDKeyword_2_1_0());
                    	    								
                    	    otherlv_5=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_5, grammarAccess.getAlwaysSuccessNodeAccess().getEqualsSignKeyword_2_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:11207:9: ( (lv_ID_6_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:11208:10: (lv_ID_6_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:11208:10: (lv_ID_6_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:11209:11: lv_ID_6_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getAlwaysSuccessNodeAccess().getIDEStringParserRuleCall_2_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_29);
                    	    lv_ID_6_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getAlwaysSuccessNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"ID",
                    	    												lv_ID_6_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:11232:4: ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:11232:4: ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:11233:5: {...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleAlwaysSuccessNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:11233:114: ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:11234:6: ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:11237:9: ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:11237:10: {...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleAlwaysSuccessNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:11237:19: (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:11237:20: otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) )
                    	    {
                    	    otherlv_7=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_7, grammarAccess.getAlwaysSuccessNodeAccess().getNameKeyword_2_2_0());
                    	    								
                    	    otherlv_8=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_8, grammarAccess.getAlwaysSuccessNodeAccess().getEqualsSignKeyword_2_2_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:11245:9: ( (lv_name_9_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:11246:10: (lv_name_9_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:11246:10: (lv_name_9_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:11247:11: lv_name_9_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getAlwaysSuccessNodeAccess().getNameEStringParserRuleCall_2_2_2_0());
                    	    										
                    	    pushFollow(FOLLOW_29);
                    	    lv_name_9_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getAlwaysSuccessNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_9_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:11270:4: ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:11270:4: ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:11271:5: {...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleAlwaysSuccessNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:11271:114: ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:11272:6: ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:11275:9: ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:11275:10: {...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleAlwaysSuccessNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:11275:19: (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:11275:20: otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_10=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_10, grammarAccess.getAlwaysSuccessNodeAccess().getParametersKeyword_2_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:11279:9: ( (lv_parameters_11_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:11280:10: (lv_parameters_11_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:11280:10: (lv_parameters_11_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:11281:11: lv_parameters_11_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getAlwaysSuccessNodeAccess().getParametersParameterParserRuleCall_2_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_30);
                    	    lv_parameters_11_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getAlwaysSuccessNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_11_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:11298:9: (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )*
                    	    loop166:
                    	    do {
                    	        int alt166=2;
                    	        int LA166_0 = input.LA(1);

                    	        if ( (LA166_0==Comma) ) {
                    	            alt166=1;
                    	        }


                    	        switch (alt166) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:11299:10: otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_12=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_12, grammarAccess.getAlwaysSuccessNodeAccess().getCommaKeyword_2_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:11303:10: ( (lv_parameters_13_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:11304:11: (lv_parameters_13_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:11304:11: (lv_parameters_13_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:11305:12: lv_parameters_13_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getAlwaysSuccessNodeAccess().getParametersParameterParserRuleCall_2_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_30);
                    	    	    lv_parameters_13_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getAlwaysSuccessNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_13_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop166;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:11329:4: ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:11329:4: ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:11330:5: {...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleAlwaysSuccessNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:11330:114: ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:11331:6: ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:11334:9: ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:11334:10: {...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleAlwaysSuccessNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:11334:19: (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:11334:20: otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_14=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_14, grammarAccess.getAlwaysSuccessNodeAccess().getSatisficesKeyword_2_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:11338:9: ( (lv_satisfices_15_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:11339:10: (lv_satisfices_15_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:11339:10: (lv_satisfices_15_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:11340:11: lv_satisfices_15_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getAlwaysSuccessNodeAccess().getSatisficesQualityParserRuleCall_2_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_30);
                    	    lv_satisfices_15_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getAlwaysSuccessNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_15_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:11357:9: (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )*
                    	    loop167:
                    	    do {
                    	        int alt167=2;
                    	        int LA167_0 = input.LA(1);

                    	        if ( (LA167_0==Comma) ) {
                    	            alt167=1;
                    	        }


                    	        switch (alt167) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:11358:10: otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_16=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_16, grammarAccess.getAlwaysSuccessNodeAccess().getCommaKeyword_2_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:11362:10: ( (lv_satisfices_17_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:11363:11: (lv_satisfices_17_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:11363:11: (lv_satisfices_17_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:11364:12: lv_satisfices_17_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getAlwaysSuccessNodeAccess().getSatisficesQualityParserRuleCall_2_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_30);
                    	    	    lv_satisfices_17_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getAlwaysSuccessNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_17_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop167;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:11388:4: ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:11388:4: ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:11389:5: {...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleAlwaysSuccessNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:11389:114: ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:11390:6: ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:11393:9: ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:11393:10: {...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleAlwaysSuccessNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:11393:19: (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:11393:20: otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_18=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_18, grammarAccess.getAlwaysSuccessNodeAccess().getSatisfiesKeyword_2_5_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:11397:9: ( (lv_satisfies_19_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:11398:10: (lv_satisfies_19_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:11398:10: (lv_satisfies_19_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:11399:11: lv_satisfies_19_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getAlwaysSuccessNodeAccess().getSatisfiesQualityRequirementParserRuleCall_2_5_1_0());
                    	    										
                    	    pushFollow(FOLLOW_30);
                    	    lv_satisfies_19_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getAlwaysSuccessNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_19_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:11416:9: (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )*
                    	    loop168:
                    	    do {
                    	        int alt168=2;
                    	        int LA168_0 = input.LA(1);

                    	        if ( (LA168_0==Comma) ) {
                    	            alt168=1;
                    	        }


                    	        switch (alt168) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:11417:10: otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_20=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_20, grammarAccess.getAlwaysSuccessNodeAccess().getCommaKeyword_2_5_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:11421:10: ( (lv_satisfies_21_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:11422:11: (lv_satisfies_21_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:11422:11: (lv_satisfies_21_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:11423:12: lv_satisfies_21_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getAlwaysSuccessNodeAccess().getSatisfiesQualityRequirementParserRuleCall_2_5_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_30);
                    	    	    lv_satisfies_21_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getAlwaysSuccessNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_21_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop168;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 7 :
                    	    // InternalQualityBtCppParser.g:11447:4: ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:11447:4: ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:11448:5: {...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2(), 6) ) {
                    	        throw new FailedPredicateException(input, "ruleAlwaysSuccessNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2(), 6)");
                    	    }
                    	    // InternalQualityBtCppParser.g:11448:114: ( ({...}? => (otherlv_22= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:11449:6: ({...}? => (otherlv_22= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2(), 6);
                    	    					
                    	    // InternalQualityBtCppParser.g:11452:9: ({...}? => (otherlv_22= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:11452:10: {...}? => (otherlv_22= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleAlwaysSuccessNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:11452:19: (otherlv_22= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:11452:20: otherlv_22= RightParenthesis
                    	    {
                    	    otherlv_22=(Token)match(input,RightParenthesis,FOLLOW_29); 

                    	    									newLeafNode(otherlv_22, grammarAccess.getAlwaysSuccessNodeAccess().getRightParenthesisKeyword_2_6());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt169 >= 1 ) break loop169;
                                EarlyExitException eee =
                                    new EarlyExitException(169, input);
                                throw eee;
                        }
                        cnt169++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2()) ) {
                        throw new FailedPredicateException(input, "ruleAlwaysSuccessNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2());
                    				

                    }
                    break;

            }


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAlwaysSuccessNode"


    // $ANTLR start "entryRuleSetBlackboardNode"
    // InternalQualityBtCppParser.g:11474:1: entryRuleSetBlackboardNode returns [EObject current=null] : iv_ruleSetBlackboardNode= ruleSetBlackboardNode EOF ;
    public final EObject entryRuleSetBlackboardNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSetBlackboardNode = null;


        try {
            // InternalQualityBtCppParser.g:11474:58: (iv_ruleSetBlackboardNode= ruleSetBlackboardNode EOF )
            // InternalQualityBtCppParser.g:11475:2: iv_ruleSetBlackboardNode= ruleSetBlackboardNode EOF
            {
             newCompositeNode(grammarAccess.getSetBlackboardNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleSetBlackboardNode=ruleSetBlackboardNode();

            state._fsp--;

             current =iv_ruleSetBlackboardNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSetBlackboardNode"


    // $ANTLR start "ruleSetBlackboardNode"
    // InternalQualityBtCppParser.g:11481:1: ruleSetBlackboardNode returns [EObject current=null] : ( () otherlv_1= SetBlackboard ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Value otherlv_15= EqualsSign ( (lv_value_16_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Output_key otherlv_18= EqualsSign ( (lv_output_key_19_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Parameters ( (lv_parameters_21_0= ruleParameter ) ) (otherlv_22= Comma ( (lv_parameters_23_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= Satisfies ( (lv_satisfies_25_0= ruleQualityRequirement ) ) (otherlv_26= Comma ( (lv_satisfies_27_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= RightParenthesis ) ) ) ) )+ {...}?) ) )? ) ;
    public final EObject ruleSetBlackboardNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        Token otherlv_24=null;
        Token otherlv_26=null;
        Token otherlv_28=null;
        AntlrDatatypeRuleToken lv_ID_6_0 = null;

        AntlrDatatypeRuleToken lv_name_9_0 = null;

        EObject lv_satisfices_11_0 = null;

        EObject lv_satisfices_13_0 = null;

        AntlrDatatypeRuleToken lv_value_16_0 = null;

        AntlrDatatypeRuleToken lv_output_key_19_0 = null;

        EObject lv_parameters_21_0 = null;

        EObject lv_parameters_23_0 = null;

        EObject lv_satisfies_25_0 = null;

        EObject lv_satisfies_27_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:11487:2: ( ( () otherlv_1= SetBlackboard ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Value otherlv_15= EqualsSign ( (lv_value_16_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Output_key otherlv_18= EqualsSign ( (lv_output_key_19_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Parameters ( (lv_parameters_21_0= ruleParameter ) ) (otherlv_22= Comma ( (lv_parameters_23_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= Satisfies ( (lv_satisfies_25_0= ruleQualityRequirement ) ) (otherlv_26= Comma ( (lv_satisfies_27_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= RightParenthesis ) ) ) ) )+ {...}?) ) )? ) )
            // InternalQualityBtCppParser.g:11488:2: ( () otherlv_1= SetBlackboard ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Value otherlv_15= EqualsSign ( (lv_value_16_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Output_key otherlv_18= EqualsSign ( (lv_output_key_19_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Parameters ( (lv_parameters_21_0= ruleParameter ) ) (otherlv_22= Comma ( (lv_parameters_23_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= Satisfies ( (lv_satisfies_25_0= ruleQualityRequirement ) ) (otherlv_26= Comma ( (lv_satisfies_27_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= RightParenthesis ) ) ) ) )+ {...}?) ) )? )
            {
            // InternalQualityBtCppParser.g:11488:2: ( () otherlv_1= SetBlackboard ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Value otherlv_15= EqualsSign ( (lv_value_16_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Output_key otherlv_18= EqualsSign ( (lv_output_key_19_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Parameters ( (lv_parameters_21_0= ruleParameter ) ) (otherlv_22= Comma ( (lv_parameters_23_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= Satisfies ( (lv_satisfies_25_0= ruleQualityRequirement ) ) (otherlv_26= Comma ( (lv_satisfies_27_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= RightParenthesis ) ) ) ) )+ {...}?) ) )? )
            // InternalQualityBtCppParser.g:11489:3: () otherlv_1= SetBlackboard ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Value otherlv_15= EqualsSign ( (lv_value_16_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Output_key otherlv_18= EqualsSign ( (lv_output_key_19_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Parameters ( (lv_parameters_21_0= ruleParameter ) ) (otherlv_22= Comma ( (lv_parameters_23_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= Satisfies ( (lv_satisfies_25_0= ruleQualityRequirement ) ) (otherlv_26= Comma ( (lv_satisfies_27_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            {
            // InternalQualityBtCppParser.g:11489:3: ()
            // InternalQualityBtCppParser.g:11490:4: 
            {

            				current = forceCreateModelElement(
            					grammarAccess.getSetBlackboardNodeAccess().getSetBlackboardNodeAction_0(),
            					current);
            			

            }

            otherlv_1=(Token)match(input,SetBlackboard,FOLLOW_31); 

            			newLeafNode(otherlv_1, grammarAccess.getSetBlackboardNodeAccess().getSetBlackboardKeyword_1());
            		
            // InternalQualityBtCppParser.g:11500:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Value otherlv_15= EqualsSign ( (lv_value_16_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Output_key otherlv_18= EqualsSign ( (lv_output_key_19_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Parameters ( (lv_parameters_21_0= ruleParameter ) ) (otherlv_22= Comma ( (lv_parameters_23_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= Satisfies ( (lv_satisfies_25_0= ruleQualityRequirement ) ) (otherlv_26= Comma ( (lv_satisfies_27_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt175=2;
            int LA175_0 = input.LA(1);

            if ( ((LA175_0>=Output_key && LA175_0<=Satisfies)||LA175_0==Value||LA175_0==Name||LA175_0==ID||(LA175_0>=LeftParenthesis && LA175_0<=RightParenthesis)) ) {
                alt175=1;
            }
            switch (alt175) {
                case 1 :
                    // InternalQualityBtCppParser.g:11501:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Value otherlv_15= EqualsSign ( (lv_value_16_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Output_key otherlv_18= EqualsSign ( (lv_output_key_19_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Parameters ( (lv_parameters_21_0= ruleParameter ) ) (otherlv_22= Comma ( (lv_parameters_23_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= Satisfies ( (lv_satisfies_25_0= ruleQualityRequirement ) ) (otherlv_26= Comma ( (lv_satisfies_27_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:11501:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Value otherlv_15= EqualsSign ( (lv_value_16_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Output_key otherlv_18= EqualsSign ( (lv_output_key_19_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Parameters ( (lv_parameters_21_0= ruleParameter ) ) (otherlv_22= Comma ( (lv_parameters_23_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= Satisfies ( (lv_satisfies_25_0= ruleQualityRequirement ) ) (otherlv_26= Comma ( (lv_satisfies_27_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:11502:5: ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Value otherlv_15= EqualsSign ( (lv_value_16_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Output_key otherlv_18= EqualsSign ( (lv_output_key_19_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Parameters ( (lv_parameters_21_0= ruleParameter ) ) (otherlv_22= Comma ( (lv_parameters_23_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= Satisfies ( (lv_satisfies_25_0= ruleQualityRequirement ) ) (otherlv_26= Comma ( (lv_satisfies_27_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2());
                    				
                    // InternalQualityBtCppParser.g:11505:5: ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Value otherlv_15= EqualsSign ( (lv_value_16_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Output_key otherlv_18= EqualsSign ( (lv_output_key_19_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Parameters ( (lv_parameters_21_0= ruleParameter ) ) (otherlv_22= Comma ( (lv_parameters_23_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= Satisfies ( (lv_satisfies_25_0= ruleQualityRequirement ) ) (otherlv_26= Comma ( (lv_satisfies_27_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:11506:6: ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Value otherlv_15= EqualsSign ( (lv_value_16_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Output_key otherlv_18= EqualsSign ( (lv_output_key_19_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Parameters ( (lv_parameters_21_0= ruleParameter ) ) (otherlv_22= Comma ( (lv_parameters_23_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= Satisfies ( (lv_satisfies_25_0= ruleQualityRequirement ) ) (otherlv_26= Comma ( (lv_satisfies_27_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:11506:6: ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Value otherlv_15= EqualsSign ( (lv_value_16_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Output_key otherlv_18= EqualsSign ( (lv_output_key_19_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Parameters ( (lv_parameters_21_0= ruleParameter ) ) (otherlv_22= Comma ( (lv_parameters_23_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= Satisfies ( (lv_satisfies_25_0= ruleQualityRequirement ) ) (otherlv_26= Comma ( (lv_satisfies_27_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= RightParenthesis ) ) ) ) )+
                    int cnt174=0;
                    loop174:
                    do {
                        int alt174=10;
                        alt174 = dfa174.predict(input);
                        switch (alt174) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:11507:4: ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:11507:4: ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:11508:5: {...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleSetBlackboardNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:11508:114: ( ({...}? => (otherlv_3= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:11509:6: ({...}? => (otherlv_3= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:11512:9: ({...}? => (otherlv_3= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:11512:10: {...}? => (otherlv_3= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSetBlackboardNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:11512:19: (otherlv_3= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:11512:20: otherlv_3= LeftParenthesis
                    	    {
                    	    otherlv_3=(Token)match(input,LeftParenthesis,FOLLOW_31); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getSetBlackboardNodeAccess().getLeftParenthesisKeyword_2_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:11522:4: ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:11522:4: ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:11523:5: {...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleSetBlackboardNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:11523:114: ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:11524:6: ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:11527:9: ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:11527:10: {...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSetBlackboardNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:11527:19: (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:11527:20: otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) )
                    	    {
                    	    otherlv_4=(Token)match(input,ID,FOLLOW_8); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getSetBlackboardNodeAccess().getIDKeyword_2_1_0());
                    	    								
                    	    otherlv_5=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_5, grammarAccess.getSetBlackboardNodeAccess().getEqualsSignKeyword_2_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:11535:9: ( (lv_ID_6_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:11536:10: (lv_ID_6_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:11536:10: (lv_ID_6_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:11537:11: lv_ID_6_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getSetBlackboardNodeAccess().getIDEStringParserRuleCall_2_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_31);
                    	    lv_ID_6_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getSetBlackboardNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"ID",
                    	    												lv_ID_6_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:11560:4: ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:11560:4: ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:11561:5: {...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleSetBlackboardNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:11561:114: ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:11562:6: ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:11565:9: ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:11565:10: {...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSetBlackboardNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:11565:19: (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:11565:20: otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) )
                    	    {
                    	    otherlv_7=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_7, grammarAccess.getSetBlackboardNodeAccess().getNameKeyword_2_2_0());
                    	    								
                    	    otherlv_8=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_8, grammarAccess.getSetBlackboardNodeAccess().getEqualsSignKeyword_2_2_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:11573:9: ( (lv_name_9_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:11574:10: (lv_name_9_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:11574:10: (lv_name_9_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:11575:11: lv_name_9_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getSetBlackboardNodeAccess().getNameEStringParserRuleCall_2_2_2_0());
                    	    										
                    	    pushFollow(FOLLOW_31);
                    	    lv_name_9_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getSetBlackboardNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_9_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:11598:4: ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:11598:4: ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:11599:5: {...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleSetBlackboardNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:11599:114: ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:11600:6: ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:11603:9: ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:11603:10: {...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSetBlackboardNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:11603:19: (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:11603:20: otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_10=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_10, grammarAccess.getSetBlackboardNodeAccess().getSatisficesKeyword_2_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:11607:9: ( (lv_satisfices_11_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:11608:10: (lv_satisfices_11_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:11608:10: (lv_satisfices_11_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:11609:11: lv_satisfices_11_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getSetBlackboardNodeAccess().getSatisficesQualityParserRuleCall_2_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_32);
                    	    lv_satisfices_11_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getSetBlackboardNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_11_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:11626:9: (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )*
                    	    loop171:
                    	    do {
                    	        int alt171=2;
                    	        int LA171_0 = input.LA(1);

                    	        if ( (LA171_0==Comma) ) {
                    	            alt171=1;
                    	        }


                    	        switch (alt171) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:11627:10: otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_12=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_12, grammarAccess.getSetBlackboardNodeAccess().getCommaKeyword_2_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:11631:10: ( (lv_satisfices_13_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:11632:11: (lv_satisfices_13_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:11632:11: (lv_satisfices_13_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:11633:12: lv_satisfices_13_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getSetBlackboardNodeAccess().getSatisficesQualityParserRuleCall_2_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_32);
                    	    	    lv_satisfices_13_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getSetBlackboardNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_13_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop171;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:11657:4: ({...}? => ( ({...}? => (otherlv_14= Value otherlv_15= EqualsSign ( (lv_value_16_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:11657:4: ({...}? => ( ({...}? => (otherlv_14= Value otherlv_15= EqualsSign ( (lv_value_16_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:11658:5: {...}? => ( ({...}? => (otherlv_14= Value otherlv_15= EqualsSign ( (lv_value_16_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleSetBlackboardNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:11658:114: ( ({...}? => (otherlv_14= Value otherlv_15= EqualsSign ( (lv_value_16_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:11659:6: ({...}? => (otherlv_14= Value otherlv_15= EqualsSign ( (lv_value_16_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:11662:9: ({...}? => (otherlv_14= Value otherlv_15= EqualsSign ( (lv_value_16_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:11662:10: {...}? => (otherlv_14= Value otherlv_15= EqualsSign ( (lv_value_16_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSetBlackboardNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:11662:19: (otherlv_14= Value otherlv_15= EqualsSign ( (lv_value_16_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:11662:20: otherlv_14= Value otherlv_15= EqualsSign ( (lv_value_16_0= ruleEString ) )
                    	    {
                    	    otherlv_14=(Token)match(input,Value,FOLLOW_8); 

                    	    									newLeafNode(otherlv_14, grammarAccess.getSetBlackboardNodeAccess().getValueKeyword_2_4_0());
                    	    								
                    	    otherlv_15=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_15, grammarAccess.getSetBlackboardNodeAccess().getEqualsSignKeyword_2_4_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:11670:9: ( (lv_value_16_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:11671:10: (lv_value_16_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:11671:10: (lv_value_16_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:11672:11: lv_value_16_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getSetBlackboardNodeAccess().getValueEStringParserRuleCall_2_4_2_0());
                    	    										
                    	    pushFollow(FOLLOW_31);
                    	    lv_value_16_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getSetBlackboardNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"value",
                    	    												lv_value_16_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:11695:4: ({...}? => ( ({...}? => (otherlv_17= Output_key otherlv_18= EqualsSign ( (lv_output_key_19_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:11695:4: ({...}? => ( ({...}? => (otherlv_17= Output_key otherlv_18= EqualsSign ( (lv_output_key_19_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:11696:5: {...}? => ( ({...}? => (otherlv_17= Output_key otherlv_18= EqualsSign ( (lv_output_key_19_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleSetBlackboardNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:11696:114: ( ({...}? => (otherlv_17= Output_key otherlv_18= EqualsSign ( (lv_output_key_19_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:11697:6: ({...}? => (otherlv_17= Output_key otherlv_18= EqualsSign ( (lv_output_key_19_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:11700:9: ({...}? => (otherlv_17= Output_key otherlv_18= EqualsSign ( (lv_output_key_19_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:11700:10: {...}? => (otherlv_17= Output_key otherlv_18= EqualsSign ( (lv_output_key_19_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSetBlackboardNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:11700:19: (otherlv_17= Output_key otherlv_18= EqualsSign ( (lv_output_key_19_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:11700:20: otherlv_17= Output_key otherlv_18= EqualsSign ( (lv_output_key_19_0= ruleEString ) )
                    	    {
                    	    otherlv_17=(Token)match(input,Output_key,FOLLOW_8); 

                    	    									newLeafNode(otherlv_17, grammarAccess.getSetBlackboardNodeAccess().getOutput_keyKeyword_2_5_0());
                    	    								
                    	    otherlv_18=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_18, grammarAccess.getSetBlackboardNodeAccess().getEqualsSignKeyword_2_5_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:11708:9: ( (lv_output_key_19_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:11709:10: (lv_output_key_19_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:11709:10: (lv_output_key_19_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:11710:11: lv_output_key_19_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getSetBlackboardNodeAccess().getOutput_keyEStringParserRuleCall_2_5_2_0());
                    	    										
                    	    pushFollow(FOLLOW_31);
                    	    lv_output_key_19_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getSetBlackboardNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"output_key",
                    	    												lv_output_key_19_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 7 :
                    	    // InternalQualityBtCppParser.g:11733:4: ({...}? => ( ({...}? => (otherlv_20= Parameters ( (lv_parameters_21_0= ruleParameter ) ) (otherlv_22= Comma ( (lv_parameters_23_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:11733:4: ({...}? => ( ({...}? => (otherlv_20= Parameters ( (lv_parameters_21_0= ruleParameter ) ) (otherlv_22= Comma ( (lv_parameters_23_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:11734:5: {...}? => ( ({...}? => (otherlv_20= Parameters ( (lv_parameters_21_0= ruleParameter ) ) (otherlv_22= Comma ( (lv_parameters_23_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 6) ) {
                    	        throw new FailedPredicateException(input, "ruleSetBlackboardNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 6)");
                    	    }
                    	    // InternalQualityBtCppParser.g:11734:114: ( ({...}? => (otherlv_20= Parameters ( (lv_parameters_21_0= ruleParameter ) ) (otherlv_22= Comma ( (lv_parameters_23_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:11735:6: ({...}? => (otherlv_20= Parameters ( (lv_parameters_21_0= ruleParameter ) ) (otherlv_22= Comma ( (lv_parameters_23_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 6);
                    	    					
                    	    // InternalQualityBtCppParser.g:11738:9: ({...}? => (otherlv_20= Parameters ( (lv_parameters_21_0= ruleParameter ) ) (otherlv_22= Comma ( (lv_parameters_23_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:11738:10: {...}? => (otherlv_20= Parameters ( (lv_parameters_21_0= ruleParameter ) ) (otherlv_22= Comma ( (lv_parameters_23_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSetBlackboardNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:11738:19: (otherlv_20= Parameters ( (lv_parameters_21_0= ruleParameter ) ) (otherlv_22= Comma ( (lv_parameters_23_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:11738:20: otherlv_20= Parameters ( (lv_parameters_21_0= ruleParameter ) ) (otherlv_22= Comma ( (lv_parameters_23_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_20=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_20, grammarAccess.getSetBlackboardNodeAccess().getParametersKeyword_2_6_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:11742:9: ( (lv_parameters_21_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:11743:10: (lv_parameters_21_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:11743:10: (lv_parameters_21_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:11744:11: lv_parameters_21_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getSetBlackboardNodeAccess().getParametersParameterParserRuleCall_2_6_1_0());
                    	    										
                    	    pushFollow(FOLLOW_32);
                    	    lv_parameters_21_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getSetBlackboardNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_21_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:11761:9: (otherlv_22= Comma ( (lv_parameters_23_0= ruleParameter ) ) )*
                    	    loop172:
                    	    do {
                    	        int alt172=2;
                    	        int LA172_0 = input.LA(1);

                    	        if ( (LA172_0==Comma) ) {
                    	            alt172=1;
                    	        }


                    	        switch (alt172) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:11762:10: otherlv_22= Comma ( (lv_parameters_23_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_22=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_22, grammarAccess.getSetBlackboardNodeAccess().getCommaKeyword_2_6_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:11766:10: ( (lv_parameters_23_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:11767:11: (lv_parameters_23_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:11767:11: (lv_parameters_23_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:11768:12: lv_parameters_23_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getSetBlackboardNodeAccess().getParametersParameterParserRuleCall_2_6_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_32);
                    	    	    lv_parameters_23_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getSetBlackboardNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_23_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop172;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 8 :
                    	    // InternalQualityBtCppParser.g:11792:4: ({...}? => ( ({...}? => (otherlv_24= Satisfies ( (lv_satisfies_25_0= ruleQualityRequirement ) ) (otherlv_26= Comma ( (lv_satisfies_27_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:11792:4: ({...}? => ( ({...}? => (otherlv_24= Satisfies ( (lv_satisfies_25_0= ruleQualityRequirement ) ) (otherlv_26= Comma ( (lv_satisfies_27_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:11793:5: {...}? => ( ({...}? => (otherlv_24= Satisfies ( (lv_satisfies_25_0= ruleQualityRequirement ) ) (otherlv_26= Comma ( (lv_satisfies_27_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 7) ) {
                    	        throw new FailedPredicateException(input, "ruleSetBlackboardNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 7)");
                    	    }
                    	    // InternalQualityBtCppParser.g:11793:114: ( ({...}? => (otherlv_24= Satisfies ( (lv_satisfies_25_0= ruleQualityRequirement ) ) (otherlv_26= Comma ( (lv_satisfies_27_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:11794:6: ({...}? => (otherlv_24= Satisfies ( (lv_satisfies_25_0= ruleQualityRequirement ) ) (otherlv_26= Comma ( (lv_satisfies_27_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 7);
                    	    					
                    	    // InternalQualityBtCppParser.g:11797:9: ({...}? => (otherlv_24= Satisfies ( (lv_satisfies_25_0= ruleQualityRequirement ) ) (otherlv_26= Comma ( (lv_satisfies_27_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:11797:10: {...}? => (otherlv_24= Satisfies ( (lv_satisfies_25_0= ruleQualityRequirement ) ) (otherlv_26= Comma ( (lv_satisfies_27_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSetBlackboardNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:11797:19: (otherlv_24= Satisfies ( (lv_satisfies_25_0= ruleQualityRequirement ) ) (otherlv_26= Comma ( (lv_satisfies_27_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:11797:20: otherlv_24= Satisfies ( (lv_satisfies_25_0= ruleQualityRequirement ) ) (otherlv_26= Comma ( (lv_satisfies_27_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_24=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_24, grammarAccess.getSetBlackboardNodeAccess().getSatisfiesKeyword_2_7_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:11801:9: ( (lv_satisfies_25_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:11802:10: (lv_satisfies_25_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:11802:10: (lv_satisfies_25_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:11803:11: lv_satisfies_25_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getSetBlackboardNodeAccess().getSatisfiesQualityRequirementParserRuleCall_2_7_1_0());
                    	    										
                    	    pushFollow(FOLLOW_32);
                    	    lv_satisfies_25_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getSetBlackboardNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_25_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:11820:9: (otherlv_26= Comma ( (lv_satisfies_27_0= ruleQualityRequirement ) ) )*
                    	    loop173:
                    	    do {
                    	        int alt173=2;
                    	        int LA173_0 = input.LA(1);

                    	        if ( (LA173_0==Comma) ) {
                    	            alt173=1;
                    	        }


                    	        switch (alt173) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:11821:10: otherlv_26= Comma ( (lv_satisfies_27_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_26=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_26, grammarAccess.getSetBlackboardNodeAccess().getCommaKeyword_2_7_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:11825:10: ( (lv_satisfies_27_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:11826:11: (lv_satisfies_27_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:11826:11: (lv_satisfies_27_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:11827:12: lv_satisfies_27_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getSetBlackboardNodeAccess().getSatisfiesQualityRequirementParserRuleCall_2_7_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_32);
                    	    	    lv_satisfies_27_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getSetBlackboardNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_27_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop173;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 9 :
                    	    // InternalQualityBtCppParser.g:11851:4: ({...}? => ( ({...}? => (otherlv_28= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:11851:4: ({...}? => ( ({...}? => (otherlv_28= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:11852:5: {...}? => ( ({...}? => (otherlv_28= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 8) ) {
                    	        throw new FailedPredicateException(input, "ruleSetBlackboardNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 8)");
                    	    }
                    	    // InternalQualityBtCppParser.g:11852:114: ( ({...}? => (otherlv_28= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:11853:6: ({...}? => (otherlv_28= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 8);
                    	    					
                    	    // InternalQualityBtCppParser.g:11856:9: ({...}? => (otherlv_28= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:11856:10: {...}? => (otherlv_28= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSetBlackboardNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:11856:19: (otherlv_28= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:11856:20: otherlv_28= RightParenthesis
                    	    {
                    	    otherlv_28=(Token)match(input,RightParenthesis,FOLLOW_31); 

                    	    									newLeafNode(otherlv_28, grammarAccess.getSetBlackboardNodeAccess().getRightParenthesisKeyword_2_8());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt174 >= 1 ) break loop174;
                                EarlyExitException eee =
                                    new EarlyExitException(174, input);
                                throw eee;
                        }
                        cnt174++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2()) ) {
                        throw new FailedPredicateException(input, "ruleSetBlackboardNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2());
                    				

                    }
                    break;

            }


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSetBlackboardNode"


    // $ANTLR start "entryRuleTestNode"
    // InternalQualityBtCppParser.g:11878:1: entryRuleTestNode returns [EObject current=null] : iv_ruleTestNode= ruleTestNode EOF ;
    public final EObject entryRuleTestNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTestNode = null;


        try {
            // InternalQualityBtCppParser.g:11878:49: (iv_ruleTestNode= ruleTestNode EOF )
            // InternalQualityBtCppParser.g:11879:2: iv_ruleTestNode= ruleTestNode EOF
            {
             newCompositeNode(grammarAccess.getTestNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleTestNode=ruleTestNode();

            state._fsp--;

             current =iv_ruleTestNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTestNode"


    // $ANTLR start "ruleTestNode"
    // InternalQualityBtCppParser.g:11885:1: ruleTestNode returns [EObject current=null] : ( () otherlv_1= Test ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? ) ;
    public final EObject ruleTestNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        AntlrDatatypeRuleToken lv_ID_6_0 = null;

        AntlrDatatypeRuleToken lv_name_9_0 = null;

        EObject lv_parameters_11_0 = null;

        EObject lv_parameters_13_0 = null;

        EObject lv_satisfices_15_0 = null;

        EObject lv_satisfices_17_0 = null;

        EObject lv_satisfies_19_0 = null;

        EObject lv_satisfies_21_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:11891:2: ( ( () otherlv_1= Test ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? ) )
            // InternalQualityBtCppParser.g:11892:2: ( () otherlv_1= Test ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? )
            {
            // InternalQualityBtCppParser.g:11892:2: ( () otherlv_1= Test ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? )
            // InternalQualityBtCppParser.g:11893:3: () otherlv_1= Test ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            {
            // InternalQualityBtCppParser.g:11893:3: ()
            // InternalQualityBtCppParser.g:11894:4: 
            {

            				current = forceCreateModelElement(
            					grammarAccess.getTestNodeAccess().getTestNodeAction_0(),
            					current);
            			

            }

            otherlv_1=(Token)match(input,Test,FOLLOW_29); 

            			newLeafNode(otherlv_1, grammarAccess.getTestNodeAccess().getTestKeyword_1());
            		
            // InternalQualityBtCppParser.g:11904:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt180=2;
            int LA180_0 = input.LA(1);

            if ( ((LA180_0>=Parameters && LA180_0<=Satisfies)||LA180_0==Name||LA180_0==ID||(LA180_0>=LeftParenthesis && LA180_0<=RightParenthesis)) ) {
                alt180=1;
            }
            switch (alt180) {
                case 1 :
                    // InternalQualityBtCppParser.g:11905:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:11905:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:11906:5: ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getTestNodeAccess().getUnorderedGroup_2());
                    				
                    // InternalQualityBtCppParser.g:11909:5: ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:11910:6: ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:11910:6: ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+
                    int cnt179=0;
                    loop179:
                    do {
                        int alt179=8;
                        int LA179_0 = input.LA(1);

                        if ( LA179_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getTestNodeAccess().getUnorderedGroup_2(), 0) ) {
                            alt179=1;
                        }
                        else if ( LA179_0 == ID && getUnorderedGroupHelper().canSelect(grammarAccess.getTestNodeAccess().getUnorderedGroup_2(), 1) ) {
                            alt179=2;
                        }
                        else if ( LA179_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getTestNodeAccess().getUnorderedGroup_2(), 2) ) {
                            alt179=3;
                        }
                        else if ( LA179_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getTestNodeAccess().getUnorderedGroup_2(), 3) ) {
                            alt179=4;
                        }
                        else if ( LA179_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getTestNodeAccess().getUnorderedGroup_2(), 4) ) {
                            alt179=5;
                        }
                        else if ( LA179_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getTestNodeAccess().getUnorderedGroup_2(), 5) ) {
                            alt179=6;
                        }
                        else if ( LA179_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getTestNodeAccess().getUnorderedGroup_2(), 6) ) {
                            alt179=7;
                        }


                        switch (alt179) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:11911:4: ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:11911:4: ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:11912:5: {...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getTestNodeAccess().getUnorderedGroup_2(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleTestNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getTestNodeAccess().getUnorderedGroup_2(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:11912:105: ( ({...}? => (otherlv_3= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:11913:6: ({...}? => (otherlv_3= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getTestNodeAccess().getUnorderedGroup_2(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:11916:9: ({...}? => (otherlv_3= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:11916:10: {...}? => (otherlv_3= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleTestNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:11916:19: (otherlv_3= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:11916:20: otherlv_3= LeftParenthesis
                    	    {
                    	    otherlv_3=(Token)match(input,LeftParenthesis,FOLLOW_29); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getTestNodeAccess().getLeftParenthesisKeyword_2_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTestNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:11926:4: ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:11926:4: ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:11927:5: {...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getTestNodeAccess().getUnorderedGroup_2(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleTestNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getTestNodeAccess().getUnorderedGroup_2(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:11927:105: ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:11928:6: ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getTestNodeAccess().getUnorderedGroup_2(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:11931:9: ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:11931:10: {...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleTestNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:11931:19: (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:11931:20: otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) )
                    	    {
                    	    otherlv_4=(Token)match(input,ID,FOLLOW_8); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getTestNodeAccess().getIDKeyword_2_1_0());
                    	    								
                    	    otherlv_5=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_5, grammarAccess.getTestNodeAccess().getEqualsSignKeyword_2_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:11939:9: ( (lv_ID_6_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:11940:10: (lv_ID_6_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:11940:10: (lv_ID_6_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:11941:11: lv_ID_6_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getTestNodeAccess().getIDEStringParserRuleCall_2_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_29);
                    	    lv_ID_6_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getTestNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"ID",
                    	    												lv_ID_6_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTestNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:11964:4: ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:11964:4: ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:11965:5: {...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getTestNodeAccess().getUnorderedGroup_2(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleTestNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getTestNodeAccess().getUnorderedGroup_2(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:11965:105: ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:11966:6: ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getTestNodeAccess().getUnorderedGroup_2(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:11969:9: ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:11969:10: {...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleTestNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:11969:19: (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:11969:20: otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) )
                    	    {
                    	    otherlv_7=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_7, grammarAccess.getTestNodeAccess().getNameKeyword_2_2_0());
                    	    								
                    	    otherlv_8=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_8, grammarAccess.getTestNodeAccess().getEqualsSignKeyword_2_2_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:11977:9: ( (lv_name_9_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:11978:10: (lv_name_9_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:11978:10: (lv_name_9_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:11979:11: lv_name_9_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getTestNodeAccess().getNameEStringParserRuleCall_2_2_2_0());
                    	    										
                    	    pushFollow(FOLLOW_29);
                    	    lv_name_9_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getTestNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_9_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTestNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:12002:4: ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:12002:4: ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:12003:5: {...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getTestNodeAccess().getUnorderedGroup_2(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleTestNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getTestNodeAccess().getUnorderedGroup_2(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:12003:105: ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:12004:6: ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getTestNodeAccess().getUnorderedGroup_2(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:12007:9: ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:12007:10: {...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleTestNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:12007:19: (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:12007:20: otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_10=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_10, grammarAccess.getTestNodeAccess().getParametersKeyword_2_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:12011:9: ( (lv_parameters_11_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:12012:10: (lv_parameters_11_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:12012:10: (lv_parameters_11_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:12013:11: lv_parameters_11_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getTestNodeAccess().getParametersParameterParserRuleCall_2_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_30);
                    	    lv_parameters_11_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getTestNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_11_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:12030:9: (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )*
                    	    loop176:
                    	    do {
                    	        int alt176=2;
                    	        int LA176_0 = input.LA(1);

                    	        if ( (LA176_0==Comma) ) {
                    	            alt176=1;
                    	        }


                    	        switch (alt176) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:12031:10: otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_12=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_12, grammarAccess.getTestNodeAccess().getCommaKeyword_2_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:12035:10: ( (lv_parameters_13_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:12036:11: (lv_parameters_13_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:12036:11: (lv_parameters_13_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:12037:12: lv_parameters_13_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getTestNodeAccess().getParametersParameterParserRuleCall_2_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_30);
                    	    	    lv_parameters_13_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getTestNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_13_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop176;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTestNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:12061:4: ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:12061:4: ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:12062:5: {...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getTestNodeAccess().getUnorderedGroup_2(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleTestNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getTestNodeAccess().getUnorderedGroup_2(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:12062:105: ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:12063:6: ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getTestNodeAccess().getUnorderedGroup_2(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:12066:9: ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:12066:10: {...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleTestNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:12066:19: (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:12066:20: otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_14=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_14, grammarAccess.getTestNodeAccess().getSatisficesKeyword_2_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:12070:9: ( (lv_satisfices_15_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:12071:10: (lv_satisfices_15_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:12071:10: (lv_satisfices_15_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:12072:11: lv_satisfices_15_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getTestNodeAccess().getSatisficesQualityParserRuleCall_2_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_30);
                    	    lv_satisfices_15_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getTestNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_15_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:12089:9: (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )*
                    	    loop177:
                    	    do {
                    	        int alt177=2;
                    	        int LA177_0 = input.LA(1);

                    	        if ( (LA177_0==Comma) ) {
                    	            alt177=1;
                    	        }


                    	        switch (alt177) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:12090:10: otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_16=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_16, grammarAccess.getTestNodeAccess().getCommaKeyword_2_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:12094:10: ( (lv_satisfices_17_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:12095:11: (lv_satisfices_17_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:12095:11: (lv_satisfices_17_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:12096:12: lv_satisfices_17_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getTestNodeAccess().getSatisficesQualityParserRuleCall_2_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_30);
                    	    	    lv_satisfices_17_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getTestNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_17_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop177;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTestNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:12120:4: ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:12120:4: ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:12121:5: {...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getTestNodeAccess().getUnorderedGroup_2(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleTestNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getTestNodeAccess().getUnorderedGroup_2(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:12121:105: ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:12122:6: ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getTestNodeAccess().getUnorderedGroup_2(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:12125:9: ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:12125:10: {...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleTestNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:12125:19: (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:12125:20: otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_18=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_18, grammarAccess.getTestNodeAccess().getSatisfiesKeyword_2_5_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:12129:9: ( (lv_satisfies_19_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:12130:10: (lv_satisfies_19_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:12130:10: (lv_satisfies_19_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:12131:11: lv_satisfies_19_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getTestNodeAccess().getSatisfiesQualityRequirementParserRuleCall_2_5_1_0());
                    	    										
                    	    pushFollow(FOLLOW_30);
                    	    lv_satisfies_19_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getTestNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_19_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:12148:9: (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )*
                    	    loop178:
                    	    do {
                    	        int alt178=2;
                    	        int LA178_0 = input.LA(1);

                    	        if ( (LA178_0==Comma) ) {
                    	            alt178=1;
                    	        }


                    	        switch (alt178) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:12149:10: otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_20=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_20, grammarAccess.getTestNodeAccess().getCommaKeyword_2_5_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:12153:10: ( (lv_satisfies_21_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:12154:11: (lv_satisfies_21_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:12154:11: (lv_satisfies_21_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:12155:12: lv_satisfies_21_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getTestNodeAccess().getSatisfiesQualityRequirementParserRuleCall_2_5_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_30);
                    	    	    lv_satisfies_21_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getTestNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_21_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop178;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTestNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 7 :
                    	    // InternalQualityBtCppParser.g:12179:4: ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:12179:4: ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:12180:5: {...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getTestNodeAccess().getUnorderedGroup_2(), 6) ) {
                    	        throw new FailedPredicateException(input, "ruleTestNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getTestNodeAccess().getUnorderedGroup_2(), 6)");
                    	    }
                    	    // InternalQualityBtCppParser.g:12180:105: ( ({...}? => (otherlv_22= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:12181:6: ({...}? => (otherlv_22= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getTestNodeAccess().getUnorderedGroup_2(), 6);
                    	    					
                    	    // InternalQualityBtCppParser.g:12184:9: ({...}? => (otherlv_22= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:12184:10: {...}? => (otherlv_22= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleTestNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:12184:19: (otherlv_22= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:12184:20: otherlv_22= RightParenthesis
                    	    {
                    	    otherlv_22=(Token)match(input,RightParenthesis,FOLLOW_29); 

                    	    									newLeafNode(otherlv_22, grammarAccess.getTestNodeAccess().getRightParenthesisKeyword_2_6());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTestNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt179 >= 1 ) break loop179;
                                EarlyExitException eee =
                                    new EarlyExitException(179, input);
                                throw eee;
                        }
                        cnt179++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getTestNodeAccess().getUnorderedGroup_2()) ) {
                        throw new FailedPredicateException(input, "ruleTestNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getTestNodeAccess().getUnorderedGroup_2())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getTestNodeAccess().getUnorderedGroup_2());
                    				

                    }
                    break;

            }


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTestNode"


    // $ANTLR start "entryRuleEntryUpdatedActionNode"
    // InternalQualityBtCppParser.g:12206:1: entryRuleEntryUpdatedActionNode returns [EObject current=null] : iv_ruleEntryUpdatedActionNode= ruleEntryUpdatedActionNode EOF ;
    public final EObject entryRuleEntryUpdatedActionNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEntryUpdatedActionNode = null;


        try {
            // InternalQualityBtCppParser.g:12206:63: (iv_ruleEntryUpdatedActionNode= ruleEntryUpdatedActionNode EOF )
            // InternalQualityBtCppParser.g:12207:2: iv_ruleEntryUpdatedActionNode= ruleEntryUpdatedActionNode EOF
            {
             newCompositeNode(grammarAccess.getEntryUpdatedActionNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleEntryUpdatedActionNode=ruleEntryUpdatedActionNode();

            state._fsp--;

             current =iv_ruleEntryUpdatedActionNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEntryUpdatedActionNode"


    // $ANTLR start "ruleEntryUpdatedActionNode"
    // InternalQualityBtCppParser.g:12213:1: ruleEntryUpdatedActionNode returns [EObject current=null] : ( () otherlv_1= EntryUpdatedAction ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? ) ;
    public final EObject ruleEntryUpdatedActionNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        AntlrDatatypeRuleToken lv_ID_6_0 = null;

        AntlrDatatypeRuleToken lv_name_9_0 = null;

        EObject lv_parameters_11_0 = null;

        EObject lv_parameters_13_0 = null;

        EObject lv_satisfices_15_0 = null;

        EObject lv_satisfices_17_0 = null;

        EObject lv_satisfies_19_0 = null;

        EObject lv_satisfies_21_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:12219:2: ( ( () otherlv_1= EntryUpdatedAction ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? ) )
            // InternalQualityBtCppParser.g:12220:2: ( () otherlv_1= EntryUpdatedAction ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? )
            {
            // InternalQualityBtCppParser.g:12220:2: ( () otherlv_1= EntryUpdatedAction ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? )
            // InternalQualityBtCppParser.g:12221:3: () otherlv_1= EntryUpdatedAction ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            {
            // InternalQualityBtCppParser.g:12221:3: ()
            // InternalQualityBtCppParser.g:12222:4: 
            {

            				current = forceCreateModelElement(
            					grammarAccess.getEntryUpdatedActionNodeAccess().getEntryUpdatedActionNodeAction_0(),
            					current);
            			

            }

            otherlv_1=(Token)match(input,EntryUpdatedAction,FOLLOW_29); 

            			newLeafNode(otherlv_1, grammarAccess.getEntryUpdatedActionNodeAccess().getEntryUpdatedActionKeyword_1());
            		
            // InternalQualityBtCppParser.g:12232:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt185=2;
            int LA185_0 = input.LA(1);

            if ( ((LA185_0>=Parameters && LA185_0<=Satisfies)||LA185_0==Name||LA185_0==ID||(LA185_0>=LeftParenthesis && LA185_0<=RightParenthesis)) ) {
                alt185=1;
            }
            switch (alt185) {
                case 1 :
                    // InternalQualityBtCppParser.g:12233:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:12233:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:12234:5: ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2());
                    				
                    // InternalQualityBtCppParser.g:12237:5: ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:12238:6: ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:12238:6: ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+
                    int cnt184=0;
                    loop184:
                    do {
                        int alt184=8;
                        int LA184_0 = input.LA(1);

                        if ( LA184_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2(), 0) ) {
                            alt184=1;
                        }
                        else if ( LA184_0 == ID && getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2(), 1) ) {
                            alt184=2;
                        }
                        else if ( LA184_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2(), 2) ) {
                            alt184=3;
                        }
                        else if ( LA184_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2(), 3) ) {
                            alt184=4;
                        }
                        else if ( LA184_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2(), 4) ) {
                            alt184=5;
                        }
                        else if ( LA184_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2(), 5) ) {
                            alt184=6;
                        }
                        else if ( LA184_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2(), 6) ) {
                            alt184=7;
                        }


                        switch (alt184) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:12239:4: ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:12239:4: ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:12240:5: {...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleEntryUpdatedActionNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:12240:119: ( ({...}? => (otherlv_3= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:12241:6: ({...}? => (otherlv_3= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:12244:9: ({...}? => (otherlv_3= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:12244:10: {...}? => (otherlv_3= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleEntryUpdatedActionNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:12244:19: (otherlv_3= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:12244:20: otherlv_3= LeftParenthesis
                    	    {
                    	    otherlv_3=(Token)match(input,LeftParenthesis,FOLLOW_29); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getEntryUpdatedActionNodeAccess().getLeftParenthesisKeyword_2_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:12254:4: ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:12254:4: ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:12255:5: {...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleEntryUpdatedActionNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:12255:119: ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:12256:6: ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:12259:9: ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:12259:10: {...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleEntryUpdatedActionNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:12259:19: (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:12259:20: otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) )
                    	    {
                    	    otherlv_4=(Token)match(input,ID,FOLLOW_8); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getEntryUpdatedActionNodeAccess().getIDKeyword_2_1_0());
                    	    								
                    	    otherlv_5=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_5, grammarAccess.getEntryUpdatedActionNodeAccess().getEqualsSignKeyword_2_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:12267:9: ( (lv_ID_6_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:12268:10: (lv_ID_6_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:12268:10: (lv_ID_6_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:12269:11: lv_ID_6_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getEntryUpdatedActionNodeAccess().getIDEStringParserRuleCall_2_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_29);
                    	    lv_ID_6_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getEntryUpdatedActionNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"ID",
                    	    												lv_ID_6_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:12292:4: ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:12292:4: ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:12293:5: {...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleEntryUpdatedActionNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:12293:119: ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:12294:6: ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:12297:9: ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:12297:10: {...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleEntryUpdatedActionNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:12297:19: (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:12297:20: otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) )
                    	    {
                    	    otherlv_7=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_7, grammarAccess.getEntryUpdatedActionNodeAccess().getNameKeyword_2_2_0());
                    	    								
                    	    otherlv_8=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_8, grammarAccess.getEntryUpdatedActionNodeAccess().getEqualsSignKeyword_2_2_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:12305:9: ( (lv_name_9_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:12306:10: (lv_name_9_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:12306:10: (lv_name_9_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:12307:11: lv_name_9_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getEntryUpdatedActionNodeAccess().getNameEStringParserRuleCall_2_2_2_0());
                    	    										
                    	    pushFollow(FOLLOW_29);
                    	    lv_name_9_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getEntryUpdatedActionNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_9_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:12330:4: ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:12330:4: ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:12331:5: {...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleEntryUpdatedActionNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:12331:119: ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:12332:6: ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:12335:9: ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:12335:10: {...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleEntryUpdatedActionNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:12335:19: (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:12335:20: otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_10=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_10, grammarAccess.getEntryUpdatedActionNodeAccess().getParametersKeyword_2_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:12339:9: ( (lv_parameters_11_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:12340:10: (lv_parameters_11_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:12340:10: (lv_parameters_11_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:12341:11: lv_parameters_11_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getEntryUpdatedActionNodeAccess().getParametersParameterParserRuleCall_2_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_30);
                    	    lv_parameters_11_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getEntryUpdatedActionNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_11_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:12358:9: (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )*
                    	    loop181:
                    	    do {
                    	        int alt181=2;
                    	        int LA181_0 = input.LA(1);

                    	        if ( (LA181_0==Comma) ) {
                    	            alt181=1;
                    	        }


                    	        switch (alt181) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:12359:10: otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_12=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_12, grammarAccess.getEntryUpdatedActionNodeAccess().getCommaKeyword_2_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:12363:10: ( (lv_parameters_13_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:12364:11: (lv_parameters_13_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:12364:11: (lv_parameters_13_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:12365:12: lv_parameters_13_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getEntryUpdatedActionNodeAccess().getParametersParameterParserRuleCall_2_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_30);
                    	    	    lv_parameters_13_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getEntryUpdatedActionNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_13_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop181;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:12389:4: ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:12389:4: ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:12390:5: {...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleEntryUpdatedActionNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:12390:119: ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:12391:6: ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:12394:9: ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:12394:10: {...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleEntryUpdatedActionNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:12394:19: (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:12394:20: otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_14=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_14, grammarAccess.getEntryUpdatedActionNodeAccess().getSatisficesKeyword_2_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:12398:9: ( (lv_satisfices_15_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:12399:10: (lv_satisfices_15_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:12399:10: (lv_satisfices_15_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:12400:11: lv_satisfices_15_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getEntryUpdatedActionNodeAccess().getSatisficesQualityParserRuleCall_2_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_30);
                    	    lv_satisfices_15_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getEntryUpdatedActionNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_15_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:12417:9: (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )*
                    	    loop182:
                    	    do {
                    	        int alt182=2;
                    	        int LA182_0 = input.LA(1);

                    	        if ( (LA182_0==Comma) ) {
                    	            alt182=1;
                    	        }


                    	        switch (alt182) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:12418:10: otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_16=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_16, grammarAccess.getEntryUpdatedActionNodeAccess().getCommaKeyword_2_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:12422:10: ( (lv_satisfices_17_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:12423:11: (lv_satisfices_17_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:12423:11: (lv_satisfices_17_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:12424:12: lv_satisfices_17_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getEntryUpdatedActionNodeAccess().getSatisficesQualityParserRuleCall_2_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_30);
                    	    	    lv_satisfices_17_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getEntryUpdatedActionNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_17_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop182;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:12448:4: ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:12448:4: ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:12449:5: {...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleEntryUpdatedActionNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:12449:119: ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:12450:6: ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:12453:9: ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:12453:10: {...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleEntryUpdatedActionNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:12453:19: (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:12453:20: otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_18=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_18, grammarAccess.getEntryUpdatedActionNodeAccess().getSatisfiesKeyword_2_5_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:12457:9: ( (lv_satisfies_19_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:12458:10: (lv_satisfies_19_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:12458:10: (lv_satisfies_19_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:12459:11: lv_satisfies_19_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getEntryUpdatedActionNodeAccess().getSatisfiesQualityRequirementParserRuleCall_2_5_1_0());
                    	    										
                    	    pushFollow(FOLLOW_30);
                    	    lv_satisfies_19_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getEntryUpdatedActionNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_19_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:12476:9: (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )*
                    	    loop183:
                    	    do {
                    	        int alt183=2;
                    	        int LA183_0 = input.LA(1);

                    	        if ( (LA183_0==Comma) ) {
                    	            alt183=1;
                    	        }


                    	        switch (alt183) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:12477:10: otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_20=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_20, grammarAccess.getEntryUpdatedActionNodeAccess().getCommaKeyword_2_5_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:12481:10: ( (lv_satisfies_21_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:12482:11: (lv_satisfies_21_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:12482:11: (lv_satisfies_21_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:12483:12: lv_satisfies_21_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getEntryUpdatedActionNodeAccess().getSatisfiesQualityRequirementParserRuleCall_2_5_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_30);
                    	    	    lv_satisfies_21_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getEntryUpdatedActionNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_21_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop183;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 7 :
                    	    // InternalQualityBtCppParser.g:12507:4: ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:12507:4: ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:12508:5: {...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2(), 6) ) {
                    	        throw new FailedPredicateException(input, "ruleEntryUpdatedActionNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2(), 6)");
                    	    }
                    	    // InternalQualityBtCppParser.g:12508:119: ( ({...}? => (otherlv_22= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:12509:6: ({...}? => (otherlv_22= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2(), 6);
                    	    					
                    	    // InternalQualityBtCppParser.g:12512:9: ({...}? => (otherlv_22= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:12512:10: {...}? => (otherlv_22= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleEntryUpdatedActionNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:12512:19: (otherlv_22= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:12512:20: otherlv_22= RightParenthesis
                    	    {
                    	    otherlv_22=(Token)match(input,RightParenthesis,FOLLOW_29); 

                    	    									newLeafNode(otherlv_22, grammarAccess.getEntryUpdatedActionNodeAccess().getRightParenthesisKeyword_2_6());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt184 >= 1 ) break loop184;
                                EarlyExitException eee =
                                    new EarlyExitException(184, input);
                                throw eee;
                        }
                        cnt184++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2()) ) {
                        throw new FailedPredicateException(input, "ruleEntryUpdatedActionNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2());
                    				

                    }
                    break;

            }


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEntryUpdatedActionNode"


    // $ANTLR start "entryRuleUnsetBlackboardNode"
    // InternalQualityBtCppParser.g:12534:1: entryRuleUnsetBlackboardNode returns [EObject current=null] : iv_ruleUnsetBlackboardNode= ruleUnsetBlackboardNode EOF ;
    public final EObject entryRuleUnsetBlackboardNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUnsetBlackboardNode = null;


        try {
            // InternalQualityBtCppParser.g:12534:60: (iv_ruleUnsetBlackboardNode= ruleUnsetBlackboardNode EOF )
            // InternalQualityBtCppParser.g:12535:2: iv_ruleUnsetBlackboardNode= ruleUnsetBlackboardNode EOF
            {
             newCompositeNode(grammarAccess.getUnsetBlackboardNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleUnsetBlackboardNode=ruleUnsetBlackboardNode();

            state._fsp--;

             current =iv_ruleUnsetBlackboardNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUnsetBlackboardNode"


    // $ANTLR start "ruleUnsetBlackboardNode"
    // InternalQualityBtCppParser.g:12541:1: ruleUnsetBlackboardNode returns [EObject current=null] : ( () otherlv_1= UnsetBlackboard ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? ) ;
    public final EObject ruleUnsetBlackboardNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        AntlrDatatypeRuleToken lv_ID_6_0 = null;

        AntlrDatatypeRuleToken lv_name_9_0 = null;

        EObject lv_parameters_11_0 = null;

        EObject lv_parameters_13_0 = null;

        EObject lv_satisfices_15_0 = null;

        EObject lv_satisfices_17_0 = null;

        EObject lv_satisfies_19_0 = null;

        EObject lv_satisfies_21_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:12547:2: ( ( () otherlv_1= UnsetBlackboard ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? ) )
            // InternalQualityBtCppParser.g:12548:2: ( () otherlv_1= UnsetBlackboard ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? )
            {
            // InternalQualityBtCppParser.g:12548:2: ( () otherlv_1= UnsetBlackboard ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? )
            // InternalQualityBtCppParser.g:12549:3: () otherlv_1= UnsetBlackboard ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            {
            // InternalQualityBtCppParser.g:12549:3: ()
            // InternalQualityBtCppParser.g:12550:4: 
            {

            				current = forceCreateModelElement(
            					grammarAccess.getUnsetBlackboardNodeAccess().getUnsetBlackboardNodeAction_0(),
            					current);
            			

            }

            otherlv_1=(Token)match(input,UnsetBlackboard,FOLLOW_29); 

            			newLeafNode(otherlv_1, grammarAccess.getUnsetBlackboardNodeAccess().getUnsetBlackboardKeyword_1());
            		
            // InternalQualityBtCppParser.g:12560:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt190=2;
            int LA190_0 = input.LA(1);

            if ( ((LA190_0>=Parameters && LA190_0<=Satisfies)||LA190_0==Name||LA190_0==ID||(LA190_0>=LeftParenthesis && LA190_0<=RightParenthesis)) ) {
                alt190=1;
            }
            switch (alt190) {
                case 1 :
                    // InternalQualityBtCppParser.g:12561:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:12561:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:12562:5: ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2());
                    				
                    // InternalQualityBtCppParser.g:12565:5: ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:12566:6: ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:12566:6: ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+
                    int cnt189=0;
                    loop189:
                    do {
                        int alt189=8;
                        int LA189_0 = input.LA(1);

                        if ( LA189_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2(), 0) ) {
                            alt189=1;
                        }
                        else if ( LA189_0 == ID && getUnorderedGroupHelper().canSelect(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2(), 1) ) {
                            alt189=2;
                        }
                        else if ( LA189_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2(), 2) ) {
                            alt189=3;
                        }
                        else if ( LA189_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2(), 3) ) {
                            alt189=4;
                        }
                        else if ( LA189_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2(), 4) ) {
                            alt189=5;
                        }
                        else if ( LA189_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2(), 5) ) {
                            alt189=6;
                        }
                        else if ( LA189_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2(), 6) ) {
                            alt189=7;
                        }


                        switch (alt189) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:12567:4: ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:12567:4: ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:12568:5: {...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleUnsetBlackboardNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:12568:116: ( ({...}? => (otherlv_3= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:12569:6: ({...}? => (otherlv_3= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:12572:9: ({...}? => (otherlv_3= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:12572:10: {...}? => (otherlv_3= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleUnsetBlackboardNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:12572:19: (otherlv_3= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:12572:20: otherlv_3= LeftParenthesis
                    	    {
                    	    otherlv_3=(Token)match(input,LeftParenthesis,FOLLOW_29); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getUnsetBlackboardNodeAccess().getLeftParenthesisKeyword_2_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:12582:4: ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:12582:4: ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:12583:5: {...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleUnsetBlackboardNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:12583:116: ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:12584:6: ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:12587:9: ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:12587:10: {...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleUnsetBlackboardNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:12587:19: (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:12587:20: otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) )
                    	    {
                    	    otherlv_4=(Token)match(input,ID,FOLLOW_8); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getUnsetBlackboardNodeAccess().getIDKeyword_2_1_0());
                    	    								
                    	    otherlv_5=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_5, grammarAccess.getUnsetBlackboardNodeAccess().getEqualsSignKeyword_2_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:12595:9: ( (lv_ID_6_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:12596:10: (lv_ID_6_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:12596:10: (lv_ID_6_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:12597:11: lv_ID_6_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getUnsetBlackboardNodeAccess().getIDEStringParserRuleCall_2_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_29);
                    	    lv_ID_6_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getUnsetBlackboardNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"ID",
                    	    												lv_ID_6_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:12620:4: ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:12620:4: ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:12621:5: {...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleUnsetBlackboardNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:12621:116: ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:12622:6: ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:12625:9: ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:12625:10: {...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleUnsetBlackboardNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:12625:19: (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:12625:20: otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) )
                    	    {
                    	    otherlv_7=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_7, grammarAccess.getUnsetBlackboardNodeAccess().getNameKeyword_2_2_0());
                    	    								
                    	    otherlv_8=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_8, grammarAccess.getUnsetBlackboardNodeAccess().getEqualsSignKeyword_2_2_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:12633:9: ( (lv_name_9_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:12634:10: (lv_name_9_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:12634:10: (lv_name_9_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:12635:11: lv_name_9_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getUnsetBlackboardNodeAccess().getNameEStringParserRuleCall_2_2_2_0());
                    	    										
                    	    pushFollow(FOLLOW_29);
                    	    lv_name_9_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getUnsetBlackboardNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_9_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:12658:4: ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:12658:4: ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:12659:5: {...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleUnsetBlackboardNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:12659:116: ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:12660:6: ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:12663:9: ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:12663:10: {...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleUnsetBlackboardNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:12663:19: (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:12663:20: otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_10=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_10, grammarAccess.getUnsetBlackboardNodeAccess().getParametersKeyword_2_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:12667:9: ( (lv_parameters_11_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:12668:10: (lv_parameters_11_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:12668:10: (lv_parameters_11_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:12669:11: lv_parameters_11_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getUnsetBlackboardNodeAccess().getParametersParameterParserRuleCall_2_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_30);
                    	    lv_parameters_11_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getUnsetBlackboardNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_11_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:12686:9: (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )*
                    	    loop186:
                    	    do {
                    	        int alt186=2;
                    	        int LA186_0 = input.LA(1);

                    	        if ( (LA186_0==Comma) ) {
                    	            alt186=1;
                    	        }


                    	        switch (alt186) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:12687:10: otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_12=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_12, grammarAccess.getUnsetBlackboardNodeAccess().getCommaKeyword_2_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:12691:10: ( (lv_parameters_13_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:12692:11: (lv_parameters_13_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:12692:11: (lv_parameters_13_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:12693:12: lv_parameters_13_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getUnsetBlackboardNodeAccess().getParametersParameterParserRuleCall_2_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_30);
                    	    	    lv_parameters_13_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getUnsetBlackboardNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_13_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop186;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:12717:4: ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:12717:4: ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:12718:5: {...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleUnsetBlackboardNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:12718:116: ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:12719:6: ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:12722:9: ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:12722:10: {...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleUnsetBlackboardNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:12722:19: (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:12722:20: otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_14=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_14, grammarAccess.getUnsetBlackboardNodeAccess().getSatisficesKeyword_2_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:12726:9: ( (lv_satisfices_15_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:12727:10: (lv_satisfices_15_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:12727:10: (lv_satisfices_15_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:12728:11: lv_satisfices_15_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getUnsetBlackboardNodeAccess().getSatisficesQualityParserRuleCall_2_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_30);
                    	    lv_satisfices_15_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getUnsetBlackboardNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_15_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:12745:9: (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )*
                    	    loop187:
                    	    do {
                    	        int alt187=2;
                    	        int LA187_0 = input.LA(1);

                    	        if ( (LA187_0==Comma) ) {
                    	            alt187=1;
                    	        }


                    	        switch (alt187) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:12746:10: otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_16=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_16, grammarAccess.getUnsetBlackboardNodeAccess().getCommaKeyword_2_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:12750:10: ( (lv_satisfices_17_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:12751:11: (lv_satisfices_17_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:12751:11: (lv_satisfices_17_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:12752:12: lv_satisfices_17_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getUnsetBlackboardNodeAccess().getSatisficesQualityParserRuleCall_2_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_30);
                    	    	    lv_satisfices_17_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getUnsetBlackboardNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_17_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop187;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:12776:4: ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:12776:4: ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:12777:5: {...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleUnsetBlackboardNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:12777:116: ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:12778:6: ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:12781:9: ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:12781:10: {...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleUnsetBlackboardNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:12781:19: (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:12781:20: otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_18=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_18, grammarAccess.getUnsetBlackboardNodeAccess().getSatisfiesKeyword_2_5_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:12785:9: ( (lv_satisfies_19_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:12786:10: (lv_satisfies_19_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:12786:10: (lv_satisfies_19_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:12787:11: lv_satisfies_19_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getUnsetBlackboardNodeAccess().getSatisfiesQualityRequirementParserRuleCall_2_5_1_0());
                    	    										
                    	    pushFollow(FOLLOW_30);
                    	    lv_satisfies_19_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getUnsetBlackboardNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_19_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:12804:9: (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )*
                    	    loop188:
                    	    do {
                    	        int alt188=2;
                    	        int LA188_0 = input.LA(1);

                    	        if ( (LA188_0==Comma) ) {
                    	            alt188=1;
                    	        }


                    	        switch (alt188) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:12805:10: otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_20=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_20, grammarAccess.getUnsetBlackboardNodeAccess().getCommaKeyword_2_5_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:12809:10: ( (lv_satisfies_21_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:12810:11: (lv_satisfies_21_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:12810:11: (lv_satisfies_21_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:12811:12: lv_satisfies_21_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getUnsetBlackboardNodeAccess().getSatisfiesQualityRequirementParserRuleCall_2_5_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_30);
                    	    	    lv_satisfies_21_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getUnsetBlackboardNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_21_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop188;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 7 :
                    	    // InternalQualityBtCppParser.g:12835:4: ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:12835:4: ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:12836:5: {...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2(), 6) ) {
                    	        throw new FailedPredicateException(input, "ruleUnsetBlackboardNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2(), 6)");
                    	    }
                    	    // InternalQualityBtCppParser.g:12836:116: ( ({...}? => (otherlv_22= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:12837:6: ({...}? => (otherlv_22= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2(), 6);
                    	    					
                    	    // InternalQualityBtCppParser.g:12840:9: ({...}? => (otherlv_22= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:12840:10: {...}? => (otherlv_22= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleUnsetBlackboardNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:12840:19: (otherlv_22= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:12840:20: otherlv_22= RightParenthesis
                    	    {
                    	    otherlv_22=(Token)match(input,RightParenthesis,FOLLOW_29); 

                    	    									newLeafNode(otherlv_22, grammarAccess.getUnsetBlackboardNodeAccess().getRightParenthesisKeyword_2_6());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt189 >= 1 ) break loop189;
                                EarlyExitException eee =
                                    new EarlyExitException(189, input);
                                throw eee;
                        }
                        cnt189++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2()) ) {
                        throw new FailedPredicateException(input, "ruleUnsetBlackboardNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2());
                    				

                    }
                    break;

            }


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUnsetBlackboardNode"


    // $ANTLR start "entryRuleThreadedActionNode"
    // InternalQualityBtCppParser.g:12862:1: entryRuleThreadedActionNode returns [EObject current=null] : iv_ruleThreadedActionNode= ruleThreadedActionNode EOF ;
    public final EObject entryRuleThreadedActionNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleThreadedActionNode = null;


        try {
            // InternalQualityBtCppParser.g:12862:59: (iv_ruleThreadedActionNode= ruleThreadedActionNode EOF )
            // InternalQualityBtCppParser.g:12863:2: iv_ruleThreadedActionNode= ruleThreadedActionNode EOF
            {
             newCompositeNode(grammarAccess.getThreadedActionNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleThreadedActionNode=ruleThreadedActionNode();

            state._fsp--;

             current =iv_ruleThreadedActionNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleThreadedActionNode"


    // $ANTLR start "ruleThreadedActionNode"
    // InternalQualityBtCppParser.g:12869:1: ruleThreadedActionNode returns [EObject current=null] : ( () otherlv_1= ThreadedAction ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? ) ;
    public final EObject ruleThreadedActionNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        AntlrDatatypeRuleToken lv_ID_6_0 = null;

        AntlrDatatypeRuleToken lv_name_9_0 = null;

        EObject lv_parameters_11_0 = null;

        EObject lv_parameters_13_0 = null;

        EObject lv_satisfices_15_0 = null;

        EObject lv_satisfices_17_0 = null;

        EObject lv_satisfies_19_0 = null;

        EObject lv_satisfies_21_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:12875:2: ( ( () otherlv_1= ThreadedAction ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? ) )
            // InternalQualityBtCppParser.g:12876:2: ( () otherlv_1= ThreadedAction ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? )
            {
            // InternalQualityBtCppParser.g:12876:2: ( () otherlv_1= ThreadedAction ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? )
            // InternalQualityBtCppParser.g:12877:3: () otherlv_1= ThreadedAction ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            {
            // InternalQualityBtCppParser.g:12877:3: ()
            // InternalQualityBtCppParser.g:12878:4: 
            {

            				current = forceCreateModelElement(
            					grammarAccess.getThreadedActionNodeAccess().getThreadedActionNodeAction_0(),
            					current);
            			

            }

            otherlv_1=(Token)match(input,ThreadedAction,FOLLOW_29); 

            			newLeafNode(otherlv_1, grammarAccess.getThreadedActionNodeAccess().getThreadedActionKeyword_1());
            		
            // InternalQualityBtCppParser.g:12888:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt195=2;
            int LA195_0 = input.LA(1);

            if ( ((LA195_0>=Parameters && LA195_0<=Satisfies)||LA195_0==Name||LA195_0==ID||(LA195_0>=LeftParenthesis && LA195_0<=RightParenthesis)) ) {
                alt195=1;
            }
            switch (alt195) {
                case 1 :
                    // InternalQualityBtCppParser.g:12889:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:12889:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:12890:5: ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2());
                    				
                    // InternalQualityBtCppParser.g:12893:5: ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:12894:6: ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:12894:6: ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+
                    int cnt194=0;
                    loop194:
                    do {
                        int alt194=8;
                        int LA194_0 = input.LA(1);

                        if ( LA194_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2(), 0) ) {
                            alt194=1;
                        }
                        else if ( LA194_0 == ID && getUnorderedGroupHelper().canSelect(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2(), 1) ) {
                            alt194=2;
                        }
                        else if ( LA194_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2(), 2) ) {
                            alt194=3;
                        }
                        else if ( LA194_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2(), 3) ) {
                            alt194=4;
                        }
                        else if ( LA194_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2(), 4) ) {
                            alt194=5;
                        }
                        else if ( LA194_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2(), 5) ) {
                            alt194=6;
                        }
                        else if ( LA194_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2(), 6) ) {
                            alt194=7;
                        }


                        switch (alt194) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:12895:4: ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:12895:4: ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:12896:5: {...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleThreadedActionNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:12896:115: ( ({...}? => (otherlv_3= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:12897:6: ({...}? => (otherlv_3= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:12900:9: ({...}? => (otherlv_3= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:12900:10: {...}? => (otherlv_3= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleThreadedActionNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:12900:19: (otherlv_3= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:12900:20: otherlv_3= LeftParenthesis
                    	    {
                    	    otherlv_3=(Token)match(input,LeftParenthesis,FOLLOW_29); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getThreadedActionNodeAccess().getLeftParenthesisKeyword_2_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:12910:4: ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:12910:4: ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:12911:5: {...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleThreadedActionNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:12911:115: ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:12912:6: ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:12915:9: ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:12915:10: {...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleThreadedActionNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:12915:19: (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:12915:20: otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) )
                    	    {
                    	    otherlv_4=(Token)match(input,ID,FOLLOW_8); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getThreadedActionNodeAccess().getIDKeyword_2_1_0());
                    	    								
                    	    otherlv_5=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_5, grammarAccess.getThreadedActionNodeAccess().getEqualsSignKeyword_2_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:12923:9: ( (lv_ID_6_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:12924:10: (lv_ID_6_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:12924:10: (lv_ID_6_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:12925:11: lv_ID_6_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getThreadedActionNodeAccess().getIDEStringParserRuleCall_2_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_29);
                    	    lv_ID_6_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getThreadedActionNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"ID",
                    	    												lv_ID_6_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:12948:4: ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:12948:4: ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:12949:5: {...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleThreadedActionNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:12949:115: ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:12950:6: ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:12953:9: ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:12953:10: {...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleThreadedActionNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:12953:19: (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:12953:20: otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) )
                    	    {
                    	    otherlv_7=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_7, grammarAccess.getThreadedActionNodeAccess().getNameKeyword_2_2_0());
                    	    								
                    	    otherlv_8=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_8, grammarAccess.getThreadedActionNodeAccess().getEqualsSignKeyword_2_2_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:12961:9: ( (lv_name_9_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:12962:10: (lv_name_9_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:12962:10: (lv_name_9_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:12963:11: lv_name_9_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getThreadedActionNodeAccess().getNameEStringParserRuleCall_2_2_2_0());
                    	    										
                    	    pushFollow(FOLLOW_29);
                    	    lv_name_9_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getThreadedActionNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_9_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:12986:4: ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:12986:4: ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:12987:5: {...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleThreadedActionNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:12987:115: ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:12988:6: ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:12991:9: ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:12991:10: {...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleThreadedActionNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:12991:19: (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:12991:20: otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_10=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_10, grammarAccess.getThreadedActionNodeAccess().getParametersKeyword_2_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:12995:9: ( (lv_parameters_11_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:12996:10: (lv_parameters_11_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:12996:10: (lv_parameters_11_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:12997:11: lv_parameters_11_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getThreadedActionNodeAccess().getParametersParameterParserRuleCall_2_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_30);
                    	    lv_parameters_11_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getThreadedActionNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_11_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:13014:9: (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )*
                    	    loop191:
                    	    do {
                    	        int alt191=2;
                    	        int LA191_0 = input.LA(1);

                    	        if ( (LA191_0==Comma) ) {
                    	            alt191=1;
                    	        }


                    	        switch (alt191) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:13015:10: otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_12=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_12, grammarAccess.getThreadedActionNodeAccess().getCommaKeyword_2_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:13019:10: ( (lv_parameters_13_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:13020:11: (lv_parameters_13_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:13020:11: (lv_parameters_13_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:13021:12: lv_parameters_13_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getThreadedActionNodeAccess().getParametersParameterParserRuleCall_2_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_30);
                    	    	    lv_parameters_13_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getThreadedActionNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_13_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop191;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:13045:4: ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:13045:4: ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:13046:5: {...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleThreadedActionNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:13046:115: ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:13047:6: ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:13050:9: ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:13050:10: {...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleThreadedActionNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:13050:19: (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:13050:20: otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_14=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_14, grammarAccess.getThreadedActionNodeAccess().getSatisficesKeyword_2_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:13054:9: ( (lv_satisfices_15_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:13055:10: (lv_satisfices_15_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:13055:10: (lv_satisfices_15_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:13056:11: lv_satisfices_15_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getThreadedActionNodeAccess().getSatisficesQualityParserRuleCall_2_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_30);
                    	    lv_satisfices_15_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getThreadedActionNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_15_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:13073:9: (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )*
                    	    loop192:
                    	    do {
                    	        int alt192=2;
                    	        int LA192_0 = input.LA(1);

                    	        if ( (LA192_0==Comma) ) {
                    	            alt192=1;
                    	        }


                    	        switch (alt192) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:13074:10: otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_16=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_16, grammarAccess.getThreadedActionNodeAccess().getCommaKeyword_2_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:13078:10: ( (lv_satisfices_17_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:13079:11: (lv_satisfices_17_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:13079:11: (lv_satisfices_17_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:13080:12: lv_satisfices_17_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getThreadedActionNodeAccess().getSatisficesQualityParserRuleCall_2_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_30);
                    	    	    lv_satisfices_17_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getThreadedActionNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_17_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop192;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:13104:4: ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:13104:4: ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:13105:5: {...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleThreadedActionNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:13105:115: ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:13106:6: ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:13109:9: ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:13109:10: {...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleThreadedActionNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:13109:19: (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:13109:20: otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_18=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_18, grammarAccess.getThreadedActionNodeAccess().getSatisfiesKeyword_2_5_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:13113:9: ( (lv_satisfies_19_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:13114:10: (lv_satisfies_19_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:13114:10: (lv_satisfies_19_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:13115:11: lv_satisfies_19_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getThreadedActionNodeAccess().getSatisfiesQualityRequirementParserRuleCall_2_5_1_0());
                    	    										
                    	    pushFollow(FOLLOW_30);
                    	    lv_satisfies_19_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getThreadedActionNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_19_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:13132:9: (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )*
                    	    loop193:
                    	    do {
                    	        int alt193=2;
                    	        int LA193_0 = input.LA(1);

                    	        if ( (LA193_0==Comma) ) {
                    	            alt193=1;
                    	        }


                    	        switch (alt193) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:13133:10: otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_20=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_20, grammarAccess.getThreadedActionNodeAccess().getCommaKeyword_2_5_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:13137:10: ( (lv_satisfies_21_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:13138:11: (lv_satisfies_21_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:13138:11: (lv_satisfies_21_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:13139:12: lv_satisfies_21_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getThreadedActionNodeAccess().getSatisfiesQualityRequirementParserRuleCall_2_5_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_30);
                    	    	    lv_satisfies_21_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getThreadedActionNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_21_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop193;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 7 :
                    	    // InternalQualityBtCppParser.g:13163:4: ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:13163:4: ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:13164:5: {...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2(), 6) ) {
                    	        throw new FailedPredicateException(input, "ruleThreadedActionNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2(), 6)");
                    	    }
                    	    // InternalQualityBtCppParser.g:13164:115: ( ({...}? => (otherlv_22= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:13165:6: ({...}? => (otherlv_22= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2(), 6);
                    	    					
                    	    // InternalQualityBtCppParser.g:13168:9: ({...}? => (otherlv_22= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:13168:10: {...}? => (otherlv_22= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleThreadedActionNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:13168:19: (otherlv_22= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:13168:20: otherlv_22= RightParenthesis
                    	    {
                    	    otherlv_22=(Token)match(input,RightParenthesis,FOLLOW_29); 

                    	    									newLeafNode(otherlv_22, grammarAccess.getThreadedActionNodeAccess().getRightParenthesisKeyword_2_6());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt194 >= 1 ) break loop194;
                                EarlyExitException eee =
                                    new EarlyExitException(194, input);
                                throw eee;
                        }
                        cnt194++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2()) ) {
                        throw new FailedPredicateException(input, "ruleThreadedActionNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2());
                    				

                    }
                    break;

            }


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleThreadedActionNode"


    // $ANTLR start "entryRuleCoroActionNode"
    // InternalQualityBtCppParser.g:13190:1: entryRuleCoroActionNode returns [EObject current=null] : iv_ruleCoroActionNode= ruleCoroActionNode EOF ;
    public final EObject entryRuleCoroActionNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCoroActionNode = null;


        try {
            // InternalQualityBtCppParser.g:13190:55: (iv_ruleCoroActionNode= ruleCoroActionNode EOF )
            // InternalQualityBtCppParser.g:13191:2: iv_ruleCoroActionNode= ruleCoroActionNode EOF
            {
             newCompositeNode(grammarAccess.getCoroActionNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleCoroActionNode=ruleCoroActionNode();

            state._fsp--;

             current =iv_ruleCoroActionNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCoroActionNode"


    // $ANTLR start "ruleCoroActionNode"
    // InternalQualityBtCppParser.g:13197:1: ruleCoroActionNode returns [EObject current=null] : ( () otherlv_1= CoroAction ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? ) ;
    public final EObject ruleCoroActionNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        AntlrDatatypeRuleToken lv_ID_6_0 = null;

        AntlrDatatypeRuleToken lv_name_9_0 = null;

        EObject lv_parameters_11_0 = null;

        EObject lv_parameters_13_0 = null;

        EObject lv_satisfices_15_0 = null;

        EObject lv_satisfices_17_0 = null;

        EObject lv_satisfies_19_0 = null;

        EObject lv_satisfies_21_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:13203:2: ( ( () otherlv_1= CoroAction ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? ) )
            // InternalQualityBtCppParser.g:13204:2: ( () otherlv_1= CoroAction ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? )
            {
            // InternalQualityBtCppParser.g:13204:2: ( () otherlv_1= CoroAction ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? )
            // InternalQualityBtCppParser.g:13205:3: () otherlv_1= CoroAction ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            {
            // InternalQualityBtCppParser.g:13205:3: ()
            // InternalQualityBtCppParser.g:13206:4: 
            {

            				current = forceCreateModelElement(
            					grammarAccess.getCoroActionNodeAccess().getCoroActionNodeAction_0(),
            					current);
            			

            }

            otherlv_1=(Token)match(input,CoroAction,FOLLOW_29); 

            			newLeafNode(otherlv_1, grammarAccess.getCoroActionNodeAccess().getCoroActionKeyword_1());
            		
            // InternalQualityBtCppParser.g:13216:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt200=2;
            int LA200_0 = input.LA(1);

            if ( ((LA200_0>=Parameters && LA200_0<=Satisfies)||LA200_0==Name||LA200_0==ID||(LA200_0>=LeftParenthesis && LA200_0<=RightParenthesis)) ) {
                alt200=1;
            }
            switch (alt200) {
                case 1 :
                    // InternalQualityBtCppParser.g:13217:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:13217:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:13218:5: ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2());
                    				
                    // InternalQualityBtCppParser.g:13221:5: ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:13222:6: ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:13222:6: ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+
                    int cnt199=0;
                    loop199:
                    do {
                        int alt199=8;
                        int LA199_0 = input.LA(1);

                        if ( LA199_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2(), 0) ) {
                            alt199=1;
                        }
                        else if ( LA199_0 == ID && getUnorderedGroupHelper().canSelect(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2(), 1) ) {
                            alt199=2;
                        }
                        else if ( LA199_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2(), 2) ) {
                            alt199=3;
                        }
                        else if ( LA199_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2(), 3) ) {
                            alt199=4;
                        }
                        else if ( LA199_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2(), 4) ) {
                            alt199=5;
                        }
                        else if ( LA199_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2(), 5) ) {
                            alt199=6;
                        }
                        else if ( LA199_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2(), 6) ) {
                            alt199=7;
                        }


                        switch (alt199) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:13223:4: ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:13223:4: ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:13224:5: {...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleCoroActionNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:13224:111: ( ({...}? => (otherlv_3= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:13225:6: ({...}? => (otherlv_3= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:13228:9: ({...}? => (otherlv_3= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:13228:10: {...}? => (otherlv_3= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleCoroActionNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:13228:19: (otherlv_3= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:13228:20: otherlv_3= LeftParenthesis
                    	    {
                    	    otherlv_3=(Token)match(input,LeftParenthesis,FOLLOW_29); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getCoroActionNodeAccess().getLeftParenthesisKeyword_2_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:13238:4: ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:13238:4: ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:13239:5: {...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleCoroActionNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:13239:111: ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:13240:6: ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:13243:9: ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:13243:10: {...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleCoroActionNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:13243:19: (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:13243:20: otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) )
                    	    {
                    	    otherlv_4=(Token)match(input,ID,FOLLOW_8); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getCoroActionNodeAccess().getIDKeyword_2_1_0());
                    	    								
                    	    otherlv_5=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_5, grammarAccess.getCoroActionNodeAccess().getEqualsSignKeyword_2_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:13251:9: ( (lv_ID_6_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:13252:10: (lv_ID_6_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:13252:10: (lv_ID_6_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:13253:11: lv_ID_6_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getCoroActionNodeAccess().getIDEStringParserRuleCall_2_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_29);
                    	    lv_ID_6_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getCoroActionNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"ID",
                    	    												lv_ID_6_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:13276:4: ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:13276:4: ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:13277:5: {...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleCoroActionNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:13277:111: ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:13278:6: ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:13281:9: ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:13281:10: {...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleCoroActionNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:13281:19: (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:13281:20: otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) )
                    	    {
                    	    otherlv_7=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_7, grammarAccess.getCoroActionNodeAccess().getNameKeyword_2_2_0());
                    	    								
                    	    otherlv_8=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_8, grammarAccess.getCoroActionNodeAccess().getEqualsSignKeyword_2_2_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:13289:9: ( (lv_name_9_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:13290:10: (lv_name_9_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:13290:10: (lv_name_9_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:13291:11: lv_name_9_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getCoroActionNodeAccess().getNameEStringParserRuleCall_2_2_2_0());
                    	    										
                    	    pushFollow(FOLLOW_29);
                    	    lv_name_9_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getCoroActionNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_9_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:13314:4: ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:13314:4: ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:13315:5: {...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleCoroActionNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:13315:111: ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:13316:6: ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:13319:9: ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:13319:10: {...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleCoroActionNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:13319:19: (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:13319:20: otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_10=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_10, grammarAccess.getCoroActionNodeAccess().getParametersKeyword_2_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:13323:9: ( (lv_parameters_11_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:13324:10: (lv_parameters_11_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:13324:10: (lv_parameters_11_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:13325:11: lv_parameters_11_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getCoroActionNodeAccess().getParametersParameterParserRuleCall_2_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_30);
                    	    lv_parameters_11_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getCoroActionNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_11_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:13342:9: (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )*
                    	    loop196:
                    	    do {
                    	        int alt196=2;
                    	        int LA196_0 = input.LA(1);

                    	        if ( (LA196_0==Comma) ) {
                    	            alt196=1;
                    	        }


                    	        switch (alt196) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:13343:10: otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_12=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_12, grammarAccess.getCoroActionNodeAccess().getCommaKeyword_2_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:13347:10: ( (lv_parameters_13_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:13348:11: (lv_parameters_13_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:13348:11: (lv_parameters_13_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:13349:12: lv_parameters_13_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getCoroActionNodeAccess().getParametersParameterParserRuleCall_2_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_30);
                    	    	    lv_parameters_13_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getCoroActionNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_13_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop196;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:13373:4: ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:13373:4: ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:13374:5: {...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleCoroActionNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:13374:111: ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:13375:6: ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:13378:9: ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:13378:10: {...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleCoroActionNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:13378:19: (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:13378:20: otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_14=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_14, grammarAccess.getCoroActionNodeAccess().getSatisficesKeyword_2_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:13382:9: ( (lv_satisfices_15_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:13383:10: (lv_satisfices_15_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:13383:10: (lv_satisfices_15_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:13384:11: lv_satisfices_15_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getCoroActionNodeAccess().getSatisficesQualityParserRuleCall_2_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_30);
                    	    lv_satisfices_15_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getCoroActionNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_15_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:13401:9: (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )*
                    	    loop197:
                    	    do {
                    	        int alt197=2;
                    	        int LA197_0 = input.LA(1);

                    	        if ( (LA197_0==Comma) ) {
                    	            alt197=1;
                    	        }


                    	        switch (alt197) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:13402:10: otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_16=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_16, grammarAccess.getCoroActionNodeAccess().getCommaKeyword_2_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:13406:10: ( (lv_satisfices_17_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:13407:11: (lv_satisfices_17_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:13407:11: (lv_satisfices_17_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:13408:12: lv_satisfices_17_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getCoroActionNodeAccess().getSatisficesQualityParserRuleCall_2_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_30);
                    	    	    lv_satisfices_17_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getCoroActionNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_17_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop197;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:13432:4: ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:13432:4: ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:13433:5: {...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleCoroActionNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:13433:111: ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:13434:6: ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:13437:9: ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:13437:10: {...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleCoroActionNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:13437:19: (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:13437:20: otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_18=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_18, grammarAccess.getCoroActionNodeAccess().getSatisfiesKeyword_2_5_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:13441:9: ( (lv_satisfies_19_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:13442:10: (lv_satisfies_19_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:13442:10: (lv_satisfies_19_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:13443:11: lv_satisfies_19_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getCoroActionNodeAccess().getSatisfiesQualityRequirementParserRuleCall_2_5_1_0());
                    	    										
                    	    pushFollow(FOLLOW_30);
                    	    lv_satisfies_19_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getCoroActionNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_19_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:13460:9: (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )*
                    	    loop198:
                    	    do {
                    	        int alt198=2;
                    	        int LA198_0 = input.LA(1);

                    	        if ( (LA198_0==Comma) ) {
                    	            alt198=1;
                    	        }


                    	        switch (alt198) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:13461:10: otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_20=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_20, grammarAccess.getCoroActionNodeAccess().getCommaKeyword_2_5_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:13465:10: ( (lv_satisfies_21_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:13466:11: (lv_satisfies_21_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:13466:11: (lv_satisfies_21_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:13467:12: lv_satisfies_21_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getCoroActionNodeAccess().getSatisfiesQualityRequirementParserRuleCall_2_5_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_30);
                    	    	    lv_satisfies_21_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getCoroActionNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_21_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop198;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 7 :
                    	    // InternalQualityBtCppParser.g:13491:4: ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:13491:4: ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:13492:5: {...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2(), 6) ) {
                    	        throw new FailedPredicateException(input, "ruleCoroActionNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2(), 6)");
                    	    }
                    	    // InternalQualityBtCppParser.g:13492:111: ( ({...}? => (otherlv_22= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:13493:6: ({...}? => (otherlv_22= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2(), 6);
                    	    					
                    	    // InternalQualityBtCppParser.g:13496:9: ({...}? => (otherlv_22= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:13496:10: {...}? => (otherlv_22= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleCoroActionNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:13496:19: (otherlv_22= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:13496:20: otherlv_22= RightParenthesis
                    	    {
                    	    otherlv_22=(Token)match(input,RightParenthesis,FOLLOW_29); 

                    	    									newLeafNode(otherlv_22, grammarAccess.getCoroActionNodeAccess().getRightParenthesisKeyword_2_6());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt199 >= 1 ) break loop199;
                                EarlyExitException eee =
                                    new EarlyExitException(199, input);
                                throw eee;
                        }
                        cnt199++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2()) ) {
                        throw new FailedPredicateException(input, "ruleCoroActionNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2());
                    				

                    }
                    break;

            }


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCoroActionNode"


    // $ANTLR start "entryRuleSleepNode"
    // InternalQualityBtCppParser.g:13518:1: entryRuleSleepNode returns [EObject current=null] : iv_ruleSleepNode= ruleSleepNode EOF ;
    public final EObject entryRuleSleepNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSleepNode = null;


        try {
            // InternalQualityBtCppParser.g:13518:50: (iv_ruleSleepNode= ruleSleepNode EOF )
            // InternalQualityBtCppParser.g:13519:2: iv_ruleSleepNode= ruleSleepNode EOF
            {
             newCompositeNode(grammarAccess.getSleepNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleSleepNode=ruleSleepNode();

            state._fsp--;

             current =iv_ruleSleepNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSleepNode"


    // $ANTLR start "ruleSleepNode"
    // InternalQualityBtCppParser.g:13525:1: ruleSleepNode returns [EObject current=null] : ( () otherlv_1= Sleep ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? ) ;
    public final EObject ruleSleepNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        AntlrDatatypeRuleToken lv_ID_6_0 = null;

        AntlrDatatypeRuleToken lv_name_9_0 = null;

        EObject lv_parameters_11_0 = null;

        EObject lv_parameters_13_0 = null;

        EObject lv_satisfices_15_0 = null;

        EObject lv_satisfices_17_0 = null;

        EObject lv_satisfies_19_0 = null;

        EObject lv_satisfies_21_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:13531:2: ( ( () otherlv_1= Sleep ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? ) )
            // InternalQualityBtCppParser.g:13532:2: ( () otherlv_1= Sleep ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? )
            {
            // InternalQualityBtCppParser.g:13532:2: ( () otherlv_1= Sleep ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? )
            // InternalQualityBtCppParser.g:13533:3: () otherlv_1= Sleep ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            {
            // InternalQualityBtCppParser.g:13533:3: ()
            // InternalQualityBtCppParser.g:13534:4: 
            {

            				current = forceCreateModelElement(
            					grammarAccess.getSleepNodeAccess().getSleepNodeAction_0(),
            					current);
            			

            }

            otherlv_1=(Token)match(input,Sleep,FOLLOW_29); 

            			newLeafNode(otherlv_1, grammarAccess.getSleepNodeAccess().getSleepKeyword_1());
            		
            // InternalQualityBtCppParser.g:13544:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt205=2;
            int LA205_0 = input.LA(1);

            if ( ((LA205_0>=Parameters && LA205_0<=Satisfies)||LA205_0==Name||LA205_0==ID||(LA205_0>=LeftParenthesis && LA205_0<=RightParenthesis)) ) {
                alt205=1;
            }
            switch (alt205) {
                case 1 :
                    // InternalQualityBtCppParser.g:13545:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:13545:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:13546:5: ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2());
                    				
                    // InternalQualityBtCppParser.g:13549:5: ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:13550:6: ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:13550:6: ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+
                    int cnt204=0;
                    loop204:
                    do {
                        int alt204=8;
                        int LA204_0 = input.LA(1);

                        if ( LA204_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2(), 0) ) {
                            alt204=1;
                        }
                        else if ( LA204_0 == ID && getUnorderedGroupHelper().canSelect(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2(), 1) ) {
                            alt204=2;
                        }
                        else if ( LA204_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2(), 2) ) {
                            alt204=3;
                        }
                        else if ( LA204_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2(), 3) ) {
                            alt204=4;
                        }
                        else if ( LA204_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2(), 4) ) {
                            alt204=5;
                        }
                        else if ( LA204_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2(), 5) ) {
                            alt204=6;
                        }
                        else if ( LA204_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2(), 6) ) {
                            alt204=7;
                        }


                        switch (alt204) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:13551:4: ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:13551:4: ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:13552:5: {...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleSleepNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:13552:106: ( ({...}? => (otherlv_3= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:13553:6: ({...}? => (otherlv_3= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:13556:9: ({...}? => (otherlv_3= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:13556:10: {...}? => (otherlv_3= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSleepNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:13556:19: (otherlv_3= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:13556:20: otherlv_3= LeftParenthesis
                    	    {
                    	    otherlv_3=(Token)match(input,LeftParenthesis,FOLLOW_29); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getSleepNodeAccess().getLeftParenthesisKeyword_2_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:13566:4: ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:13566:4: ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:13567:5: {...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleSleepNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:13567:106: ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:13568:6: ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:13571:9: ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:13571:10: {...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSleepNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:13571:19: (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:13571:20: otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) )
                    	    {
                    	    otherlv_4=(Token)match(input,ID,FOLLOW_8); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getSleepNodeAccess().getIDKeyword_2_1_0());
                    	    								
                    	    otherlv_5=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_5, grammarAccess.getSleepNodeAccess().getEqualsSignKeyword_2_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:13579:9: ( (lv_ID_6_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:13580:10: (lv_ID_6_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:13580:10: (lv_ID_6_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:13581:11: lv_ID_6_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getSleepNodeAccess().getIDEStringParserRuleCall_2_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_29);
                    	    lv_ID_6_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getSleepNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"ID",
                    	    												lv_ID_6_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:13604:4: ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:13604:4: ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:13605:5: {...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleSleepNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:13605:106: ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:13606:6: ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:13609:9: ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:13609:10: {...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSleepNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:13609:19: (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:13609:20: otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) )
                    	    {
                    	    otherlv_7=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_7, grammarAccess.getSleepNodeAccess().getNameKeyword_2_2_0());
                    	    								
                    	    otherlv_8=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_8, grammarAccess.getSleepNodeAccess().getEqualsSignKeyword_2_2_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:13617:9: ( (lv_name_9_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:13618:10: (lv_name_9_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:13618:10: (lv_name_9_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:13619:11: lv_name_9_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getSleepNodeAccess().getNameEStringParserRuleCall_2_2_2_0());
                    	    										
                    	    pushFollow(FOLLOW_29);
                    	    lv_name_9_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getSleepNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_9_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:13642:4: ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:13642:4: ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:13643:5: {...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleSleepNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:13643:106: ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:13644:6: ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:13647:9: ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:13647:10: {...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSleepNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:13647:19: (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:13647:20: otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_10=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_10, grammarAccess.getSleepNodeAccess().getParametersKeyword_2_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:13651:9: ( (lv_parameters_11_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:13652:10: (lv_parameters_11_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:13652:10: (lv_parameters_11_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:13653:11: lv_parameters_11_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getSleepNodeAccess().getParametersParameterParserRuleCall_2_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_30);
                    	    lv_parameters_11_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getSleepNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_11_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:13670:9: (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )*
                    	    loop201:
                    	    do {
                    	        int alt201=2;
                    	        int LA201_0 = input.LA(1);

                    	        if ( (LA201_0==Comma) ) {
                    	            alt201=1;
                    	        }


                    	        switch (alt201) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:13671:10: otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_12=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_12, grammarAccess.getSleepNodeAccess().getCommaKeyword_2_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:13675:10: ( (lv_parameters_13_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:13676:11: (lv_parameters_13_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:13676:11: (lv_parameters_13_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:13677:12: lv_parameters_13_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getSleepNodeAccess().getParametersParameterParserRuleCall_2_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_30);
                    	    	    lv_parameters_13_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getSleepNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_13_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop201;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:13701:4: ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:13701:4: ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:13702:5: {...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleSleepNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:13702:106: ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:13703:6: ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:13706:9: ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:13706:10: {...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSleepNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:13706:19: (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:13706:20: otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_14=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_14, grammarAccess.getSleepNodeAccess().getSatisficesKeyword_2_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:13710:9: ( (lv_satisfices_15_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:13711:10: (lv_satisfices_15_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:13711:10: (lv_satisfices_15_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:13712:11: lv_satisfices_15_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getSleepNodeAccess().getSatisficesQualityParserRuleCall_2_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_30);
                    	    lv_satisfices_15_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getSleepNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_15_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:13729:9: (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )*
                    	    loop202:
                    	    do {
                    	        int alt202=2;
                    	        int LA202_0 = input.LA(1);

                    	        if ( (LA202_0==Comma) ) {
                    	            alt202=1;
                    	        }


                    	        switch (alt202) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:13730:10: otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_16=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_16, grammarAccess.getSleepNodeAccess().getCommaKeyword_2_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:13734:10: ( (lv_satisfices_17_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:13735:11: (lv_satisfices_17_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:13735:11: (lv_satisfices_17_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:13736:12: lv_satisfices_17_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getSleepNodeAccess().getSatisficesQualityParserRuleCall_2_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_30);
                    	    	    lv_satisfices_17_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getSleepNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_17_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop202;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:13760:4: ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:13760:4: ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:13761:5: {...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleSleepNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:13761:106: ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:13762:6: ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:13765:9: ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:13765:10: {...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSleepNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:13765:19: (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:13765:20: otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_18=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_18, grammarAccess.getSleepNodeAccess().getSatisfiesKeyword_2_5_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:13769:9: ( (lv_satisfies_19_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:13770:10: (lv_satisfies_19_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:13770:10: (lv_satisfies_19_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:13771:11: lv_satisfies_19_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getSleepNodeAccess().getSatisfiesQualityRequirementParserRuleCall_2_5_1_0());
                    	    										
                    	    pushFollow(FOLLOW_30);
                    	    lv_satisfies_19_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getSleepNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_19_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:13788:9: (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )*
                    	    loop203:
                    	    do {
                    	        int alt203=2;
                    	        int LA203_0 = input.LA(1);

                    	        if ( (LA203_0==Comma) ) {
                    	            alt203=1;
                    	        }


                    	        switch (alt203) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:13789:10: otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_20=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_20, grammarAccess.getSleepNodeAccess().getCommaKeyword_2_5_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:13793:10: ( (lv_satisfies_21_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:13794:11: (lv_satisfies_21_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:13794:11: (lv_satisfies_21_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:13795:12: lv_satisfies_21_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getSleepNodeAccess().getSatisfiesQualityRequirementParserRuleCall_2_5_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_30);
                    	    	    lv_satisfies_21_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getSleepNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_21_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop203;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 7 :
                    	    // InternalQualityBtCppParser.g:13819:4: ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:13819:4: ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:13820:5: {...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2(), 6) ) {
                    	        throw new FailedPredicateException(input, "ruleSleepNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2(), 6)");
                    	    }
                    	    // InternalQualityBtCppParser.g:13820:106: ( ({...}? => (otherlv_22= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:13821:6: ({...}? => (otherlv_22= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2(), 6);
                    	    					
                    	    // InternalQualityBtCppParser.g:13824:9: ({...}? => (otherlv_22= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:13824:10: {...}? => (otherlv_22= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSleepNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:13824:19: (otherlv_22= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:13824:20: otherlv_22= RightParenthesis
                    	    {
                    	    otherlv_22=(Token)match(input,RightParenthesis,FOLLOW_29); 

                    	    									newLeafNode(otherlv_22, grammarAccess.getSleepNodeAccess().getRightParenthesisKeyword_2_6());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt204 >= 1 ) break loop204;
                                EarlyExitException eee =
                                    new EarlyExitException(204, input);
                                throw eee;
                        }
                        cnt204++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2()) ) {
                        throw new FailedPredicateException(input, "ruleSleepNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2());
                    				

                    }
                    break;

            }


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSleepNode"


    // $ANTLR start "entryRulePopFromQueueNode"
    // InternalQualityBtCppParser.g:13846:1: entryRulePopFromQueueNode returns [EObject current=null] : iv_rulePopFromQueueNode= rulePopFromQueueNode EOF ;
    public final EObject entryRulePopFromQueueNode() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePopFromQueueNode = null;


        try {
            // InternalQualityBtCppParser.g:13846:57: (iv_rulePopFromQueueNode= rulePopFromQueueNode EOF )
            // InternalQualityBtCppParser.g:13847:2: iv_rulePopFromQueueNode= rulePopFromQueueNode EOF
            {
             newCompositeNode(grammarAccess.getPopFromQueueNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_rulePopFromQueueNode=rulePopFromQueueNode();

            state._fsp--;

             current =iv_rulePopFromQueueNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePopFromQueueNode"


    // $ANTLR start "rulePopFromQueueNode"
    // InternalQualityBtCppParser.g:13853:1: rulePopFromQueueNode returns [EObject current=null] : ( () otherlv_1= PopFromQueue ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? ) ;
    public final EObject rulePopFromQueueNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        AntlrDatatypeRuleToken lv_ID_6_0 = null;

        AntlrDatatypeRuleToken lv_name_9_0 = null;

        EObject lv_parameters_11_0 = null;

        EObject lv_parameters_13_0 = null;

        EObject lv_satisfices_15_0 = null;

        EObject lv_satisfices_17_0 = null;

        EObject lv_satisfies_19_0 = null;

        EObject lv_satisfies_21_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:13859:2: ( ( () otherlv_1= PopFromQueue ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? ) )
            // InternalQualityBtCppParser.g:13860:2: ( () otherlv_1= PopFromQueue ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? )
            {
            // InternalQualityBtCppParser.g:13860:2: ( () otherlv_1= PopFromQueue ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? )
            // InternalQualityBtCppParser.g:13861:3: () otherlv_1= PopFromQueue ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            {
            // InternalQualityBtCppParser.g:13861:3: ()
            // InternalQualityBtCppParser.g:13862:4: 
            {

            				current = forceCreateModelElement(
            					grammarAccess.getPopFromQueueNodeAccess().getPopFromQueueNodeAction_0(),
            					current);
            			

            }

            otherlv_1=(Token)match(input,PopFromQueue,FOLLOW_29); 

            			newLeafNode(otherlv_1, grammarAccess.getPopFromQueueNodeAccess().getPopFromQueueKeyword_1());
            		
            // InternalQualityBtCppParser.g:13872:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt210=2;
            int LA210_0 = input.LA(1);

            if ( ((LA210_0>=Parameters && LA210_0<=Satisfies)||LA210_0==Name||LA210_0==ID||(LA210_0>=LeftParenthesis && LA210_0<=RightParenthesis)) ) {
                alt210=1;
            }
            switch (alt210) {
                case 1 :
                    // InternalQualityBtCppParser.g:13873:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:13873:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:13874:5: ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2());
                    				
                    // InternalQualityBtCppParser.g:13877:5: ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:13878:6: ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:13878:6: ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+
                    int cnt209=0;
                    loop209:
                    do {
                        int alt209=8;
                        int LA209_0 = input.LA(1);

                        if ( LA209_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2(), 0) ) {
                            alt209=1;
                        }
                        else if ( LA209_0 == ID && getUnorderedGroupHelper().canSelect(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2(), 1) ) {
                            alt209=2;
                        }
                        else if ( LA209_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2(), 2) ) {
                            alt209=3;
                        }
                        else if ( LA209_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2(), 3) ) {
                            alt209=4;
                        }
                        else if ( LA209_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2(), 4) ) {
                            alt209=5;
                        }
                        else if ( LA209_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2(), 5) ) {
                            alt209=6;
                        }
                        else if ( LA209_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2(), 6) ) {
                            alt209=7;
                        }


                        switch (alt209) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:13879:4: ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:13879:4: ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:13880:5: {...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2(), 0) ) {
                    	        throw new FailedPredicateException(input, "rulePopFromQueueNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:13880:113: ( ({...}? => (otherlv_3= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:13881:6: ({...}? => (otherlv_3= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:13884:9: ({...}? => (otherlv_3= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:13884:10: {...}? => (otherlv_3= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "rulePopFromQueueNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:13884:19: (otherlv_3= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:13884:20: otherlv_3= LeftParenthesis
                    	    {
                    	    otherlv_3=(Token)match(input,LeftParenthesis,FOLLOW_29); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getPopFromQueueNodeAccess().getLeftParenthesisKeyword_2_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:13894:4: ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:13894:4: ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:13895:5: {...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2(), 1) ) {
                    	        throw new FailedPredicateException(input, "rulePopFromQueueNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:13895:113: ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:13896:6: ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:13899:9: ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:13899:10: {...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "rulePopFromQueueNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:13899:19: (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:13899:20: otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) )
                    	    {
                    	    otherlv_4=(Token)match(input,ID,FOLLOW_8); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getPopFromQueueNodeAccess().getIDKeyword_2_1_0());
                    	    								
                    	    otherlv_5=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_5, grammarAccess.getPopFromQueueNodeAccess().getEqualsSignKeyword_2_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:13907:9: ( (lv_ID_6_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:13908:10: (lv_ID_6_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:13908:10: (lv_ID_6_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:13909:11: lv_ID_6_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getPopFromQueueNodeAccess().getIDEStringParserRuleCall_2_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_29);
                    	    lv_ID_6_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getPopFromQueueNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"ID",
                    	    												lv_ID_6_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:13932:4: ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:13932:4: ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:13933:5: {...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2(), 2) ) {
                    	        throw new FailedPredicateException(input, "rulePopFromQueueNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:13933:113: ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:13934:6: ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:13937:9: ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:13937:10: {...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "rulePopFromQueueNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:13937:19: (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:13937:20: otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) )
                    	    {
                    	    otherlv_7=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_7, grammarAccess.getPopFromQueueNodeAccess().getNameKeyword_2_2_0());
                    	    								
                    	    otherlv_8=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_8, grammarAccess.getPopFromQueueNodeAccess().getEqualsSignKeyword_2_2_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:13945:9: ( (lv_name_9_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:13946:10: (lv_name_9_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:13946:10: (lv_name_9_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:13947:11: lv_name_9_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getPopFromQueueNodeAccess().getNameEStringParserRuleCall_2_2_2_0());
                    	    										
                    	    pushFollow(FOLLOW_29);
                    	    lv_name_9_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getPopFromQueueNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_9_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:13970:4: ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:13970:4: ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:13971:5: {...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2(), 3) ) {
                    	        throw new FailedPredicateException(input, "rulePopFromQueueNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:13971:113: ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:13972:6: ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:13975:9: ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:13975:10: {...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "rulePopFromQueueNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:13975:19: (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:13975:20: otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_10=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_10, grammarAccess.getPopFromQueueNodeAccess().getParametersKeyword_2_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:13979:9: ( (lv_parameters_11_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:13980:10: (lv_parameters_11_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:13980:10: (lv_parameters_11_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:13981:11: lv_parameters_11_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getPopFromQueueNodeAccess().getParametersParameterParserRuleCall_2_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_30);
                    	    lv_parameters_11_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getPopFromQueueNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_11_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:13998:9: (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )*
                    	    loop206:
                    	    do {
                    	        int alt206=2;
                    	        int LA206_0 = input.LA(1);

                    	        if ( (LA206_0==Comma) ) {
                    	            alt206=1;
                    	        }


                    	        switch (alt206) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:13999:10: otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_12=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_12, grammarAccess.getPopFromQueueNodeAccess().getCommaKeyword_2_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:14003:10: ( (lv_parameters_13_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:14004:11: (lv_parameters_13_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:14004:11: (lv_parameters_13_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:14005:12: lv_parameters_13_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getPopFromQueueNodeAccess().getParametersParameterParserRuleCall_2_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_30);
                    	    	    lv_parameters_13_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getPopFromQueueNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_13_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop206;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:14029:4: ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:14029:4: ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:14030:5: {...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2(), 4) ) {
                    	        throw new FailedPredicateException(input, "rulePopFromQueueNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:14030:113: ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:14031:6: ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:14034:9: ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:14034:10: {...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "rulePopFromQueueNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:14034:19: (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:14034:20: otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_14=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_14, grammarAccess.getPopFromQueueNodeAccess().getSatisficesKeyword_2_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:14038:9: ( (lv_satisfices_15_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:14039:10: (lv_satisfices_15_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:14039:10: (lv_satisfices_15_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:14040:11: lv_satisfices_15_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getPopFromQueueNodeAccess().getSatisficesQualityParserRuleCall_2_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_30);
                    	    lv_satisfices_15_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getPopFromQueueNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_15_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:14057:9: (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )*
                    	    loop207:
                    	    do {
                    	        int alt207=2;
                    	        int LA207_0 = input.LA(1);

                    	        if ( (LA207_0==Comma) ) {
                    	            alt207=1;
                    	        }


                    	        switch (alt207) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:14058:10: otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_16=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_16, grammarAccess.getPopFromQueueNodeAccess().getCommaKeyword_2_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:14062:10: ( (lv_satisfices_17_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:14063:11: (lv_satisfices_17_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:14063:11: (lv_satisfices_17_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:14064:12: lv_satisfices_17_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getPopFromQueueNodeAccess().getSatisficesQualityParserRuleCall_2_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_30);
                    	    	    lv_satisfices_17_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getPopFromQueueNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_17_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop207;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:14088:4: ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:14088:4: ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:14089:5: {...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2(), 5) ) {
                    	        throw new FailedPredicateException(input, "rulePopFromQueueNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:14089:113: ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:14090:6: ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:14093:9: ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:14093:10: {...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "rulePopFromQueueNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:14093:19: (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:14093:20: otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_18=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_18, grammarAccess.getPopFromQueueNodeAccess().getSatisfiesKeyword_2_5_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:14097:9: ( (lv_satisfies_19_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:14098:10: (lv_satisfies_19_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:14098:10: (lv_satisfies_19_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:14099:11: lv_satisfies_19_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getPopFromQueueNodeAccess().getSatisfiesQualityRequirementParserRuleCall_2_5_1_0());
                    	    										
                    	    pushFollow(FOLLOW_30);
                    	    lv_satisfies_19_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getPopFromQueueNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_19_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:14116:9: (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )*
                    	    loop208:
                    	    do {
                    	        int alt208=2;
                    	        int LA208_0 = input.LA(1);

                    	        if ( (LA208_0==Comma) ) {
                    	            alt208=1;
                    	        }


                    	        switch (alt208) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:14117:10: otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_20=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_20, grammarAccess.getPopFromQueueNodeAccess().getCommaKeyword_2_5_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:14121:10: ( (lv_satisfies_21_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:14122:11: (lv_satisfies_21_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:14122:11: (lv_satisfies_21_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:14123:12: lv_satisfies_21_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getPopFromQueueNodeAccess().getSatisfiesQualityRequirementParserRuleCall_2_5_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_30);
                    	    	    lv_satisfies_21_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getPopFromQueueNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_21_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop208;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 7 :
                    	    // InternalQualityBtCppParser.g:14147:4: ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:14147:4: ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:14148:5: {...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2(), 6) ) {
                    	        throw new FailedPredicateException(input, "rulePopFromQueueNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2(), 6)");
                    	    }
                    	    // InternalQualityBtCppParser.g:14148:113: ( ({...}? => (otherlv_22= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:14149:6: ({...}? => (otherlv_22= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2(), 6);
                    	    					
                    	    // InternalQualityBtCppParser.g:14152:9: ({...}? => (otherlv_22= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:14152:10: {...}? => (otherlv_22= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "rulePopFromQueueNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:14152:19: (otherlv_22= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:14152:20: otherlv_22= RightParenthesis
                    	    {
                    	    otherlv_22=(Token)match(input,RightParenthesis,FOLLOW_29); 

                    	    									newLeafNode(otherlv_22, grammarAccess.getPopFromQueueNodeAccess().getRightParenthesisKeyword_2_6());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt209 >= 1 ) break loop209;
                                EarlyExitException eee =
                                    new EarlyExitException(209, input);
                                throw eee;
                        }
                        cnt209++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2()) ) {
                        throw new FailedPredicateException(input, "rulePopFromQueueNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2());
                    				

                    }
                    break;

            }


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePopFromQueueNode"

    // Delegated rules


    protected DFA76 dfa76 = new DFA76(this);
    protected DFA101 dfa101 = new DFA101(this);
    protected DFA113 dfa113 = new DFA113(this);
    protected DFA124 dfa124 = new DFA124(this);
    protected DFA174 dfa174 = new DFA174(this);
    static final String dfa_1s = "\12\uffff";
    static final String dfa_2s = "\1\36\11\uffff";
    static final String dfa_3s = "\1\76\11\uffff";
    static final String dfa_4s = "\1\uffff\1\11\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10";
    static final String dfa_5s = "\1\0\11\uffff}>";
    static final String[] dfa_6s = {
            "\1\5\1\6\1\7\17\uffff\1\10\1\4\3\uffff\1\3\2\uffff\1\2\1\11\4\uffff\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final char[] dfa_2 = DFA.unpackEncodedStringToUnsignedChars(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final short[] dfa_4 = DFA.unpackEncodedString(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[][] dfa_6 = unpackEncodedStringArray(dfa_6s);

    class DFA76 extends DFA {

        public DFA76(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 76;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_3;
            this.accept = dfa_4;
            this.special = dfa_5;
            this.transition = dfa_6;
        }
        public String getDescription() {
            return "()+ loopback of 4768:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Msec otherlv_22= EqualsSign ( (lv_msec_23_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA76_0 = input.LA(1);

                         
                        int index76_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA76_0==RULE_BEGIN) ) {s = 1;}

                        else if ( LA76_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1(), 0) ) {s = 2;}

                        else if ( LA76_0 == ID && getUnorderedGroupHelper().canSelect(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1(), 1) ) {s = 3;}

                        else if ( LA76_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1(), 2) ) {s = 4;}

                        else if ( LA76_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1(), 3) ) {s = 5;}

                        else if ( LA76_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1(), 4) ) {s = 6;}

                        else if ( LA76_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1(), 5) ) {s = 7;}

                        else if ( LA76_0 == Msec && getUnorderedGroupHelper().canSelect(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1(), 6) ) {s = 8;}

                        else if ( LA76_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1(), 7) ) {s = 9;}

                         
                        input.seek(index76_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 76, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_7s = "\1\34\11\uffff";
    static final String[] dfa_8s = {
            "\1\10\1\uffff\1\5\1\6\1\7\20\uffff\1\4\3\uffff\1\3\2\uffff\1\2\1\11\4\uffff\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_7 = DFA.unpackEncodedStringToUnsignedChars(dfa_7s);
    static final short[][] dfa_8 = unpackEncodedStringArray(dfa_8s);

    class DFA101 extends DFA {

        public DFA101(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 101;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_7;
            this.max = dfa_3;
            this.accept = dfa_4;
            this.special = dfa_5;
            this.transition = dfa_8;
        }
        public String getDescription() {
            return "()+ loopback of 6546:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Num_cycles otherlv_22= EqualsSign ( (lv_num_cycles_23_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA101_0 = input.LA(1);

                         
                        int index101_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA101_0==RULE_BEGIN) ) {s = 1;}

                        else if ( LA101_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1(), 0) ) {s = 2;}

                        else if ( LA101_0 == ID && getUnorderedGroupHelper().canSelect(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1(), 1) ) {s = 3;}

                        else if ( LA101_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1(), 2) ) {s = 4;}

                        else if ( LA101_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1(), 3) ) {s = 5;}

                        else if ( LA101_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1(), 4) ) {s = 6;}

                        else if ( LA101_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1(), 5) ) {s = 7;}

                        else if ( LA101_0 == Num_cycles && getUnorderedGroupHelper().canSelect(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1(), 6) ) {s = 8;}

                        else if ( LA101_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1(), 7) ) {s = 9;}

                         
                        input.seek(index101_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 101, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_9s = "\1\25\11\uffff";
    static final String[] dfa_10s = {
            "\1\10\10\uffff\1\5\1\6\1\7\20\uffff\1\4\3\uffff\1\3\2\uffff\1\2\1\11\4\uffff\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final short[][] dfa_10 = unpackEncodedStringArray(dfa_10s);

    class DFA113 extends DFA {

        public DFA113(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 113;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_9;
            this.max = dfa_3;
            this.accept = dfa_4;
            this.special = dfa_5;
            this.transition = dfa_10;
        }
        public String getDescription() {
            return "()+ loopback of 7308:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Num_attempts otherlv_22= EqualsSign ( (lv_num_attempts_23_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA113_0 = input.LA(1);

                         
                        int index113_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA113_0==RULE_BEGIN) ) {s = 1;}

                        else if ( LA113_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1(), 0) ) {s = 2;}

                        else if ( LA113_0 == ID && getUnorderedGroupHelper().canSelect(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1(), 1) ) {s = 3;}

                        else if ( LA113_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1(), 2) ) {s = 4;}

                        else if ( LA113_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1(), 3) ) {s = 5;}

                        else if ( LA113_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1(), 4) ) {s = 6;}

                        else if ( LA113_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1(), 5) ) {s = 7;}

                        else if ( LA113_0 == Num_attempts && getUnorderedGroupHelper().canSelect(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1(), 6) ) {s = 8;}

                        else if ( LA113_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1(), 7) ) {s = 9;}

                         
                        input.seek(index113_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 113, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_11s = "\1\33\11\uffff";
    static final String[] dfa_12s = {
            "\1\5\2\uffff\1\6\1\7\1\10\20\uffff\1\4\3\uffff\1\3\2\uffff\1\2\1\11\4\uffff\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_11 = DFA.unpackEncodedStringToUnsignedChars(dfa_11s);
    static final short[][] dfa_12 = unpackEncodedStringArray(dfa_12s);

    class DFA124 extends DFA {

        public DFA124(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 124;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_11;
            this.max = dfa_3;
            this.accept = dfa_4;
            this.special = dfa_5;
            this.transition = dfa_12;
        }
        public String getDescription() {
            return "()+ loopback of 8061:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= ID otherlv_4= EqualsSign ( (lv_ID_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Name otherlv_7= EqualsSign ( (lv_name_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Delay_msec otherlv_10= EqualsSign ( (lv_delay_msec_11_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= Parameters ( (lv_parameters_13_0= ruleParameter ) ) (otherlv_14= Comma ( (lv_parameters_15_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= Satisfices ( (lv_satisfices_17_0= ruleQuality ) ) (otherlv_18= Comma ( (lv_satisfices_19_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Satisfies ( (lv_satisfies_21_0= ruleQualityRequirement ) ) (otherlv_22= Comma ( (lv_satisfies_23_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= RightParenthesis ) ) ) ) )+";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA124_0 = input.LA(1);

                         
                        int index124_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA124_0==RULE_BEGIN) ) {s = 1;}

                        else if ( LA124_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1(), 0) ) {s = 2;}

                        else if ( LA124_0 == ID && getUnorderedGroupHelper().canSelect(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1(), 1) ) {s = 3;}

                        else if ( LA124_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1(), 2) ) {s = 4;}

                        else if ( LA124_0 == Delay_msec && getUnorderedGroupHelper().canSelect(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1(), 3) ) {s = 5;}

                        else if ( LA124_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1(), 4) ) {s = 6;}

                        else if ( LA124_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1(), 5) ) {s = 7;}

                        else if ( LA124_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1(), 6) ) {s = 8;}

                        else if ( LA124_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1(), 7) ) {s = 9;}

                         
                        input.seek(index124_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 124, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_13s = "\13\uffff";
    static final String dfa_14s = "\1\1\12\uffff";
    static final String dfa_15s = "\1\4\12\uffff";
    static final String dfa_16s = "\1\77\12\uffff";
    static final String dfa_17s = "\1\uffff\1\12\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11";
    static final String dfa_18s = "\1\0\12\uffff}>";
    static final String[] dfa_19s = {
            "\12\1\1\uffff\6\1\1\uffff\1\1\1\uffff\2\1\3\uffff\1\7\1\10\1\5\1\11\1\1\1\uffff\11\1\1\6\1\1\1\uffff\1\1\1\uffff\1\4\3\1\1\3\2\1\1\2\1\12\2\uffff\1\1\2\uffff\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_13 = DFA.unpackEncodedString(dfa_13s);
    static final short[] dfa_14 = DFA.unpackEncodedString(dfa_14s);
    static final char[] dfa_15 = DFA.unpackEncodedStringToUnsignedChars(dfa_15s);
    static final char[] dfa_16 = DFA.unpackEncodedStringToUnsignedChars(dfa_16s);
    static final short[] dfa_17 = DFA.unpackEncodedString(dfa_17s);
    static final short[] dfa_18 = DFA.unpackEncodedString(dfa_18s);
    static final short[][] dfa_19 = unpackEncodedStringArray(dfa_19s);

    class DFA174 extends DFA {

        public DFA174(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 174;
            this.eot = dfa_13;
            this.eof = dfa_14;
            this.min = dfa_15;
            this.max = dfa_16;
            this.accept = dfa_17;
            this.special = dfa_18;
            this.transition = dfa_19;
        }
        public String getDescription() {
            return "()+ loopback of 11506:6: ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Value otherlv_15= EqualsSign ( (lv_value_16_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Output_key otherlv_18= EqualsSign ( (lv_output_key_19_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Parameters ( (lv_parameters_21_0= ruleParameter ) ) (otherlv_22= Comma ( (lv_parameters_23_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= Satisfies ( (lv_satisfies_25_0= ruleQualityRequirement ) ) (otherlv_26= Comma ( (lv_satisfies_27_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= RightParenthesis ) ) ) ) )+";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA174_0 = input.LA(1);

                         
                        int index174_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA174_0==EOF||(LA174_0>=KeepRunningUntilFailure && LA174_0<=SetBlackboard)||(LA174_0>=ConsumeQueue && LA174_0<=ScriptAction)||LA174_0==WhileDoElse||(LA174_0>=CoroAction && LA174_0<=IfThenElse)||LA174_0==Inverter||(LA174_0>=RunOnce && LA174_0<=Sleep)||LA174_0==Loop||LA174_0==Test||(LA174_0>=M && LA174_0<=HyphenMinusGreaterThanSign)||(LA174_0>=R && LA174_0<=VerticalLineVerticalLine)||LA174_0==QuestionMark||LA174_0==RULE_END) ) {s = 1;}

                        else if ( LA174_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 0) ) {s = 2;}

                        else if ( LA174_0 == ID && getUnorderedGroupHelper().canSelect(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 1) ) {s = 3;}

                        else if ( LA174_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 2) ) {s = 4;}

                        else if ( LA174_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 3) ) {s = 5;}

                        else if ( LA174_0 == Value && getUnorderedGroupHelper().canSelect(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 4) ) {s = 6;}

                        else if ( LA174_0 == Output_key && getUnorderedGroupHelper().canSelect(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 5) ) {s = 7;}

                        else if ( LA174_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 6) ) {s = 8;}

                        else if ( LA174_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 7) ) {s = 9;}

                        else if ( LA174_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 8) ) {s = 10;}

                         
                        input.seek(index174_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 174, _s, input);
            error(nvae);
            throw nvae;
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000005L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x4000000000000000L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x8000000000004000L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0020000000000000L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0800000000000000L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x10DCAFFA035FBFF0L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x8000000000000000L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0100000000000002L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0600000000000000L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x43220001C0000000L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x47220001C0000000L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x90DCAFFA035FBFF0L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x43230001C0000000L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x47230001C0000000L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x43220001D0000000L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x47220001D0000000L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x43220001C0000002L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x47220001C0000002L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x43220001C0200000L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x47220001C0200000L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x43220001C8000000L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x47220001C8000000L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x03220001C0000002L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x07220001C0000002L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x03221001E0000002L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x07221001E0000002L});

}
