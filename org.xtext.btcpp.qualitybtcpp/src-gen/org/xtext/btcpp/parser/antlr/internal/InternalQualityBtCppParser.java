package org.xtext.btcpp.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.btcpp.services.QualityBtCppGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;

@SuppressWarnings("all")
public class InternalQualityBtCppParser extends AbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "KeepRunningUntilFailure", "EntryUpdatedDecorator", "EntryUpdatedAction", "ScriptCondition", "UnsetBlackboard", "ManualSelector", "ThreadedAction", "AlwaysFailure", "AlwaysSuccess", "SetBlackboard", "BehaviorTree", "ConsumeQueue", "ForceFailure", "ForceSuccess", "PopFromQueue", "Precondition", "ScriptAction", "Num_attempts", "WhileDoElse", "Description", "CoroAction", "IfThenElse", "QualityReq", "Delay_msec", "Num_cycles", "Output_key", "Parameters", "Satisfices", "Satisfies", "Inverter", "Quality", "RunOnce", "SubTree", "Timeout", "Repeat", "Switch", "All", "Delay", "Retry", "Sleep", "Value", "Loop", "Root", "Test", "Msec", "Name", "M", "R_1", "HyphenMinusGreaterThanSign", "ID", "R", "VerticalLineVerticalLine", "LeftParenthesis", "RightParenthesis", "Comma", "EqualsSign", "QuestionMark", "RULE_NL", "RULE_BEGIN", "RULE_END", "RULE_ID", "RULE_INT", "RULE_STRING", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER"
    };
    public static final int All=40;
    public static final int QualityReq=26;
    public static final int RULE_BEGIN=62;
    public static final int Delay_msec=27;
    public static final int R_1=51;
    public static final int Precondition=19;
    public static final int SubTree=36;
    public static final int Repeat=38;
    public static final int ForceFailure=16;
    public static final int Delay=41;
    public static final int Name=49;
    public static final int AlwaysSuccess=12;
    public static final int LeftParenthesis=56;
    public static final int ForceSuccess=17;
    public static final int RunOnce=35;
    public static final int Test=47;
    public static final int AlwaysFailure=11;
    public static final int ID=53;
    public static final int PopFromQueue=18;
    public static final int ThreadedAction=10;
    public static final int UnsetBlackboard=8;
    public static final int SetBlackboard=13;
    public static final int Parameters=30;
    public static final int Root=46;
    public static final int RULE_ID=64;
    public static final int Timeout=37;
    public static final int Satisfies=32;
    public static final int Output_key=29;
    public static final int RightParenthesis=57;
    public static final int KeepRunningUntilFailure=4;
    public static final int ManualSelector=9;
    public static final int EntryUpdatedAction=6;
    public static final int Switch=39;
    public static final int RULE_INT=65;
    public static final int Value=44;
    public static final int RULE_ML_COMMENT=67;
    public static final int ScriptAction=20;
    public static final int Retry=42;
    public static final int Msec=48;
    public static final int RULE_END=63;
    public static final int Description=23;
    public static final int VerticalLineVerticalLine=55;
    public static final int RULE_STRING=66;
    public static final int CoroAction=24;
    public static final int M=50;
    public static final int RULE_SL_COMMENT=68;
    public static final int Comma=58;
    public static final int EqualsSign=59;
    public static final int R=54;
    public static final int Num_attempts=21;
    public static final int Quality=34;
    public static final int EOF=-1;
    public static final int Inverter=33;
    public static final int Loop=45;
    public static final int RULE_WS=69;
    public static final int RULE_ANY_OTHER=70;
    public static final int BehaviorTree=14;
    public static final int WhileDoElse=22;
    public static final int EntryUpdatedDecorator=5;
    public static final int Sleep=43;
    public static final int QuestionMark=60;
    public static final int Num_cycles=28;
    public static final int IfThenElse=25;
    public static final int RULE_NL=61;
    public static final int HyphenMinusGreaterThanSign=52;
    public static final int Satisfices=31;
    public static final int ScriptCondition=7;
    public static final int ConsumeQueue=15;

    // delegates
    // delegators


        public InternalQualityBtCppParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalQualityBtCppParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalQualityBtCppParser.tokenNames; }
    public String getGrammarFileName() { return "InternalQualityBtCppParser.g"; }



     	private QualityBtCppGrammarAccess grammarAccess;

        public InternalQualityBtCppParser(TokenStream input, QualityBtCppGrammarAccess grammarAccess) {
            this(input);
            this.grammarAccess = grammarAccess;
            registerRules(grammarAccess.getGrammar());
        }

        @Override
        protected String getFirstRuleName() {
        	return "Root";
       	}

       	@Override
       	protected QualityBtCppGrammarAccess getGrammarAccess() {
       		return grammarAccess;
       	}




    // $ANTLR start "entryRuleRoot"
    // InternalQualityBtCppParser.g:57:1: entryRuleRoot returns [EObject current=null] : iv_ruleRoot= ruleRoot EOF ;
    public final EObject entryRuleRoot() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRoot = null;


        try {
            // InternalQualityBtCppParser.g:57:45: (iv_ruleRoot= ruleRoot EOF )
            // InternalQualityBtCppParser.g:58:2: iv_ruleRoot= ruleRoot EOF
            {
             newCompositeNode(grammarAccess.getRootRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleRoot=ruleRoot();

            state._fsp--;

             current =iv_ruleRoot; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRoot"


    // $ANTLR start "ruleRoot"
    // InternalQualityBtCppParser.g:64:1: ruleRoot returns [EObject current=null] : (otherlv_0= Root ( (lv_main_tree_to_execute_1_0= ruleEString ) ) this_BEGIN_2= RULE_BEGIN ( (lv_behaviortrees_3_0= ruleBehaviorTree ) ) ( (lv_behaviortrees_4_0= ruleBehaviorTree ) )* this_END_5= RULE_END ) ;
    public final EObject ruleRoot() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token this_BEGIN_2=null;
        Token this_END_5=null;
        AntlrDatatypeRuleToken lv_main_tree_to_execute_1_0 = null;

        EObject lv_behaviortrees_3_0 = null;

        EObject lv_behaviortrees_4_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:70:2: ( (otherlv_0= Root ( (lv_main_tree_to_execute_1_0= ruleEString ) ) this_BEGIN_2= RULE_BEGIN ( (lv_behaviortrees_3_0= ruleBehaviorTree ) ) ( (lv_behaviortrees_4_0= ruleBehaviorTree ) )* this_END_5= RULE_END ) )
            // InternalQualityBtCppParser.g:71:2: (otherlv_0= Root ( (lv_main_tree_to_execute_1_0= ruleEString ) ) this_BEGIN_2= RULE_BEGIN ( (lv_behaviortrees_3_0= ruleBehaviorTree ) ) ( (lv_behaviortrees_4_0= ruleBehaviorTree ) )* this_END_5= RULE_END )
            {
            // InternalQualityBtCppParser.g:71:2: (otherlv_0= Root ( (lv_main_tree_to_execute_1_0= ruleEString ) ) this_BEGIN_2= RULE_BEGIN ( (lv_behaviortrees_3_0= ruleBehaviorTree ) ) ( (lv_behaviortrees_4_0= ruleBehaviorTree ) )* this_END_5= RULE_END )
            // InternalQualityBtCppParser.g:72:3: otherlv_0= Root ( (lv_main_tree_to_execute_1_0= ruleEString ) ) this_BEGIN_2= RULE_BEGIN ( (lv_behaviortrees_3_0= ruleBehaviorTree ) ) ( (lv_behaviortrees_4_0= ruleBehaviorTree ) )* this_END_5= RULE_END
            {
            otherlv_0=(Token)match(input,Root,FOLLOW_3); 

            			newLeafNode(otherlv_0, grammarAccess.getRootAccess().getRootKeyword_0());
            		
            // InternalQualityBtCppParser.g:76:3: ( (lv_main_tree_to_execute_1_0= ruleEString ) )
            // InternalQualityBtCppParser.g:77:4: (lv_main_tree_to_execute_1_0= ruleEString )
            {
            // InternalQualityBtCppParser.g:77:4: (lv_main_tree_to_execute_1_0= ruleEString )
            // InternalQualityBtCppParser.g:78:5: lv_main_tree_to_execute_1_0= ruleEString
            {

            					newCompositeNode(grammarAccess.getRootAccess().getMain_tree_to_executeEStringParserRuleCall_1_0());
            				
            pushFollow(FOLLOW_4);
            lv_main_tree_to_execute_1_0=ruleEString();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getRootRule());
            					}
            					set(
            						current,
            						"main_tree_to_execute",
            						lv_main_tree_to_execute_1_0,
            						"org.xtext.btcpp.QualityBtCpp.EString");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            this_BEGIN_2=(Token)match(input,RULE_BEGIN,FOLLOW_5); 

            			newLeafNode(this_BEGIN_2, grammarAccess.getRootAccess().getBEGINTerminalRuleCall_2());
            		
            // InternalQualityBtCppParser.g:99:3: ( (lv_behaviortrees_3_0= ruleBehaviorTree ) )
            // InternalQualityBtCppParser.g:100:4: (lv_behaviortrees_3_0= ruleBehaviorTree )
            {
            // InternalQualityBtCppParser.g:100:4: (lv_behaviortrees_3_0= ruleBehaviorTree )
            // InternalQualityBtCppParser.g:101:5: lv_behaviortrees_3_0= ruleBehaviorTree
            {

            					newCompositeNode(grammarAccess.getRootAccess().getBehaviortreesBehaviorTreeParserRuleCall_3_0());
            				
            pushFollow(FOLLOW_6);
            lv_behaviortrees_3_0=ruleBehaviorTree();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getRootRule());
            					}
            					add(
            						current,
            						"behaviortrees",
            						lv_behaviortrees_3_0,
            						"org.xtext.btcpp.QualityBtCpp.BehaviorTree");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            // InternalQualityBtCppParser.g:118:3: ( (lv_behaviortrees_4_0= ruleBehaviorTree ) )*
            loop1:
            do {
                int alt1=2;
                int LA1_0 = input.LA(1);

                if ( (LA1_0==BehaviorTree) ) {
                    alt1=1;
                }


                switch (alt1) {
            	case 1 :
            	    // InternalQualityBtCppParser.g:119:4: (lv_behaviortrees_4_0= ruleBehaviorTree )
            	    {
            	    // InternalQualityBtCppParser.g:119:4: (lv_behaviortrees_4_0= ruleBehaviorTree )
            	    // InternalQualityBtCppParser.g:120:5: lv_behaviortrees_4_0= ruleBehaviorTree
            	    {

            	    					newCompositeNode(grammarAccess.getRootAccess().getBehaviortreesBehaviorTreeParserRuleCall_4_0());
            	    				
            	    pushFollow(FOLLOW_6);
            	    lv_behaviortrees_4_0=ruleBehaviorTree();

            	    state._fsp--;


            	    					if (current==null) {
            	    						current = createModelElementForParent(grammarAccess.getRootRule());
            	    					}
            	    					add(
            	    						current,
            	    						"behaviortrees",
            	    						lv_behaviortrees_4_0,
            	    						"org.xtext.btcpp.QualityBtCpp.BehaviorTree");
            	    					afterParserOrEnumRuleCall();
            	    				

            	    }


            	    }
            	    break;

            	default :
            	    break loop1;
                }
            } while (true);

            this_END_5=(Token)match(input,RULE_END,FOLLOW_2); 

            			newLeafNode(this_END_5, grammarAccess.getRootAccess().getENDTerminalRuleCall_5());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRoot"


    // $ANTLR start "entryRuleTreeNode"
    // InternalQualityBtCppParser.g:145:1: entryRuleTreeNode returns [EObject current=null] : iv_ruleTreeNode= ruleTreeNode EOF ;
    public final EObject entryRuleTreeNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTreeNode = null;


        try {
            // InternalQualityBtCppParser.g:145:49: (iv_ruleTreeNode= ruleTreeNode EOF )
            // InternalQualityBtCppParser.g:146:2: iv_ruleTreeNode= ruleTreeNode EOF
            {
             newCompositeNode(grammarAccess.getTreeNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleTreeNode=ruleTreeNode();

            state._fsp--;

             current =iv_ruleTreeNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTreeNode"


    // $ANTLR start "ruleTreeNode"
    // InternalQualityBtCppParser.g:152:1: ruleTreeNode returns [EObject current=null] : (this_LeafNode_0= ruleLeafNode | this_ControlNode_1= ruleControlNode | this_DecoratorNode_2= ruleDecoratorNode | this_SubTree_3= ruleSubTree ) ;
    public final EObject ruleTreeNode() throws RecognitionException {
        EObject current = null;

        EObject this_LeafNode_0 = null;

        EObject this_ControlNode_1 = null;

        EObject this_DecoratorNode_2 = null;

        EObject this_SubTree_3 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:158:2: ( (this_LeafNode_0= ruleLeafNode | this_ControlNode_1= ruleControlNode | this_DecoratorNode_2= ruleDecoratorNode | this_SubTree_3= ruleSubTree ) )
            // InternalQualityBtCppParser.g:159:2: (this_LeafNode_0= ruleLeafNode | this_ControlNode_1= ruleControlNode | this_DecoratorNode_2= ruleDecoratorNode | this_SubTree_3= ruleSubTree )
            {
            // InternalQualityBtCppParser.g:159:2: (this_LeafNode_0= ruleLeafNode | this_ControlNode_1= ruleControlNode | this_DecoratorNode_2= ruleDecoratorNode | this_SubTree_3= ruleSubTree )
            int alt2=4;
            switch ( input.LA(1) ) {
            case EntryUpdatedAction:
            case ScriptCondition:
            case UnsetBlackboard:
            case ThreadedAction:
            case AlwaysFailure:
            case AlwaysSuccess:
            case SetBlackboard:
            case PopFromQueue:
            case ScriptAction:
            case CoroAction:
            case Sleep:
            case Test:
                {
                alt2=1;
                }
                break;
            case ManualSelector:
            case WhileDoElse:
            case IfThenElse:
            case Switch:
            case All:
            case M:
            case R_1:
            case HyphenMinusGreaterThanSign:
            case R:
            case VerticalLineVerticalLine:
            case QuestionMark:
                {
                alt2=2;
                }
                break;
            case KeepRunningUntilFailure:
            case EntryUpdatedDecorator:
            case ConsumeQueue:
            case ForceFailure:
            case ForceSuccess:
            case Precondition:
            case Inverter:
            case RunOnce:
            case Timeout:
            case Repeat:
            case Delay:
            case Retry:
            case Loop:
                {
                alt2=3;
                }
                break;
            case SubTree:
                {
                alt2=4;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 2, 0, input);

                throw nvae;
            }

            switch (alt2) {
                case 1 :
                    // InternalQualityBtCppParser.g:160:3: this_LeafNode_0= ruleLeafNode
                    {

                    			newCompositeNode(grammarAccess.getTreeNodeAccess().getLeafNodeParserRuleCall_0());
                    		
                    pushFollow(FOLLOW_2);
                    this_LeafNode_0=ruleLeafNode();

                    state._fsp--;


                    			current = this_LeafNode_0;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 2 :
                    // InternalQualityBtCppParser.g:169:3: this_ControlNode_1= ruleControlNode
                    {

                    			newCompositeNode(grammarAccess.getTreeNodeAccess().getControlNodeParserRuleCall_1());
                    		
                    pushFollow(FOLLOW_2);
                    this_ControlNode_1=ruleControlNode();

                    state._fsp--;


                    			current = this_ControlNode_1;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 3 :
                    // InternalQualityBtCppParser.g:178:3: this_DecoratorNode_2= ruleDecoratorNode
                    {

                    			newCompositeNode(grammarAccess.getTreeNodeAccess().getDecoratorNodeParserRuleCall_2());
                    		
                    pushFollow(FOLLOW_2);
                    this_DecoratorNode_2=ruleDecoratorNode();

                    state._fsp--;


                    			current = this_DecoratorNode_2;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 4 :
                    // InternalQualityBtCppParser.g:187:3: this_SubTree_3= ruleSubTree
                    {

                    			newCompositeNode(grammarAccess.getTreeNodeAccess().getSubTreeParserRuleCall_3());
                    		
                    pushFollow(FOLLOW_2);
                    this_SubTree_3=ruleSubTree();

                    state._fsp--;


                    			current = this_SubTree_3;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTreeNode"


    // $ANTLR start "entryRuleLeafNode"
    // InternalQualityBtCppParser.g:199:1: entryRuleLeafNode returns [EObject current=null] : iv_ruleLeafNode= ruleLeafNode EOF ;
    public final EObject entryRuleLeafNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLeafNode = null;


        try {
            // InternalQualityBtCppParser.g:199:49: (iv_ruleLeafNode= ruleLeafNode EOF )
            // InternalQualityBtCppParser.g:200:2: iv_ruleLeafNode= ruleLeafNode EOF
            {
             newCompositeNode(grammarAccess.getLeafNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleLeafNode=ruleLeafNode();

            state._fsp--;

             current =iv_ruleLeafNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLeafNode"


    // $ANTLR start "ruleLeafNode"
    // InternalQualityBtCppParser.g:206:1: ruleLeafNode returns [EObject current=null] : (this_ActionNodeBase_0= ruleActionNodeBase | this_ConditionNode_1= ruleConditionNode ) ;
    public final EObject ruleLeafNode() throws RecognitionException {
        EObject current = null;

        EObject this_ActionNodeBase_0 = null;

        EObject this_ConditionNode_1 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:212:2: ( (this_ActionNodeBase_0= ruleActionNodeBase | this_ConditionNode_1= ruleConditionNode ) )
            // InternalQualityBtCppParser.g:213:2: (this_ActionNodeBase_0= ruleActionNodeBase | this_ConditionNode_1= ruleConditionNode )
            {
            // InternalQualityBtCppParser.g:213:2: (this_ActionNodeBase_0= ruleActionNodeBase | this_ConditionNode_1= ruleConditionNode )
            int alt3=2;
            int LA3_0 = input.LA(1);

            if ( (LA3_0==EntryUpdatedAction||LA3_0==UnsetBlackboard||(LA3_0>=ThreadedAction && LA3_0<=SetBlackboard)||LA3_0==PopFromQueue||LA3_0==ScriptAction||LA3_0==CoroAction||LA3_0==Sleep||LA3_0==Test) ) {
                alt3=1;
            }
            else if ( (LA3_0==ScriptCondition) ) {
                alt3=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 3, 0, input);

                throw nvae;
            }
            switch (alt3) {
                case 1 :
                    // InternalQualityBtCppParser.g:214:3: this_ActionNodeBase_0= ruleActionNodeBase
                    {

                    			newCompositeNode(grammarAccess.getLeafNodeAccess().getActionNodeBaseParserRuleCall_0());
                    		
                    pushFollow(FOLLOW_2);
                    this_ActionNodeBase_0=ruleActionNodeBase();

                    state._fsp--;


                    			current = this_ActionNodeBase_0;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 2 :
                    // InternalQualityBtCppParser.g:223:3: this_ConditionNode_1= ruleConditionNode
                    {

                    			newCompositeNode(grammarAccess.getLeafNodeAccess().getConditionNodeParserRuleCall_1());
                    		
                    pushFollow(FOLLOW_2);
                    this_ConditionNode_1=ruleConditionNode();

                    state._fsp--;


                    			current = this_ConditionNode_1;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLeafNode"


    // $ANTLR start "entryRuleConditionNode"
    // InternalQualityBtCppParser.g:235:1: entryRuleConditionNode returns [EObject current=null] : iv_ruleConditionNode= ruleConditionNode EOF ;
    public final EObject entryRuleConditionNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConditionNode = null;


        try {
            // InternalQualityBtCppParser.g:235:54: (iv_ruleConditionNode= ruleConditionNode EOF )
            // InternalQualityBtCppParser.g:236:2: iv_ruleConditionNode= ruleConditionNode EOF
            {
             newCompositeNode(grammarAccess.getConditionNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleConditionNode=ruleConditionNode();

            state._fsp--;

             current =iv_ruleConditionNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConditionNode"


    // $ANTLR start "ruleConditionNode"
    // InternalQualityBtCppParser.g:242:1: ruleConditionNode returns [EObject current=null] : this_ScriptConditionNode_0= ruleScriptConditionNode ;
    public final EObject ruleConditionNode() throws RecognitionException {
        EObject current = null;

        EObject this_ScriptConditionNode_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:248:2: (this_ScriptConditionNode_0= ruleScriptConditionNode )
            // InternalQualityBtCppParser.g:249:2: this_ScriptConditionNode_0= ruleScriptConditionNode
            {

            		newCompositeNode(grammarAccess.getConditionNodeAccess().getScriptConditionNodeParserRuleCall());
            	
            pushFollow(FOLLOW_2);
            this_ScriptConditionNode_0=ruleScriptConditionNode();

            state._fsp--;


            		current = this_ScriptConditionNode_0;
            		afterParserOrEnumRuleCall();
            	

            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConditionNode"


    // $ANTLR start "entryRuleActionNodeBase"
    // InternalQualityBtCppParser.g:260:1: entryRuleActionNodeBase returns [EObject current=null] : iv_ruleActionNodeBase= ruleActionNodeBase EOF ;
    public final EObject entryRuleActionNodeBase() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleActionNodeBase = null;


        try {
            // InternalQualityBtCppParser.g:260:55: (iv_ruleActionNodeBase= ruleActionNodeBase EOF )
            // InternalQualityBtCppParser.g:261:2: iv_ruleActionNodeBase= ruleActionNodeBase EOF
            {
             newCompositeNode(grammarAccess.getActionNodeBaseRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleActionNodeBase=ruleActionNodeBase();

            state._fsp--;

             current =iv_ruleActionNodeBase; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleActionNodeBase"


    // $ANTLR start "ruleActionNodeBase"
    // InternalQualityBtCppParser.g:267:1: ruleActionNodeBase returns [EObject current=null] : (this_SyncActionNode_0= ruleSyncActionNode | this_AsynchActionNode_1= ruleAsynchActionNode | this_ThreadedActionNode_2= ruleThreadedActionNode ) ;
    public final EObject ruleActionNodeBase() throws RecognitionException {
        EObject current = null;

        EObject this_SyncActionNode_0 = null;

        EObject this_AsynchActionNode_1 = null;

        EObject this_ThreadedActionNode_2 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:273:2: ( (this_SyncActionNode_0= ruleSyncActionNode | this_AsynchActionNode_1= ruleAsynchActionNode | this_ThreadedActionNode_2= ruleThreadedActionNode ) )
            // InternalQualityBtCppParser.g:274:2: (this_SyncActionNode_0= ruleSyncActionNode | this_AsynchActionNode_1= ruleAsynchActionNode | this_ThreadedActionNode_2= ruleThreadedActionNode )
            {
            // InternalQualityBtCppParser.g:274:2: (this_SyncActionNode_0= ruleSyncActionNode | this_AsynchActionNode_1= ruleAsynchActionNode | this_ThreadedActionNode_2= ruleThreadedActionNode )
            int alt4=3;
            switch ( input.LA(1) ) {
            case EntryUpdatedAction:
            case UnsetBlackboard:
            case AlwaysFailure:
            case AlwaysSuccess:
            case SetBlackboard:
            case PopFromQueue:
            case ScriptAction:
                {
                alt4=1;
                }
                break;
            case CoroAction:
            case Sleep:
            case Test:
                {
                alt4=2;
                }
                break;
            case ThreadedAction:
                {
                alt4=3;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 4, 0, input);

                throw nvae;
            }

            switch (alt4) {
                case 1 :
                    // InternalQualityBtCppParser.g:275:3: this_SyncActionNode_0= ruleSyncActionNode
                    {

                    			newCompositeNode(grammarAccess.getActionNodeBaseAccess().getSyncActionNodeParserRuleCall_0());
                    		
                    pushFollow(FOLLOW_2);
                    this_SyncActionNode_0=ruleSyncActionNode();

                    state._fsp--;


                    			current = this_SyncActionNode_0;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 2 :
                    // InternalQualityBtCppParser.g:284:3: this_AsynchActionNode_1= ruleAsynchActionNode
                    {

                    			newCompositeNode(grammarAccess.getActionNodeBaseAccess().getAsynchActionNodeParserRuleCall_1());
                    		
                    pushFollow(FOLLOW_2);
                    this_AsynchActionNode_1=ruleAsynchActionNode();

                    state._fsp--;


                    			current = this_AsynchActionNode_1;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 3 :
                    // InternalQualityBtCppParser.g:293:3: this_ThreadedActionNode_2= ruleThreadedActionNode
                    {

                    			newCompositeNode(grammarAccess.getActionNodeBaseAccess().getThreadedActionNodeParserRuleCall_2());
                    		
                    pushFollow(FOLLOW_2);
                    this_ThreadedActionNode_2=ruleThreadedActionNode();

                    state._fsp--;


                    			current = this_ThreadedActionNode_2;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleActionNodeBase"


    // $ANTLR start "entryRuleSyncActionNode"
    // InternalQualityBtCppParser.g:305:1: entryRuleSyncActionNode returns [EObject current=null] : iv_ruleSyncActionNode= ruleSyncActionNode EOF ;
    public final EObject entryRuleSyncActionNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSyncActionNode = null;


        try {
            // InternalQualityBtCppParser.g:305:55: (iv_ruleSyncActionNode= ruleSyncActionNode EOF )
            // InternalQualityBtCppParser.g:306:2: iv_ruleSyncActionNode= ruleSyncActionNode EOF
            {
             newCompositeNode(grammarAccess.getSyncActionNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleSyncActionNode=ruleSyncActionNode();

            state._fsp--;

             current =iv_ruleSyncActionNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSyncActionNode"


    // $ANTLR start "ruleSyncActionNode"
    // InternalQualityBtCppParser.g:312:1: ruleSyncActionNode returns [EObject current=null] : (this_ScriptNode_0= ruleScriptNode | this_EntryUpdatedActionNode_1= ruleEntryUpdatedActionNode | this_AlwaysSuccessNode_2= ruleAlwaysSuccessNode | this_AlwaysFailureNode_3= ruleAlwaysFailureNode | this_SetBlackboardNode_4= ruleSetBlackboardNode | this_UnsetBlackboardNode_5= ruleUnsetBlackboardNode | this_PopFromQueueNode_6= rulePopFromQueueNode ) ;
    public final EObject ruleSyncActionNode() throws RecognitionException {
        EObject current = null;

        EObject this_ScriptNode_0 = null;

        EObject this_EntryUpdatedActionNode_1 = null;

        EObject this_AlwaysSuccessNode_2 = null;

        EObject this_AlwaysFailureNode_3 = null;

        EObject this_SetBlackboardNode_4 = null;

        EObject this_UnsetBlackboardNode_5 = null;

        EObject this_PopFromQueueNode_6 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:318:2: ( (this_ScriptNode_0= ruleScriptNode | this_EntryUpdatedActionNode_1= ruleEntryUpdatedActionNode | this_AlwaysSuccessNode_2= ruleAlwaysSuccessNode | this_AlwaysFailureNode_3= ruleAlwaysFailureNode | this_SetBlackboardNode_4= ruleSetBlackboardNode | this_UnsetBlackboardNode_5= ruleUnsetBlackboardNode | this_PopFromQueueNode_6= rulePopFromQueueNode ) )
            // InternalQualityBtCppParser.g:319:2: (this_ScriptNode_0= ruleScriptNode | this_EntryUpdatedActionNode_1= ruleEntryUpdatedActionNode | this_AlwaysSuccessNode_2= ruleAlwaysSuccessNode | this_AlwaysFailureNode_3= ruleAlwaysFailureNode | this_SetBlackboardNode_4= ruleSetBlackboardNode | this_UnsetBlackboardNode_5= ruleUnsetBlackboardNode | this_PopFromQueueNode_6= rulePopFromQueueNode )
            {
            // InternalQualityBtCppParser.g:319:2: (this_ScriptNode_0= ruleScriptNode | this_EntryUpdatedActionNode_1= ruleEntryUpdatedActionNode | this_AlwaysSuccessNode_2= ruleAlwaysSuccessNode | this_AlwaysFailureNode_3= ruleAlwaysFailureNode | this_SetBlackboardNode_4= ruleSetBlackboardNode | this_UnsetBlackboardNode_5= ruleUnsetBlackboardNode | this_PopFromQueueNode_6= rulePopFromQueueNode )
            int alt5=7;
            switch ( input.LA(1) ) {
            case ScriptAction:
                {
                alt5=1;
                }
                break;
            case EntryUpdatedAction:
                {
                alt5=2;
                }
                break;
            case AlwaysSuccess:
                {
                alt5=3;
                }
                break;
            case AlwaysFailure:
                {
                alt5=4;
                }
                break;
            case SetBlackboard:
                {
                alt5=5;
                }
                break;
            case UnsetBlackboard:
                {
                alt5=6;
                }
                break;
            case PopFromQueue:
                {
                alt5=7;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 5, 0, input);

                throw nvae;
            }

            switch (alt5) {
                case 1 :
                    // InternalQualityBtCppParser.g:320:3: this_ScriptNode_0= ruleScriptNode
                    {

                    			newCompositeNode(grammarAccess.getSyncActionNodeAccess().getScriptNodeParserRuleCall_0());
                    		
                    pushFollow(FOLLOW_2);
                    this_ScriptNode_0=ruleScriptNode();

                    state._fsp--;


                    			current = this_ScriptNode_0;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 2 :
                    // InternalQualityBtCppParser.g:329:3: this_EntryUpdatedActionNode_1= ruleEntryUpdatedActionNode
                    {

                    			newCompositeNode(grammarAccess.getSyncActionNodeAccess().getEntryUpdatedActionNodeParserRuleCall_1());
                    		
                    pushFollow(FOLLOW_2);
                    this_EntryUpdatedActionNode_1=ruleEntryUpdatedActionNode();

                    state._fsp--;


                    			current = this_EntryUpdatedActionNode_1;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 3 :
                    // InternalQualityBtCppParser.g:338:3: this_AlwaysSuccessNode_2= ruleAlwaysSuccessNode
                    {

                    			newCompositeNode(grammarAccess.getSyncActionNodeAccess().getAlwaysSuccessNodeParserRuleCall_2());
                    		
                    pushFollow(FOLLOW_2);
                    this_AlwaysSuccessNode_2=ruleAlwaysSuccessNode();

                    state._fsp--;


                    			current = this_AlwaysSuccessNode_2;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 4 :
                    // InternalQualityBtCppParser.g:347:3: this_AlwaysFailureNode_3= ruleAlwaysFailureNode
                    {

                    			newCompositeNode(grammarAccess.getSyncActionNodeAccess().getAlwaysFailureNodeParserRuleCall_3());
                    		
                    pushFollow(FOLLOW_2);
                    this_AlwaysFailureNode_3=ruleAlwaysFailureNode();

                    state._fsp--;


                    			current = this_AlwaysFailureNode_3;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 5 :
                    // InternalQualityBtCppParser.g:356:3: this_SetBlackboardNode_4= ruleSetBlackboardNode
                    {

                    			newCompositeNode(grammarAccess.getSyncActionNodeAccess().getSetBlackboardNodeParserRuleCall_4());
                    		
                    pushFollow(FOLLOW_2);
                    this_SetBlackboardNode_4=ruleSetBlackboardNode();

                    state._fsp--;


                    			current = this_SetBlackboardNode_4;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 6 :
                    // InternalQualityBtCppParser.g:365:3: this_UnsetBlackboardNode_5= ruleUnsetBlackboardNode
                    {

                    			newCompositeNode(grammarAccess.getSyncActionNodeAccess().getUnsetBlackboardNodeParserRuleCall_5());
                    		
                    pushFollow(FOLLOW_2);
                    this_UnsetBlackboardNode_5=ruleUnsetBlackboardNode();

                    state._fsp--;


                    			current = this_UnsetBlackboardNode_5;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 7 :
                    // InternalQualityBtCppParser.g:374:3: this_PopFromQueueNode_6= rulePopFromQueueNode
                    {

                    			newCompositeNode(grammarAccess.getSyncActionNodeAccess().getPopFromQueueNodeParserRuleCall_6());
                    		
                    pushFollow(FOLLOW_2);
                    this_PopFromQueueNode_6=rulePopFromQueueNode();

                    state._fsp--;


                    			current = this_PopFromQueueNode_6;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSyncActionNode"


    // $ANTLR start "entryRuleAsynchActionNode"
    // InternalQualityBtCppParser.g:386:1: entryRuleAsynchActionNode returns [EObject current=null] : iv_ruleAsynchActionNode= ruleAsynchActionNode EOF ;
    public final EObject entryRuleAsynchActionNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAsynchActionNode = null;


        try {
            // InternalQualityBtCppParser.g:386:57: (iv_ruleAsynchActionNode= ruleAsynchActionNode EOF )
            // InternalQualityBtCppParser.g:387:2: iv_ruleAsynchActionNode= ruleAsynchActionNode EOF
            {
             newCompositeNode(grammarAccess.getAsynchActionNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleAsynchActionNode=ruleAsynchActionNode();

            state._fsp--;

             current =iv_ruleAsynchActionNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAsynchActionNode"


    // $ANTLR start "ruleAsynchActionNode"
    // InternalQualityBtCppParser.g:393:1: ruleAsynchActionNode returns [EObject current=null] : (this_StatefulActionNode_0= ruleStatefulActionNode | this_CoroActionNode_1= ruleCoroActionNode ) ;
    public final EObject ruleAsynchActionNode() throws RecognitionException {
        EObject current = null;

        EObject this_StatefulActionNode_0 = null;

        EObject this_CoroActionNode_1 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:399:2: ( (this_StatefulActionNode_0= ruleStatefulActionNode | this_CoroActionNode_1= ruleCoroActionNode ) )
            // InternalQualityBtCppParser.g:400:2: (this_StatefulActionNode_0= ruleStatefulActionNode | this_CoroActionNode_1= ruleCoroActionNode )
            {
            // InternalQualityBtCppParser.g:400:2: (this_StatefulActionNode_0= ruleStatefulActionNode | this_CoroActionNode_1= ruleCoroActionNode )
            int alt6=2;
            int LA6_0 = input.LA(1);

            if ( (LA6_0==Sleep||LA6_0==Test) ) {
                alt6=1;
            }
            else if ( (LA6_0==CoroAction) ) {
                alt6=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 6, 0, input);

                throw nvae;
            }
            switch (alt6) {
                case 1 :
                    // InternalQualityBtCppParser.g:401:3: this_StatefulActionNode_0= ruleStatefulActionNode
                    {

                    			newCompositeNode(grammarAccess.getAsynchActionNodeAccess().getStatefulActionNodeParserRuleCall_0());
                    		
                    pushFollow(FOLLOW_2);
                    this_StatefulActionNode_0=ruleStatefulActionNode();

                    state._fsp--;


                    			current = this_StatefulActionNode_0;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 2 :
                    // InternalQualityBtCppParser.g:410:3: this_CoroActionNode_1= ruleCoroActionNode
                    {

                    			newCompositeNode(grammarAccess.getAsynchActionNodeAccess().getCoroActionNodeParserRuleCall_1());
                    		
                    pushFollow(FOLLOW_2);
                    this_CoroActionNode_1=ruleCoroActionNode();

                    state._fsp--;


                    			current = this_CoroActionNode_1;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAsynchActionNode"


    // $ANTLR start "entryRuleStatefulActionNode"
    // InternalQualityBtCppParser.g:422:1: entryRuleStatefulActionNode returns [EObject current=null] : iv_ruleStatefulActionNode= ruleStatefulActionNode EOF ;
    public final EObject entryRuleStatefulActionNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStatefulActionNode = null;


        try {
            // InternalQualityBtCppParser.g:422:59: (iv_ruleStatefulActionNode= ruleStatefulActionNode EOF )
            // InternalQualityBtCppParser.g:423:2: iv_ruleStatefulActionNode= ruleStatefulActionNode EOF
            {
             newCompositeNode(grammarAccess.getStatefulActionNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleStatefulActionNode=ruleStatefulActionNode();

            state._fsp--;

             current =iv_ruleStatefulActionNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStatefulActionNode"


    // $ANTLR start "ruleStatefulActionNode"
    // InternalQualityBtCppParser.g:429:1: ruleStatefulActionNode returns [EObject current=null] : (this_SleepNode_0= ruleSleepNode | this_TestNode_1= ruleTestNode ) ;
    public final EObject ruleStatefulActionNode() throws RecognitionException {
        EObject current = null;

        EObject this_SleepNode_0 = null;

        EObject this_TestNode_1 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:435:2: ( (this_SleepNode_0= ruleSleepNode | this_TestNode_1= ruleTestNode ) )
            // InternalQualityBtCppParser.g:436:2: (this_SleepNode_0= ruleSleepNode | this_TestNode_1= ruleTestNode )
            {
            // InternalQualityBtCppParser.g:436:2: (this_SleepNode_0= ruleSleepNode | this_TestNode_1= ruleTestNode )
            int alt7=2;
            int LA7_0 = input.LA(1);

            if ( (LA7_0==Sleep) ) {
                alt7=1;
            }
            else if ( (LA7_0==Test) ) {
                alt7=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 7, 0, input);

                throw nvae;
            }
            switch (alt7) {
                case 1 :
                    // InternalQualityBtCppParser.g:437:3: this_SleepNode_0= ruleSleepNode
                    {

                    			newCompositeNode(grammarAccess.getStatefulActionNodeAccess().getSleepNodeParserRuleCall_0());
                    		
                    pushFollow(FOLLOW_2);
                    this_SleepNode_0=ruleSleepNode();

                    state._fsp--;


                    			current = this_SleepNode_0;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 2 :
                    // InternalQualityBtCppParser.g:446:3: this_TestNode_1= ruleTestNode
                    {

                    			newCompositeNode(grammarAccess.getStatefulActionNodeAccess().getTestNodeParserRuleCall_1());
                    		
                    pushFollow(FOLLOW_2);
                    this_TestNode_1=ruleTestNode();

                    state._fsp--;


                    			current = this_TestNode_1;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStatefulActionNode"


    // $ANTLR start "entryRuleControlNode"
    // InternalQualityBtCppParser.g:458:1: entryRuleControlNode returns [EObject current=null] : iv_ruleControlNode= ruleControlNode EOF ;
    public final EObject entryRuleControlNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleControlNode = null;


        try {
            // InternalQualityBtCppParser.g:458:52: (iv_ruleControlNode= ruleControlNode EOF )
            // InternalQualityBtCppParser.g:459:2: iv_ruleControlNode= ruleControlNode EOF
            {
             newCompositeNode(grammarAccess.getControlNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleControlNode=ruleControlNode();

            state._fsp--;

             current =iv_ruleControlNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleControlNode"


    // $ANTLR start "ruleControlNode"
    // InternalQualityBtCppParser.g:465:1: ruleControlNode returns [EObject current=null] : (this_ReactiveSequenceNode_0= ruleReactiveSequenceNode | this_SequenceNode_1= ruleSequenceNode | this_SequenceWithMemoryNode_2= ruleSequenceWithMemoryNode | this_FallbackNode_3= ruleFallbackNode | this_ReactiveFallbackNode_4= ruleReactiveFallbackNode | this_ParallelNode_5= ruleParallelNode | this_ParallelAllNode_6= ruleParallelAllNode | this_IfThenElseNode_7= ruleIfThenElseNode | this_SwitchNode_8= ruleSwitchNode | this_WhileDoElseNode_9= ruleWhileDoElseNode | this_ManualSelectorNode_10= ruleManualSelectorNode ) ;
    public final EObject ruleControlNode() throws RecognitionException {
        EObject current = null;

        EObject this_ReactiveSequenceNode_0 = null;

        EObject this_SequenceNode_1 = null;

        EObject this_SequenceWithMemoryNode_2 = null;

        EObject this_FallbackNode_3 = null;

        EObject this_ReactiveFallbackNode_4 = null;

        EObject this_ParallelNode_5 = null;

        EObject this_ParallelAllNode_6 = null;

        EObject this_IfThenElseNode_7 = null;

        EObject this_SwitchNode_8 = null;

        EObject this_WhileDoElseNode_9 = null;

        EObject this_ManualSelectorNode_10 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:471:2: ( (this_ReactiveSequenceNode_0= ruleReactiveSequenceNode | this_SequenceNode_1= ruleSequenceNode | this_SequenceWithMemoryNode_2= ruleSequenceWithMemoryNode | this_FallbackNode_3= ruleFallbackNode | this_ReactiveFallbackNode_4= ruleReactiveFallbackNode | this_ParallelNode_5= ruleParallelNode | this_ParallelAllNode_6= ruleParallelAllNode | this_IfThenElseNode_7= ruleIfThenElseNode | this_SwitchNode_8= ruleSwitchNode | this_WhileDoElseNode_9= ruleWhileDoElseNode | this_ManualSelectorNode_10= ruleManualSelectorNode ) )
            // InternalQualityBtCppParser.g:472:2: (this_ReactiveSequenceNode_0= ruleReactiveSequenceNode | this_SequenceNode_1= ruleSequenceNode | this_SequenceWithMemoryNode_2= ruleSequenceWithMemoryNode | this_FallbackNode_3= ruleFallbackNode | this_ReactiveFallbackNode_4= ruleReactiveFallbackNode | this_ParallelNode_5= ruleParallelNode | this_ParallelAllNode_6= ruleParallelAllNode | this_IfThenElseNode_7= ruleIfThenElseNode | this_SwitchNode_8= ruleSwitchNode | this_WhileDoElseNode_9= ruleWhileDoElseNode | this_ManualSelectorNode_10= ruleManualSelectorNode )
            {
            // InternalQualityBtCppParser.g:472:2: (this_ReactiveSequenceNode_0= ruleReactiveSequenceNode | this_SequenceNode_1= ruleSequenceNode | this_SequenceWithMemoryNode_2= ruleSequenceWithMemoryNode | this_FallbackNode_3= ruleFallbackNode | this_ReactiveFallbackNode_4= ruleReactiveFallbackNode | this_ParallelNode_5= ruleParallelNode | this_ParallelAllNode_6= ruleParallelAllNode | this_IfThenElseNode_7= ruleIfThenElseNode | this_SwitchNode_8= ruleSwitchNode | this_WhileDoElseNode_9= ruleWhileDoElseNode | this_ManualSelectorNode_10= ruleManualSelectorNode )
            int alt8=11;
            switch ( input.LA(1) ) {
            case R_1:
                {
                alt8=1;
                }
                break;
            case HyphenMinusGreaterThanSign:
                {
                alt8=2;
                }
                break;
            case M:
                {
                alt8=3;
                }
                break;
            case QuestionMark:
                {
                alt8=4;
                }
                break;
            case R:
                {
                alt8=5;
                }
                break;
            case VerticalLineVerticalLine:
                {
                alt8=6;
                }
                break;
            case All:
                {
                alt8=7;
                }
                break;
            case IfThenElse:
                {
                alt8=8;
                }
                break;
            case Switch:
                {
                alt8=9;
                }
                break;
            case WhileDoElse:
                {
                alt8=10;
                }
                break;
            case ManualSelector:
                {
                alt8=11;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 8, 0, input);

                throw nvae;
            }

            switch (alt8) {
                case 1 :
                    // InternalQualityBtCppParser.g:473:3: this_ReactiveSequenceNode_0= ruleReactiveSequenceNode
                    {

                    			newCompositeNode(grammarAccess.getControlNodeAccess().getReactiveSequenceNodeParserRuleCall_0());
                    		
                    pushFollow(FOLLOW_2);
                    this_ReactiveSequenceNode_0=ruleReactiveSequenceNode();

                    state._fsp--;


                    			current = this_ReactiveSequenceNode_0;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 2 :
                    // InternalQualityBtCppParser.g:482:3: this_SequenceNode_1= ruleSequenceNode
                    {

                    			newCompositeNode(grammarAccess.getControlNodeAccess().getSequenceNodeParserRuleCall_1());
                    		
                    pushFollow(FOLLOW_2);
                    this_SequenceNode_1=ruleSequenceNode();

                    state._fsp--;


                    			current = this_SequenceNode_1;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 3 :
                    // InternalQualityBtCppParser.g:491:3: this_SequenceWithMemoryNode_2= ruleSequenceWithMemoryNode
                    {

                    			newCompositeNode(grammarAccess.getControlNodeAccess().getSequenceWithMemoryNodeParserRuleCall_2());
                    		
                    pushFollow(FOLLOW_2);
                    this_SequenceWithMemoryNode_2=ruleSequenceWithMemoryNode();

                    state._fsp--;


                    			current = this_SequenceWithMemoryNode_2;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 4 :
                    // InternalQualityBtCppParser.g:500:3: this_FallbackNode_3= ruleFallbackNode
                    {

                    			newCompositeNode(grammarAccess.getControlNodeAccess().getFallbackNodeParserRuleCall_3());
                    		
                    pushFollow(FOLLOW_2);
                    this_FallbackNode_3=ruleFallbackNode();

                    state._fsp--;


                    			current = this_FallbackNode_3;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 5 :
                    // InternalQualityBtCppParser.g:509:3: this_ReactiveFallbackNode_4= ruleReactiveFallbackNode
                    {

                    			newCompositeNode(grammarAccess.getControlNodeAccess().getReactiveFallbackNodeParserRuleCall_4());
                    		
                    pushFollow(FOLLOW_2);
                    this_ReactiveFallbackNode_4=ruleReactiveFallbackNode();

                    state._fsp--;


                    			current = this_ReactiveFallbackNode_4;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 6 :
                    // InternalQualityBtCppParser.g:518:3: this_ParallelNode_5= ruleParallelNode
                    {

                    			newCompositeNode(grammarAccess.getControlNodeAccess().getParallelNodeParserRuleCall_5());
                    		
                    pushFollow(FOLLOW_2);
                    this_ParallelNode_5=ruleParallelNode();

                    state._fsp--;


                    			current = this_ParallelNode_5;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 7 :
                    // InternalQualityBtCppParser.g:527:3: this_ParallelAllNode_6= ruleParallelAllNode
                    {

                    			newCompositeNode(grammarAccess.getControlNodeAccess().getParallelAllNodeParserRuleCall_6());
                    		
                    pushFollow(FOLLOW_2);
                    this_ParallelAllNode_6=ruleParallelAllNode();

                    state._fsp--;


                    			current = this_ParallelAllNode_6;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 8 :
                    // InternalQualityBtCppParser.g:536:3: this_IfThenElseNode_7= ruleIfThenElseNode
                    {

                    			newCompositeNode(grammarAccess.getControlNodeAccess().getIfThenElseNodeParserRuleCall_7());
                    		
                    pushFollow(FOLLOW_2);
                    this_IfThenElseNode_7=ruleIfThenElseNode();

                    state._fsp--;


                    			current = this_IfThenElseNode_7;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 9 :
                    // InternalQualityBtCppParser.g:545:3: this_SwitchNode_8= ruleSwitchNode
                    {

                    			newCompositeNode(grammarAccess.getControlNodeAccess().getSwitchNodeParserRuleCall_8());
                    		
                    pushFollow(FOLLOW_2);
                    this_SwitchNode_8=ruleSwitchNode();

                    state._fsp--;


                    			current = this_SwitchNode_8;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 10 :
                    // InternalQualityBtCppParser.g:554:3: this_WhileDoElseNode_9= ruleWhileDoElseNode
                    {

                    			newCompositeNode(grammarAccess.getControlNodeAccess().getWhileDoElseNodeParserRuleCall_9());
                    		
                    pushFollow(FOLLOW_2);
                    this_WhileDoElseNode_9=ruleWhileDoElseNode();

                    state._fsp--;


                    			current = this_WhileDoElseNode_9;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 11 :
                    // InternalQualityBtCppParser.g:563:3: this_ManualSelectorNode_10= ruleManualSelectorNode
                    {

                    			newCompositeNode(grammarAccess.getControlNodeAccess().getManualSelectorNodeParserRuleCall_10());
                    		
                    pushFollow(FOLLOW_2);
                    this_ManualSelectorNode_10=ruleManualSelectorNode();

                    state._fsp--;


                    			current = this_ManualSelectorNode_10;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleControlNode"


    // $ANTLR start "entryRuleDecoratorNode"
    // InternalQualityBtCppParser.g:575:1: entryRuleDecoratorNode returns [EObject current=null] : iv_ruleDecoratorNode= ruleDecoratorNode EOF ;
    public final EObject entryRuleDecoratorNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDecoratorNode = null;


        try {
            // InternalQualityBtCppParser.g:575:54: (iv_ruleDecoratorNode= ruleDecoratorNode EOF )
            // InternalQualityBtCppParser.g:576:2: iv_ruleDecoratorNode= ruleDecoratorNode EOF
            {
             newCompositeNode(grammarAccess.getDecoratorNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleDecoratorNode=ruleDecoratorNode();

            state._fsp--;

             current =iv_ruleDecoratorNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDecoratorNode"


    // $ANTLR start "ruleDecoratorNode"
    // InternalQualityBtCppParser.g:582:1: ruleDecoratorNode returns [EObject current=null] : (this_RepeatNode_0= ruleRepeatNode | this_ForceFailureNode_1= ruleForceFailureNode | this_ForceSuccessNode_2= ruleForceSuccessNode | this_RetryNode_3= ruleRetryNode | this_InverterNode_4= ruleInverterNode | this_TimeoutNode_5= ruleTimeoutNode | this_KeepRunningUntilFailureNode_6= ruleKeepRunningUntilFailureNode | this_DelayNode_7= ruleDelayNode | this_PreconditionNode_8= rulePreconditionNode | this_RunOnceNode_9= ruleRunOnceNode | this_LoopNode_10= ruleLoopNode | this_ConsumeQueueNode_11= ruleConsumeQueueNode | this_EntryUpdatedDecoratorNode_12= ruleEntryUpdatedDecoratorNode ) ;
    public final EObject ruleDecoratorNode() throws RecognitionException {
        EObject current = null;

        EObject this_RepeatNode_0 = null;

        EObject this_ForceFailureNode_1 = null;

        EObject this_ForceSuccessNode_2 = null;

        EObject this_RetryNode_3 = null;

        EObject this_InverterNode_4 = null;

        EObject this_TimeoutNode_5 = null;

        EObject this_KeepRunningUntilFailureNode_6 = null;

        EObject this_DelayNode_7 = null;

        EObject this_PreconditionNode_8 = null;

        EObject this_RunOnceNode_9 = null;

        EObject this_LoopNode_10 = null;

        EObject this_ConsumeQueueNode_11 = null;

        EObject this_EntryUpdatedDecoratorNode_12 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:588:2: ( (this_RepeatNode_0= ruleRepeatNode | this_ForceFailureNode_1= ruleForceFailureNode | this_ForceSuccessNode_2= ruleForceSuccessNode | this_RetryNode_3= ruleRetryNode | this_InverterNode_4= ruleInverterNode | this_TimeoutNode_5= ruleTimeoutNode | this_KeepRunningUntilFailureNode_6= ruleKeepRunningUntilFailureNode | this_DelayNode_7= ruleDelayNode | this_PreconditionNode_8= rulePreconditionNode | this_RunOnceNode_9= ruleRunOnceNode | this_LoopNode_10= ruleLoopNode | this_ConsumeQueueNode_11= ruleConsumeQueueNode | this_EntryUpdatedDecoratorNode_12= ruleEntryUpdatedDecoratorNode ) )
            // InternalQualityBtCppParser.g:589:2: (this_RepeatNode_0= ruleRepeatNode | this_ForceFailureNode_1= ruleForceFailureNode | this_ForceSuccessNode_2= ruleForceSuccessNode | this_RetryNode_3= ruleRetryNode | this_InverterNode_4= ruleInverterNode | this_TimeoutNode_5= ruleTimeoutNode | this_KeepRunningUntilFailureNode_6= ruleKeepRunningUntilFailureNode | this_DelayNode_7= ruleDelayNode | this_PreconditionNode_8= rulePreconditionNode | this_RunOnceNode_9= ruleRunOnceNode | this_LoopNode_10= ruleLoopNode | this_ConsumeQueueNode_11= ruleConsumeQueueNode | this_EntryUpdatedDecoratorNode_12= ruleEntryUpdatedDecoratorNode )
            {
            // InternalQualityBtCppParser.g:589:2: (this_RepeatNode_0= ruleRepeatNode | this_ForceFailureNode_1= ruleForceFailureNode | this_ForceSuccessNode_2= ruleForceSuccessNode | this_RetryNode_3= ruleRetryNode | this_InverterNode_4= ruleInverterNode | this_TimeoutNode_5= ruleTimeoutNode | this_KeepRunningUntilFailureNode_6= ruleKeepRunningUntilFailureNode | this_DelayNode_7= ruleDelayNode | this_PreconditionNode_8= rulePreconditionNode | this_RunOnceNode_9= ruleRunOnceNode | this_LoopNode_10= ruleLoopNode | this_ConsumeQueueNode_11= ruleConsumeQueueNode | this_EntryUpdatedDecoratorNode_12= ruleEntryUpdatedDecoratorNode )
            int alt9=13;
            switch ( input.LA(1) ) {
            case Repeat:
                {
                alt9=1;
                }
                break;
            case ForceFailure:
                {
                alt9=2;
                }
                break;
            case ForceSuccess:
                {
                alt9=3;
                }
                break;
            case Retry:
                {
                alt9=4;
                }
                break;
            case Inverter:
                {
                alt9=5;
                }
                break;
            case Timeout:
                {
                alt9=6;
                }
                break;
            case KeepRunningUntilFailure:
                {
                alt9=7;
                }
                break;
            case Delay:
                {
                alt9=8;
                }
                break;
            case Precondition:
                {
                alt9=9;
                }
                break;
            case RunOnce:
                {
                alt9=10;
                }
                break;
            case Loop:
                {
                alt9=11;
                }
                break;
            case ConsumeQueue:
                {
                alt9=12;
                }
                break;
            case EntryUpdatedDecorator:
                {
                alt9=13;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 9, 0, input);

                throw nvae;
            }

            switch (alt9) {
                case 1 :
                    // InternalQualityBtCppParser.g:590:3: this_RepeatNode_0= ruleRepeatNode
                    {

                    			newCompositeNode(grammarAccess.getDecoratorNodeAccess().getRepeatNodeParserRuleCall_0());
                    		
                    pushFollow(FOLLOW_2);
                    this_RepeatNode_0=ruleRepeatNode();

                    state._fsp--;


                    			current = this_RepeatNode_0;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 2 :
                    // InternalQualityBtCppParser.g:599:3: this_ForceFailureNode_1= ruleForceFailureNode
                    {

                    			newCompositeNode(grammarAccess.getDecoratorNodeAccess().getForceFailureNodeParserRuleCall_1());
                    		
                    pushFollow(FOLLOW_2);
                    this_ForceFailureNode_1=ruleForceFailureNode();

                    state._fsp--;


                    			current = this_ForceFailureNode_1;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 3 :
                    // InternalQualityBtCppParser.g:608:3: this_ForceSuccessNode_2= ruleForceSuccessNode
                    {

                    			newCompositeNode(grammarAccess.getDecoratorNodeAccess().getForceSuccessNodeParserRuleCall_2());
                    		
                    pushFollow(FOLLOW_2);
                    this_ForceSuccessNode_2=ruleForceSuccessNode();

                    state._fsp--;


                    			current = this_ForceSuccessNode_2;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 4 :
                    // InternalQualityBtCppParser.g:617:3: this_RetryNode_3= ruleRetryNode
                    {

                    			newCompositeNode(grammarAccess.getDecoratorNodeAccess().getRetryNodeParserRuleCall_3());
                    		
                    pushFollow(FOLLOW_2);
                    this_RetryNode_3=ruleRetryNode();

                    state._fsp--;


                    			current = this_RetryNode_3;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 5 :
                    // InternalQualityBtCppParser.g:626:3: this_InverterNode_4= ruleInverterNode
                    {

                    			newCompositeNode(grammarAccess.getDecoratorNodeAccess().getInverterNodeParserRuleCall_4());
                    		
                    pushFollow(FOLLOW_2);
                    this_InverterNode_4=ruleInverterNode();

                    state._fsp--;


                    			current = this_InverterNode_4;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 6 :
                    // InternalQualityBtCppParser.g:635:3: this_TimeoutNode_5= ruleTimeoutNode
                    {

                    			newCompositeNode(grammarAccess.getDecoratorNodeAccess().getTimeoutNodeParserRuleCall_5());
                    		
                    pushFollow(FOLLOW_2);
                    this_TimeoutNode_5=ruleTimeoutNode();

                    state._fsp--;


                    			current = this_TimeoutNode_5;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 7 :
                    // InternalQualityBtCppParser.g:644:3: this_KeepRunningUntilFailureNode_6= ruleKeepRunningUntilFailureNode
                    {

                    			newCompositeNode(grammarAccess.getDecoratorNodeAccess().getKeepRunningUntilFailureNodeParserRuleCall_6());
                    		
                    pushFollow(FOLLOW_2);
                    this_KeepRunningUntilFailureNode_6=ruleKeepRunningUntilFailureNode();

                    state._fsp--;


                    			current = this_KeepRunningUntilFailureNode_6;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 8 :
                    // InternalQualityBtCppParser.g:653:3: this_DelayNode_7= ruleDelayNode
                    {

                    			newCompositeNode(grammarAccess.getDecoratorNodeAccess().getDelayNodeParserRuleCall_7());
                    		
                    pushFollow(FOLLOW_2);
                    this_DelayNode_7=ruleDelayNode();

                    state._fsp--;


                    			current = this_DelayNode_7;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 9 :
                    // InternalQualityBtCppParser.g:662:3: this_PreconditionNode_8= rulePreconditionNode
                    {

                    			newCompositeNode(grammarAccess.getDecoratorNodeAccess().getPreconditionNodeParserRuleCall_8());
                    		
                    pushFollow(FOLLOW_2);
                    this_PreconditionNode_8=rulePreconditionNode();

                    state._fsp--;


                    			current = this_PreconditionNode_8;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 10 :
                    // InternalQualityBtCppParser.g:671:3: this_RunOnceNode_9= ruleRunOnceNode
                    {

                    			newCompositeNode(grammarAccess.getDecoratorNodeAccess().getRunOnceNodeParserRuleCall_9());
                    		
                    pushFollow(FOLLOW_2);
                    this_RunOnceNode_9=ruleRunOnceNode();

                    state._fsp--;


                    			current = this_RunOnceNode_9;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 11 :
                    // InternalQualityBtCppParser.g:680:3: this_LoopNode_10= ruleLoopNode
                    {

                    			newCompositeNode(grammarAccess.getDecoratorNodeAccess().getLoopNodeParserRuleCall_10());
                    		
                    pushFollow(FOLLOW_2);
                    this_LoopNode_10=ruleLoopNode();

                    state._fsp--;


                    			current = this_LoopNode_10;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 12 :
                    // InternalQualityBtCppParser.g:689:3: this_ConsumeQueueNode_11= ruleConsumeQueueNode
                    {

                    			newCompositeNode(grammarAccess.getDecoratorNodeAccess().getConsumeQueueNodeParserRuleCall_11());
                    		
                    pushFollow(FOLLOW_2);
                    this_ConsumeQueueNode_11=ruleConsumeQueueNode();

                    state._fsp--;


                    			current = this_ConsumeQueueNode_11;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 13 :
                    // InternalQualityBtCppParser.g:698:3: this_EntryUpdatedDecoratorNode_12= ruleEntryUpdatedDecoratorNode
                    {

                    			newCompositeNode(grammarAccess.getDecoratorNodeAccess().getEntryUpdatedDecoratorNodeParserRuleCall_12());
                    		
                    pushFollow(FOLLOW_2);
                    this_EntryUpdatedDecoratorNode_12=ruleEntryUpdatedDecoratorNode();

                    state._fsp--;


                    			current = this_EntryUpdatedDecoratorNode_12;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDecoratorNode"


    // $ANTLR start "entryRuleBehaviorTree"
    // InternalQualityBtCppParser.g:710:1: entryRuleBehaviorTree returns [EObject current=null] : iv_ruleBehaviorTree= ruleBehaviorTree EOF ;
    public final EObject entryRuleBehaviorTree() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBehaviorTree = null;


        try {
            // InternalQualityBtCppParser.g:710:53: (iv_ruleBehaviorTree= ruleBehaviorTree EOF )
            // InternalQualityBtCppParser.g:711:2: iv_ruleBehaviorTree= ruleBehaviorTree EOF
            {
             newCompositeNode(grammarAccess.getBehaviorTreeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleBehaviorTree=ruleBehaviorTree();

            state._fsp--;

             current =iv_ruleBehaviorTree; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBehaviorTree"


    // $ANTLR start "ruleBehaviorTree"
    // InternalQualityBtCppParser.g:717:1: ruleBehaviorTree returns [EObject current=null] : (otherlv_0= BehaviorTree otherlv_1= ID otherlv_2= EqualsSign ( (lv_ID_3_0= ruleEString ) ) this_BEGIN_4= RULE_BEGIN ( (lv_node_5_0= ruleTreeNode ) ) this_END_6= RULE_END ) ;
    public final EObject ruleBehaviorTree() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token this_BEGIN_4=null;
        Token this_END_6=null;
        AntlrDatatypeRuleToken lv_ID_3_0 = null;

        EObject lv_node_5_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:723:2: ( (otherlv_0= BehaviorTree otherlv_1= ID otherlv_2= EqualsSign ( (lv_ID_3_0= ruleEString ) ) this_BEGIN_4= RULE_BEGIN ( (lv_node_5_0= ruleTreeNode ) ) this_END_6= RULE_END ) )
            // InternalQualityBtCppParser.g:724:2: (otherlv_0= BehaviorTree otherlv_1= ID otherlv_2= EqualsSign ( (lv_ID_3_0= ruleEString ) ) this_BEGIN_4= RULE_BEGIN ( (lv_node_5_0= ruleTreeNode ) ) this_END_6= RULE_END )
            {
            // InternalQualityBtCppParser.g:724:2: (otherlv_0= BehaviorTree otherlv_1= ID otherlv_2= EqualsSign ( (lv_ID_3_0= ruleEString ) ) this_BEGIN_4= RULE_BEGIN ( (lv_node_5_0= ruleTreeNode ) ) this_END_6= RULE_END )
            // InternalQualityBtCppParser.g:725:3: otherlv_0= BehaviorTree otherlv_1= ID otherlv_2= EqualsSign ( (lv_ID_3_0= ruleEString ) ) this_BEGIN_4= RULE_BEGIN ( (lv_node_5_0= ruleTreeNode ) ) this_END_6= RULE_END
            {
            otherlv_0=(Token)match(input,BehaviorTree,FOLLOW_7); 

            			newLeafNode(otherlv_0, grammarAccess.getBehaviorTreeAccess().getBehaviorTreeKeyword_0());
            		
            otherlv_1=(Token)match(input,ID,FOLLOW_8); 

            			newLeafNode(otherlv_1, grammarAccess.getBehaviorTreeAccess().getIDKeyword_1());
            		
            otherlv_2=(Token)match(input,EqualsSign,FOLLOW_3); 

            			newLeafNode(otherlv_2, grammarAccess.getBehaviorTreeAccess().getEqualsSignKeyword_2());
            		
            // InternalQualityBtCppParser.g:737:3: ( (lv_ID_3_0= ruleEString ) )
            // InternalQualityBtCppParser.g:738:4: (lv_ID_3_0= ruleEString )
            {
            // InternalQualityBtCppParser.g:738:4: (lv_ID_3_0= ruleEString )
            // InternalQualityBtCppParser.g:739:5: lv_ID_3_0= ruleEString
            {

            					newCompositeNode(grammarAccess.getBehaviorTreeAccess().getIDEStringParserRuleCall_3_0());
            				
            pushFollow(FOLLOW_4);
            lv_ID_3_0=ruleEString();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getBehaviorTreeRule());
            					}
            					set(
            						current,
            						"ID",
            						lv_ID_3_0,
            						"org.xtext.btcpp.QualityBtCpp.EString");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            this_BEGIN_4=(Token)match(input,RULE_BEGIN,FOLLOW_9); 

            			newLeafNode(this_BEGIN_4, grammarAccess.getBehaviorTreeAccess().getBEGINTerminalRuleCall_4());
            		
            // InternalQualityBtCppParser.g:760:3: ( (lv_node_5_0= ruleTreeNode ) )
            // InternalQualityBtCppParser.g:761:4: (lv_node_5_0= ruleTreeNode )
            {
            // InternalQualityBtCppParser.g:761:4: (lv_node_5_0= ruleTreeNode )
            // InternalQualityBtCppParser.g:762:5: lv_node_5_0= ruleTreeNode
            {

            					newCompositeNode(grammarAccess.getBehaviorTreeAccess().getNodeTreeNodeParserRuleCall_5_0());
            				
            pushFollow(FOLLOW_10);
            lv_node_5_0=ruleTreeNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getBehaviorTreeRule());
            					}
            					set(
            						current,
            						"node",
            						lv_node_5_0,
            						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            this_END_6=(Token)match(input,RULE_END,FOLLOW_2); 

            			newLeafNode(this_END_6, grammarAccess.getBehaviorTreeAccess().getENDTerminalRuleCall_6());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBehaviorTree"


    // $ANTLR start "entryRuleEString"
    // InternalQualityBtCppParser.g:787:1: entryRuleEString returns [String current=null] : iv_ruleEString= ruleEString EOF ;
    public final String entryRuleEString() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleEString = null;


        try {
            // InternalQualityBtCppParser.g:787:47: (iv_ruleEString= ruleEString EOF )
            // InternalQualityBtCppParser.g:788:2: iv_ruleEString= ruleEString EOF
            {
             newCompositeNode(grammarAccess.getEStringRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleEString=ruleEString();

            state._fsp--;

             current =iv_ruleEString.getText(); 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEString"


    // $ANTLR start "ruleEString"
    // InternalQualityBtCppParser.g:794:1: ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_STRING_0= RULE_STRING | this_ID_1= RULE_ID ) ;
    public final AntlrDatatypeRuleToken ruleEString() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_STRING_0=null;
        Token this_ID_1=null;


        	enterRule();

        try {
            // InternalQualityBtCppParser.g:800:2: ( (this_STRING_0= RULE_STRING | this_ID_1= RULE_ID ) )
            // InternalQualityBtCppParser.g:801:2: (this_STRING_0= RULE_STRING | this_ID_1= RULE_ID )
            {
            // InternalQualityBtCppParser.g:801:2: (this_STRING_0= RULE_STRING | this_ID_1= RULE_ID )
            int alt10=2;
            int LA10_0 = input.LA(1);

            if ( (LA10_0==RULE_STRING) ) {
                alt10=1;
            }
            else if ( (LA10_0==RULE_ID) ) {
                alt10=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 10, 0, input);

                throw nvae;
            }
            switch (alt10) {
                case 1 :
                    // InternalQualityBtCppParser.g:802:3: this_STRING_0= RULE_STRING
                    {
                    this_STRING_0=(Token)match(input,RULE_STRING,FOLLOW_2); 

                    			current.merge(this_STRING_0);
                    		

                    			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
                    		

                    }
                    break;
                case 2 :
                    // InternalQualityBtCppParser.g:810:3: this_ID_1= RULE_ID
                    {
                    this_ID_1=(Token)match(input,RULE_ID,FOLLOW_2); 

                    			current.merge(this_ID_1);
                    		

                    			newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1());
                    		

                    }
                    break;

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEString"


    // $ANTLR start "entryRuleParameter"
    // InternalQualityBtCppParser.g:821:1: entryRuleParameter returns [EObject current=null] : iv_ruleParameter= ruleParameter EOF ;
    public final EObject entryRuleParameter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParameter = null;


        try {
            // InternalQualityBtCppParser.g:821:50: (iv_ruleParameter= ruleParameter EOF )
            // InternalQualityBtCppParser.g:822:2: iv_ruleParameter= ruleParameter EOF
            {
             newCompositeNode(grammarAccess.getParameterRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleParameter=ruleParameter();

            state._fsp--;

             current =iv_ruleParameter; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleParameter"


    // $ANTLR start "ruleParameter"
    // InternalQualityBtCppParser.g:828:1: ruleParameter returns [EObject current=null] : ( ( (lv_key_0_0= ruleEString ) ) otherlv_1= EqualsSign ( (lv_value_2_0= ruleEString ) ) ) ;
    public final EObject ruleParameter() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        AntlrDatatypeRuleToken lv_key_0_0 = null;

        AntlrDatatypeRuleToken lv_value_2_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:834:2: ( ( ( (lv_key_0_0= ruleEString ) ) otherlv_1= EqualsSign ( (lv_value_2_0= ruleEString ) ) ) )
            // InternalQualityBtCppParser.g:835:2: ( ( (lv_key_0_0= ruleEString ) ) otherlv_1= EqualsSign ( (lv_value_2_0= ruleEString ) ) )
            {
            // InternalQualityBtCppParser.g:835:2: ( ( (lv_key_0_0= ruleEString ) ) otherlv_1= EqualsSign ( (lv_value_2_0= ruleEString ) ) )
            // InternalQualityBtCppParser.g:836:3: ( (lv_key_0_0= ruleEString ) ) otherlv_1= EqualsSign ( (lv_value_2_0= ruleEString ) )
            {
            // InternalQualityBtCppParser.g:836:3: ( (lv_key_0_0= ruleEString ) )
            // InternalQualityBtCppParser.g:837:4: (lv_key_0_0= ruleEString )
            {
            // InternalQualityBtCppParser.g:837:4: (lv_key_0_0= ruleEString )
            // InternalQualityBtCppParser.g:838:5: lv_key_0_0= ruleEString
            {

            					newCompositeNode(grammarAccess.getParameterAccess().getKeyEStringParserRuleCall_0_0());
            				
            pushFollow(FOLLOW_8);
            lv_key_0_0=ruleEString();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getParameterRule());
            					}
            					set(
            						current,
            						"key",
            						lv_key_0_0,
            						"org.xtext.btcpp.QualityBtCpp.EString");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            otherlv_1=(Token)match(input,EqualsSign,FOLLOW_3); 

            			newLeafNode(otherlv_1, grammarAccess.getParameterAccess().getEqualsSignKeyword_1());
            		
            // InternalQualityBtCppParser.g:859:3: ( (lv_value_2_0= ruleEString ) )
            // InternalQualityBtCppParser.g:860:4: (lv_value_2_0= ruleEString )
            {
            // InternalQualityBtCppParser.g:860:4: (lv_value_2_0= ruleEString )
            // InternalQualityBtCppParser.g:861:5: lv_value_2_0= ruleEString
            {

            					newCompositeNode(grammarAccess.getParameterAccess().getValueEStringParserRuleCall_2_0());
            				
            pushFollow(FOLLOW_2);
            lv_value_2_0=ruleEString();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getParameterRule());
            					}
            					set(
            						current,
            						"value",
            						lv_value_2_0,
            						"org.xtext.btcpp.QualityBtCpp.EString");
            					afterParserOrEnumRuleCall();
            				

            }


            }


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleParameter"


    // $ANTLR start "entryRuleQuality"
    // InternalQualityBtCppParser.g:882:1: entryRuleQuality returns [EObject current=null] : iv_ruleQuality= ruleQuality EOF ;
    public final EObject entryRuleQuality() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleQuality = null;


        try {
            // InternalQualityBtCppParser.g:882:48: (iv_ruleQuality= ruleQuality EOF )
            // InternalQualityBtCppParser.g:883:2: iv_ruleQuality= ruleQuality EOF
            {
             newCompositeNode(grammarAccess.getQualityRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleQuality=ruleQuality();

            state._fsp--;

             current =iv_ruleQuality; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQuality"


    // $ANTLR start "ruleQuality"
    // InternalQualityBtCppParser.g:889:1: ruleQuality returns [EObject current=null] : ( () otherlv_1= Quality otherlv_2= EqualsSign ( (lv_ID_3_0= ruleEString ) ) (otherlv_4= LeftParenthesis ( (lv_qualityreq_5_0= ruleQualityRequirement ) ) (otherlv_6= Comma ( (lv_qualityreq_7_0= ruleQualityRequirement ) ) )* otherlv_8= RightParenthesis )? ) ;
    public final EObject ruleQuality() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        AntlrDatatypeRuleToken lv_ID_3_0 = null;

        EObject lv_qualityreq_5_0 = null;

        EObject lv_qualityreq_7_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:895:2: ( ( () otherlv_1= Quality otherlv_2= EqualsSign ( (lv_ID_3_0= ruleEString ) ) (otherlv_4= LeftParenthesis ( (lv_qualityreq_5_0= ruleQualityRequirement ) ) (otherlv_6= Comma ( (lv_qualityreq_7_0= ruleQualityRequirement ) ) )* otherlv_8= RightParenthesis )? ) )
            // InternalQualityBtCppParser.g:896:2: ( () otherlv_1= Quality otherlv_2= EqualsSign ( (lv_ID_3_0= ruleEString ) ) (otherlv_4= LeftParenthesis ( (lv_qualityreq_5_0= ruleQualityRequirement ) ) (otherlv_6= Comma ( (lv_qualityreq_7_0= ruleQualityRequirement ) ) )* otherlv_8= RightParenthesis )? )
            {
            // InternalQualityBtCppParser.g:896:2: ( () otherlv_1= Quality otherlv_2= EqualsSign ( (lv_ID_3_0= ruleEString ) ) (otherlv_4= LeftParenthesis ( (lv_qualityreq_5_0= ruleQualityRequirement ) ) (otherlv_6= Comma ( (lv_qualityreq_7_0= ruleQualityRequirement ) ) )* otherlv_8= RightParenthesis )? )
            // InternalQualityBtCppParser.g:897:3: () otherlv_1= Quality otherlv_2= EqualsSign ( (lv_ID_3_0= ruleEString ) ) (otherlv_4= LeftParenthesis ( (lv_qualityreq_5_0= ruleQualityRequirement ) ) (otherlv_6= Comma ( (lv_qualityreq_7_0= ruleQualityRequirement ) ) )* otherlv_8= RightParenthesis )?
            {
            // InternalQualityBtCppParser.g:897:3: ()
            // InternalQualityBtCppParser.g:898:4: 
            {

            				current = forceCreateModelElement(
            					grammarAccess.getQualityAccess().getQualityAction_0(),
            					current);
            			

            }

            otherlv_1=(Token)match(input,Quality,FOLLOW_8); 

            			newLeafNode(otherlv_1, grammarAccess.getQualityAccess().getQualityKeyword_1());
            		
            otherlv_2=(Token)match(input,EqualsSign,FOLLOW_3); 

            			newLeafNode(otherlv_2, grammarAccess.getQualityAccess().getEqualsSignKeyword_2());
            		
            // InternalQualityBtCppParser.g:912:3: ( (lv_ID_3_0= ruleEString ) )
            // InternalQualityBtCppParser.g:913:4: (lv_ID_3_0= ruleEString )
            {
            // InternalQualityBtCppParser.g:913:4: (lv_ID_3_0= ruleEString )
            // InternalQualityBtCppParser.g:914:5: lv_ID_3_0= ruleEString
            {

            					newCompositeNode(grammarAccess.getQualityAccess().getIDEStringParserRuleCall_3_0());
            				
            pushFollow(FOLLOW_11);
            lv_ID_3_0=ruleEString();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getQualityRule());
            					}
            					set(
            						current,
            						"ID",
            						lv_ID_3_0,
            						"org.xtext.btcpp.QualityBtCpp.EString");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            // InternalQualityBtCppParser.g:931:3: (otherlv_4= LeftParenthesis ( (lv_qualityreq_5_0= ruleQualityRequirement ) ) (otherlv_6= Comma ( (lv_qualityreq_7_0= ruleQualityRequirement ) ) )* otherlv_8= RightParenthesis )?
            int alt12=2;
            int LA12_0 = input.LA(1);

            if ( (LA12_0==LeftParenthesis) ) {
                int LA12_1 = input.LA(2);

                if ( (LA12_1==QualityReq) ) {
                    alt12=1;
                }
            }
            switch (alt12) {
                case 1 :
                    // InternalQualityBtCppParser.g:932:4: otherlv_4= LeftParenthesis ( (lv_qualityreq_5_0= ruleQualityRequirement ) ) (otherlv_6= Comma ( (lv_qualityreq_7_0= ruleQualityRequirement ) ) )* otherlv_8= RightParenthesis
                    {
                    otherlv_4=(Token)match(input,LeftParenthesis,FOLLOW_12); 

                    				newLeafNode(otherlv_4, grammarAccess.getQualityAccess().getLeftParenthesisKeyword_4_0());
                    			
                    // InternalQualityBtCppParser.g:936:4: ( (lv_qualityreq_5_0= ruleQualityRequirement ) )
                    // InternalQualityBtCppParser.g:937:5: (lv_qualityreq_5_0= ruleQualityRequirement )
                    {
                    // InternalQualityBtCppParser.g:937:5: (lv_qualityreq_5_0= ruleQualityRequirement )
                    // InternalQualityBtCppParser.g:938:6: lv_qualityreq_5_0= ruleQualityRequirement
                    {

                    						newCompositeNode(grammarAccess.getQualityAccess().getQualityreqQualityRequirementParserRuleCall_4_1_0());
                    					
                    pushFollow(FOLLOW_13);
                    lv_qualityreq_5_0=ruleQualityRequirement();

                    state._fsp--;


                    						if (current==null) {
                    							current = createModelElementForParent(grammarAccess.getQualityRule());
                    						}
                    						add(
                    							current,
                    							"qualityreq",
                    							lv_qualityreq_5_0,
                    							"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:955:4: (otherlv_6= Comma ( (lv_qualityreq_7_0= ruleQualityRequirement ) ) )*
                    loop11:
                    do {
                        int alt11=2;
                        int LA11_0 = input.LA(1);

                        if ( (LA11_0==Comma) ) {
                            alt11=1;
                        }


                        switch (alt11) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:956:5: otherlv_6= Comma ( (lv_qualityreq_7_0= ruleQualityRequirement ) )
                    	    {
                    	    otherlv_6=(Token)match(input,Comma,FOLLOW_12); 

                    	    					newLeafNode(otherlv_6, grammarAccess.getQualityAccess().getCommaKeyword_4_2_0());
                    	    				
                    	    // InternalQualityBtCppParser.g:960:5: ( (lv_qualityreq_7_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:961:6: (lv_qualityreq_7_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:961:6: (lv_qualityreq_7_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:962:7: lv_qualityreq_7_0= ruleQualityRequirement
                    	    {

                    	    							newCompositeNode(grammarAccess.getQualityAccess().getQualityreqQualityRequirementParserRuleCall_4_2_1_0());
                    	    						
                    	    pushFollow(FOLLOW_13);
                    	    lv_qualityreq_7_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    							if (current==null) {
                    	    								current = createModelElementForParent(grammarAccess.getQualityRule());
                    	    							}
                    	    							add(
                    	    								current,
                    	    								"qualityreq",
                    	    								lv_qualityreq_7_0,
                    	    								"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop11;
                        }
                    } while (true);

                    otherlv_8=(Token)match(input,RightParenthesis,FOLLOW_2); 

                    				newLeafNode(otherlv_8, grammarAccess.getQualityAccess().getRightParenthesisKeyword_4_3());
                    			

                    }
                    break;

            }


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQuality"


    // $ANTLR start "entryRuleQualityRequirement"
    // InternalQualityBtCppParser.g:989:1: entryRuleQualityRequirement returns [EObject current=null] : iv_ruleQualityRequirement= ruleQualityRequirement EOF ;
    public final EObject entryRuleQualityRequirement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleQualityRequirement = null;


        try {
            // InternalQualityBtCppParser.g:989:59: (iv_ruleQualityRequirement= ruleQualityRequirement EOF )
            // InternalQualityBtCppParser.g:990:2: iv_ruleQualityRequirement= ruleQualityRequirement EOF
            {
             newCompositeNode(grammarAccess.getQualityRequirementRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleQualityRequirement=ruleQualityRequirement();

            state._fsp--;

             current =iv_ruleQualityRequirement; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQualityRequirement"


    // $ANTLR start "ruleQualityRequirement"
    // InternalQualityBtCppParser.g:996:1: ruleQualityRequirement returns [EObject current=null] : ( () otherlv_1= QualityReq otherlv_2= ID otherlv_3= EqualsSign ( (lv_ID_4_0= ruleEString ) ) otherlv_5= Description otherlv_6= EqualsSign ( (lv_description_7_0= ruleEString ) ) ) ;
    public final EObject ruleQualityRequirement() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        AntlrDatatypeRuleToken lv_ID_4_0 = null;

        AntlrDatatypeRuleToken lv_description_7_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:1002:2: ( ( () otherlv_1= QualityReq otherlv_2= ID otherlv_3= EqualsSign ( (lv_ID_4_0= ruleEString ) ) otherlv_5= Description otherlv_6= EqualsSign ( (lv_description_7_0= ruleEString ) ) ) )
            // InternalQualityBtCppParser.g:1003:2: ( () otherlv_1= QualityReq otherlv_2= ID otherlv_3= EqualsSign ( (lv_ID_4_0= ruleEString ) ) otherlv_5= Description otherlv_6= EqualsSign ( (lv_description_7_0= ruleEString ) ) )
            {
            // InternalQualityBtCppParser.g:1003:2: ( () otherlv_1= QualityReq otherlv_2= ID otherlv_3= EqualsSign ( (lv_ID_4_0= ruleEString ) ) otherlv_5= Description otherlv_6= EqualsSign ( (lv_description_7_0= ruleEString ) ) )
            // InternalQualityBtCppParser.g:1004:3: () otherlv_1= QualityReq otherlv_2= ID otherlv_3= EqualsSign ( (lv_ID_4_0= ruleEString ) ) otherlv_5= Description otherlv_6= EqualsSign ( (lv_description_7_0= ruleEString ) )
            {
            // InternalQualityBtCppParser.g:1004:3: ()
            // InternalQualityBtCppParser.g:1005:4: 
            {

            				current = forceCreateModelElement(
            					grammarAccess.getQualityRequirementAccess().getQualityRequirementAction_0(),
            					current);
            			

            }

            otherlv_1=(Token)match(input,QualityReq,FOLLOW_7); 

            			newLeafNode(otherlv_1, grammarAccess.getQualityRequirementAccess().getQualityReqKeyword_1());
            		
            otherlv_2=(Token)match(input,ID,FOLLOW_8); 

            			newLeafNode(otherlv_2, grammarAccess.getQualityRequirementAccess().getIDKeyword_2());
            		
            otherlv_3=(Token)match(input,EqualsSign,FOLLOW_3); 

            			newLeafNode(otherlv_3, grammarAccess.getQualityRequirementAccess().getEqualsSignKeyword_3());
            		
            // InternalQualityBtCppParser.g:1023:3: ( (lv_ID_4_0= ruleEString ) )
            // InternalQualityBtCppParser.g:1024:4: (lv_ID_4_0= ruleEString )
            {
            // InternalQualityBtCppParser.g:1024:4: (lv_ID_4_0= ruleEString )
            // InternalQualityBtCppParser.g:1025:5: lv_ID_4_0= ruleEString
            {

            					newCompositeNode(grammarAccess.getQualityRequirementAccess().getIDEStringParserRuleCall_4_0());
            				
            pushFollow(FOLLOW_14);
            lv_ID_4_0=ruleEString();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getQualityRequirementRule());
            					}
            					set(
            						current,
            						"ID",
            						lv_ID_4_0,
            						"org.xtext.btcpp.QualityBtCpp.EString");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            otherlv_5=(Token)match(input,Description,FOLLOW_8); 

            			newLeafNode(otherlv_5, grammarAccess.getQualityRequirementAccess().getDescriptionKeyword_5());
            		
            otherlv_6=(Token)match(input,EqualsSign,FOLLOW_3); 

            			newLeafNode(otherlv_6, grammarAccess.getQualityRequirementAccess().getEqualsSignKeyword_6());
            		
            // InternalQualityBtCppParser.g:1050:3: ( (lv_description_7_0= ruleEString ) )
            // InternalQualityBtCppParser.g:1051:4: (lv_description_7_0= ruleEString )
            {
            // InternalQualityBtCppParser.g:1051:4: (lv_description_7_0= ruleEString )
            // InternalQualityBtCppParser.g:1052:5: lv_description_7_0= ruleEString
            {

            					newCompositeNode(grammarAccess.getQualityRequirementAccess().getDescriptionEStringParserRuleCall_7_0());
            				
            pushFollow(FOLLOW_2);
            lv_description_7_0=ruleEString();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getQualityRequirementRule());
            					}
            					set(
            						current,
            						"description",
            						lv_description_7_0,
            						"org.xtext.btcpp.QualityBtCpp.EString");
            					afterParserOrEnumRuleCall();
            				

            }


            }


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQualityRequirement"


    // $ANTLR start "entryRuleFallbackNode"
    // InternalQualityBtCppParser.g:1073:1: entryRuleFallbackNode returns [EObject current=null] : iv_ruleFallbackNode= ruleFallbackNode EOF ;
    public final EObject entryRuleFallbackNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFallbackNode = null;


        try {
            // InternalQualityBtCppParser.g:1073:53: (iv_ruleFallbackNode= ruleFallbackNode EOF )
            // InternalQualityBtCppParser.g:1074:2: iv_ruleFallbackNode= ruleFallbackNode EOF
            {
             newCompositeNode(grammarAccess.getFallbackNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleFallbackNode=ruleFallbackNode();

            state._fsp--;

             current =iv_ruleFallbackNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFallbackNode"


    // $ANTLR start "ruleFallbackNode"
    // InternalQualityBtCppParser.g:1080:1: ruleFallbackNode returns [EObject current=null] : (otherlv_0= QuestionMark ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_19= RULE_BEGIN ( (lv_child_20_0= ruleTreeNode ) ) ( (lv_child_21_0= ruleTreeNode ) )* this_END_22= RULE_END ) ;
    public final EObject ruleFallbackNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token this_BEGIN_19=null;
        Token this_END_22=null;
        AntlrDatatypeRuleToken lv_name_5_0 = null;

        EObject lv_parameters_7_0 = null;

        EObject lv_parameters_9_0 = null;

        EObject lv_satisfices_11_0 = null;

        EObject lv_satisfices_13_0 = null;

        EObject lv_satisfies_15_0 = null;

        EObject lv_satisfies_17_0 = null;

        EObject lv_child_20_0 = null;

        EObject lv_child_21_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:1086:2: ( (otherlv_0= QuestionMark ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_19= RULE_BEGIN ( (lv_child_20_0= ruleTreeNode ) ) ( (lv_child_21_0= ruleTreeNode ) )* this_END_22= RULE_END ) )
            // InternalQualityBtCppParser.g:1087:2: (otherlv_0= QuestionMark ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_19= RULE_BEGIN ( (lv_child_20_0= ruleTreeNode ) ) ( (lv_child_21_0= ruleTreeNode ) )* this_END_22= RULE_END )
            {
            // InternalQualityBtCppParser.g:1087:2: (otherlv_0= QuestionMark ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_19= RULE_BEGIN ( (lv_child_20_0= ruleTreeNode ) ) ( (lv_child_21_0= ruleTreeNode ) )* this_END_22= RULE_END )
            // InternalQualityBtCppParser.g:1088:3: otherlv_0= QuestionMark ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_19= RULE_BEGIN ( (lv_child_20_0= ruleTreeNode ) ) ( (lv_child_21_0= ruleTreeNode ) )* this_END_22= RULE_END
            {
            otherlv_0=(Token)match(input,QuestionMark,FOLLOW_15); 

            			newLeafNode(otherlv_0, grammarAccess.getFallbackNodeAccess().getQuestionMarkKeyword_0());
            		
            // InternalQualityBtCppParser.g:1092:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt17=2;
            int LA17_0 = input.LA(1);

            if ( ((LA17_0>=Parameters && LA17_0<=Satisfies)||LA17_0==Name||(LA17_0>=LeftParenthesis && LA17_0<=RightParenthesis)) ) {
                alt17=1;
            }
            switch (alt17) {
                case 1 :
                    // InternalQualityBtCppParser.g:1093:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:1093:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:1094:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1());
                    				
                    // InternalQualityBtCppParser.g:1097:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:1098:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:1098:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+
                    int cnt16=0;
                    loop16:
                    do {
                        int alt16=7;
                        int LA16_0 = input.LA(1);

                        if ( LA16_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1(), 0) ) {
                            alt16=1;
                        }
                        else if ( LA16_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1(), 1) ) {
                            alt16=2;
                        }
                        else if ( LA16_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1(), 2) ) {
                            alt16=3;
                        }
                        else if ( LA16_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1(), 3) ) {
                            alt16=4;
                        }
                        else if ( LA16_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1(), 4) ) {
                            alt16=5;
                        }
                        else if ( LA16_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1(), 5) ) {
                            alt16=6;
                        }


                        switch (alt16) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:1099:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:1099:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:1100:5: {...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleFallbackNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:1100:109: ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:1101:6: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:1104:9: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:1104:10: {...}? => (otherlv_2= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleFallbackNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:1104:19: (otherlv_2= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:1104:20: otherlv_2= LeftParenthesis
                    	    {
                    	    otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_2, grammarAccess.getFallbackNodeAccess().getLeftParenthesisKeyword_1_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:1114:4: ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:1114:4: ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:1115:5: {...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleFallbackNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:1115:109: ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:1116:6: ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:1119:9: ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:1119:10: {...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleFallbackNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:1119:19: (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:1119:20: otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) )
                    	    {
                    	    otherlv_3=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getFallbackNodeAccess().getNameKeyword_1_1_0());
                    	    								
                    	    otherlv_4=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getFallbackNodeAccess().getEqualsSignKeyword_1_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:1127:9: ( (lv_name_5_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:1128:10: (lv_name_5_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:1128:10: (lv_name_5_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:1129:11: lv_name_5_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getFallbackNodeAccess().getNameEStringParserRuleCall_1_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_15);
                    	    lv_name_5_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getFallbackNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_5_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:1152:4: ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:1152:4: ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:1153:5: {...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleFallbackNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:1153:109: ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:1154:6: ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:1157:9: ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:1157:10: {...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleFallbackNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:1157:19: (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:1157:20: otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_6=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_6, grammarAccess.getFallbackNodeAccess().getParametersKeyword_1_2_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:1161:9: ( (lv_parameters_7_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:1162:10: (lv_parameters_7_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:1162:10: (lv_parameters_7_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:1163:11: lv_parameters_7_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getFallbackNodeAccess().getParametersParameterParserRuleCall_1_2_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_parameters_7_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getFallbackNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_7_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:1180:9: (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )*
                    	    loop13:
                    	    do {
                    	        int alt13=2;
                    	        int LA13_0 = input.LA(1);

                    	        if ( (LA13_0==Comma) ) {
                    	            alt13=1;
                    	        }


                    	        switch (alt13) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:1181:10: otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_8=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_8, grammarAccess.getFallbackNodeAccess().getCommaKeyword_1_2_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:1185:10: ( (lv_parameters_9_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:1186:11: (lv_parameters_9_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:1186:11: (lv_parameters_9_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:1187:12: lv_parameters_9_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getFallbackNodeAccess().getParametersParameterParserRuleCall_1_2_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_parameters_9_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getFallbackNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_9_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop13;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:1211:4: ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:1211:4: ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:1212:5: {...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleFallbackNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:1212:109: ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:1213:6: ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:1216:9: ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:1216:10: {...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleFallbackNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:1216:19: (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:1216:20: otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_10=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_10, grammarAccess.getFallbackNodeAccess().getSatisficesKeyword_1_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:1220:9: ( (lv_satisfices_11_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:1221:10: (lv_satisfices_11_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:1221:10: (lv_satisfices_11_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:1222:11: lv_satisfices_11_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getFallbackNodeAccess().getSatisficesQualityParserRuleCall_1_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfices_11_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getFallbackNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_11_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:1239:9: (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )*
                    	    loop14:
                    	    do {
                    	        int alt14=2;
                    	        int LA14_0 = input.LA(1);

                    	        if ( (LA14_0==Comma) ) {
                    	            alt14=1;
                    	        }


                    	        switch (alt14) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:1240:10: otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_12=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_12, grammarAccess.getFallbackNodeAccess().getCommaKeyword_1_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:1244:10: ( (lv_satisfices_13_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:1245:11: (lv_satisfices_13_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:1245:11: (lv_satisfices_13_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:1246:12: lv_satisfices_13_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getFallbackNodeAccess().getSatisficesQualityParserRuleCall_1_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfices_13_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getFallbackNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_13_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop14;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:1270:4: ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:1270:4: ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:1271:5: {...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleFallbackNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:1271:109: ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:1272:6: ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:1275:9: ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:1275:10: {...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleFallbackNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:1275:19: (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:1275:20: otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_14=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_14, grammarAccess.getFallbackNodeAccess().getSatisfiesKeyword_1_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:1279:9: ( (lv_satisfies_15_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:1280:10: (lv_satisfies_15_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:1280:10: (lv_satisfies_15_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:1281:11: lv_satisfies_15_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getFallbackNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfies_15_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getFallbackNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_15_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:1298:9: (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )*
                    	    loop15:
                    	    do {
                    	        int alt15=2;
                    	        int LA15_0 = input.LA(1);

                    	        if ( (LA15_0==Comma) ) {
                    	            alt15=1;
                    	        }


                    	        switch (alt15) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:1299:10: otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_16=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_16, grammarAccess.getFallbackNodeAccess().getCommaKeyword_1_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:1303:10: ( (lv_satisfies_17_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:1304:11: (lv_satisfies_17_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:1304:11: (lv_satisfies_17_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:1305:12: lv_satisfies_17_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getFallbackNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfies_17_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getFallbackNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_17_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop15;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:1329:4: ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:1329:4: ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:1330:5: {...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleFallbackNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:1330:109: ( ({...}? => (otherlv_18= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:1331:6: ({...}? => (otherlv_18= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:1334:9: ({...}? => (otherlv_18= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:1334:10: {...}? => (otherlv_18= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleFallbackNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:1334:19: (otherlv_18= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:1334:20: otherlv_18= RightParenthesis
                    	    {
                    	    otherlv_18=(Token)match(input,RightParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_18, grammarAccess.getFallbackNodeAccess().getRightParenthesisKeyword_1_5());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt16 >= 1 ) break loop16;
                                EarlyExitException eee =
                                    new EarlyExitException(16, input);
                                throw eee;
                        }
                        cnt16++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1()) ) {
                        throw new FailedPredicateException(input, "ruleFallbackNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getFallbackNodeAccess().getUnorderedGroup_1());
                    				

                    }
                    break;

            }

            this_BEGIN_19=(Token)match(input,RULE_BEGIN,FOLLOW_9); 

            			newLeafNode(this_BEGIN_19, grammarAccess.getFallbackNodeAccess().getBEGINTerminalRuleCall_2());
            		
            // InternalQualityBtCppParser.g:1356:3: ( (lv_child_20_0= ruleTreeNode ) )
            // InternalQualityBtCppParser.g:1357:4: (lv_child_20_0= ruleTreeNode )
            {
            // InternalQualityBtCppParser.g:1357:4: (lv_child_20_0= ruleTreeNode )
            // InternalQualityBtCppParser.g:1358:5: lv_child_20_0= ruleTreeNode
            {

            					newCompositeNode(grammarAccess.getFallbackNodeAccess().getChildTreeNodeParserRuleCall_3_0());
            				
            pushFollow(FOLLOW_18);
            lv_child_20_0=ruleTreeNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getFallbackNodeRule());
            					}
            					add(
            						current,
            						"child",
            						lv_child_20_0,
            						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            // InternalQualityBtCppParser.g:1375:3: ( (lv_child_21_0= ruleTreeNode ) )*
            loop18:
            do {
                int alt18=2;
                int LA18_0 = input.LA(1);

                if ( ((LA18_0>=KeepRunningUntilFailure && LA18_0<=SetBlackboard)||(LA18_0>=ConsumeQueue && LA18_0<=ScriptAction)||LA18_0==WhileDoElse||(LA18_0>=CoroAction && LA18_0<=IfThenElse)||LA18_0==Inverter||(LA18_0>=RunOnce && LA18_0<=Sleep)||LA18_0==Loop||LA18_0==Test||(LA18_0>=M && LA18_0<=HyphenMinusGreaterThanSign)||(LA18_0>=R && LA18_0<=VerticalLineVerticalLine)||LA18_0==QuestionMark) ) {
                    alt18=1;
                }


                switch (alt18) {
            	case 1 :
            	    // InternalQualityBtCppParser.g:1376:4: (lv_child_21_0= ruleTreeNode )
            	    {
            	    // InternalQualityBtCppParser.g:1376:4: (lv_child_21_0= ruleTreeNode )
            	    // InternalQualityBtCppParser.g:1377:5: lv_child_21_0= ruleTreeNode
            	    {

            	    					newCompositeNode(grammarAccess.getFallbackNodeAccess().getChildTreeNodeParserRuleCall_4_0());
            	    				
            	    pushFollow(FOLLOW_18);
            	    lv_child_21_0=ruleTreeNode();

            	    state._fsp--;


            	    					if (current==null) {
            	    						current = createModelElementForParent(grammarAccess.getFallbackNodeRule());
            	    					}
            	    					add(
            	    						current,
            	    						"child",
            	    						lv_child_21_0,
            	    						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            	    					afterParserOrEnumRuleCall();
            	    				

            	    }


            	    }
            	    break;

            	default :
            	    break loop18;
                }
            } while (true);

            this_END_22=(Token)match(input,RULE_END,FOLLOW_2); 

            			newLeafNode(this_END_22, grammarAccess.getFallbackNodeAccess().getENDTerminalRuleCall_5());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFallbackNode"


    // $ANTLR start "entryRuleIfThenElseNode"
    // InternalQualityBtCppParser.g:1402:1: entryRuleIfThenElseNode returns [EObject current=null] : iv_ruleIfThenElseNode= ruleIfThenElseNode EOF ;
    public final EObject entryRuleIfThenElseNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIfThenElseNode = null;


        try {
            // InternalQualityBtCppParser.g:1402:55: (iv_ruleIfThenElseNode= ruleIfThenElseNode EOF )
            // InternalQualityBtCppParser.g:1403:2: iv_ruleIfThenElseNode= ruleIfThenElseNode EOF
            {
             newCompositeNode(grammarAccess.getIfThenElseNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleIfThenElseNode=ruleIfThenElseNode();

            state._fsp--;

             current =iv_ruleIfThenElseNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIfThenElseNode"


    // $ANTLR start "ruleIfThenElseNode"
    // InternalQualityBtCppParser.g:1409:1: ruleIfThenElseNode returns [EObject current=null] : (otherlv_0= IfThenElse ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_19= RULE_BEGIN ( (lv_child_20_0= ruleTreeNode ) ) ( (lv_child_21_0= ruleTreeNode ) )* this_END_22= RULE_END ) ;
    public final EObject ruleIfThenElseNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token this_BEGIN_19=null;
        Token this_END_22=null;
        AntlrDatatypeRuleToken lv_name_5_0 = null;

        EObject lv_parameters_7_0 = null;

        EObject lv_parameters_9_0 = null;

        EObject lv_satisfices_11_0 = null;

        EObject lv_satisfices_13_0 = null;

        EObject lv_satisfies_15_0 = null;

        EObject lv_satisfies_17_0 = null;

        EObject lv_child_20_0 = null;

        EObject lv_child_21_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:1415:2: ( (otherlv_0= IfThenElse ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_19= RULE_BEGIN ( (lv_child_20_0= ruleTreeNode ) ) ( (lv_child_21_0= ruleTreeNode ) )* this_END_22= RULE_END ) )
            // InternalQualityBtCppParser.g:1416:2: (otherlv_0= IfThenElse ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_19= RULE_BEGIN ( (lv_child_20_0= ruleTreeNode ) ) ( (lv_child_21_0= ruleTreeNode ) )* this_END_22= RULE_END )
            {
            // InternalQualityBtCppParser.g:1416:2: (otherlv_0= IfThenElse ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_19= RULE_BEGIN ( (lv_child_20_0= ruleTreeNode ) ) ( (lv_child_21_0= ruleTreeNode ) )* this_END_22= RULE_END )
            // InternalQualityBtCppParser.g:1417:3: otherlv_0= IfThenElse ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_19= RULE_BEGIN ( (lv_child_20_0= ruleTreeNode ) ) ( (lv_child_21_0= ruleTreeNode ) )* this_END_22= RULE_END
            {
            otherlv_0=(Token)match(input,IfThenElse,FOLLOW_15); 

            			newLeafNode(otherlv_0, grammarAccess.getIfThenElseNodeAccess().getIfThenElseKeyword_0());
            		
            // InternalQualityBtCppParser.g:1421:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt23=2;
            int LA23_0 = input.LA(1);

            if ( ((LA23_0>=Parameters && LA23_0<=Satisfies)||LA23_0==Name||(LA23_0>=LeftParenthesis && LA23_0<=RightParenthesis)) ) {
                alt23=1;
            }
            switch (alt23) {
                case 1 :
                    // InternalQualityBtCppParser.g:1422:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:1422:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:1423:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1());
                    				
                    // InternalQualityBtCppParser.g:1426:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:1427:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:1427:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+
                    int cnt22=0;
                    loop22:
                    do {
                        int alt22=7;
                        int LA22_0 = input.LA(1);

                        if ( LA22_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1(), 0) ) {
                            alt22=1;
                        }
                        else if ( LA22_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1(), 1) ) {
                            alt22=2;
                        }
                        else if ( LA22_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1(), 2) ) {
                            alt22=3;
                        }
                        else if ( LA22_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1(), 3) ) {
                            alt22=4;
                        }
                        else if ( LA22_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1(), 4) ) {
                            alt22=5;
                        }
                        else if ( LA22_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1(), 5) ) {
                            alt22=6;
                        }


                        switch (alt22) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:1428:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:1428:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:1429:5: {...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleIfThenElseNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:1429:111: ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:1430:6: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:1433:9: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:1433:10: {...}? => (otherlv_2= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleIfThenElseNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:1433:19: (otherlv_2= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:1433:20: otherlv_2= LeftParenthesis
                    	    {
                    	    otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_2, grammarAccess.getIfThenElseNodeAccess().getLeftParenthesisKeyword_1_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:1443:4: ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:1443:4: ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:1444:5: {...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleIfThenElseNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:1444:111: ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:1445:6: ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:1448:9: ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:1448:10: {...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleIfThenElseNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:1448:19: (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:1448:20: otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) )
                    	    {
                    	    otherlv_3=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getIfThenElseNodeAccess().getNameKeyword_1_1_0());
                    	    								
                    	    otherlv_4=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getIfThenElseNodeAccess().getEqualsSignKeyword_1_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:1456:9: ( (lv_name_5_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:1457:10: (lv_name_5_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:1457:10: (lv_name_5_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:1458:11: lv_name_5_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getIfThenElseNodeAccess().getNameEStringParserRuleCall_1_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_15);
                    	    lv_name_5_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getIfThenElseNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_5_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:1481:4: ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:1481:4: ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:1482:5: {...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleIfThenElseNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:1482:111: ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:1483:6: ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:1486:9: ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:1486:10: {...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleIfThenElseNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:1486:19: (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:1486:20: otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_6=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_6, grammarAccess.getIfThenElseNodeAccess().getParametersKeyword_1_2_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:1490:9: ( (lv_parameters_7_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:1491:10: (lv_parameters_7_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:1491:10: (lv_parameters_7_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:1492:11: lv_parameters_7_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getIfThenElseNodeAccess().getParametersParameterParserRuleCall_1_2_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_parameters_7_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getIfThenElseNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_7_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:1509:9: (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )*
                    	    loop19:
                    	    do {
                    	        int alt19=2;
                    	        int LA19_0 = input.LA(1);

                    	        if ( (LA19_0==Comma) ) {
                    	            alt19=1;
                    	        }


                    	        switch (alt19) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:1510:10: otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_8=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_8, grammarAccess.getIfThenElseNodeAccess().getCommaKeyword_1_2_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:1514:10: ( (lv_parameters_9_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:1515:11: (lv_parameters_9_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:1515:11: (lv_parameters_9_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:1516:12: lv_parameters_9_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getIfThenElseNodeAccess().getParametersParameterParserRuleCall_1_2_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_parameters_9_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getIfThenElseNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_9_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop19;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:1540:4: ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:1540:4: ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:1541:5: {...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleIfThenElseNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:1541:111: ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:1542:6: ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:1545:9: ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:1545:10: {...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleIfThenElseNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:1545:19: (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:1545:20: otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_10=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_10, grammarAccess.getIfThenElseNodeAccess().getSatisficesKeyword_1_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:1549:9: ( (lv_satisfices_11_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:1550:10: (lv_satisfices_11_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:1550:10: (lv_satisfices_11_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:1551:11: lv_satisfices_11_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getIfThenElseNodeAccess().getSatisficesQualityParserRuleCall_1_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfices_11_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getIfThenElseNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_11_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:1568:9: (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )*
                    	    loop20:
                    	    do {
                    	        int alt20=2;
                    	        int LA20_0 = input.LA(1);

                    	        if ( (LA20_0==Comma) ) {
                    	            alt20=1;
                    	        }


                    	        switch (alt20) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:1569:10: otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_12=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_12, grammarAccess.getIfThenElseNodeAccess().getCommaKeyword_1_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:1573:10: ( (lv_satisfices_13_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:1574:11: (lv_satisfices_13_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:1574:11: (lv_satisfices_13_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:1575:12: lv_satisfices_13_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getIfThenElseNodeAccess().getSatisficesQualityParserRuleCall_1_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfices_13_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getIfThenElseNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_13_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop20;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:1599:4: ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:1599:4: ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:1600:5: {...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleIfThenElseNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:1600:111: ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:1601:6: ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:1604:9: ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:1604:10: {...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleIfThenElseNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:1604:19: (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:1604:20: otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_14=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_14, grammarAccess.getIfThenElseNodeAccess().getSatisfiesKeyword_1_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:1608:9: ( (lv_satisfies_15_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:1609:10: (lv_satisfies_15_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:1609:10: (lv_satisfies_15_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:1610:11: lv_satisfies_15_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getIfThenElseNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfies_15_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getIfThenElseNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_15_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:1627:9: (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )*
                    	    loop21:
                    	    do {
                    	        int alt21=2;
                    	        int LA21_0 = input.LA(1);

                    	        if ( (LA21_0==Comma) ) {
                    	            alt21=1;
                    	        }


                    	        switch (alt21) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:1628:10: otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_16=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_16, grammarAccess.getIfThenElseNodeAccess().getCommaKeyword_1_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:1632:10: ( (lv_satisfies_17_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:1633:11: (lv_satisfies_17_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:1633:11: (lv_satisfies_17_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:1634:12: lv_satisfies_17_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getIfThenElseNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfies_17_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getIfThenElseNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_17_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop21;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:1658:4: ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:1658:4: ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:1659:5: {...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleIfThenElseNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:1659:111: ( ({...}? => (otherlv_18= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:1660:6: ({...}? => (otherlv_18= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:1663:9: ({...}? => (otherlv_18= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:1663:10: {...}? => (otherlv_18= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleIfThenElseNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:1663:19: (otherlv_18= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:1663:20: otherlv_18= RightParenthesis
                    	    {
                    	    otherlv_18=(Token)match(input,RightParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_18, grammarAccess.getIfThenElseNodeAccess().getRightParenthesisKeyword_1_5());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt22 >= 1 ) break loop22;
                                EarlyExitException eee =
                                    new EarlyExitException(22, input);
                                throw eee;
                        }
                        cnt22++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1()) ) {
                        throw new FailedPredicateException(input, "ruleIfThenElseNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getIfThenElseNodeAccess().getUnorderedGroup_1());
                    				

                    }
                    break;

            }

            this_BEGIN_19=(Token)match(input,RULE_BEGIN,FOLLOW_9); 

            			newLeafNode(this_BEGIN_19, grammarAccess.getIfThenElseNodeAccess().getBEGINTerminalRuleCall_2());
            		
            // InternalQualityBtCppParser.g:1685:3: ( (lv_child_20_0= ruleTreeNode ) )
            // InternalQualityBtCppParser.g:1686:4: (lv_child_20_0= ruleTreeNode )
            {
            // InternalQualityBtCppParser.g:1686:4: (lv_child_20_0= ruleTreeNode )
            // InternalQualityBtCppParser.g:1687:5: lv_child_20_0= ruleTreeNode
            {

            					newCompositeNode(grammarAccess.getIfThenElseNodeAccess().getChildTreeNodeParserRuleCall_3_0());
            				
            pushFollow(FOLLOW_18);
            lv_child_20_0=ruleTreeNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getIfThenElseNodeRule());
            					}
            					add(
            						current,
            						"child",
            						lv_child_20_0,
            						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            // InternalQualityBtCppParser.g:1704:3: ( (lv_child_21_0= ruleTreeNode ) )*
            loop24:
            do {
                int alt24=2;
                int LA24_0 = input.LA(1);

                if ( ((LA24_0>=KeepRunningUntilFailure && LA24_0<=SetBlackboard)||(LA24_0>=ConsumeQueue && LA24_0<=ScriptAction)||LA24_0==WhileDoElse||(LA24_0>=CoroAction && LA24_0<=IfThenElse)||LA24_0==Inverter||(LA24_0>=RunOnce && LA24_0<=Sleep)||LA24_0==Loop||LA24_0==Test||(LA24_0>=M && LA24_0<=HyphenMinusGreaterThanSign)||(LA24_0>=R && LA24_0<=VerticalLineVerticalLine)||LA24_0==QuestionMark) ) {
                    alt24=1;
                }


                switch (alt24) {
            	case 1 :
            	    // InternalQualityBtCppParser.g:1705:4: (lv_child_21_0= ruleTreeNode )
            	    {
            	    // InternalQualityBtCppParser.g:1705:4: (lv_child_21_0= ruleTreeNode )
            	    // InternalQualityBtCppParser.g:1706:5: lv_child_21_0= ruleTreeNode
            	    {

            	    					newCompositeNode(grammarAccess.getIfThenElseNodeAccess().getChildTreeNodeParserRuleCall_4_0());
            	    				
            	    pushFollow(FOLLOW_18);
            	    lv_child_21_0=ruleTreeNode();

            	    state._fsp--;


            	    					if (current==null) {
            	    						current = createModelElementForParent(grammarAccess.getIfThenElseNodeRule());
            	    					}
            	    					add(
            	    						current,
            	    						"child",
            	    						lv_child_21_0,
            	    						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            	    					afterParserOrEnumRuleCall();
            	    				

            	    }


            	    }
            	    break;

            	default :
            	    break loop24;
                }
            } while (true);

            this_END_22=(Token)match(input,RULE_END,FOLLOW_2); 

            			newLeafNode(this_END_22, grammarAccess.getIfThenElseNodeAccess().getENDTerminalRuleCall_5());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIfThenElseNode"


    // $ANTLR start "entryRuleManualSelectorNode"
    // InternalQualityBtCppParser.g:1731:1: entryRuleManualSelectorNode returns [EObject current=null] : iv_ruleManualSelectorNode= ruleManualSelectorNode EOF ;
    public final EObject entryRuleManualSelectorNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleManualSelectorNode = null;


        try {
            // InternalQualityBtCppParser.g:1731:59: (iv_ruleManualSelectorNode= ruleManualSelectorNode EOF )
            // InternalQualityBtCppParser.g:1732:2: iv_ruleManualSelectorNode= ruleManualSelectorNode EOF
            {
             newCompositeNode(grammarAccess.getManualSelectorNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleManualSelectorNode=ruleManualSelectorNode();

            state._fsp--;

             current =iv_ruleManualSelectorNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleManualSelectorNode"


    // $ANTLR start "ruleManualSelectorNode"
    // InternalQualityBtCppParser.g:1738:1: ruleManualSelectorNode returns [EObject current=null] : (otherlv_0= ManualSelector ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_19= RULE_BEGIN ( (lv_child_20_0= ruleTreeNode ) ) ( (lv_child_21_0= ruleTreeNode ) )* this_END_22= RULE_END ) ;
    public final EObject ruleManualSelectorNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token this_BEGIN_19=null;
        Token this_END_22=null;
        AntlrDatatypeRuleToken lv_name_5_0 = null;

        EObject lv_parameters_7_0 = null;

        EObject lv_parameters_9_0 = null;

        EObject lv_satisfices_11_0 = null;

        EObject lv_satisfices_13_0 = null;

        EObject lv_satisfies_15_0 = null;

        EObject lv_satisfies_17_0 = null;

        EObject lv_child_20_0 = null;

        EObject lv_child_21_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:1744:2: ( (otherlv_0= ManualSelector ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_19= RULE_BEGIN ( (lv_child_20_0= ruleTreeNode ) ) ( (lv_child_21_0= ruleTreeNode ) )* this_END_22= RULE_END ) )
            // InternalQualityBtCppParser.g:1745:2: (otherlv_0= ManualSelector ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_19= RULE_BEGIN ( (lv_child_20_0= ruleTreeNode ) ) ( (lv_child_21_0= ruleTreeNode ) )* this_END_22= RULE_END )
            {
            // InternalQualityBtCppParser.g:1745:2: (otherlv_0= ManualSelector ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_19= RULE_BEGIN ( (lv_child_20_0= ruleTreeNode ) ) ( (lv_child_21_0= ruleTreeNode ) )* this_END_22= RULE_END )
            // InternalQualityBtCppParser.g:1746:3: otherlv_0= ManualSelector ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_19= RULE_BEGIN ( (lv_child_20_0= ruleTreeNode ) ) ( (lv_child_21_0= ruleTreeNode ) )* this_END_22= RULE_END
            {
            otherlv_0=(Token)match(input,ManualSelector,FOLLOW_15); 

            			newLeafNode(otherlv_0, grammarAccess.getManualSelectorNodeAccess().getManualSelectorKeyword_0());
            		
            // InternalQualityBtCppParser.g:1750:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt29=2;
            int LA29_0 = input.LA(1);

            if ( ((LA29_0>=Parameters && LA29_0<=Satisfies)||LA29_0==Name||(LA29_0>=LeftParenthesis && LA29_0<=RightParenthesis)) ) {
                alt29=1;
            }
            switch (alt29) {
                case 1 :
                    // InternalQualityBtCppParser.g:1751:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:1751:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:1752:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1());
                    				
                    // InternalQualityBtCppParser.g:1755:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:1756:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:1756:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+
                    int cnt28=0;
                    loop28:
                    do {
                        int alt28=7;
                        int LA28_0 = input.LA(1);

                        if ( LA28_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1(), 0) ) {
                            alt28=1;
                        }
                        else if ( LA28_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1(), 1) ) {
                            alt28=2;
                        }
                        else if ( LA28_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1(), 2) ) {
                            alt28=3;
                        }
                        else if ( LA28_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1(), 3) ) {
                            alt28=4;
                        }
                        else if ( LA28_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1(), 4) ) {
                            alt28=5;
                        }
                        else if ( LA28_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1(), 5) ) {
                            alt28=6;
                        }


                        switch (alt28) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:1757:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:1757:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:1758:5: {...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleManualSelectorNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:1758:115: ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:1759:6: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:1762:9: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:1762:10: {...}? => (otherlv_2= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleManualSelectorNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:1762:19: (otherlv_2= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:1762:20: otherlv_2= LeftParenthesis
                    	    {
                    	    otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_2, grammarAccess.getManualSelectorNodeAccess().getLeftParenthesisKeyword_1_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:1772:4: ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:1772:4: ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:1773:5: {...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleManualSelectorNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:1773:115: ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:1774:6: ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:1777:9: ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:1777:10: {...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleManualSelectorNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:1777:19: (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:1777:20: otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) )
                    	    {
                    	    otherlv_3=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getManualSelectorNodeAccess().getNameKeyword_1_1_0());
                    	    								
                    	    otherlv_4=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getManualSelectorNodeAccess().getEqualsSignKeyword_1_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:1785:9: ( (lv_name_5_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:1786:10: (lv_name_5_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:1786:10: (lv_name_5_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:1787:11: lv_name_5_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getManualSelectorNodeAccess().getNameEStringParserRuleCall_1_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_15);
                    	    lv_name_5_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getManualSelectorNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_5_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:1810:4: ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:1810:4: ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:1811:5: {...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleManualSelectorNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:1811:115: ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:1812:6: ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:1815:9: ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:1815:10: {...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleManualSelectorNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:1815:19: (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:1815:20: otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_6=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_6, grammarAccess.getManualSelectorNodeAccess().getParametersKeyword_1_2_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:1819:9: ( (lv_parameters_7_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:1820:10: (lv_parameters_7_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:1820:10: (lv_parameters_7_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:1821:11: lv_parameters_7_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getManualSelectorNodeAccess().getParametersParameterParserRuleCall_1_2_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_parameters_7_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getManualSelectorNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_7_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:1838:9: (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )*
                    	    loop25:
                    	    do {
                    	        int alt25=2;
                    	        int LA25_0 = input.LA(1);

                    	        if ( (LA25_0==Comma) ) {
                    	            alt25=1;
                    	        }


                    	        switch (alt25) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:1839:10: otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_8=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_8, grammarAccess.getManualSelectorNodeAccess().getCommaKeyword_1_2_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:1843:10: ( (lv_parameters_9_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:1844:11: (lv_parameters_9_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:1844:11: (lv_parameters_9_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:1845:12: lv_parameters_9_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getManualSelectorNodeAccess().getParametersParameterParserRuleCall_1_2_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_parameters_9_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getManualSelectorNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_9_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop25;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:1869:4: ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:1869:4: ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:1870:5: {...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleManualSelectorNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:1870:115: ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:1871:6: ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:1874:9: ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:1874:10: {...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleManualSelectorNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:1874:19: (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:1874:20: otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_10=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_10, grammarAccess.getManualSelectorNodeAccess().getSatisficesKeyword_1_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:1878:9: ( (lv_satisfices_11_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:1879:10: (lv_satisfices_11_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:1879:10: (lv_satisfices_11_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:1880:11: lv_satisfices_11_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getManualSelectorNodeAccess().getSatisficesQualityParserRuleCall_1_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfices_11_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getManualSelectorNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_11_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:1897:9: (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )*
                    	    loop26:
                    	    do {
                    	        int alt26=2;
                    	        int LA26_0 = input.LA(1);

                    	        if ( (LA26_0==Comma) ) {
                    	            alt26=1;
                    	        }


                    	        switch (alt26) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:1898:10: otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_12=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_12, grammarAccess.getManualSelectorNodeAccess().getCommaKeyword_1_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:1902:10: ( (lv_satisfices_13_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:1903:11: (lv_satisfices_13_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:1903:11: (lv_satisfices_13_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:1904:12: lv_satisfices_13_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getManualSelectorNodeAccess().getSatisficesQualityParserRuleCall_1_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfices_13_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getManualSelectorNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_13_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop26;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:1928:4: ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:1928:4: ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:1929:5: {...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleManualSelectorNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:1929:115: ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:1930:6: ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:1933:9: ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:1933:10: {...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleManualSelectorNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:1933:19: (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:1933:20: otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_14=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_14, grammarAccess.getManualSelectorNodeAccess().getSatisfiesKeyword_1_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:1937:9: ( (lv_satisfies_15_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:1938:10: (lv_satisfies_15_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:1938:10: (lv_satisfies_15_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:1939:11: lv_satisfies_15_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getManualSelectorNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfies_15_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getManualSelectorNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_15_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:1956:9: (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )*
                    	    loop27:
                    	    do {
                    	        int alt27=2;
                    	        int LA27_0 = input.LA(1);

                    	        if ( (LA27_0==Comma) ) {
                    	            alt27=1;
                    	        }


                    	        switch (alt27) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:1957:10: otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_16=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_16, grammarAccess.getManualSelectorNodeAccess().getCommaKeyword_1_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:1961:10: ( (lv_satisfies_17_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:1962:11: (lv_satisfies_17_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:1962:11: (lv_satisfies_17_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:1963:12: lv_satisfies_17_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getManualSelectorNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfies_17_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getManualSelectorNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_17_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop27;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:1987:4: ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:1987:4: ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:1988:5: {...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleManualSelectorNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:1988:115: ( ({...}? => (otherlv_18= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:1989:6: ({...}? => (otherlv_18= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:1992:9: ({...}? => (otherlv_18= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:1992:10: {...}? => (otherlv_18= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleManualSelectorNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:1992:19: (otherlv_18= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:1992:20: otherlv_18= RightParenthesis
                    	    {
                    	    otherlv_18=(Token)match(input,RightParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_18, grammarAccess.getManualSelectorNodeAccess().getRightParenthesisKeyword_1_5());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt28 >= 1 ) break loop28;
                                EarlyExitException eee =
                                    new EarlyExitException(28, input);
                                throw eee;
                        }
                        cnt28++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1()) ) {
                        throw new FailedPredicateException(input, "ruleManualSelectorNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getManualSelectorNodeAccess().getUnorderedGroup_1());
                    				

                    }
                    break;

            }

            this_BEGIN_19=(Token)match(input,RULE_BEGIN,FOLLOW_9); 

            			newLeafNode(this_BEGIN_19, grammarAccess.getManualSelectorNodeAccess().getBEGINTerminalRuleCall_2());
            		
            // InternalQualityBtCppParser.g:2014:3: ( (lv_child_20_0= ruleTreeNode ) )
            // InternalQualityBtCppParser.g:2015:4: (lv_child_20_0= ruleTreeNode )
            {
            // InternalQualityBtCppParser.g:2015:4: (lv_child_20_0= ruleTreeNode )
            // InternalQualityBtCppParser.g:2016:5: lv_child_20_0= ruleTreeNode
            {

            					newCompositeNode(grammarAccess.getManualSelectorNodeAccess().getChildTreeNodeParserRuleCall_3_0());
            				
            pushFollow(FOLLOW_18);
            lv_child_20_0=ruleTreeNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getManualSelectorNodeRule());
            					}
            					add(
            						current,
            						"child",
            						lv_child_20_0,
            						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            // InternalQualityBtCppParser.g:2033:3: ( (lv_child_21_0= ruleTreeNode ) )*
            loop30:
            do {
                int alt30=2;
                int LA30_0 = input.LA(1);

                if ( ((LA30_0>=KeepRunningUntilFailure && LA30_0<=SetBlackboard)||(LA30_0>=ConsumeQueue && LA30_0<=ScriptAction)||LA30_0==WhileDoElse||(LA30_0>=CoroAction && LA30_0<=IfThenElse)||LA30_0==Inverter||(LA30_0>=RunOnce && LA30_0<=Sleep)||LA30_0==Loop||LA30_0==Test||(LA30_0>=M && LA30_0<=HyphenMinusGreaterThanSign)||(LA30_0>=R && LA30_0<=VerticalLineVerticalLine)||LA30_0==QuestionMark) ) {
                    alt30=1;
                }


                switch (alt30) {
            	case 1 :
            	    // InternalQualityBtCppParser.g:2034:4: (lv_child_21_0= ruleTreeNode )
            	    {
            	    // InternalQualityBtCppParser.g:2034:4: (lv_child_21_0= ruleTreeNode )
            	    // InternalQualityBtCppParser.g:2035:5: lv_child_21_0= ruleTreeNode
            	    {

            	    					newCompositeNode(grammarAccess.getManualSelectorNodeAccess().getChildTreeNodeParserRuleCall_4_0());
            	    				
            	    pushFollow(FOLLOW_18);
            	    lv_child_21_0=ruleTreeNode();

            	    state._fsp--;


            	    					if (current==null) {
            	    						current = createModelElementForParent(grammarAccess.getManualSelectorNodeRule());
            	    					}
            	    					add(
            	    						current,
            	    						"child",
            	    						lv_child_21_0,
            	    						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            	    					afterParserOrEnumRuleCall();
            	    				

            	    }


            	    }
            	    break;

            	default :
            	    break loop30;
                }
            } while (true);

            this_END_22=(Token)match(input,RULE_END,FOLLOW_2); 

            			newLeafNode(this_END_22, grammarAccess.getManualSelectorNodeAccess().getENDTerminalRuleCall_5());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleManualSelectorNode"


    // $ANTLR start "entryRuleParallelNode"
    // InternalQualityBtCppParser.g:2060:1: entryRuleParallelNode returns [EObject current=null] : iv_ruleParallelNode= ruleParallelNode EOF ;
    public final EObject entryRuleParallelNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParallelNode = null;


        try {
            // InternalQualityBtCppParser.g:2060:53: (iv_ruleParallelNode= ruleParallelNode EOF )
            // InternalQualityBtCppParser.g:2061:2: iv_ruleParallelNode= ruleParallelNode EOF
            {
             newCompositeNode(grammarAccess.getParallelNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleParallelNode=ruleParallelNode();

            state._fsp--;

             current =iv_ruleParallelNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleParallelNode"


    // $ANTLR start "ruleParallelNode"
    // InternalQualityBtCppParser.g:2067:1: ruleParallelNode returns [EObject current=null] : (otherlv_0= VerticalLineVerticalLine ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_19= RULE_BEGIN ( (lv_child_20_0= ruleTreeNode ) ) ( (lv_child_21_0= ruleTreeNode ) )* this_END_22= RULE_END ) ;
    public final EObject ruleParallelNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token this_BEGIN_19=null;
        Token this_END_22=null;
        AntlrDatatypeRuleToken lv_name_5_0 = null;

        EObject lv_parameters_7_0 = null;

        EObject lv_parameters_9_0 = null;

        EObject lv_satisfices_11_0 = null;

        EObject lv_satisfices_13_0 = null;

        EObject lv_satisfies_15_0 = null;

        EObject lv_satisfies_17_0 = null;

        EObject lv_child_20_0 = null;

        EObject lv_child_21_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:2073:2: ( (otherlv_0= VerticalLineVerticalLine ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_19= RULE_BEGIN ( (lv_child_20_0= ruleTreeNode ) ) ( (lv_child_21_0= ruleTreeNode ) )* this_END_22= RULE_END ) )
            // InternalQualityBtCppParser.g:2074:2: (otherlv_0= VerticalLineVerticalLine ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_19= RULE_BEGIN ( (lv_child_20_0= ruleTreeNode ) ) ( (lv_child_21_0= ruleTreeNode ) )* this_END_22= RULE_END )
            {
            // InternalQualityBtCppParser.g:2074:2: (otherlv_0= VerticalLineVerticalLine ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_19= RULE_BEGIN ( (lv_child_20_0= ruleTreeNode ) ) ( (lv_child_21_0= ruleTreeNode ) )* this_END_22= RULE_END )
            // InternalQualityBtCppParser.g:2075:3: otherlv_0= VerticalLineVerticalLine ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_19= RULE_BEGIN ( (lv_child_20_0= ruleTreeNode ) ) ( (lv_child_21_0= ruleTreeNode ) )* this_END_22= RULE_END
            {
            otherlv_0=(Token)match(input,VerticalLineVerticalLine,FOLLOW_15); 

            			newLeafNode(otherlv_0, grammarAccess.getParallelNodeAccess().getVerticalLineVerticalLineKeyword_0());
            		
            // InternalQualityBtCppParser.g:2079:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt35=2;
            int LA35_0 = input.LA(1);

            if ( ((LA35_0>=Parameters && LA35_0<=Satisfies)||LA35_0==Name||(LA35_0>=LeftParenthesis && LA35_0<=RightParenthesis)) ) {
                alt35=1;
            }
            switch (alt35) {
                case 1 :
                    // InternalQualityBtCppParser.g:2080:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:2080:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:2081:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1());
                    				
                    // InternalQualityBtCppParser.g:2084:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:2085:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:2085:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+
                    int cnt34=0;
                    loop34:
                    do {
                        int alt34=7;
                        int LA34_0 = input.LA(1);

                        if ( LA34_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1(), 0) ) {
                            alt34=1;
                        }
                        else if ( LA34_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1(), 1) ) {
                            alt34=2;
                        }
                        else if ( LA34_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1(), 2) ) {
                            alt34=3;
                        }
                        else if ( LA34_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1(), 3) ) {
                            alt34=4;
                        }
                        else if ( LA34_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1(), 4) ) {
                            alt34=5;
                        }
                        else if ( LA34_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1(), 5) ) {
                            alt34=6;
                        }


                        switch (alt34) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:2086:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:2086:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:2087:5: {...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleParallelNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:2087:109: ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:2088:6: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:2091:9: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:2091:10: {...}? => (otherlv_2= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleParallelNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:2091:19: (otherlv_2= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:2091:20: otherlv_2= LeftParenthesis
                    	    {
                    	    otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_2, grammarAccess.getParallelNodeAccess().getLeftParenthesisKeyword_1_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:2101:4: ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:2101:4: ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:2102:5: {...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleParallelNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:2102:109: ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:2103:6: ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:2106:9: ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:2106:10: {...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleParallelNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:2106:19: (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:2106:20: otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) )
                    	    {
                    	    otherlv_3=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getParallelNodeAccess().getNameKeyword_1_1_0());
                    	    								
                    	    otherlv_4=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getParallelNodeAccess().getEqualsSignKeyword_1_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:2114:9: ( (lv_name_5_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:2115:10: (lv_name_5_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:2115:10: (lv_name_5_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:2116:11: lv_name_5_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getParallelNodeAccess().getNameEStringParserRuleCall_1_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_15);
                    	    lv_name_5_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getParallelNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_5_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:2139:4: ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:2139:4: ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:2140:5: {...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleParallelNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:2140:109: ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:2141:6: ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:2144:9: ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:2144:10: {...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleParallelNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:2144:19: (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:2144:20: otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_6=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_6, grammarAccess.getParallelNodeAccess().getParametersKeyword_1_2_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:2148:9: ( (lv_parameters_7_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:2149:10: (lv_parameters_7_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:2149:10: (lv_parameters_7_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:2150:11: lv_parameters_7_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getParallelNodeAccess().getParametersParameterParserRuleCall_1_2_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_parameters_7_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getParallelNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_7_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:2167:9: (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )*
                    	    loop31:
                    	    do {
                    	        int alt31=2;
                    	        int LA31_0 = input.LA(1);

                    	        if ( (LA31_0==Comma) ) {
                    	            alt31=1;
                    	        }


                    	        switch (alt31) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:2168:10: otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_8=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_8, grammarAccess.getParallelNodeAccess().getCommaKeyword_1_2_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:2172:10: ( (lv_parameters_9_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:2173:11: (lv_parameters_9_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:2173:11: (lv_parameters_9_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:2174:12: lv_parameters_9_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getParallelNodeAccess().getParametersParameterParserRuleCall_1_2_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_parameters_9_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getParallelNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_9_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop31;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:2198:4: ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:2198:4: ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:2199:5: {...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleParallelNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:2199:109: ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:2200:6: ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:2203:9: ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:2203:10: {...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleParallelNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:2203:19: (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:2203:20: otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_10=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_10, grammarAccess.getParallelNodeAccess().getSatisficesKeyword_1_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:2207:9: ( (lv_satisfices_11_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:2208:10: (lv_satisfices_11_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:2208:10: (lv_satisfices_11_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:2209:11: lv_satisfices_11_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getParallelNodeAccess().getSatisficesQualityParserRuleCall_1_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfices_11_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getParallelNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_11_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:2226:9: (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )*
                    	    loop32:
                    	    do {
                    	        int alt32=2;
                    	        int LA32_0 = input.LA(1);

                    	        if ( (LA32_0==Comma) ) {
                    	            alt32=1;
                    	        }


                    	        switch (alt32) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:2227:10: otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_12=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_12, grammarAccess.getParallelNodeAccess().getCommaKeyword_1_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:2231:10: ( (lv_satisfices_13_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:2232:11: (lv_satisfices_13_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:2232:11: (lv_satisfices_13_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:2233:12: lv_satisfices_13_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getParallelNodeAccess().getSatisficesQualityParserRuleCall_1_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfices_13_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getParallelNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_13_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop32;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:2257:4: ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:2257:4: ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:2258:5: {...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleParallelNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:2258:109: ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:2259:6: ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:2262:9: ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:2262:10: {...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleParallelNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:2262:19: (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:2262:20: otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_14=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_14, grammarAccess.getParallelNodeAccess().getSatisfiesKeyword_1_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:2266:9: ( (lv_satisfies_15_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:2267:10: (lv_satisfies_15_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:2267:10: (lv_satisfies_15_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:2268:11: lv_satisfies_15_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getParallelNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfies_15_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getParallelNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_15_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:2285:9: (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )*
                    	    loop33:
                    	    do {
                    	        int alt33=2;
                    	        int LA33_0 = input.LA(1);

                    	        if ( (LA33_0==Comma) ) {
                    	            alt33=1;
                    	        }


                    	        switch (alt33) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:2286:10: otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_16=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_16, grammarAccess.getParallelNodeAccess().getCommaKeyword_1_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:2290:10: ( (lv_satisfies_17_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:2291:11: (lv_satisfies_17_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:2291:11: (lv_satisfies_17_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:2292:12: lv_satisfies_17_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getParallelNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfies_17_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getParallelNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_17_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop33;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:2316:4: ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:2316:4: ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:2317:5: {...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleParallelNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:2317:109: ( ({...}? => (otherlv_18= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:2318:6: ({...}? => (otherlv_18= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:2321:9: ({...}? => (otherlv_18= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:2321:10: {...}? => (otherlv_18= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleParallelNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:2321:19: (otherlv_18= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:2321:20: otherlv_18= RightParenthesis
                    	    {
                    	    otherlv_18=(Token)match(input,RightParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_18, grammarAccess.getParallelNodeAccess().getRightParenthesisKeyword_1_5());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt34 >= 1 ) break loop34;
                                EarlyExitException eee =
                                    new EarlyExitException(34, input);
                                throw eee;
                        }
                        cnt34++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1()) ) {
                        throw new FailedPredicateException(input, "ruleParallelNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getParallelNodeAccess().getUnorderedGroup_1());
                    				

                    }
                    break;

            }

            this_BEGIN_19=(Token)match(input,RULE_BEGIN,FOLLOW_9); 

            			newLeafNode(this_BEGIN_19, grammarAccess.getParallelNodeAccess().getBEGINTerminalRuleCall_2());
            		
            // InternalQualityBtCppParser.g:2343:3: ( (lv_child_20_0= ruleTreeNode ) )
            // InternalQualityBtCppParser.g:2344:4: (lv_child_20_0= ruleTreeNode )
            {
            // InternalQualityBtCppParser.g:2344:4: (lv_child_20_0= ruleTreeNode )
            // InternalQualityBtCppParser.g:2345:5: lv_child_20_0= ruleTreeNode
            {

            					newCompositeNode(grammarAccess.getParallelNodeAccess().getChildTreeNodeParserRuleCall_3_0());
            				
            pushFollow(FOLLOW_18);
            lv_child_20_0=ruleTreeNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getParallelNodeRule());
            					}
            					add(
            						current,
            						"child",
            						lv_child_20_0,
            						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            // InternalQualityBtCppParser.g:2362:3: ( (lv_child_21_0= ruleTreeNode ) )*
            loop36:
            do {
                int alt36=2;
                int LA36_0 = input.LA(1);

                if ( ((LA36_0>=KeepRunningUntilFailure && LA36_0<=SetBlackboard)||(LA36_0>=ConsumeQueue && LA36_0<=ScriptAction)||LA36_0==WhileDoElse||(LA36_0>=CoroAction && LA36_0<=IfThenElse)||LA36_0==Inverter||(LA36_0>=RunOnce && LA36_0<=Sleep)||LA36_0==Loop||LA36_0==Test||(LA36_0>=M && LA36_0<=HyphenMinusGreaterThanSign)||(LA36_0>=R && LA36_0<=VerticalLineVerticalLine)||LA36_0==QuestionMark) ) {
                    alt36=1;
                }


                switch (alt36) {
            	case 1 :
            	    // InternalQualityBtCppParser.g:2363:4: (lv_child_21_0= ruleTreeNode )
            	    {
            	    // InternalQualityBtCppParser.g:2363:4: (lv_child_21_0= ruleTreeNode )
            	    // InternalQualityBtCppParser.g:2364:5: lv_child_21_0= ruleTreeNode
            	    {

            	    					newCompositeNode(grammarAccess.getParallelNodeAccess().getChildTreeNodeParserRuleCall_4_0());
            	    				
            	    pushFollow(FOLLOW_18);
            	    lv_child_21_0=ruleTreeNode();

            	    state._fsp--;


            	    					if (current==null) {
            	    						current = createModelElementForParent(grammarAccess.getParallelNodeRule());
            	    					}
            	    					add(
            	    						current,
            	    						"child",
            	    						lv_child_21_0,
            	    						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            	    					afterParserOrEnumRuleCall();
            	    				

            	    }


            	    }
            	    break;

            	default :
            	    break loop36;
                }
            } while (true);

            this_END_22=(Token)match(input,RULE_END,FOLLOW_2); 

            			newLeafNode(this_END_22, grammarAccess.getParallelNodeAccess().getENDTerminalRuleCall_5());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleParallelNode"


    // $ANTLR start "entryRuleSequenceWithMemoryNode"
    // InternalQualityBtCppParser.g:2389:1: entryRuleSequenceWithMemoryNode returns [EObject current=null] : iv_ruleSequenceWithMemoryNode= ruleSequenceWithMemoryNode EOF ;
    public final EObject entryRuleSequenceWithMemoryNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSequenceWithMemoryNode = null;


        try {
            // InternalQualityBtCppParser.g:2389:63: (iv_ruleSequenceWithMemoryNode= ruleSequenceWithMemoryNode EOF )
            // InternalQualityBtCppParser.g:2390:2: iv_ruleSequenceWithMemoryNode= ruleSequenceWithMemoryNode EOF
            {
             newCompositeNode(grammarAccess.getSequenceWithMemoryNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleSequenceWithMemoryNode=ruleSequenceWithMemoryNode();

            state._fsp--;

             current =iv_ruleSequenceWithMemoryNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSequenceWithMemoryNode"


    // $ANTLR start "ruleSequenceWithMemoryNode"
    // InternalQualityBtCppParser.g:2396:1: ruleSequenceWithMemoryNode returns [EObject current=null] : (otherlv_0= M ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_19= RULE_BEGIN ( (lv_child_20_0= ruleTreeNode ) ) ( (lv_child_21_0= ruleTreeNode ) )* this_END_22= RULE_END ) ;
    public final EObject ruleSequenceWithMemoryNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token this_BEGIN_19=null;
        Token this_END_22=null;
        AntlrDatatypeRuleToken lv_name_5_0 = null;

        EObject lv_parameters_7_0 = null;

        EObject lv_parameters_9_0 = null;

        EObject lv_satisfices_11_0 = null;

        EObject lv_satisfices_13_0 = null;

        EObject lv_satisfies_15_0 = null;

        EObject lv_satisfies_17_0 = null;

        EObject lv_child_20_0 = null;

        EObject lv_child_21_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:2402:2: ( (otherlv_0= M ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_19= RULE_BEGIN ( (lv_child_20_0= ruleTreeNode ) ) ( (lv_child_21_0= ruleTreeNode ) )* this_END_22= RULE_END ) )
            // InternalQualityBtCppParser.g:2403:2: (otherlv_0= M ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_19= RULE_BEGIN ( (lv_child_20_0= ruleTreeNode ) ) ( (lv_child_21_0= ruleTreeNode ) )* this_END_22= RULE_END )
            {
            // InternalQualityBtCppParser.g:2403:2: (otherlv_0= M ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_19= RULE_BEGIN ( (lv_child_20_0= ruleTreeNode ) ) ( (lv_child_21_0= ruleTreeNode ) )* this_END_22= RULE_END )
            // InternalQualityBtCppParser.g:2404:3: otherlv_0= M ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_19= RULE_BEGIN ( (lv_child_20_0= ruleTreeNode ) ) ( (lv_child_21_0= ruleTreeNode ) )* this_END_22= RULE_END
            {
            otherlv_0=(Token)match(input,M,FOLLOW_15); 

            			newLeafNode(otherlv_0, grammarAccess.getSequenceWithMemoryNodeAccess().getMKeyword_0());
            		
            // InternalQualityBtCppParser.g:2408:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt41=2;
            int LA41_0 = input.LA(1);

            if ( ((LA41_0>=Parameters && LA41_0<=Satisfies)||LA41_0==Name||(LA41_0>=LeftParenthesis && LA41_0<=RightParenthesis)) ) {
                alt41=1;
            }
            switch (alt41) {
                case 1 :
                    // InternalQualityBtCppParser.g:2409:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:2409:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:2410:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1());
                    				
                    // InternalQualityBtCppParser.g:2413:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:2414:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:2414:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+
                    int cnt40=0;
                    loop40:
                    do {
                        int alt40=7;
                        int LA40_0 = input.LA(1);

                        if ( LA40_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1(), 0) ) {
                            alt40=1;
                        }
                        else if ( LA40_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1(), 1) ) {
                            alt40=2;
                        }
                        else if ( LA40_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1(), 2) ) {
                            alt40=3;
                        }
                        else if ( LA40_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1(), 3) ) {
                            alt40=4;
                        }
                        else if ( LA40_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1(), 4) ) {
                            alt40=5;
                        }
                        else if ( LA40_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1(), 5) ) {
                            alt40=6;
                        }


                        switch (alt40) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:2415:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:2415:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:2416:5: {...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleSequenceWithMemoryNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:2416:119: ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:2417:6: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:2420:9: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:2420:10: {...}? => (otherlv_2= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSequenceWithMemoryNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:2420:19: (otherlv_2= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:2420:20: otherlv_2= LeftParenthesis
                    	    {
                    	    otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_2, grammarAccess.getSequenceWithMemoryNodeAccess().getLeftParenthesisKeyword_1_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:2430:4: ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:2430:4: ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:2431:5: {...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleSequenceWithMemoryNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:2431:119: ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:2432:6: ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:2435:9: ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:2435:10: {...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSequenceWithMemoryNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:2435:19: (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:2435:20: otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) )
                    	    {
                    	    otherlv_3=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getSequenceWithMemoryNodeAccess().getNameKeyword_1_1_0());
                    	    								
                    	    otherlv_4=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getSequenceWithMemoryNodeAccess().getEqualsSignKeyword_1_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:2443:9: ( (lv_name_5_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:2444:10: (lv_name_5_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:2444:10: (lv_name_5_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:2445:11: lv_name_5_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getSequenceWithMemoryNodeAccess().getNameEStringParserRuleCall_1_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_15);
                    	    lv_name_5_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getSequenceWithMemoryNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_5_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:2468:4: ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:2468:4: ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:2469:5: {...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleSequenceWithMemoryNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:2469:119: ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:2470:6: ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:2473:9: ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:2473:10: {...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSequenceWithMemoryNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:2473:19: (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:2473:20: otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_6=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_6, grammarAccess.getSequenceWithMemoryNodeAccess().getParametersKeyword_1_2_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:2477:9: ( (lv_parameters_7_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:2478:10: (lv_parameters_7_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:2478:10: (lv_parameters_7_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:2479:11: lv_parameters_7_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getSequenceWithMemoryNodeAccess().getParametersParameterParserRuleCall_1_2_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_parameters_7_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getSequenceWithMemoryNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_7_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:2496:9: (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )*
                    	    loop37:
                    	    do {
                    	        int alt37=2;
                    	        int LA37_0 = input.LA(1);

                    	        if ( (LA37_0==Comma) ) {
                    	            alt37=1;
                    	        }


                    	        switch (alt37) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:2497:10: otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_8=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_8, grammarAccess.getSequenceWithMemoryNodeAccess().getCommaKeyword_1_2_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:2501:10: ( (lv_parameters_9_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:2502:11: (lv_parameters_9_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:2502:11: (lv_parameters_9_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:2503:12: lv_parameters_9_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getSequenceWithMemoryNodeAccess().getParametersParameterParserRuleCall_1_2_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_parameters_9_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getSequenceWithMemoryNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_9_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop37;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:2527:4: ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:2527:4: ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:2528:5: {...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleSequenceWithMemoryNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:2528:119: ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:2529:6: ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:2532:9: ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:2532:10: {...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSequenceWithMemoryNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:2532:19: (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:2532:20: otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_10=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_10, grammarAccess.getSequenceWithMemoryNodeAccess().getSatisficesKeyword_1_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:2536:9: ( (lv_satisfices_11_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:2537:10: (lv_satisfices_11_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:2537:10: (lv_satisfices_11_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:2538:11: lv_satisfices_11_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getSequenceWithMemoryNodeAccess().getSatisficesQualityParserRuleCall_1_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfices_11_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getSequenceWithMemoryNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_11_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:2555:9: (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )*
                    	    loop38:
                    	    do {
                    	        int alt38=2;
                    	        int LA38_0 = input.LA(1);

                    	        if ( (LA38_0==Comma) ) {
                    	            alt38=1;
                    	        }


                    	        switch (alt38) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:2556:10: otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_12=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_12, grammarAccess.getSequenceWithMemoryNodeAccess().getCommaKeyword_1_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:2560:10: ( (lv_satisfices_13_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:2561:11: (lv_satisfices_13_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:2561:11: (lv_satisfices_13_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:2562:12: lv_satisfices_13_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getSequenceWithMemoryNodeAccess().getSatisficesQualityParserRuleCall_1_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfices_13_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getSequenceWithMemoryNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_13_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop38;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:2586:4: ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:2586:4: ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:2587:5: {...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleSequenceWithMemoryNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:2587:119: ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:2588:6: ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:2591:9: ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:2591:10: {...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSequenceWithMemoryNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:2591:19: (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:2591:20: otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_14=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_14, grammarAccess.getSequenceWithMemoryNodeAccess().getSatisfiesKeyword_1_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:2595:9: ( (lv_satisfies_15_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:2596:10: (lv_satisfies_15_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:2596:10: (lv_satisfies_15_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:2597:11: lv_satisfies_15_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getSequenceWithMemoryNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfies_15_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getSequenceWithMemoryNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_15_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:2614:9: (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )*
                    	    loop39:
                    	    do {
                    	        int alt39=2;
                    	        int LA39_0 = input.LA(1);

                    	        if ( (LA39_0==Comma) ) {
                    	            alt39=1;
                    	        }


                    	        switch (alt39) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:2615:10: otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_16=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_16, grammarAccess.getSequenceWithMemoryNodeAccess().getCommaKeyword_1_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:2619:10: ( (lv_satisfies_17_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:2620:11: (lv_satisfies_17_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:2620:11: (lv_satisfies_17_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:2621:12: lv_satisfies_17_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getSequenceWithMemoryNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfies_17_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getSequenceWithMemoryNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_17_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop39;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:2645:4: ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:2645:4: ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:2646:5: {...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleSequenceWithMemoryNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:2646:119: ( ({...}? => (otherlv_18= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:2647:6: ({...}? => (otherlv_18= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:2650:9: ({...}? => (otherlv_18= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:2650:10: {...}? => (otherlv_18= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSequenceWithMemoryNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:2650:19: (otherlv_18= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:2650:20: otherlv_18= RightParenthesis
                    	    {
                    	    otherlv_18=(Token)match(input,RightParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_18, grammarAccess.getSequenceWithMemoryNodeAccess().getRightParenthesisKeyword_1_5());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt40 >= 1 ) break loop40;
                                EarlyExitException eee =
                                    new EarlyExitException(40, input);
                                throw eee;
                        }
                        cnt40++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1()) ) {
                        throw new FailedPredicateException(input, "ruleSequenceWithMemoryNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getSequenceWithMemoryNodeAccess().getUnorderedGroup_1());
                    				

                    }
                    break;

            }

            this_BEGIN_19=(Token)match(input,RULE_BEGIN,FOLLOW_9); 

            			newLeafNode(this_BEGIN_19, grammarAccess.getSequenceWithMemoryNodeAccess().getBEGINTerminalRuleCall_2());
            		
            // InternalQualityBtCppParser.g:2672:3: ( (lv_child_20_0= ruleTreeNode ) )
            // InternalQualityBtCppParser.g:2673:4: (lv_child_20_0= ruleTreeNode )
            {
            // InternalQualityBtCppParser.g:2673:4: (lv_child_20_0= ruleTreeNode )
            // InternalQualityBtCppParser.g:2674:5: lv_child_20_0= ruleTreeNode
            {

            					newCompositeNode(grammarAccess.getSequenceWithMemoryNodeAccess().getChildTreeNodeParserRuleCall_3_0());
            				
            pushFollow(FOLLOW_18);
            lv_child_20_0=ruleTreeNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getSequenceWithMemoryNodeRule());
            					}
            					add(
            						current,
            						"child",
            						lv_child_20_0,
            						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            // InternalQualityBtCppParser.g:2691:3: ( (lv_child_21_0= ruleTreeNode ) )*
            loop42:
            do {
                int alt42=2;
                int LA42_0 = input.LA(1);

                if ( ((LA42_0>=KeepRunningUntilFailure && LA42_0<=SetBlackboard)||(LA42_0>=ConsumeQueue && LA42_0<=ScriptAction)||LA42_0==WhileDoElse||(LA42_0>=CoroAction && LA42_0<=IfThenElse)||LA42_0==Inverter||(LA42_0>=RunOnce && LA42_0<=Sleep)||LA42_0==Loop||LA42_0==Test||(LA42_0>=M && LA42_0<=HyphenMinusGreaterThanSign)||(LA42_0>=R && LA42_0<=VerticalLineVerticalLine)||LA42_0==QuestionMark) ) {
                    alt42=1;
                }


                switch (alt42) {
            	case 1 :
            	    // InternalQualityBtCppParser.g:2692:4: (lv_child_21_0= ruleTreeNode )
            	    {
            	    // InternalQualityBtCppParser.g:2692:4: (lv_child_21_0= ruleTreeNode )
            	    // InternalQualityBtCppParser.g:2693:5: lv_child_21_0= ruleTreeNode
            	    {

            	    					newCompositeNode(grammarAccess.getSequenceWithMemoryNodeAccess().getChildTreeNodeParserRuleCall_4_0());
            	    				
            	    pushFollow(FOLLOW_18);
            	    lv_child_21_0=ruleTreeNode();

            	    state._fsp--;


            	    					if (current==null) {
            	    						current = createModelElementForParent(grammarAccess.getSequenceWithMemoryNodeRule());
            	    					}
            	    					add(
            	    						current,
            	    						"child",
            	    						lv_child_21_0,
            	    						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            	    					afterParserOrEnumRuleCall();
            	    				

            	    }


            	    }
            	    break;

            	default :
            	    break loop42;
                }
            } while (true);

            this_END_22=(Token)match(input,RULE_END,FOLLOW_2); 

            			newLeafNode(this_END_22, grammarAccess.getSequenceWithMemoryNodeAccess().getENDTerminalRuleCall_5());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSequenceWithMemoryNode"


    // $ANTLR start "entryRuleSwitchNode"
    // InternalQualityBtCppParser.g:2718:1: entryRuleSwitchNode returns [EObject current=null] : iv_ruleSwitchNode= ruleSwitchNode EOF ;
    public final EObject entryRuleSwitchNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSwitchNode = null;


        try {
            // InternalQualityBtCppParser.g:2718:51: (iv_ruleSwitchNode= ruleSwitchNode EOF )
            // InternalQualityBtCppParser.g:2719:2: iv_ruleSwitchNode= ruleSwitchNode EOF
            {
             newCompositeNode(grammarAccess.getSwitchNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleSwitchNode=ruleSwitchNode();

            state._fsp--;

             current =iv_ruleSwitchNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSwitchNode"


    // $ANTLR start "ruleSwitchNode"
    // InternalQualityBtCppParser.g:2725:1: ruleSwitchNode returns [EObject current=null] : (otherlv_0= Switch ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_19= RULE_BEGIN ( (lv_child_20_0= ruleTreeNode ) ) ( (lv_child_21_0= ruleTreeNode ) )* this_END_22= RULE_END ) ;
    public final EObject ruleSwitchNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token this_BEGIN_19=null;
        Token this_END_22=null;
        AntlrDatatypeRuleToken lv_name_5_0 = null;

        EObject lv_parameters_7_0 = null;

        EObject lv_parameters_9_0 = null;

        EObject lv_satisfices_11_0 = null;

        EObject lv_satisfices_13_0 = null;

        EObject lv_satisfies_15_0 = null;

        EObject lv_satisfies_17_0 = null;

        EObject lv_child_20_0 = null;

        EObject lv_child_21_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:2731:2: ( (otherlv_0= Switch ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_19= RULE_BEGIN ( (lv_child_20_0= ruleTreeNode ) ) ( (lv_child_21_0= ruleTreeNode ) )* this_END_22= RULE_END ) )
            // InternalQualityBtCppParser.g:2732:2: (otherlv_0= Switch ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_19= RULE_BEGIN ( (lv_child_20_0= ruleTreeNode ) ) ( (lv_child_21_0= ruleTreeNode ) )* this_END_22= RULE_END )
            {
            // InternalQualityBtCppParser.g:2732:2: (otherlv_0= Switch ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_19= RULE_BEGIN ( (lv_child_20_0= ruleTreeNode ) ) ( (lv_child_21_0= ruleTreeNode ) )* this_END_22= RULE_END )
            // InternalQualityBtCppParser.g:2733:3: otherlv_0= Switch ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_19= RULE_BEGIN ( (lv_child_20_0= ruleTreeNode ) ) ( (lv_child_21_0= ruleTreeNode ) )* this_END_22= RULE_END
            {
            otherlv_0=(Token)match(input,Switch,FOLLOW_15); 

            			newLeafNode(otherlv_0, grammarAccess.getSwitchNodeAccess().getSwitchKeyword_0());
            		
            // InternalQualityBtCppParser.g:2737:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt47=2;
            int LA47_0 = input.LA(1);

            if ( ((LA47_0>=Parameters && LA47_0<=Satisfies)||LA47_0==Name||(LA47_0>=LeftParenthesis && LA47_0<=RightParenthesis)) ) {
                alt47=1;
            }
            switch (alt47) {
                case 1 :
                    // InternalQualityBtCppParser.g:2738:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:2738:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:2739:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1());
                    				
                    // InternalQualityBtCppParser.g:2742:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:2743:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:2743:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+
                    int cnt46=0;
                    loop46:
                    do {
                        int alt46=7;
                        int LA46_0 = input.LA(1);

                        if ( LA46_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1(), 0) ) {
                            alt46=1;
                        }
                        else if ( LA46_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1(), 1) ) {
                            alt46=2;
                        }
                        else if ( LA46_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1(), 2) ) {
                            alt46=3;
                        }
                        else if ( LA46_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1(), 3) ) {
                            alt46=4;
                        }
                        else if ( LA46_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1(), 4) ) {
                            alt46=5;
                        }
                        else if ( LA46_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1(), 5) ) {
                            alt46=6;
                        }


                        switch (alt46) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:2744:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:2744:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:2745:5: {...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleSwitchNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:2745:107: ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:2746:6: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:2749:9: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:2749:10: {...}? => (otherlv_2= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSwitchNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:2749:19: (otherlv_2= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:2749:20: otherlv_2= LeftParenthesis
                    	    {
                    	    otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_2, grammarAccess.getSwitchNodeAccess().getLeftParenthesisKeyword_1_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:2759:4: ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:2759:4: ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:2760:5: {...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleSwitchNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:2760:107: ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:2761:6: ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:2764:9: ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:2764:10: {...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSwitchNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:2764:19: (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:2764:20: otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) )
                    	    {
                    	    otherlv_3=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getSwitchNodeAccess().getNameKeyword_1_1_0());
                    	    								
                    	    otherlv_4=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getSwitchNodeAccess().getEqualsSignKeyword_1_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:2772:9: ( (lv_name_5_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:2773:10: (lv_name_5_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:2773:10: (lv_name_5_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:2774:11: lv_name_5_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getSwitchNodeAccess().getNameEStringParserRuleCall_1_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_15);
                    	    lv_name_5_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getSwitchNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_5_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:2797:4: ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:2797:4: ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:2798:5: {...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleSwitchNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:2798:107: ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:2799:6: ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:2802:9: ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:2802:10: {...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSwitchNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:2802:19: (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:2802:20: otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_6=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_6, grammarAccess.getSwitchNodeAccess().getParametersKeyword_1_2_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:2806:9: ( (lv_parameters_7_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:2807:10: (lv_parameters_7_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:2807:10: (lv_parameters_7_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:2808:11: lv_parameters_7_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getSwitchNodeAccess().getParametersParameterParserRuleCall_1_2_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_parameters_7_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getSwitchNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_7_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:2825:9: (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )*
                    	    loop43:
                    	    do {
                    	        int alt43=2;
                    	        int LA43_0 = input.LA(1);

                    	        if ( (LA43_0==Comma) ) {
                    	            alt43=1;
                    	        }


                    	        switch (alt43) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:2826:10: otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_8=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_8, grammarAccess.getSwitchNodeAccess().getCommaKeyword_1_2_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:2830:10: ( (lv_parameters_9_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:2831:11: (lv_parameters_9_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:2831:11: (lv_parameters_9_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:2832:12: lv_parameters_9_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getSwitchNodeAccess().getParametersParameterParserRuleCall_1_2_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_parameters_9_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getSwitchNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_9_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop43;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:2856:4: ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:2856:4: ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:2857:5: {...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleSwitchNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:2857:107: ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:2858:6: ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:2861:9: ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:2861:10: {...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSwitchNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:2861:19: (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:2861:20: otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_10=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_10, grammarAccess.getSwitchNodeAccess().getSatisficesKeyword_1_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:2865:9: ( (lv_satisfices_11_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:2866:10: (lv_satisfices_11_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:2866:10: (lv_satisfices_11_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:2867:11: lv_satisfices_11_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getSwitchNodeAccess().getSatisficesQualityParserRuleCall_1_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfices_11_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getSwitchNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_11_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:2884:9: (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )*
                    	    loop44:
                    	    do {
                    	        int alt44=2;
                    	        int LA44_0 = input.LA(1);

                    	        if ( (LA44_0==Comma) ) {
                    	            alt44=1;
                    	        }


                    	        switch (alt44) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:2885:10: otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_12=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_12, grammarAccess.getSwitchNodeAccess().getCommaKeyword_1_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:2889:10: ( (lv_satisfices_13_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:2890:11: (lv_satisfices_13_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:2890:11: (lv_satisfices_13_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:2891:12: lv_satisfices_13_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getSwitchNodeAccess().getSatisficesQualityParserRuleCall_1_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfices_13_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getSwitchNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_13_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop44;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:2915:4: ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:2915:4: ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:2916:5: {...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleSwitchNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:2916:107: ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:2917:6: ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:2920:9: ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:2920:10: {...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSwitchNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:2920:19: (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:2920:20: otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_14=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_14, grammarAccess.getSwitchNodeAccess().getSatisfiesKeyword_1_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:2924:9: ( (lv_satisfies_15_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:2925:10: (lv_satisfies_15_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:2925:10: (lv_satisfies_15_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:2926:11: lv_satisfies_15_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getSwitchNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfies_15_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getSwitchNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_15_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:2943:9: (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )*
                    	    loop45:
                    	    do {
                    	        int alt45=2;
                    	        int LA45_0 = input.LA(1);

                    	        if ( (LA45_0==Comma) ) {
                    	            alt45=1;
                    	        }


                    	        switch (alt45) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:2944:10: otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_16=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_16, grammarAccess.getSwitchNodeAccess().getCommaKeyword_1_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:2948:10: ( (lv_satisfies_17_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:2949:11: (lv_satisfies_17_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:2949:11: (lv_satisfies_17_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:2950:12: lv_satisfies_17_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getSwitchNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfies_17_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getSwitchNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_17_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop45;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:2974:4: ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:2974:4: ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:2975:5: {...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleSwitchNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:2975:107: ( ({...}? => (otherlv_18= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:2976:6: ({...}? => (otherlv_18= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:2979:9: ({...}? => (otherlv_18= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:2979:10: {...}? => (otherlv_18= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSwitchNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:2979:19: (otherlv_18= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:2979:20: otherlv_18= RightParenthesis
                    	    {
                    	    otherlv_18=(Token)match(input,RightParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_18, grammarAccess.getSwitchNodeAccess().getRightParenthesisKeyword_1_5());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt46 >= 1 ) break loop46;
                                EarlyExitException eee =
                                    new EarlyExitException(46, input);
                                throw eee;
                        }
                        cnt46++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1()) ) {
                        throw new FailedPredicateException(input, "ruleSwitchNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getSwitchNodeAccess().getUnorderedGroup_1());
                    				

                    }
                    break;

            }

            this_BEGIN_19=(Token)match(input,RULE_BEGIN,FOLLOW_9); 

            			newLeafNode(this_BEGIN_19, grammarAccess.getSwitchNodeAccess().getBEGINTerminalRuleCall_2());
            		
            // InternalQualityBtCppParser.g:3001:3: ( (lv_child_20_0= ruleTreeNode ) )
            // InternalQualityBtCppParser.g:3002:4: (lv_child_20_0= ruleTreeNode )
            {
            // InternalQualityBtCppParser.g:3002:4: (lv_child_20_0= ruleTreeNode )
            // InternalQualityBtCppParser.g:3003:5: lv_child_20_0= ruleTreeNode
            {

            					newCompositeNode(grammarAccess.getSwitchNodeAccess().getChildTreeNodeParserRuleCall_3_0());
            				
            pushFollow(FOLLOW_18);
            lv_child_20_0=ruleTreeNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getSwitchNodeRule());
            					}
            					add(
            						current,
            						"child",
            						lv_child_20_0,
            						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            // InternalQualityBtCppParser.g:3020:3: ( (lv_child_21_0= ruleTreeNode ) )*
            loop48:
            do {
                int alt48=2;
                int LA48_0 = input.LA(1);

                if ( ((LA48_0>=KeepRunningUntilFailure && LA48_0<=SetBlackboard)||(LA48_0>=ConsumeQueue && LA48_0<=ScriptAction)||LA48_0==WhileDoElse||(LA48_0>=CoroAction && LA48_0<=IfThenElse)||LA48_0==Inverter||(LA48_0>=RunOnce && LA48_0<=Sleep)||LA48_0==Loop||LA48_0==Test||(LA48_0>=M && LA48_0<=HyphenMinusGreaterThanSign)||(LA48_0>=R && LA48_0<=VerticalLineVerticalLine)||LA48_0==QuestionMark) ) {
                    alt48=1;
                }


                switch (alt48) {
            	case 1 :
            	    // InternalQualityBtCppParser.g:3021:4: (lv_child_21_0= ruleTreeNode )
            	    {
            	    // InternalQualityBtCppParser.g:3021:4: (lv_child_21_0= ruleTreeNode )
            	    // InternalQualityBtCppParser.g:3022:5: lv_child_21_0= ruleTreeNode
            	    {

            	    					newCompositeNode(grammarAccess.getSwitchNodeAccess().getChildTreeNodeParserRuleCall_4_0());
            	    				
            	    pushFollow(FOLLOW_18);
            	    lv_child_21_0=ruleTreeNode();

            	    state._fsp--;


            	    					if (current==null) {
            	    						current = createModelElementForParent(grammarAccess.getSwitchNodeRule());
            	    					}
            	    					add(
            	    						current,
            	    						"child",
            	    						lv_child_21_0,
            	    						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            	    					afterParserOrEnumRuleCall();
            	    				

            	    }


            	    }
            	    break;

            	default :
            	    break loop48;
                }
            } while (true);

            this_END_22=(Token)match(input,RULE_END,FOLLOW_2); 

            			newLeafNode(this_END_22, grammarAccess.getSwitchNodeAccess().getENDTerminalRuleCall_5());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSwitchNode"


    // $ANTLR start "entryRuleReactiveFallbackNode"
    // InternalQualityBtCppParser.g:3047:1: entryRuleReactiveFallbackNode returns [EObject current=null] : iv_ruleReactiveFallbackNode= ruleReactiveFallbackNode EOF ;
    public final EObject entryRuleReactiveFallbackNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReactiveFallbackNode = null;


        try {
            // InternalQualityBtCppParser.g:3047:61: (iv_ruleReactiveFallbackNode= ruleReactiveFallbackNode EOF )
            // InternalQualityBtCppParser.g:3048:2: iv_ruleReactiveFallbackNode= ruleReactiveFallbackNode EOF
            {
             newCompositeNode(grammarAccess.getReactiveFallbackNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleReactiveFallbackNode=ruleReactiveFallbackNode();

            state._fsp--;

             current =iv_ruleReactiveFallbackNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleReactiveFallbackNode"


    // $ANTLR start "ruleReactiveFallbackNode"
    // InternalQualityBtCppParser.g:3054:1: ruleReactiveFallbackNode returns [EObject current=null] : (otherlv_0= R ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_19= RULE_BEGIN ( (lv_child_20_0= ruleTreeNode ) ) ( (lv_child_21_0= ruleTreeNode ) )* this_END_22= RULE_END ) ;
    public final EObject ruleReactiveFallbackNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token this_BEGIN_19=null;
        Token this_END_22=null;
        AntlrDatatypeRuleToken lv_name_5_0 = null;

        EObject lv_parameters_7_0 = null;

        EObject lv_parameters_9_0 = null;

        EObject lv_satisfices_11_0 = null;

        EObject lv_satisfices_13_0 = null;

        EObject lv_satisfies_15_0 = null;

        EObject lv_satisfies_17_0 = null;

        EObject lv_child_20_0 = null;

        EObject lv_child_21_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:3060:2: ( (otherlv_0= R ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_19= RULE_BEGIN ( (lv_child_20_0= ruleTreeNode ) ) ( (lv_child_21_0= ruleTreeNode ) )* this_END_22= RULE_END ) )
            // InternalQualityBtCppParser.g:3061:2: (otherlv_0= R ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_19= RULE_BEGIN ( (lv_child_20_0= ruleTreeNode ) ) ( (lv_child_21_0= ruleTreeNode ) )* this_END_22= RULE_END )
            {
            // InternalQualityBtCppParser.g:3061:2: (otherlv_0= R ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_19= RULE_BEGIN ( (lv_child_20_0= ruleTreeNode ) ) ( (lv_child_21_0= ruleTreeNode ) )* this_END_22= RULE_END )
            // InternalQualityBtCppParser.g:3062:3: otherlv_0= R ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_19= RULE_BEGIN ( (lv_child_20_0= ruleTreeNode ) ) ( (lv_child_21_0= ruleTreeNode ) )* this_END_22= RULE_END
            {
            otherlv_0=(Token)match(input,R,FOLLOW_15); 

            			newLeafNode(otherlv_0, grammarAccess.getReactiveFallbackNodeAccess().getRKeyword_0());
            		
            // InternalQualityBtCppParser.g:3066:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt53=2;
            int LA53_0 = input.LA(1);

            if ( ((LA53_0>=Parameters && LA53_0<=Satisfies)||LA53_0==Name||(LA53_0>=LeftParenthesis && LA53_0<=RightParenthesis)) ) {
                alt53=1;
            }
            switch (alt53) {
                case 1 :
                    // InternalQualityBtCppParser.g:3067:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:3067:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:3068:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1());
                    				
                    // InternalQualityBtCppParser.g:3071:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:3072:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:3072:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+
                    int cnt52=0;
                    loop52:
                    do {
                        int alt52=7;
                        int LA52_0 = input.LA(1);

                        if ( LA52_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1(), 0) ) {
                            alt52=1;
                        }
                        else if ( LA52_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1(), 1) ) {
                            alt52=2;
                        }
                        else if ( LA52_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1(), 2) ) {
                            alt52=3;
                        }
                        else if ( LA52_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1(), 3) ) {
                            alt52=4;
                        }
                        else if ( LA52_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1(), 4) ) {
                            alt52=5;
                        }
                        else if ( LA52_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1(), 5) ) {
                            alt52=6;
                        }


                        switch (alt52) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:3073:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:3073:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:3074:5: {...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleReactiveFallbackNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:3074:117: ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:3075:6: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:3078:9: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:3078:10: {...}? => (otherlv_2= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleReactiveFallbackNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:3078:19: (otherlv_2= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:3078:20: otherlv_2= LeftParenthesis
                    	    {
                    	    otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_2, grammarAccess.getReactiveFallbackNodeAccess().getLeftParenthesisKeyword_1_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:3088:4: ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:3088:4: ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:3089:5: {...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleReactiveFallbackNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:3089:117: ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:3090:6: ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:3093:9: ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:3093:10: {...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleReactiveFallbackNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:3093:19: (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:3093:20: otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) )
                    	    {
                    	    otherlv_3=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getReactiveFallbackNodeAccess().getNameKeyword_1_1_0());
                    	    								
                    	    otherlv_4=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getReactiveFallbackNodeAccess().getEqualsSignKeyword_1_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:3101:9: ( (lv_name_5_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:3102:10: (lv_name_5_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:3102:10: (lv_name_5_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:3103:11: lv_name_5_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getReactiveFallbackNodeAccess().getNameEStringParserRuleCall_1_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_15);
                    	    lv_name_5_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getReactiveFallbackNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_5_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:3126:4: ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:3126:4: ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:3127:5: {...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleReactiveFallbackNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:3127:117: ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:3128:6: ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:3131:9: ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:3131:10: {...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleReactiveFallbackNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:3131:19: (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:3131:20: otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_6=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_6, grammarAccess.getReactiveFallbackNodeAccess().getParametersKeyword_1_2_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:3135:9: ( (lv_parameters_7_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:3136:10: (lv_parameters_7_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:3136:10: (lv_parameters_7_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:3137:11: lv_parameters_7_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getReactiveFallbackNodeAccess().getParametersParameterParserRuleCall_1_2_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_parameters_7_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getReactiveFallbackNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_7_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:3154:9: (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )*
                    	    loop49:
                    	    do {
                    	        int alt49=2;
                    	        int LA49_0 = input.LA(1);

                    	        if ( (LA49_0==Comma) ) {
                    	            alt49=1;
                    	        }


                    	        switch (alt49) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:3155:10: otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_8=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_8, grammarAccess.getReactiveFallbackNodeAccess().getCommaKeyword_1_2_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:3159:10: ( (lv_parameters_9_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:3160:11: (lv_parameters_9_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:3160:11: (lv_parameters_9_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:3161:12: lv_parameters_9_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getReactiveFallbackNodeAccess().getParametersParameterParserRuleCall_1_2_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_parameters_9_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getReactiveFallbackNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_9_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop49;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:3185:4: ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:3185:4: ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:3186:5: {...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleReactiveFallbackNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:3186:117: ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:3187:6: ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:3190:9: ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:3190:10: {...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleReactiveFallbackNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:3190:19: (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:3190:20: otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_10=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_10, grammarAccess.getReactiveFallbackNodeAccess().getSatisficesKeyword_1_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:3194:9: ( (lv_satisfices_11_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:3195:10: (lv_satisfices_11_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:3195:10: (lv_satisfices_11_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:3196:11: lv_satisfices_11_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getReactiveFallbackNodeAccess().getSatisficesQualityParserRuleCall_1_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfices_11_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getReactiveFallbackNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_11_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:3213:9: (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )*
                    	    loop50:
                    	    do {
                    	        int alt50=2;
                    	        int LA50_0 = input.LA(1);

                    	        if ( (LA50_0==Comma) ) {
                    	            alt50=1;
                    	        }


                    	        switch (alt50) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:3214:10: otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_12=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_12, grammarAccess.getReactiveFallbackNodeAccess().getCommaKeyword_1_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:3218:10: ( (lv_satisfices_13_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:3219:11: (lv_satisfices_13_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:3219:11: (lv_satisfices_13_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:3220:12: lv_satisfices_13_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getReactiveFallbackNodeAccess().getSatisficesQualityParserRuleCall_1_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfices_13_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getReactiveFallbackNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_13_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop50;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:3244:4: ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:3244:4: ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:3245:5: {...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleReactiveFallbackNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:3245:117: ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:3246:6: ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:3249:9: ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:3249:10: {...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleReactiveFallbackNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:3249:19: (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:3249:20: otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_14=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_14, grammarAccess.getReactiveFallbackNodeAccess().getSatisfiesKeyword_1_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:3253:9: ( (lv_satisfies_15_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:3254:10: (lv_satisfies_15_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:3254:10: (lv_satisfies_15_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:3255:11: lv_satisfies_15_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getReactiveFallbackNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfies_15_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getReactiveFallbackNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_15_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:3272:9: (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )*
                    	    loop51:
                    	    do {
                    	        int alt51=2;
                    	        int LA51_0 = input.LA(1);

                    	        if ( (LA51_0==Comma) ) {
                    	            alt51=1;
                    	        }


                    	        switch (alt51) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:3273:10: otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_16=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_16, grammarAccess.getReactiveFallbackNodeAccess().getCommaKeyword_1_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:3277:10: ( (lv_satisfies_17_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:3278:11: (lv_satisfies_17_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:3278:11: (lv_satisfies_17_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:3279:12: lv_satisfies_17_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getReactiveFallbackNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfies_17_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getReactiveFallbackNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_17_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop51;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:3303:4: ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:3303:4: ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:3304:5: {...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleReactiveFallbackNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:3304:117: ( ({...}? => (otherlv_18= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:3305:6: ({...}? => (otherlv_18= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:3308:9: ({...}? => (otherlv_18= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:3308:10: {...}? => (otherlv_18= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleReactiveFallbackNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:3308:19: (otherlv_18= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:3308:20: otherlv_18= RightParenthesis
                    	    {
                    	    otherlv_18=(Token)match(input,RightParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_18, grammarAccess.getReactiveFallbackNodeAccess().getRightParenthesisKeyword_1_5());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt52 >= 1 ) break loop52;
                                EarlyExitException eee =
                                    new EarlyExitException(52, input);
                                throw eee;
                        }
                        cnt52++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1()) ) {
                        throw new FailedPredicateException(input, "ruleReactiveFallbackNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getReactiveFallbackNodeAccess().getUnorderedGroup_1());
                    				

                    }
                    break;

            }

            this_BEGIN_19=(Token)match(input,RULE_BEGIN,FOLLOW_9); 

            			newLeafNode(this_BEGIN_19, grammarAccess.getReactiveFallbackNodeAccess().getBEGINTerminalRuleCall_2());
            		
            // InternalQualityBtCppParser.g:3330:3: ( (lv_child_20_0= ruleTreeNode ) )
            // InternalQualityBtCppParser.g:3331:4: (lv_child_20_0= ruleTreeNode )
            {
            // InternalQualityBtCppParser.g:3331:4: (lv_child_20_0= ruleTreeNode )
            // InternalQualityBtCppParser.g:3332:5: lv_child_20_0= ruleTreeNode
            {

            					newCompositeNode(grammarAccess.getReactiveFallbackNodeAccess().getChildTreeNodeParserRuleCall_3_0());
            				
            pushFollow(FOLLOW_18);
            lv_child_20_0=ruleTreeNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getReactiveFallbackNodeRule());
            					}
            					add(
            						current,
            						"child",
            						lv_child_20_0,
            						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            // InternalQualityBtCppParser.g:3349:3: ( (lv_child_21_0= ruleTreeNode ) )*
            loop54:
            do {
                int alt54=2;
                int LA54_0 = input.LA(1);

                if ( ((LA54_0>=KeepRunningUntilFailure && LA54_0<=SetBlackboard)||(LA54_0>=ConsumeQueue && LA54_0<=ScriptAction)||LA54_0==WhileDoElse||(LA54_0>=CoroAction && LA54_0<=IfThenElse)||LA54_0==Inverter||(LA54_0>=RunOnce && LA54_0<=Sleep)||LA54_0==Loop||LA54_0==Test||(LA54_0>=M && LA54_0<=HyphenMinusGreaterThanSign)||(LA54_0>=R && LA54_0<=VerticalLineVerticalLine)||LA54_0==QuestionMark) ) {
                    alt54=1;
                }


                switch (alt54) {
            	case 1 :
            	    // InternalQualityBtCppParser.g:3350:4: (lv_child_21_0= ruleTreeNode )
            	    {
            	    // InternalQualityBtCppParser.g:3350:4: (lv_child_21_0= ruleTreeNode )
            	    // InternalQualityBtCppParser.g:3351:5: lv_child_21_0= ruleTreeNode
            	    {

            	    					newCompositeNode(grammarAccess.getReactiveFallbackNodeAccess().getChildTreeNodeParserRuleCall_4_0());
            	    				
            	    pushFollow(FOLLOW_18);
            	    lv_child_21_0=ruleTreeNode();

            	    state._fsp--;


            	    					if (current==null) {
            	    						current = createModelElementForParent(grammarAccess.getReactiveFallbackNodeRule());
            	    					}
            	    					add(
            	    						current,
            	    						"child",
            	    						lv_child_21_0,
            	    						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            	    					afterParserOrEnumRuleCall();
            	    				

            	    }


            	    }
            	    break;

            	default :
            	    break loop54;
                }
            } while (true);

            this_END_22=(Token)match(input,RULE_END,FOLLOW_2); 

            			newLeafNode(this_END_22, grammarAccess.getReactiveFallbackNodeAccess().getENDTerminalRuleCall_5());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReactiveFallbackNode"


    // $ANTLR start "entryRuleWhileDoElseNode"
    // InternalQualityBtCppParser.g:3376:1: entryRuleWhileDoElseNode returns [EObject current=null] : iv_ruleWhileDoElseNode= ruleWhileDoElseNode EOF ;
    public final EObject entryRuleWhileDoElseNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleWhileDoElseNode = null;


        try {
            // InternalQualityBtCppParser.g:3376:56: (iv_ruleWhileDoElseNode= ruleWhileDoElseNode EOF )
            // InternalQualityBtCppParser.g:3377:2: iv_ruleWhileDoElseNode= ruleWhileDoElseNode EOF
            {
             newCompositeNode(grammarAccess.getWhileDoElseNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleWhileDoElseNode=ruleWhileDoElseNode();

            state._fsp--;

             current =iv_ruleWhileDoElseNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleWhileDoElseNode"


    // $ANTLR start "ruleWhileDoElseNode"
    // InternalQualityBtCppParser.g:3383:1: ruleWhileDoElseNode returns [EObject current=null] : (otherlv_0= WhileDoElse ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_19= RULE_BEGIN ( (lv_child_20_0= ruleTreeNode ) ) ( (lv_child_21_0= ruleTreeNode ) )* this_END_22= RULE_END ) ;
    public final EObject ruleWhileDoElseNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token this_BEGIN_19=null;
        Token this_END_22=null;
        AntlrDatatypeRuleToken lv_name_5_0 = null;

        EObject lv_parameters_7_0 = null;

        EObject lv_parameters_9_0 = null;

        EObject lv_satisfices_11_0 = null;

        EObject lv_satisfices_13_0 = null;

        EObject lv_satisfies_15_0 = null;

        EObject lv_satisfies_17_0 = null;

        EObject lv_child_20_0 = null;

        EObject lv_child_21_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:3389:2: ( (otherlv_0= WhileDoElse ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_19= RULE_BEGIN ( (lv_child_20_0= ruleTreeNode ) ) ( (lv_child_21_0= ruleTreeNode ) )* this_END_22= RULE_END ) )
            // InternalQualityBtCppParser.g:3390:2: (otherlv_0= WhileDoElse ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_19= RULE_BEGIN ( (lv_child_20_0= ruleTreeNode ) ) ( (lv_child_21_0= ruleTreeNode ) )* this_END_22= RULE_END )
            {
            // InternalQualityBtCppParser.g:3390:2: (otherlv_0= WhileDoElse ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_19= RULE_BEGIN ( (lv_child_20_0= ruleTreeNode ) ) ( (lv_child_21_0= ruleTreeNode ) )* this_END_22= RULE_END )
            // InternalQualityBtCppParser.g:3391:3: otherlv_0= WhileDoElse ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_19= RULE_BEGIN ( (lv_child_20_0= ruleTreeNode ) ) ( (lv_child_21_0= ruleTreeNode ) )* this_END_22= RULE_END
            {
            otherlv_0=(Token)match(input,WhileDoElse,FOLLOW_15); 

            			newLeafNode(otherlv_0, grammarAccess.getWhileDoElseNodeAccess().getWhileDoElseKeyword_0());
            		
            // InternalQualityBtCppParser.g:3395:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt59=2;
            int LA59_0 = input.LA(1);

            if ( ((LA59_0>=Parameters && LA59_0<=Satisfies)||LA59_0==Name||(LA59_0>=LeftParenthesis && LA59_0<=RightParenthesis)) ) {
                alt59=1;
            }
            switch (alt59) {
                case 1 :
                    // InternalQualityBtCppParser.g:3396:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:3396:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:3397:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1());
                    				
                    // InternalQualityBtCppParser.g:3400:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:3401:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:3401:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+
                    int cnt58=0;
                    loop58:
                    do {
                        int alt58=7;
                        int LA58_0 = input.LA(1);

                        if ( LA58_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1(), 0) ) {
                            alt58=1;
                        }
                        else if ( LA58_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1(), 1) ) {
                            alt58=2;
                        }
                        else if ( LA58_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1(), 2) ) {
                            alt58=3;
                        }
                        else if ( LA58_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1(), 3) ) {
                            alt58=4;
                        }
                        else if ( LA58_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1(), 4) ) {
                            alt58=5;
                        }
                        else if ( LA58_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1(), 5) ) {
                            alt58=6;
                        }


                        switch (alt58) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:3402:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:3402:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:3403:5: {...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleWhileDoElseNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:3403:112: ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:3404:6: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:3407:9: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:3407:10: {...}? => (otherlv_2= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleWhileDoElseNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:3407:19: (otherlv_2= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:3407:20: otherlv_2= LeftParenthesis
                    	    {
                    	    otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_2, grammarAccess.getWhileDoElseNodeAccess().getLeftParenthesisKeyword_1_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:3417:4: ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:3417:4: ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:3418:5: {...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleWhileDoElseNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:3418:112: ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:3419:6: ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:3422:9: ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:3422:10: {...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleWhileDoElseNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:3422:19: (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:3422:20: otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) )
                    	    {
                    	    otherlv_3=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getWhileDoElseNodeAccess().getNameKeyword_1_1_0());
                    	    								
                    	    otherlv_4=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getWhileDoElseNodeAccess().getEqualsSignKeyword_1_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:3430:9: ( (lv_name_5_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:3431:10: (lv_name_5_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:3431:10: (lv_name_5_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:3432:11: lv_name_5_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getWhileDoElseNodeAccess().getNameEStringParserRuleCall_1_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_15);
                    	    lv_name_5_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getWhileDoElseNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_5_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:3455:4: ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:3455:4: ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:3456:5: {...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleWhileDoElseNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:3456:112: ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:3457:6: ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:3460:9: ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:3460:10: {...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleWhileDoElseNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:3460:19: (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:3460:20: otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_6=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_6, grammarAccess.getWhileDoElseNodeAccess().getParametersKeyword_1_2_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:3464:9: ( (lv_parameters_7_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:3465:10: (lv_parameters_7_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:3465:10: (lv_parameters_7_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:3466:11: lv_parameters_7_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getWhileDoElseNodeAccess().getParametersParameterParserRuleCall_1_2_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_parameters_7_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getWhileDoElseNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_7_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:3483:9: (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )*
                    	    loop55:
                    	    do {
                    	        int alt55=2;
                    	        int LA55_0 = input.LA(1);

                    	        if ( (LA55_0==Comma) ) {
                    	            alt55=1;
                    	        }


                    	        switch (alt55) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:3484:10: otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_8=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_8, grammarAccess.getWhileDoElseNodeAccess().getCommaKeyword_1_2_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:3488:10: ( (lv_parameters_9_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:3489:11: (lv_parameters_9_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:3489:11: (lv_parameters_9_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:3490:12: lv_parameters_9_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getWhileDoElseNodeAccess().getParametersParameterParserRuleCall_1_2_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_parameters_9_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getWhileDoElseNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_9_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop55;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:3514:4: ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:3514:4: ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:3515:5: {...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleWhileDoElseNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:3515:112: ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:3516:6: ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:3519:9: ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:3519:10: {...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleWhileDoElseNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:3519:19: (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:3519:20: otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_10=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_10, grammarAccess.getWhileDoElseNodeAccess().getSatisficesKeyword_1_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:3523:9: ( (lv_satisfices_11_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:3524:10: (lv_satisfices_11_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:3524:10: (lv_satisfices_11_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:3525:11: lv_satisfices_11_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getWhileDoElseNodeAccess().getSatisficesQualityParserRuleCall_1_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfices_11_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getWhileDoElseNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_11_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:3542:9: (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )*
                    	    loop56:
                    	    do {
                    	        int alt56=2;
                    	        int LA56_0 = input.LA(1);

                    	        if ( (LA56_0==Comma) ) {
                    	            alt56=1;
                    	        }


                    	        switch (alt56) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:3543:10: otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_12=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_12, grammarAccess.getWhileDoElseNodeAccess().getCommaKeyword_1_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:3547:10: ( (lv_satisfices_13_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:3548:11: (lv_satisfices_13_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:3548:11: (lv_satisfices_13_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:3549:12: lv_satisfices_13_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getWhileDoElseNodeAccess().getSatisficesQualityParserRuleCall_1_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfices_13_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getWhileDoElseNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_13_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop56;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:3573:4: ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:3573:4: ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:3574:5: {...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleWhileDoElseNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:3574:112: ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:3575:6: ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:3578:9: ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:3578:10: {...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleWhileDoElseNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:3578:19: (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:3578:20: otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_14=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_14, grammarAccess.getWhileDoElseNodeAccess().getSatisfiesKeyword_1_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:3582:9: ( (lv_satisfies_15_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:3583:10: (lv_satisfies_15_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:3583:10: (lv_satisfies_15_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:3584:11: lv_satisfies_15_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getWhileDoElseNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfies_15_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getWhileDoElseNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_15_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:3601:9: (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )*
                    	    loop57:
                    	    do {
                    	        int alt57=2;
                    	        int LA57_0 = input.LA(1);

                    	        if ( (LA57_0==Comma) ) {
                    	            alt57=1;
                    	        }


                    	        switch (alt57) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:3602:10: otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_16=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_16, grammarAccess.getWhileDoElseNodeAccess().getCommaKeyword_1_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:3606:10: ( (lv_satisfies_17_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:3607:11: (lv_satisfies_17_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:3607:11: (lv_satisfies_17_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:3608:12: lv_satisfies_17_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getWhileDoElseNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfies_17_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getWhileDoElseNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_17_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop57;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:3632:4: ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:3632:4: ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:3633:5: {...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleWhileDoElseNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:3633:112: ( ({...}? => (otherlv_18= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:3634:6: ({...}? => (otherlv_18= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:3637:9: ({...}? => (otherlv_18= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:3637:10: {...}? => (otherlv_18= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleWhileDoElseNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:3637:19: (otherlv_18= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:3637:20: otherlv_18= RightParenthesis
                    	    {
                    	    otherlv_18=(Token)match(input,RightParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_18, grammarAccess.getWhileDoElseNodeAccess().getRightParenthesisKeyword_1_5());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt58 >= 1 ) break loop58;
                                EarlyExitException eee =
                                    new EarlyExitException(58, input);
                                throw eee;
                        }
                        cnt58++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1()) ) {
                        throw new FailedPredicateException(input, "ruleWhileDoElseNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getWhileDoElseNodeAccess().getUnorderedGroup_1());
                    				

                    }
                    break;

            }

            this_BEGIN_19=(Token)match(input,RULE_BEGIN,FOLLOW_9); 

            			newLeafNode(this_BEGIN_19, grammarAccess.getWhileDoElseNodeAccess().getBEGINTerminalRuleCall_2());
            		
            // InternalQualityBtCppParser.g:3659:3: ( (lv_child_20_0= ruleTreeNode ) )
            // InternalQualityBtCppParser.g:3660:4: (lv_child_20_0= ruleTreeNode )
            {
            // InternalQualityBtCppParser.g:3660:4: (lv_child_20_0= ruleTreeNode )
            // InternalQualityBtCppParser.g:3661:5: lv_child_20_0= ruleTreeNode
            {

            					newCompositeNode(grammarAccess.getWhileDoElseNodeAccess().getChildTreeNodeParserRuleCall_3_0());
            				
            pushFollow(FOLLOW_18);
            lv_child_20_0=ruleTreeNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getWhileDoElseNodeRule());
            					}
            					add(
            						current,
            						"child",
            						lv_child_20_0,
            						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            // InternalQualityBtCppParser.g:3678:3: ( (lv_child_21_0= ruleTreeNode ) )*
            loop60:
            do {
                int alt60=2;
                int LA60_0 = input.LA(1);

                if ( ((LA60_0>=KeepRunningUntilFailure && LA60_0<=SetBlackboard)||(LA60_0>=ConsumeQueue && LA60_0<=ScriptAction)||LA60_0==WhileDoElse||(LA60_0>=CoroAction && LA60_0<=IfThenElse)||LA60_0==Inverter||(LA60_0>=RunOnce && LA60_0<=Sleep)||LA60_0==Loop||LA60_0==Test||(LA60_0>=M && LA60_0<=HyphenMinusGreaterThanSign)||(LA60_0>=R && LA60_0<=VerticalLineVerticalLine)||LA60_0==QuestionMark) ) {
                    alt60=1;
                }


                switch (alt60) {
            	case 1 :
            	    // InternalQualityBtCppParser.g:3679:4: (lv_child_21_0= ruleTreeNode )
            	    {
            	    // InternalQualityBtCppParser.g:3679:4: (lv_child_21_0= ruleTreeNode )
            	    // InternalQualityBtCppParser.g:3680:5: lv_child_21_0= ruleTreeNode
            	    {

            	    					newCompositeNode(grammarAccess.getWhileDoElseNodeAccess().getChildTreeNodeParserRuleCall_4_0());
            	    				
            	    pushFollow(FOLLOW_18);
            	    lv_child_21_0=ruleTreeNode();

            	    state._fsp--;


            	    					if (current==null) {
            	    						current = createModelElementForParent(grammarAccess.getWhileDoElseNodeRule());
            	    					}
            	    					add(
            	    						current,
            	    						"child",
            	    						lv_child_21_0,
            	    						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            	    					afterParserOrEnumRuleCall();
            	    				

            	    }


            	    }
            	    break;

            	default :
            	    break loop60;
                }
            } while (true);

            this_END_22=(Token)match(input,RULE_END,FOLLOW_2); 

            			newLeafNode(this_END_22, grammarAccess.getWhileDoElseNodeAccess().getENDTerminalRuleCall_5());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleWhileDoElseNode"


    // $ANTLR start "entryRuleReactiveSequenceNode"
    // InternalQualityBtCppParser.g:3705:1: entryRuleReactiveSequenceNode returns [EObject current=null] : iv_ruleReactiveSequenceNode= ruleReactiveSequenceNode EOF ;
    public final EObject entryRuleReactiveSequenceNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReactiveSequenceNode = null;


        try {
            // InternalQualityBtCppParser.g:3705:61: (iv_ruleReactiveSequenceNode= ruleReactiveSequenceNode EOF )
            // InternalQualityBtCppParser.g:3706:2: iv_ruleReactiveSequenceNode= ruleReactiveSequenceNode EOF
            {
             newCompositeNode(grammarAccess.getReactiveSequenceNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleReactiveSequenceNode=ruleReactiveSequenceNode();

            state._fsp--;

             current =iv_ruleReactiveSequenceNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleReactiveSequenceNode"


    // $ANTLR start "ruleReactiveSequenceNode"
    // InternalQualityBtCppParser.g:3712:1: ruleReactiveSequenceNode returns [EObject current=null] : (otherlv_0= R_1 ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_19= RULE_BEGIN ( (lv_child_20_0= ruleTreeNode ) ) ( (lv_child_21_0= ruleTreeNode ) )* this_END_22= RULE_END ) ;
    public final EObject ruleReactiveSequenceNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token this_BEGIN_19=null;
        Token this_END_22=null;
        AntlrDatatypeRuleToken lv_name_5_0 = null;

        EObject lv_parameters_7_0 = null;

        EObject lv_parameters_9_0 = null;

        EObject lv_satisfices_11_0 = null;

        EObject lv_satisfices_13_0 = null;

        EObject lv_satisfies_15_0 = null;

        EObject lv_satisfies_17_0 = null;

        EObject lv_child_20_0 = null;

        EObject lv_child_21_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:3718:2: ( (otherlv_0= R_1 ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_19= RULE_BEGIN ( (lv_child_20_0= ruleTreeNode ) ) ( (lv_child_21_0= ruleTreeNode ) )* this_END_22= RULE_END ) )
            // InternalQualityBtCppParser.g:3719:2: (otherlv_0= R_1 ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_19= RULE_BEGIN ( (lv_child_20_0= ruleTreeNode ) ) ( (lv_child_21_0= ruleTreeNode ) )* this_END_22= RULE_END )
            {
            // InternalQualityBtCppParser.g:3719:2: (otherlv_0= R_1 ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_19= RULE_BEGIN ( (lv_child_20_0= ruleTreeNode ) ) ( (lv_child_21_0= ruleTreeNode ) )* this_END_22= RULE_END )
            // InternalQualityBtCppParser.g:3720:3: otherlv_0= R_1 ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_19= RULE_BEGIN ( (lv_child_20_0= ruleTreeNode ) ) ( (lv_child_21_0= ruleTreeNode ) )* this_END_22= RULE_END
            {
            otherlv_0=(Token)match(input,R_1,FOLLOW_15); 

            			newLeafNode(otherlv_0, grammarAccess.getReactiveSequenceNodeAccess().getRKeyword_0());
            		
            // InternalQualityBtCppParser.g:3724:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt65=2;
            int LA65_0 = input.LA(1);

            if ( ((LA65_0>=Parameters && LA65_0<=Satisfies)||LA65_0==Name||(LA65_0>=LeftParenthesis && LA65_0<=RightParenthesis)) ) {
                alt65=1;
            }
            switch (alt65) {
                case 1 :
                    // InternalQualityBtCppParser.g:3725:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:3725:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:3726:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1());
                    				
                    // InternalQualityBtCppParser.g:3729:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:3730:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:3730:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+
                    int cnt64=0;
                    loop64:
                    do {
                        int alt64=7;
                        int LA64_0 = input.LA(1);

                        if ( LA64_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1(), 0) ) {
                            alt64=1;
                        }
                        else if ( LA64_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1(), 1) ) {
                            alt64=2;
                        }
                        else if ( LA64_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1(), 2) ) {
                            alt64=3;
                        }
                        else if ( LA64_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1(), 3) ) {
                            alt64=4;
                        }
                        else if ( LA64_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1(), 4) ) {
                            alt64=5;
                        }
                        else if ( LA64_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1(), 5) ) {
                            alt64=6;
                        }


                        switch (alt64) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:3731:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:3731:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:3732:5: {...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleReactiveSequenceNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:3732:117: ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:3733:6: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:3736:9: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:3736:10: {...}? => (otherlv_2= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleReactiveSequenceNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:3736:19: (otherlv_2= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:3736:20: otherlv_2= LeftParenthesis
                    	    {
                    	    otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_2, grammarAccess.getReactiveSequenceNodeAccess().getLeftParenthesisKeyword_1_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:3746:4: ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:3746:4: ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:3747:5: {...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleReactiveSequenceNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:3747:117: ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:3748:6: ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:3751:9: ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:3751:10: {...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleReactiveSequenceNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:3751:19: (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:3751:20: otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) )
                    	    {
                    	    otherlv_3=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getReactiveSequenceNodeAccess().getNameKeyword_1_1_0());
                    	    								
                    	    otherlv_4=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getReactiveSequenceNodeAccess().getEqualsSignKeyword_1_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:3759:9: ( (lv_name_5_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:3760:10: (lv_name_5_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:3760:10: (lv_name_5_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:3761:11: lv_name_5_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getReactiveSequenceNodeAccess().getNameEStringParserRuleCall_1_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_15);
                    	    lv_name_5_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getReactiveSequenceNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_5_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:3784:4: ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:3784:4: ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:3785:5: {...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleReactiveSequenceNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:3785:117: ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:3786:6: ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:3789:9: ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:3789:10: {...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleReactiveSequenceNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:3789:19: (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:3789:20: otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_6=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_6, grammarAccess.getReactiveSequenceNodeAccess().getParametersKeyword_1_2_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:3793:9: ( (lv_parameters_7_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:3794:10: (lv_parameters_7_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:3794:10: (lv_parameters_7_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:3795:11: lv_parameters_7_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getReactiveSequenceNodeAccess().getParametersParameterParserRuleCall_1_2_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_parameters_7_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getReactiveSequenceNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_7_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:3812:9: (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )*
                    	    loop61:
                    	    do {
                    	        int alt61=2;
                    	        int LA61_0 = input.LA(1);

                    	        if ( (LA61_0==Comma) ) {
                    	            alt61=1;
                    	        }


                    	        switch (alt61) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:3813:10: otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_8=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_8, grammarAccess.getReactiveSequenceNodeAccess().getCommaKeyword_1_2_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:3817:10: ( (lv_parameters_9_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:3818:11: (lv_parameters_9_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:3818:11: (lv_parameters_9_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:3819:12: lv_parameters_9_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getReactiveSequenceNodeAccess().getParametersParameterParserRuleCall_1_2_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_parameters_9_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getReactiveSequenceNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_9_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop61;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:3843:4: ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:3843:4: ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:3844:5: {...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleReactiveSequenceNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:3844:117: ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:3845:6: ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:3848:9: ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:3848:10: {...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleReactiveSequenceNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:3848:19: (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:3848:20: otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_10=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_10, grammarAccess.getReactiveSequenceNodeAccess().getSatisficesKeyword_1_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:3852:9: ( (lv_satisfices_11_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:3853:10: (lv_satisfices_11_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:3853:10: (lv_satisfices_11_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:3854:11: lv_satisfices_11_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getReactiveSequenceNodeAccess().getSatisficesQualityParserRuleCall_1_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfices_11_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getReactiveSequenceNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_11_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:3871:9: (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )*
                    	    loop62:
                    	    do {
                    	        int alt62=2;
                    	        int LA62_0 = input.LA(1);

                    	        if ( (LA62_0==Comma) ) {
                    	            alt62=1;
                    	        }


                    	        switch (alt62) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:3872:10: otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_12=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_12, grammarAccess.getReactiveSequenceNodeAccess().getCommaKeyword_1_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:3876:10: ( (lv_satisfices_13_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:3877:11: (lv_satisfices_13_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:3877:11: (lv_satisfices_13_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:3878:12: lv_satisfices_13_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getReactiveSequenceNodeAccess().getSatisficesQualityParserRuleCall_1_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfices_13_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getReactiveSequenceNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_13_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop62;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:3902:4: ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:3902:4: ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:3903:5: {...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleReactiveSequenceNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:3903:117: ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:3904:6: ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:3907:9: ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:3907:10: {...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleReactiveSequenceNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:3907:19: (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:3907:20: otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_14=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_14, grammarAccess.getReactiveSequenceNodeAccess().getSatisfiesKeyword_1_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:3911:9: ( (lv_satisfies_15_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:3912:10: (lv_satisfies_15_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:3912:10: (lv_satisfies_15_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:3913:11: lv_satisfies_15_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getReactiveSequenceNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfies_15_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getReactiveSequenceNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_15_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:3930:9: (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )*
                    	    loop63:
                    	    do {
                    	        int alt63=2;
                    	        int LA63_0 = input.LA(1);

                    	        if ( (LA63_0==Comma) ) {
                    	            alt63=1;
                    	        }


                    	        switch (alt63) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:3931:10: otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_16=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_16, grammarAccess.getReactiveSequenceNodeAccess().getCommaKeyword_1_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:3935:10: ( (lv_satisfies_17_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:3936:11: (lv_satisfies_17_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:3936:11: (lv_satisfies_17_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:3937:12: lv_satisfies_17_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getReactiveSequenceNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfies_17_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getReactiveSequenceNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_17_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop63;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:3961:4: ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:3961:4: ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:3962:5: {...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleReactiveSequenceNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:3962:117: ( ({...}? => (otherlv_18= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:3963:6: ({...}? => (otherlv_18= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:3966:9: ({...}? => (otherlv_18= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:3966:10: {...}? => (otherlv_18= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleReactiveSequenceNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:3966:19: (otherlv_18= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:3966:20: otherlv_18= RightParenthesis
                    	    {
                    	    otherlv_18=(Token)match(input,RightParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_18, grammarAccess.getReactiveSequenceNodeAccess().getRightParenthesisKeyword_1_5());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt64 >= 1 ) break loop64;
                                EarlyExitException eee =
                                    new EarlyExitException(64, input);
                                throw eee;
                        }
                        cnt64++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1()) ) {
                        throw new FailedPredicateException(input, "ruleReactiveSequenceNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getReactiveSequenceNodeAccess().getUnorderedGroup_1());
                    				

                    }
                    break;

            }

            this_BEGIN_19=(Token)match(input,RULE_BEGIN,FOLLOW_9); 

            			newLeafNode(this_BEGIN_19, grammarAccess.getReactiveSequenceNodeAccess().getBEGINTerminalRuleCall_2());
            		
            // InternalQualityBtCppParser.g:3988:3: ( (lv_child_20_0= ruleTreeNode ) )
            // InternalQualityBtCppParser.g:3989:4: (lv_child_20_0= ruleTreeNode )
            {
            // InternalQualityBtCppParser.g:3989:4: (lv_child_20_0= ruleTreeNode )
            // InternalQualityBtCppParser.g:3990:5: lv_child_20_0= ruleTreeNode
            {

            					newCompositeNode(grammarAccess.getReactiveSequenceNodeAccess().getChildTreeNodeParserRuleCall_3_0());
            				
            pushFollow(FOLLOW_18);
            lv_child_20_0=ruleTreeNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getReactiveSequenceNodeRule());
            					}
            					add(
            						current,
            						"child",
            						lv_child_20_0,
            						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            // InternalQualityBtCppParser.g:4007:3: ( (lv_child_21_0= ruleTreeNode ) )*
            loop66:
            do {
                int alt66=2;
                int LA66_0 = input.LA(1);

                if ( ((LA66_0>=KeepRunningUntilFailure && LA66_0<=SetBlackboard)||(LA66_0>=ConsumeQueue && LA66_0<=ScriptAction)||LA66_0==WhileDoElse||(LA66_0>=CoroAction && LA66_0<=IfThenElse)||LA66_0==Inverter||(LA66_0>=RunOnce && LA66_0<=Sleep)||LA66_0==Loop||LA66_0==Test||(LA66_0>=M && LA66_0<=HyphenMinusGreaterThanSign)||(LA66_0>=R && LA66_0<=VerticalLineVerticalLine)||LA66_0==QuestionMark) ) {
                    alt66=1;
                }


                switch (alt66) {
            	case 1 :
            	    // InternalQualityBtCppParser.g:4008:4: (lv_child_21_0= ruleTreeNode )
            	    {
            	    // InternalQualityBtCppParser.g:4008:4: (lv_child_21_0= ruleTreeNode )
            	    // InternalQualityBtCppParser.g:4009:5: lv_child_21_0= ruleTreeNode
            	    {

            	    					newCompositeNode(grammarAccess.getReactiveSequenceNodeAccess().getChildTreeNodeParserRuleCall_4_0());
            	    				
            	    pushFollow(FOLLOW_18);
            	    lv_child_21_0=ruleTreeNode();

            	    state._fsp--;


            	    					if (current==null) {
            	    						current = createModelElementForParent(grammarAccess.getReactiveSequenceNodeRule());
            	    					}
            	    					add(
            	    						current,
            	    						"child",
            	    						lv_child_21_0,
            	    						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            	    					afterParserOrEnumRuleCall();
            	    				

            	    }


            	    }
            	    break;

            	default :
            	    break loop66;
                }
            } while (true);

            this_END_22=(Token)match(input,RULE_END,FOLLOW_2); 

            			newLeafNode(this_END_22, grammarAccess.getReactiveSequenceNodeAccess().getENDTerminalRuleCall_5());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReactiveSequenceNode"


    // $ANTLR start "entryRuleSequenceNode"
    // InternalQualityBtCppParser.g:4034:1: entryRuleSequenceNode returns [EObject current=null] : iv_ruleSequenceNode= ruleSequenceNode EOF ;
    public final EObject entryRuleSequenceNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSequenceNode = null;


        try {
            // InternalQualityBtCppParser.g:4034:53: (iv_ruleSequenceNode= ruleSequenceNode EOF )
            // InternalQualityBtCppParser.g:4035:2: iv_ruleSequenceNode= ruleSequenceNode EOF
            {
             newCompositeNode(grammarAccess.getSequenceNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleSequenceNode=ruleSequenceNode();

            state._fsp--;

             current =iv_ruleSequenceNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSequenceNode"


    // $ANTLR start "ruleSequenceNode"
    // InternalQualityBtCppParser.g:4041:1: ruleSequenceNode returns [EObject current=null] : (otherlv_0= HyphenMinusGreaterThanSign ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_19= RULE_BEGIN ( (lv_child_20_0= ruleTreeNode ) ) ( (lv_child_21_0= ruleTreeNode ) )* this_END_22= RULE_END ) ;
    public final EObject ruleSequenceNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token this_BEGIN_19=null;
        Token this_END_22=null;
        AntlrDatatypeRuleToken lv_name_5_0 = null;

        EObject lv_parameters_7_0 = null;

        EObject lv_parameters_9_0 = null;

        EObject lv_satisfices_11_0 = null;

        EObject lv_satisfices_13_0 = null;

        EObject lv_satisfies_15_0 = null;

        EObject lv_satisfies_17_0 = null;

        EObject lv_child_20_0 = null;

        EObject lv_child_21_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:4047:2: ( (otherlv_0= HyphenMinusGreaterThanSign ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_19= RULE_BEGIN ( (lv_child_20_0= ruleTreeNode ) ) ( (lv_child_21_0= ruleTreeNode ) )* this_END_22= RULE_END ) )
            // InternalQualityBtCppParser.g:4048:2: (otherlv_0= HyphenMinusGreaterThanSign ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_19= RULE_BEGIN ( (lv_child_20_0= ruleTreeNode ) ) ( (lv_child_21_0= ruleTreeNode ) )* this_END_22= RULE_END )
            {
            // InternalQualityBtCppParser.g:4048:2: (otherlv_0= HyphenMinusGreaterThanSign ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_19= RULE_BEGIN ( (lv_child_20_0= ruleTreeNode ) ) ( (lv_child_21_0= ruleTreeNode ) )* this_END_22= RULE_END )
            // InternalQualityBtCppParser.g:4049:3: otherlv_0= HyphenMinusGreaterThanSign ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_19= RULE_BEGIN ( (lv_child_20_0= ruleTreeNode ) ) ( (lv_child_21_0= ruleTreeNode ) )* this_END_22= RULE_END
            {
            otherlv_0=(Token)match(input,HyphenMinusGreaterThanSign,FOLLOW_15); 

            			newLeafNode(otherlv_0, grammarAccess.getSequenceNodeAccess().getHyphenMinusGreaterThanSignKeyword_0());
            		
            // InternalQualityBtCppParser.g:4053:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt71=2;
            int LA71_0 = input.LA(1);

            if ( ((LA71_0>=Parameters && LA71_0<=Satisfies)||LA71_0==Name||(LA71_0>=LeftParenthesis && LA71_0<=RightParenthesis)) ) {
                alt71=1;
            }
            switch (alt71) {
                case 1 :
                    // InternalQualityBtCppParser.g:4054:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:4054:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:4055:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1());
                    				
                    // InternalQualityBtCppParser.g:4058:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:4059:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:4059:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+
                    int cnt70=0;
                    loop70:
                    do {
                        int alt70=7;
                        int LA70_0 = input.LA(1);

                        if ( LA70_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1(), 0) ) {
                            alt70=1;
                        }
                        else if ( LA70_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1(), 1) ) {
                            alt70=2;
                        }
                        else if ( LA70_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1(), 2) ) {
                            alt70=3;
                        }
                        else if ( LA70_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1(), 3) ) {
                            alt70=4;
                        }
                        else if ( LA70_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1(), 4) ) {
                            alt70=5;
                        }
                        else if ( LA70_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1(), 5) ) {
                            alt70=6;
                        }


                        switch (alt70) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:4060:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:4060:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:4061:5: {...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleSequenceNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:4061:109: ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:4062:6: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:4065:9: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:4065:10: {...}? => (otherlv_2= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSequenceNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:4065:19: (otherlv_2= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:4065:20: otherlv_2= LeftParenthesis
                    	    {
                    	    otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_2, grammarAccess.getSequenceNodeAccess().getLeftParenthesisKeyword_1_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:4075:4: ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:4075:4: ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:4076:5: {...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleSequenceNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:4076:109: ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:4077:6: ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:4080:9: ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:4080:10: {...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSequenceNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:4080:19: (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:4080:20: otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) )
                    	    {
                    	    otherlv_3=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getSequenceNodeAccess().getNameKeyword_1_1_0());
                    	    								
                    	    otherlv_4=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getSequenceNodeAccess().getEqualsSignKeyword_1_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:4088:9: ( (lv_name_5_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:4089:10: (lv_name_5_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:4089:10: (lv_name_5_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:4090:11: lv_name_5_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getSequenceNodeAccess().getNameEStringParserRuleCall_1_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_15);
                    	    lv_name_5_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getSequenceNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_5_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:4113:4: ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:4113:4: ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:4114:5: {...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleSequenceNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:4114:109: ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:4115:6: ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:4118:9: ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:4118:10: {...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSequenceNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:4118:19: (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:4118:20: otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_6=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_6, grammarAccess.getSequenceNodeAccess().getParametersKeyword_1_2_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:4122:9: ( (lv_parameters_7_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:4123:10: (lv_parameters_7_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:4123:10: (lv_parameters_7_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:4124:11: lv_parameters_7_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getSequenceNodeAccess().getParametersParameterParserRuleCall_1_2_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_parameters_7_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getSequenceNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_7_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:4141:9: (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )*
                    	    loop67:
                    	    do {
                    	        int alt67=2;
                    	        int LA67_0 = input.LA(1);

                    	        if ( (LA67_0==Comma) ) {
                    	            alt67=1;
                    	        }


                    	        switch (alt67) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:4142:10: otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_8=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_8, grammarAccess.getSequenceNodeAccess().getCommaKeyword_1_2_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:4146:10: ( (lv_parameters_9_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:4147:11: (lv_parameters_9_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:4147:11: (lv_parameters_9_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:4148:12: lv_parameters_9_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getSequenceNodeAccess().getParametersParameterParserRuleCall_1_2_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_parameters_9_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getSequenceNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_9_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop67;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:4172:4: ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:4172:4: ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:4173:5: {...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleSequenceNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:4173:109: ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:4174:6: ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:4177:9: ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:4177:10: {...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSequenceNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:4177:19: (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:4177:20: otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_10=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_10, grammarAccess.getSequenceNodeAccess().getSatisficesKeyword_1_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:4181:9: ( (lv_satisfices_11_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:4182:10: (lv_satisfices_11_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:4182:10: (lv_satisfices_11_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:4183:11: lv_satisfices_11_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getSequenceNodeAccess().getSatisficesQualityParserRuleCall_1_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfices_11_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getSequenceNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_11_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:4200:9: (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )*
                    	    loop68:
                    	    do {
                    	        int alt68=2;
                    	        int LA68_0 = input.LA(1);

                    	        if ( (LA68_0==Comma) ) {
                    	            alt68=1;
                    	        }


                    	        switch (alt68) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:4201:10: otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_12=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_12, grammarAccess.getSequenceNodeAccess().getCommaKeyword_1_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:4205:10: ( (lv_satisfices_13_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:4206:11: (lv_satisfices_13_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:4206:11: (lv_satisfices_13_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:4207:12: lv_satisfices_13_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getSequenceNodeAccess().getSatisficesQualityParserRuleCall_1_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfices_13_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getSequenceNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_13_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop68;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:4231:4: ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:4231:4: ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:4232:5: {...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleSequenceNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:4232:109: ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:4233:6: ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:4236:9: ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:4236:10: {...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSequenceNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:4236:19: (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:4236:20: otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_14=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_14, grammarAccess.getSequenceNodeAccess().getSatisfiesKeyword_1_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:4240:9: ( (lv_satisfies_15_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:4241:10: (lv_satisfies_15_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:4241:10: (lv_satisfies_15_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:4242:11: lv_satisfies_15_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getSequenceNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfies_15_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getSequenceNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_15_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:4259:9: (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )*
                    	    loop69:
                    	    do {
                    	        int alt69=2;
                    	        int LA69_0 = input.LA(1);

                    	        if ( (LA69_0==Comma) ) {
                    	            alt69=1;
                    	        }


                    	        switch (alt69) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:4260:10: otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_16=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_16, grammarAccess.getSequenceNodeAccess().getCommaKeyword_1_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:4264:10: ( (lv_satisfies_17_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:4265:11: (lv_satisfies_17_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:4265:11: (lv_satisfies_17_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:4266:12: lv_satisfies_17_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getSequenceNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfies_17_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getSequenceNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_17_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop69;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:4290:4: ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:4290:4: ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:4291:5: {...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleSequenceNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:4291:109: ( ({...}? => (otherlv_18= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:4292:6: ({...}? => (otherlv_18= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:4295:9: ({...}? => (otherlv_18= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:4295:10: {...}? => (otherlv_18= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSequenceNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:4295:19: (otherlv_18= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:4295:20: otherlv_18= RightParenthesis
                    	    {
                    	    otherlv_18=(Token)match(input,RightParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_18, grammarAccess.getSequenceNodeAccess().getRightParenthesisKeyword_1_5());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt70 >= 1 ) break loop70;
                                EarlyExitException eee =
                                    new EarlyExitException(70, input);
                                throw eee;
                        }
                        cnt70++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1()) ) {
                        throw new FailedPredicateException(input, "ruleSequenceNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getSequenceNodeAccess().getUnorderedGroup_1());
                    				

                    }
                    break;

            }

            this_BEGIN_19=(Token)match(input,RULE_BEGIN,FOLLOW_9); 

            			newLeafNode(this_BEGIN_19, grammarAccess.getSequenceNodeAccess().getBEGINTerminalRuleCall_2());
            		
            // InternalQualityBtCppParser.g:4317:3: ( (lv_child_20_0= ruleTreeNode ) )
            // InternalQualityBtCppParser.g:4318:4: (lv_child_20_0= ruleTreeNode )
            {
            // InternalQualityBtCppParser.g:4318:4: (lv_child_20_0= ruleTreeNode )
            // InternalQualityBtCppParser.g:4319:5: lv_child_20_0= ruleTreeNode
            {

            					newCompositeNode(grammarAccess.getSequenceNodeAccess().getChildTreeNodeParserRuleCall_3_0());
            				
            pushFollow(FOLLOW_18);
            lv_child_20_0=ruleTreeNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getSequenceNodeRule());
            					}
            					add(
            						current,
            						"child",
            						lv_child_20_0,
            						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            // InternalQualityBtCppParser.g:4336:3: ( (lv_child_21_0= ruleTreeNode ) )*
            loop72:
            do {
                int alt72=2;
                int LA72_0 = input.LA(1);

                if ( ((LA72_0>=KeepRunningUntilFailure && LA72_0<=SetBlackboard)||(LA72_0>=ConsumeQueue && LA72_0<=ScriptAction)||LA72_0==WhileDoElse||(LA72_0>=CoroAction && LA72_0<=IfThenElse)||LA72_0==Inverter||(LA72_0>=RunOnce && LA72_0<=Sleep)||LA72_0==Loop||LA72_0==Test||(LA72_0>=M && LA72_0<=HyphenMinusGreaterThanSign)||(LA72_0>=R && LA72_0<=VerticalLineVerticalLine)||LA72_0==QuestionMark) ) {
                    alt72=1;
                }


                switch (alt72) {
            	case 1 :
            	    // InternalQualityBtCppParser.g:4337:4: (lv_child_21_0= ruleTreeNode )
            	    {
            	    // InternalQualityBtCppParser.g:4337:4: (lv_child_21_0= ruleTreeNode )
            	    // InternalQualityBtCppParser.g:4338:5: lv_child_21_0= ruleTreeNode
            	    {

            	    					newCompositeNode(grammarAccess.getSequenceNodeAccess().getChildTreeNodeParserRuleCall_4_0());
            	    				
            	    pushFollow(FOLLOW_18);
            	    lv_child_21_0=ruleTreeNode();

            	    state._fsp--;


            	    					if (current==null) {
            	    						current = createModelElementForParent(grammarAccess.getSequenceNodeRule());
            	    					}
            	    					add(
            	    						current,
            	    						"child",
            	    						lv_child_21_0,
            	    						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            	    					afterParserOrEnumRuleCall();
            	    				

            	    }


            	    }
            	    break;

            	default :
            	    break loop72;
                }
            } while (true);

            this_END_22=(Token)match(input,RULE_END,FOLLOW_2); 

            			newLeafNode(this_END_22, grammarAccess.getSequenceNodeAccess().getENDTerminalRuleCall_5());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSequenceNode"


    // $ANTLR start "entryRuleTimeoutNode"
    // InternalQualityBtCppParser.g:4363:1: entryRuleTimeoutNode returns [EObject current=null] : iv_ruleTimeoutNode= ruleTimeoutNode EOF ;
    public final EObject entryRuleTimeoutNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTimeoutNode = null;


        try {
            // InternalQualityBtCppParser.g:4363:52: (iv_ruleTimeoutNode= ruleTimeoutNode EOF )
            // InternalQualityBtCppParser.g:4364:2: iv_ruleTimeoutNode= ruleTimeoutNode EOF
            {
             newCompositeNode(grammarAccess.getTimeoutNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleTimeoutNode=ruleTimeoutNode();

            state._fsp--;

             current =iv_ruleTimeoutNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTimeoutNode"


    // $ANTLR start "ruleTimeoutNode"
    // InternalQualityBtCppParser.g:4370:1: ruleTimeoutNode returns [EObject current=null] : (otherlv_0= Timeout ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Msec otherlv_19= EqualsSign ( (lv_msec_20_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END ) ;
    public final EObject ruleTimeoutNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token this_BEGIN_22=null;
        Token this_END_24=null;
        AntlrDatatypeRuleToken lv_name_5_0 = null;

        EObject lv_parameters_7_0 = null;

        EObject lv_parameters_9_0 = null;

        EObject lv_satisfices_11_0 = null;

        EObject lv_satisfices_13_0 = null;

        EObject lv_satisfies_15_0 = null;

        EObject lv_satisfies_17_0 = null;

        AntlrDatatypeRuleToken lv_msec_20_0 = null;

        EObject lv_child_23_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:4376:2: ( (otherlv_0= Timeout ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Msec otherlv_19= EqualsSign ( (lv_msec_20_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END ) )
            // InternalQualityBtCppParser.g:4377:2: (otherlv_0= Timeout ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Msec otherlv_19= EqualsSign ( (lv_msec_20_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END )
            {
            // InternalQualityBtCppParser.g:4377:2: (otherlv_0= Timeout ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Msec otherlv_19= EqualsSign ( (lv_msec_20_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END )
            // InternalQualityBtCppParser.g:4378:3: otherlv_0= Timeout ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Msec otherlv_19= EqualsSign ( (lv_msec_20_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END
            {
            otherlv_0=(Token)match(input,Timeout,FOLLOW_19); 

            			newLeafNode(otherlv_0, grammarAccess.getTimeoutNodeAccess().getTimeoutKeyword_0());
            		
            // InternalQualityBtCppParser.g:4382:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Msec otherlv_19= EqualsSign ( (lv_msec_20_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt77=2;
            int LA77_0 = input.LA(1);

            if ( ((LA77_0>=Parameters && LA77_0<=Satisfies)||(LA77_0>=Msec && LA77_0<=Name)||(LA77_0>=LeftParenthesis && LA77_0<=RightParenthesis)) ) {
                alt77=1;
            }
            switch (alt77) {
                case 1 :
                    // InternalQualityBtCppParser.g:4383:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Msec otherlv_19= EqualsSign ( (lv_msec_20_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:4383:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Msec otherlv_19= EqualsSign ( (lv_msec_20_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:4384:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Msec otherlv_19= EqualsSign ( (lv_msec_20_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1());
                    				
                    // InternalQualityBtCppParser.g:4387:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Msec otherlv_19= EqualsSign ( (lv_msec_20_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:4388:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Msec otherlv_19= EqualsSign ( (lv_msec_20_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:4388:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Msec otherlv_19= EqualsSign ( (lv_msec_20_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+
                    int cnt76=0;
                    loop76:
                    do {
                        int alt76=8;
                        int LA76_0 = input.LA(1);

                        if ( LA76_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1(), 0) ) {
                            alt76=1;
                        }
                        else if ( LA76_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1(), 1) ) {
                            alt76=2;
                        }
                        else if ( LA76_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1(), 2) ) {
                            alt76=3;
                        }
                        else if ( LA76_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1(), 3) ) {
                            alt76=4;
                        }
                        else if ( LA76_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1(), 4) ) {
                            alt76=5;
                        }
                        else if ( LA76_0 == Msec && getUnorderedGroupHelper().canSelect(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1(), 5) ) {
                            alt76=6;
                        }
                        else if ( LA76_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1(), 6) ) {
                            alt76=7;
                        }


                        switch (alt76) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:4389:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:4389:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:4390:5: {...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleTimeoutNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:4390:108: ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:4391:6: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:4394:9: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:4394:10: {...}? => (otherlv_2= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleTimeoutNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:4394:19: (otherlv_2= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:4394:20: otherlv_2= LeftParenthesis
                    	    {
                    	    otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_19); 

                    	    									newLeafNode(otherlv_2, grammarAccess.getTimeoutNodeAccess().getLeftParenthesisKeyword_1_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:4404:4: ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:4404:4: ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:4405:5: {...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleTimeoutNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:4405:108: ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:4406:6: ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:4409:9: ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:4409:10: {...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleTimeoutNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:4409:19: (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:4409:20: otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) )
                    	    {
                    	    otherlv_3=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getTimeoutNodeAccess().getNameKeyword_1_1_0());
                    	    								
                    	    otherlv_4=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getTimeoutNodeAccess().getEqualsSignKeyword_1_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:4417:9: ( (lv_name_5_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:4418:10: (lv_name_5_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:4418:10: (lv_name_5_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:4419:11: lv_name_5_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getTimeoutNodeAccess().getNameEStringParserRuleCall_1_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_19);
                    	    lv_name_5_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getTimeoutNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_5_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:4442:4: ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:4442:4: ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:4443:5: {...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleTimeoutNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:4443:108: ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:4444:6: ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:4447:9: ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:4447:10: {...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleTimeoutNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:4447:19: (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:4447:20: otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_6=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_6, grammarAccess.getTimeoutNodeAccess().getParametersKeyword_1_2_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:4451:9: ( (lv_parameters_7_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:4452:10: (lv_parameters_7_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:4452:10: (lv_parameters_7_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:4453:11: lv_parameters_7_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getTimeoutNodeAccess().getParametersParameterParserRuleCall_1_2_1_0());
                    	    										
                    	    pushFollow(FOLLOW_20);
                    	    lv_parameters_7_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getTimeoutNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_7_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:4470:9: (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )*
                    	    loop73:
                    	    do {
                    	        int alt73=2;
                    	        int LA73_0 = input.LA(1);

                    	        if ( (LA73_0==Comma) ) {
                    	            alt73=1;
                    	        }


                    	        switch (alt73) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:4471:10: otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_8=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_8, grammarAccess.getTimeoutNodeAccess().getCommaKeyword_1_2_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:4475:10: ( (lv_parameters_9_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:4476:11: (lv_parameters_9_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:4476:11: (lv_parameters_9_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:4477:12: lv_parameters_9_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getTimeoutNodeAccess().getParametersParameterParserRuleCall_1_2_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_20);
                    	    	    lv_parameters_9_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getTimeoutNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_9_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop73;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:4501:4: ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:4501:4: ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:4502:5: {...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleTimeoutNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:4502:108: ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:4503:6: ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:4506:9: ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:4506:10: {...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleTimeoutNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:4506:19: (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:4506:20: otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_10=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_10, grammarAccess.getTimeoutNodeAccess().getSatisficesKeyword_1_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:4510:9: ( (lv_satisfices_11_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:4511:10: (lv_satisfices_11_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:4511:10: (lv_satisfices_11_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:4512:11: lv_satisfices_11_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getTimeoutNodeAccess().getSatisficesQualityParserRuleCall_1_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_20);
                    	    lv_satisfices_11_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getTimeoutNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_11_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:4529:9: (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )*
                    	    loop74:
                    	    do {
                    	        int alt74=2;
                    	        int LA74_0 = input.LA(1);

                    	        if ( (LA74_0==Comma) ) {
                    	            alt74=1;
                    	        }


                    	        switch (alt74) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:4530:10: otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_12=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_12, grammarAccess.getTimeoutNodeAccess().getCommaKeyword_1_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:4534:10: ( (lv_satisfices_13_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:4535:11: (lv_satisfices_13_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:4535:11: (lv_satisfices_13_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:4536:12: lv_satisfices_13_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getTimeoutNodeAccess().getSatisficesQualityParserRuleCall_1_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_20);
                    	    	    lv_satisfices_13_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getTimeoutNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_13_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop74;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:4560:4: ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:4560:4: ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:4561:5: {...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleTimeoutNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:4561:108: ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:4562:6: ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:4565:9: ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:4565:10: {...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleTimeoutNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:4565:19: (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:4565:20: otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_14=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_14, grammarAccess.getTimeoutNodeAccess().getSatisfiesKeyword_1_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:4569:9: ( (lv_satisfies_15_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:4570:10: (lv_satisfies_15_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:4570:10: (lv_satisfies_15_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:4571:11: lv_satisfies_15_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getTimeoutNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_20);
                    	    lv_satisfies_15_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getTimeoutNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_15_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:4588:9: (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )*
                    	    loop75:
                    	    do {
                    	        int alt75=2;
                    	        int LA75_0 = input.LA(1);

                    	        if ( (LA75_0==Comma) ) {
                    	            alt75=1;
                    	        }


                    	        switch (alt75) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:4589:10: otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_16=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_16, grammarAccess.getTimeoutNodeAccess().getCommaKeyword_1_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:4593:10: ( (lv_satisfies_17_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:4594:11: (lv_satisfies_17_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:4594:11: (lv_satisfies_17_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:4595:12: lv_satisfies_17_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getTimeoutNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_20);
                    	    	    lv_satisfies_17_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getTimeoutNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_17_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop75;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:4619:4: ({...}? => ( ({...}? => (otherlv_18= Msec otherlv_19= EqualsSign ( (lv_msec_20_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:4619:4: ({...}? => ( ({...}? => (otherlv_18= Msec otherlv_19= EqualsSign ( (lv_msec_20_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:4620:5: {...}? => ( ({...}? => (otherlv_18= Msec otherlv_19= EqualsSign ( (lv_msec_20_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleTimeoutNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:4620:108: ( ({...}? => (otherlv_18= Msec otherlv_19= EqualsSign ( (lv_msec_20_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:4621:6: ({...}? => (otherlv_18= Msec otherlv_19= EqualsSign ( (lv_msec_20_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:4624:9: ({...}? => (otherlv_18= Msec otherlv_19= EqualsSign ( (lv_msec_20_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:4624:10: {...}? => (otherlv_18= Msec otherlv_19= EqualsSign ( (lv_msec_20_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleTimeoutNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:4624:19: (otherlv_18= Msec otherlv_19= EqualsSign ( (lv_msec_20_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:4624:20: otherlv_18= Msec otherlv_19= EqualsSign ( (lv_msec_20_0= ruleEString ) )
                    	    {
                    	    otherlv_18=(Token)match(input,Msec,FOLLOW_8); 

                    	    									newLeafNode(otherlv_18, grammarAccess.getTimeoutNodeAccess().getMsecKeyword_1_5_0());
                    	    								
                    	    otherlv_19=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_19, grammarAccess.getTimeoutNodeAccess().getEqualsSignKeyword_1_5_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:4632:9: ( (lv_msec_20_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:4633:10: (lv_msec_20_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:4633:10: (lv_msec_20_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:4634:11: lv_msec_20_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getTimeoutNodeAccess().getMsecEStringParserRuleCall_1_5_2_0());
                    	    										
                    	    pushFollow(FOLLOW_19);
                    	    lv_msec_20_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getTimeoutNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"msec",
                    	    												lv_msec_20_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 7 :
                    	    // InternalQualityBtCppParser.g:4657:4: ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:4657:4: ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:4658:5: {...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1(), 6) ) {
                    	        throw new FailedPredicateException(input, "ruleTimeoutNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1(), 6)");
                    	    }
                    	    // InternalQualityBtCppParser.g:4658:108: ( ({...}? => (otherlv_21= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:4659:6: ({...}? => (otherlv_21= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1(), 6);
                    	    					
                    	    // InternalQualityBtCppParser.g:4662:9: ({...}? => (otherlv_21= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:4662:10: {...}? => (otherlv_21= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleTimeoutNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:4662:19: (otherlv_21= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:4662:20: otherlv_21= RightParenthesis
                    	    {
                    	    otherlv_21=(Token)match(input,RightParenthesis,FOLLOW_19); 

                    	    									newLeafNode(otherlv_21, grammarAccess.getTimeoutNodeAccess().getRightParenthesisKeyword_1_6());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt76 >= 1 ) break loop76;
                                EarlyExitException eee =
                                    new EarlyExitException(76, input);
                                throw eee;
                        }
                        cnt76++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1()) ) {
                        throw new FailedPredicateException(input, "ruleTimeoutNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getTimeoutNodeAccess().getUnorderedGroup_1());
                    				

                    }
                    break;

            }

            this_BEGIN_22=(Token)match(input,RULE_BEGIN,FOLLOW_9); 

            			newLeafNode(this_BEGIN_22, grammarAccess.getTimeoutNodeAccess().getBEGINTerminalRuleCall_2());
            		
            // InternalQualityBtCppParser.g:4684:3: ( (lv_child_23_0= ruleTreeNode ) )
            // InternalQualityBtCppParser.g:4685:4: (lv_child_23_0= ruleTreeNode )
            {
            // InternalQualityBtCppParser.g:4685:4: (lv_child_23_0= ruleTreeNode )
            // InternalQualityBtCppParser.g:4686:5: lv_child_23_0= ruleTreeNode
            {

            					newCompositeNode(grammarAccess.getTimeoutNodeAccess().getChildTreeNodeParserRuleCall_3_0());
            				
            pushFollow(FOLLOW_10);
            lv_child_23_0=ruleTreeNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getTimeoutNodeRule());
            					}
            					set(
            						current,
            						"child",
            						lv_child_23_0,
            						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            this_END_24=(Token)match(input,RULE_END,FOLLOW_2); 

            			newLeafNode(this_END_24, grammarAccess.getTimeoutNodeAccess().getENDTerminalRuleCall_4());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTimeoutNode"


    // $ANTLR start "entryRuleKeepRunningUntilFailureNode"
    // InternalQualityBtCppParser.g:4711:1: entryRuleKeepRunningUntilFailureNode returns [EObject current=null] : iv_ruleKeepRunningUntilFailureNode= ruleKeepRunningUntilFailureNode EOF ;
    public final EObject entryRuleKeepRunningUntilFailureNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleKeepRunningUntilFailureNode = null;


        try {
            // InternalQualityBtCppParser.g:4711:68: (iv_ruleKeepRunningUntilFailureNode= ruleKeepRunningUntilFailureNode EOF )
            // InternalQualityBtCppParser.g:4712:2: iv_ruleKeepRunningUntilFailureNode= ruleKeepRunningUntilFailureNode EOF
            {
             newCompositeNode(grammarAccess.getKeepRunningUntilFailureNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleKeepRunningUntilFailureNode=ruleKeepRunningUntilFailureNode();

            state._fsp--;

             current =iv_ruleKeepRunningUntilFailureNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleKeepRunningUntilFailureNode"


    // $ANTLR start "ruleKeepRunningUntilFailureNode"
    // InternalQualityBtCppParser.g:4718:1: ruleKeepRunningUntilFailureNode returns [EObject current=null] : (otherlv_0= KeepRunningUntilFailure ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_19= RULE_BEGIN ( (lv_child_20_0= ruleTreeNode ) ) this_END_21= RULE_END ) ;
    public final EObject ruleKeepRunningUntilFailureNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token this_BEGIN_19=null;
        Token this_END_21=null;
        AntlrDatatypeRuleToken lv_name_5_0 = null;

        EObject lv_parameters_7_0 = null;

        EObject lv_parameters_9_0 = null;

        EObject lv_satisfices_11_0 = null;

        EObject lv_satisfices_13_0 = null;

        EObject lv_satisfies_15_0 = null;

        EObject lv_satisfies_17_0 = null;

        EObject lv_child_20_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:4724:2: ( (otherlv_0= KeepRunningUntilFailure ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_19= RULE_BEGIN ( (lv_child_20_0= ruleTreeNode ) ) this_END_21= RULE_END ) )
            // InternalQualityBtCppParser.g:4725:2: (otherlv_0= KeepRunningUntilFailure ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_19= RULE_BEGIN ( (lv_child_20_0= ruleTreeNode ) ) this_END_21= RULE_END )
            {
            // InternalQualityBtCppParser.g:4725:2: (otherlv_0= KeepRunningUntilFailure ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_19= RULE_BEGIN ( (lv_child_20_0= ruleTreeNode ) ) this_END_21= RULE_END )
            // InternalQualityBtCppParser.g:4726:3: otherlv_0= KeepRunningUntilFailure ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_19= RULE_BEGIN ( (lv_child_20_0= ruleTreeNode ) ) this_END_21= RULE_END
            {
            otherlv_0=(Token)match(input,KeepRunningUntilFailure,FOLLOW_15); 

            			newLeafNode(otherlv_0, grammarAccess.getKeepRunningUntilFailureNodeAccess().getKeepRunningUntilFailureKeyword_0());
            		
            // InternalQualityBtCppParser.g:4730:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt82=2;
            int LA82_0 = input.LA(1);

            if ( ((LA82_0>=Parameters && LA82_0<=Satisfies)||LA82_0==Name||(LA82_0>=LeftParenthesis && LA82_0<=RightParenthesis)) ) {
                alt82=1;
            }
            switch (alt82) {
                case 1 :
                    // InternalQualityBtCppParser.g:4731:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:4731:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:4732:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1());
                    				
                    // InternalQualityBtCppParser.g:4735:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:4736:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:4736:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+
                    int cnt81=0;
                    loop81:
                    do {
                        int alt81=7;
                        int LA81_0 = input.LA(1);

                        if ( LA81_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1(), 0) ) {
                            alt81=1;
                        }
                        else if ( LA81_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1(), 1) ) {
                            alt81=2;
                        }
                        else if ( LA81_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1(), 2) ) {
                            alt81=3;
                        }
                        else if ( LA81_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1(), 3) ) {
                            alt81=4;
                        }
                        else if ( LA81_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1(), 4) ) {
                            alt81=5;
                        }
                        else if ( LA81_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1(), 5) ) {
                            alt81=6;
                        }


                        switch (alt81) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:4737:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:4737:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:4738:5: {...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleKeepRunningUntilFailureNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:4738:124: ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:4739:6: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:4742:9: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:4742:10: {...}? => (otherlv_2= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleKeepRunningUntilFailureNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:4742:19: (otherlv_2= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:4742:20: otherlv_2= LeftParenthesis
                    	    {
                    	    otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_2, grammarAccess.getKeepRunningUntilFailureNodeAccess().getLeftParenthesisKeyword_1_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:4752:4: ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:4752:4: ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:4753:5: {...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleKeepRunningUntilFailureNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:4753:124: ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:4754:6: ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:4757:9: ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:4757:10: {...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleKeepRunningUntilFailureNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:4757:19: (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:4757:20: otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) )
                    	    {
                    	    otherlv_3=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getKeepRunningUntilFailureNodeAccess().getNameKeyword_1_1_0());
                    	    								
                    	    otherlv_4=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getKeepRunningUntilFailureNodeAccess().getEqualsSignKeyword_1_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:4765:9: ( (lv_name_5_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:4766:10: (lv_name_5_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:4766:10: (lv_name_5_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:4767:11: lv_name_5_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getKeepRunningUntilFailureNodeAccess().getNameEStringParserRuleCall_1_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_15);
                    	    lv_name_5_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getKeepRunningUntilFailureNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_5_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:4790:4: ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:4790:4: ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:4791:5: {...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleKeepRunningUntilFailureNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:4791:124: ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:4792:6: ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:4795:9: ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:4795:10: {...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleKeepRunningUntilFailureNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:4795:19: (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:4795:20: otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_6=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_6, grammarAccess.getKeepRunningUntilFailureNodeAccess().getParametersKeyword_1_2_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:4799:9: ( (lv_parameters_7_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:4800:10: (lv_parameters_7_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:4800:10: (lv_parameters_7_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:4801:11: lv_parameters_7_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getKeepRunningUntilFailureNodeAccess().getParametersParameterParserRuleCall_1_2_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_parameters_7_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getKeepRunningUntilFailureNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_7_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:4818:9: (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )*
                    	    loop78:
                    	    do {
                    	        int alt78=2;
                    	        int LA78_0 = input.LA(1);

                    	        if ( (LA78_0==Comma) ) {
                    	            alt78=1;
                    	        }


                    	        switch (alt78) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:4819:10: otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_8=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_8, grammarAccess.getKeepRunningUntilFailureNodeAccess().getCommaKeyword_1_2_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:4823:10: ( (lv_parameters_9_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:4824:11: (lv_parameters_9_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:4824:11: (lv_parameters_9_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:4825:12: lv_parameters_9_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getKeepRunningUntilFailureNodeAccess().getParametersParameterParserRuleCall_1_2_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_parameters_9_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getKeepRunningUntilFailureNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_9_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop78;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:4849:4: ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:4849:4: ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:4850:5: {...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleKeepRunningUntilFailureNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:4850:124: ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:4851:6: ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:4854:9: ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:4854:10: {...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleKeepRunningUntilFailureNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:4854:19: (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:4854:20: otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_10=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_10, grammarAccess.getKeepRunningUntilFailureNodeAccess().getSatisficesKeyword_1_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:4858:9: ( (lv_satisfices_11_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:4859:10: (lv_satisfices_11_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:4859:10: (lv_satisfices_11_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:4860:11: lv_satisfices_11_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getKeepRunningUntilFailureNodeAccess().getSatisficesQualityParserRuleCall_1_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfices_11_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getKeepRunningUntilFailureNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_11_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:4877:9: (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )*
                    	    loop79:
                    	    do {
                    	        int alt79=2;
                    	        int LA79_0 = input.LA(1);

                    	        if ( (LA79_0==Comma) ) {
                    	            alt79=1;
                    	        }


                    	        switch (alt79) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:4878:10: otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_12=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_12, grammarAccess.getKeepRunningUntilFailureNodeAccess().getCommaKeyword_1_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:4882:10: ( (lv_satisfices_13_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:4883:11: (lv_satisfices_13_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:4883:11: (lv_satisfices_13_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:4884:12: lv_satisfices_13_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getKeepRunningUntilFailureNodeAccess().getSatisficesQualityParserRuleCall_1_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfices_13_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getKeepRunningUntilFailureNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_13_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop79;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:4908:4: ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:4908:4: ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:4909:5: {...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleKeepRunningUntilFailureNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:4909:124: ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:4910:6: ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:4913:9: ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:4913:10: {...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleKeepRunningUntilFailureNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:4913:19: (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:4913:20: otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_14=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_14, grammarAccess.getKeepRunningUntilFailureNodeAccess().getSatisfiesKeyword_1_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:4917:9: ( (lv_satisfies_15_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:4918:10: (lv_satisfies_15_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:4918:10: (lv_satisfies_15_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:4919:11: lv_satisfies_15_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getKeepRunningUntilFailureNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfies_15_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getKeepRunningUntilFailureNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_15_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:4936:9: (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )*
                    	    loop80:
                    	    do {
                    	        int alt80=2;
                    	        int LA80_0 = input.LA(1);

                    	        if ( (LA80_0==Comma) ) {
                    	            alt80=1;
                    	        }


                    	        switch (alt80) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:4937:10: otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_16=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_16, grammarAccess.getKeepRunningUntilFailureNodeAccess().getCommaKeyword_1_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:4941:10: ( (lv_satisfies_17_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:4942:11: (lv_satisfies_17_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:4942:11: (lv_satisfies_17_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:4943:12: lv_satisfies_17_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getKeepRunningUntilFailureNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfies_17_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getKeepRunningUntilFailureNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_17_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop80;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:4967:4: ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:4967:4: ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:4968:5: {...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleKeepRunningUntilFailureNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:4968:124: ( ({...}? => (otherlv_18= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:4969:6: ({...}? => (otherlv_18= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:4972:9: ({...}? => (otherlv_18= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:4972:10: {...}? => (otherlv_18= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleKeepRunningUntilFailureNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:4972:19: (otherlv_18= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:4972:20: otherlv_18= RightParenthesis
                    	    {
                    	    otherlv_18=(Token)match(input,RightParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_18, grammarAccess.getKeepRunningUntilFailureNodeAccess().getRightParenthesisKeyword_1_5());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt81 >= 1 ) break loop81;
                                EarlyExitException eee =
                                    new EarlyExitException(81, input);
                                throw eee;
                        }
                        cnt81++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1()) ) {
                        throw new FailedPredicateException(input, "ruleKeepRunningUntilFailureNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getKeepRunningUntilFailureNodeAccess().getUnorderedGroup_1());
                    				

                    }
                    break;

            }

            this_BEGIN_19=(Token)match(input,RULE_BEGIN,FOLLOW_9); 

            			newLeafNode(this_BEGIN_19, grammarAccess.getKeepRunningUntilFailureNodeAccess().getBEGINTerminalRuleCall_2());
            		
            // InternalQualityBtCppParser.g:4994:3: ( (lv_child_20_0= ruleTreeNode ) )
            // InternalQualityBtCppParser.g:4995:4: (lv_child_20_0= ruleTreeNode )
            {
            // InternalQualityBtCppParser.g:4995:4: (lv_child_20_0= ruleTreeNode )
            // InternalQualityBtCppParser.g:4996:5: lv_child_20_0= ruleTreeNode
            {

            					newCompositeNode(grammarAccess.getKeepRunningUntilFailureNodeAccess().getChildTreeNodeParserRuleCall_3_0());
            				
            pushFollow(FOLLOW_10);
            lv_child_20_0=ruleTreeNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getKeepRunningUntilFailureNodeRule());
            					}
            					set(
            						current,
            						"child",
            						lv_child_20_0,
            						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            this_END_21=(Token)match(input,RULE_END,FOLLOW_2); 

            			newLeafNode(this_END_21, grammarAccess.getKeepRunningUntilFailureNodeAccess().getENDTerminalRuleCall_4());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleKeepRunningUntilFailureNode"


    // $ANTLR start "entryRuleInverterNode"
    // InternalQualityBtCppParser.g:5021:1: entryRuleInverterNode returns [EObject current=null] : iv_ruleInverterNode= ruleInverterNode EOF ;
    public final EObject entryRuleInverterNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleInverterNode = null;


        try {
            // InternalQualityBtCppParser.g:5021:53: (iv_ruleInverterNode= ruleInverterNode EOF )
            // InternalQualityBtCppParser.g:5022:2: iv_ruleInverterNode= ruleInverterNode EOF
            {
             newCompositeNode(grammarAccess.getInverterNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleInverterNode=ruleInverterNode();

            state._fsp--;

             current =iv_ruleInverterNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInverterNode"


    // $ANTLR start "ruleInverterNode"
    // InternalQualityBtCppParser.g:5028:1: ruleInverterNode returns [EObject current=null] : (otherlv_0= Inverter ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_19= RULE_BEGIN ( (lv_child_20_0= ruleTreeNode ) ) this_END_21= RULE_END ) ;
    public final EObject ruleInverterNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token this_BEGIN_19=null;
        Token this_END_21=null;
        AntlrDatatypeRuleToken lv_name_5_0 = null;

        EObject lv_parameters_7_0 = null;

        EObject lv_parameters_9_0 = null;

        EObject lv_satisfices_11_0 = null;

        EObject lv_satisfices_13_0 = null;

        EObject lv_satisfies_15_0 = null;

        EObject lv_satisfies_17_0 = null;

        EObject lv_child_20_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:5034:2: ( (otherlv_0= Inverter ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_19= RULE_BEGIN ( (lv_child_20_0= ruleTreeNode ) ) this_END_21= RULE_END ) )
            // InternalQualityBtCppParser.g:5035:2: (otherlv_0= Inverter ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_19= RULE_BEGIN ( (lv_child_20_0= ruleTreeNode ) ) this_END_21= RULE_END )
            {
            // InternalQualityBtCppParser.g:5035:2: (otherlv_0= Inverter ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_19= RULE_BEGIN ( (lv_child_20_0= ruleTreeNode ) ) this_END_21= RULE_END )
            // InternalQualityBtCppParser.g:5036:3: otherlv_0= Inverter ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_19= RULE_BEGIN ( (lv_child_20_0= ruleTreeNode ) ) this_END_21= RULE_END
            {
            otherlv_0=(Token)match(input,Inverter,FOLLOW_15); 

            			newLeafNode(otherlv_0, grammarAccess.getInverterNodeAccess().getInverterKeyword_0());
            		
            // InternalQualityBtCppParser.g:5040:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt87=2;
            int LA87_0 = input.LA(1);

            if ( ((LA87_0>=Parameters && LA87_0<=Satisfies)||LA87_0==Name||(LA87_0>=LeftParenthesis && LA87_0<=RightParenthesis)) ) {
                alt87=1;
            }
            switch (alt87) {
                case 1 :
                    // InternalQualityBtCppParser.g:5041:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:5041:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:5042:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1());
                    				
                    // InternalQualityBtCppParser.g:5045:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:5046:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:5046:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+
                    int cnt86=0;
                    loop86:
                    do {
                        int alt86=7;
                        int LA86_0 = input.LA(1);

                        if ( LA86_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1(), 0) ) {
                            alt86=1;
                        }
                        else if ( LA86_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1(), 1) ) {
                            alt86=2;
                        }
                        else if ( LA86_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1(), 2) ) {
                            alt86=3;
                        }
                        else if ( LA86_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1(), 3) ) {
                            alt86=4;
                        }
                        else if ( LA86_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1(), 4) ) {
                            alt86=5;
                        }
                        else if ( LA86_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1(), 5) ) {
                            alt86=6;
                        }


                        switch (alt86) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:5047:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:5047:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:5048:5: {...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleInverterNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:5048:109: ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:5049:6: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:5052:9: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:5052:10: {...}? => (otherlv_2= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleInverterNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:5052:19: (otherlv_2= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:5052:20: otherlv_2= LeftParenthesis
                    	    {
                    	    otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_2, grammarAccess.getInverterNodeAccess().getLeftParenthesisKeyword_1_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:5062:4: ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:5062:4: ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:5063:5: {...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleInverterNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:5063:109: ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:5064:6: ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:5067:9: ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:5067:10: {...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleInverterNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:5067:19: (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:5067:20: otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) )
                    	    {
                    	    otherlv_3=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getInverterNodeAccess().getNameKeyword_1_1_0());
                    	    								
                    	    otherlv_4=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getInverterNodeAccess().getEqualsSignKeyword_1_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:5075:9: ( (lv_name_5_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:5076:10: (lv_name_5_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:5076:10: (lv_name_5_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:5077:11: lv_name_5_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getInverterNodeAccess().getNameEStringParserRuleCall_1_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_15);
                    	    lv_name_5_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getInverterNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_5_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:5100:4: ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:5100:4: ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:5101:5: {...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleInverterNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:5101:109: ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:5102:6: ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:5105:9: ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:5105:10: {...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleInverterNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:5105:19: (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:5105:20: otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_6=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_6, grammarAccess.getInverterNodeAccess().getParametersKeyword_1_2_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:5109:9: ( (lv_parameters_7_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:5110:10: (lv_parameters_7_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:5110:10: (lv_parameters_7_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:5111:11: lv_parameters_7_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getInverterNodeAccess().getParametersParameterParserRuleCall_1_2_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_parameters_7_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getInverterNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_7_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:5128:9: (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )*
                    	    loop83:
                    	    do {
                    	        int alt83=2;
                    	        int LA83_0 = input.LA(1);

                    	        if ( (LA83_0==Comma) ) {
                    	            alt83=1;
                    	        }


                    	        switch (alt83) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:5129:10: otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_8=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_8, grammarAccess.getInverterNodeAccess().getCommaKeyword_1_2_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:5133:10: ( (lv_parameters_9_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:5134:11: (lv_parameters_9_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:5134:11: (lv_parameters_9_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:5135:12: lv_parameters_9_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getInverterNodeAccess().getParametersParameterParserRuleCall_1_2_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_parameters_9_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getInverterNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_9_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop83;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:5159:4: ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:5159:4: ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:5160:5: {...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleInverterNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:5160:109: ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:5161:6: ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:5164:9: ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:5164:10: {...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleInverterNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:5164:19: (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:5164:20: otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_10=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_10, grammarAccess.getInverterNodeAccess().getSatisficesKeyword_1_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:5168:9: ( (lv_satisfices_11_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:5169:10: (lv_satisfices_11_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:5169:10: (lv_satisfices_11_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:5170:11: lv_satisfices_11_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getInverterNodeAccess().getSatisficesQualityParserRuleCall_1_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfices_11_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getInverterNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_11_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:5187:9: (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )*
                    	    loop84:
                    	    do {
                    	        int alt84=2;
                    	        int LA84_0 = input.LA(1);

                    	        if ( (LA84_0==Comma) ) {
                    	            alt84=1;
                    	        }


                    	        switch (alt84) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:5188:10: otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_12=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_12, grammarAccess.getInverterNodeAccess().getCommaKeyword_1_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:5192:10: ( (lv_satisfices_13_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:5193:11: (lv_satisfices_13_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:5193:11: (lv_satisfices_13_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:5194:12: lv_satisfices_13_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getInverterNodeAccess().getSatisficesQualityParserRuleCall_1_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfices_13_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getInverterNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_13_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop84;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:5218:4: ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:5218:4: ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:5219:5: {...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleInverterNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:5219:109: ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:5220:6: ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:5223:9: ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:5223:10: {...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleInverterNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:5223:19: (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:5223:20: otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_14=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_14, grammarAccess.getInverterNodeAccess().getSatisfiesKeyword_1_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:5227:9: ( (lv_satisfies_15_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:5228:10: (lv_satisfies_15_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:5228:10: (lv_satisfies_15_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:5229:11: lv_satisfies_15_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getInverterNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfies_15_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getInverterNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_15_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:5246:9: (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )*
                    	    loop85:
                    	    do {
                    	        int alt85=2;
                    	        int LA85_0 = input.LA(1);

                    	        if ( (LA85_0==Comma) ) {
                    	            alt85=1;
                    	        }


                    	        switch (alt85) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:5247:10: otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_16=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_16, grammarAccess.getInverterNodeAccess().getCommaKeyword_1_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:5251:10: ( (lv_satisfies_17_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:5252:11: (lv_satisfies_17_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:5252:11: (lv_satisfies_17_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:5253:12: lv_satisfies_17_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getInverterNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfies_17_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getInverterNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_17_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop85;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:5277:4: ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:5277:4: ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:5278:5: {...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleInverterNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:5278:109: ( ({...}? => (otherlv_18= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:5279:6: ({...}? => (otherlv_18= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:5282:9: ({...}? => (otherlv_18= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:5282:10: {...}? => (otherlv_18= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleInverterNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:5282:19: (otherlv_18= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:5282:20: otherlv_18= RightParenthesis
                    	    {
                    	    otherlv_18=(Token)match(input,RightParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_18, grammarAccess.getInverterNodeAccess().getRightParenthesisKeyword_1_5());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt86 >= 1 ) break loop86;
                                EarlyExitException eee =
                                    new EarlyExitException(86, input);
                                throw eee;
                        }
                        cnt86++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1()) ) {
                        throw new FailedPredicateException(input, "ruleInverterNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getInverterNodeAccess().getUnorderedGroup_1());
                    				

                    }
                    break;

            }

            this_BEGIN_19=(Token)match(input,RULE_BEGIN,FOLLOW_9); 

            			newLeafNode(this_BEGIN_19, grammarAccess.getInverterNodeAccess().getBEGINTerminalRuleCall_2());
            		
            // InternalQualityBtCppParser.g:5304:3: ( (lv_child_20_0= ruleTreeNode ) )
            // InternalQualityBtCppParser.g:5305:4: (lv_child_20_0= ruleTreeNode )
            {
            // InternalQualityBtCppParser.g:5305:4: (lv_child_20_0= ruleTreeNode )
            // InternalQualityBtCppParser.g:5306:5: lv_child_20_0= ruleTreeNode
            {

            					newCompositeNode(grammarAccess.getInverterNodeAccess().getChildTreeNodeParserRuleCall_3_0());
            				
            pushFollow(FOLLOW_10);
            lv_child_20_0=ruleTreeNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getInverterNodeRule());
            					}
            					set(
            						current,
            						"child",
            						lv_child_20_0,
            						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            this_END_21=(Token)match(input,RULE_END,FOLLOW_2); 

            			newLeafNode(this_END_21, grammarAccess.getInverterNodeAccess().getENDTerminalRuleCall_4());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInverterNode"


    // $ANTLR start "entryRuleForceSuccessNode"
    // InternalQualityBtCppParser.g:5331:1: entryRuleForceSuccessNode returns [EObject current=null] : iv_ruleForceSuccessNode= ruleForceSuccessNode EOF ;
    public final EObject entryRuleForceSuccessNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleForceSuccessNode = null;


        try {
            // InternalQualityBtCppParser.g:5331:57: (iv_ruleForceSuccessNode= ruleForceSuccessNode EOF )
            // InternalQualityBtCppParser.g:5332:2: iv_ruleForceSuccessNode= ruleForceSuccessNode EOF
            {
             newCompositeNode(grammarAccess.getForceSuccessNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleForceSuccessNode=ruleForceSuccessNode();

            state._fsp--;

             current =iv_ruleForceSuccessNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleForceSuccessNode"


    // $ANTLR start "ruleForceSuccessNode"
    // InternalQualityBtCppParser.g:5338:1: ruleForceSuccessNode returns [EObject current=null] : (otherlv_0= ForceSuccess ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_19= RULE_BEGIN ( (lv_child_20_0= ruleTreeNode ) ) this_END_21= RULE_END ) ;
    public final EObject ruleForceSuccessNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token this_BEGIN_19=null;
        Token this_END_21=null;
        AntlrDatatypeRuleToken lv_name_5_0 = null;

        EObject lv_parameters_7_0 = null;

        EObject lv_parameters_9_0 = null;

        EObject lv_satisfices_11_0 = null;

        EObject lv_satisfices_13_0 = null;

        EObject lv_satisfies_15_0 = null;

        EObject lv_satisfies_17_0 = null;

        EObject lv_child_20_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:5344:2: ( (otherlv_0= ForceSuccess ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_19= RULE_BEGIN ( (lv_child_20_0= ruleTreeNode ) ) this_END_21= RULE_END ) )
            // InternalQualityBtCppParser.g:5345:2: (otherlv_0= ForceSuccess ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_19= RULE_BEGIN ( (lv_child_20_0= ruleTreeNode ) ) this_END_21= RULE_END )
            {
            // InternalQualityBtCppParser.g:5345:2: (otherlv_0= ForceSuccess ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_19= RULE_BEGIN ( (lv_child_20_0= ruleTreeNode ) ) this_END_21= RULE_END )
            // InternalQualityBtCppParser.g:5346:3: otherlv_0= ForceSuccess ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_19= RULE_BEGIN ( (lv_child_20_0= ruleTreeNode ) ) this_END_21= RULE_END
            {
            otherlv_0=(Token)match(input,ForceSuccess,FOLLOW_15); 

            			newLeafNode(otherlv_0, grammarAccess.getForceSuccessNodeAccess().getForceSuccessKeyword_0());
            		
            // InternalQualityBtCppParser.g:5350:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt92=2;
            int LA92_0 = input.LA(1);

            if ( ((LA92_0>=Parameters && LA92_0<=Satisfies)||LA92_0==Name||(LA92_0>=LeftParenthesis && LA92_0<=RightParenthesis)) ) {
                alt92=1;
            }
            switch (alt92) {
                case 1 :
                    // InternalQualityBtCppParser.g:5351:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:5351:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:5352:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1());
                    				
                    // InternalQualityBtCppParser.g:5355:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:5356:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:5356:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+
                    int cnt91=0;
                    loop91:
                    do {
                        int alt91=7;
                        int LA91_0 = input.LA(1);

                        if ( LA91_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1(), 0) ) {
                            alt91=1;
                        }
                        else if ( LA91_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1(), 1) ) {
                            alt91=2;
                        }
                        else if ( LA91_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1(), 2) ) {
                            alt91=3;
                        }
                        else if ( LA91_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1(), 3) ) {
                            alt91=4;
                        }
                        else if ( LA91_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1(), 4) ) {
                            alt91=5;
                        }
                        else if ( LA91_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1(), 5) ) {
                            alt91=6;
                        }


                        switch (alt91) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:5357:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:5357:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:5358:5: {...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleForceSuccessNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:5358:113: ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:5359:6: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:5362:9: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:5362:10: {...}? => (otherlv_2= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleForceSuccessNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:5362:19: (otherlv_2= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:5362:20: otherlv_2= LeftParenthesis
                    	    {
                    	    otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_2, grammarAccess.getForceSuccessNodeAccess().getLeftParenthesisKeyword_1_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:5372:4: ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:5372:4: ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:5373:5: {...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleForceSuccessNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:5373:113: ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:5374:6: ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:5377:9: ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:5377:10: {...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleForceSuccessNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:5377:19: (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:5377:20: otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) )
                    	    {
                    	    otherlv_3=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getForceSuccessNodeAccess().getNameKeyword_1_1_0());
                    	    								
                    	    otherlv_4=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getForceSuccessNodeAccess().getEqualsSignKeyword_1_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:5385:9: ( (lv_name_5_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:5386:10: (lv_name_5_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:5386:10: (lv_name_5_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:5387:11: lv_name_5_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getForceSuccessNodeAccess().getNameEStringParserRuleCall_1_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_15);
                    	    lv_name_5_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getForceSuccessNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_5_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:5410:4: ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:5410:4: ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:5411:5: {...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleForceSuccessNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:5411:113: ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:5412:6: ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:5415:9: ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:5415:10: {...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleForceSuccessNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:5415:19: (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:5415:20: otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_6=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_6, grammarAccess.getForceSuccessNodeAccess().getParametersKeyword_1_2_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:5419:9: ( (lv_parameters_7_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:5420:10: (lv_parameters_7_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:5420:10: (lv_parameters_7_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:5421:11: lv_parameters_7_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getForceSuccessNodeAccess().getParametersParameterParserRuleCall_1_2_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_parameters_7_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getForceSuccessNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_7_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:5438:9: (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )*
                    	    loop88:
                    	    do {
                    	        int alt88=2;
                    	        int LA88_0 = input.LA(1);

                    	        if ( (LA88_0==Comma) ) {
                    	            alt88=1;
                    	        }


                    	        switch (alt88) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:5439:10: otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_8=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_8, grammarAccess.getForceSuccessNodeAccess().getCommaKeyword_1_2_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:5443:10: ( (lv_parameters_9_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:5444:11: (lv_parameters_9_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:5444:11: (lv_parameters_9_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:5445:12: lv_parameters_9_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getForceSuccessNodeAccess().getParametersParameterParserRuleCall_1_2_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_parameters_9_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getForceSuccessNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_9_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop88;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:5469:4: ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:5469:4: ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:5470:5: {...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleForceSuccessNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:5470:113: ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:5471:6: ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:5474:9: ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:5474:10: {...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleForceSuccessNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:5474:19: (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:5474:20: otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_10=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_10, grammarAccess.getForceSuccessNodeAccess().getSatisficesKeyword_1_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:5478:9: ( (lv_satisfices_11_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:5479:10: (lv_satisfices_11_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:5479:10: (lv_satisfices_11_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:5480:11: lv_satisfices_11_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getForceSuccessNodeAccess().getSatisficesQualityParserRuleCall_1_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfices_11_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getForceSuccessNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_11_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:5497:9: (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )*
                    	    loop89:
                    	    do {
                    	        int alt89=2;
                    	        int LA89_0 = input.LA(1);

                    	        if ( (LA89_0==Comma) ) {
                    	            alt89=1;
                    	        }


                    	        switch (alt89) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:5498:10: otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_12=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_12, grammarAccess.getForceSuccessNodeAccess().getCommaKeyword_1_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:5502:10: ( (lv_satisfices_13_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:5503:11: (lv_satisfices_13_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:5503:11: (lv_satisfices_13_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:5504:12: lv_satisfices_13_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getForceSuccessNodeAccess().getSatisficesQualityParserRuleCall_1_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfices_13_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getForceSuccessNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_13_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop89;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:5528:4: ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:5528:4: ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:5529:5: {...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleForceSuccessNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:5529:113: ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:5530:6: ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:5533:9: ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:5533:10: {...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleForceSuccessNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:5533:19: (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:5533:20: otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_14=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_14, grammarAccess.getForceSuccessNodeAccess().getSatisfiesKeyword_1_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:5537:9: ( (lv_satisfies_15_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:5538:10: (lv_satisfies_15_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:5538:10: (lv_satisfies_15_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:5539:11: lv_satisfies_15_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getForceSuccessNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfies_15_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getForceSuccessNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_15_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:5556:9: (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )*
                    	    loop90:
                    	    do {
                    	        int alt90=2;
                    	        int LA90_0 = input.LA(1);

                    	        if ( (LA90_0==Comma) ) {
                    	            alt90=1;
                    	        }


                    	        switch (alt90) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:5557:10: otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_16=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_16, grammarAccess.getForceSuccessNodeAccess().getCommaKeyword_1_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:5561:10: ( (lv_satisfies_17_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:5562:11: (lv_satisfies_17_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:5562:11: (lv_satisfies_17_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:5563:12: lv_satisfies_17_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getForceSuccessNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfies_17_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getForceSuccessNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_17_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop90;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:5587:4: ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:5587:4: ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:5588:5: {...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleForceSuccessNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:5588:113: ( ({...}? => (otherlv_18= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:5589:6: ({...}? => (otherlv_18= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:5592:9: ({...}? => (otherlv_18= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:5592:10: {...}? => (otherlv_18= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleForceSuccessNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:5592:19: (otherlv_18= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:5592:20: otherlv_18= RightParenthesis
                    	    {
                    	    otherlv_18=(Token)match(input,RightParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_18, grammarAccess.getForceSuccessNodeAccess().getRightParenthesisKeyword_1_5());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt91 >= 1 ) break loop91;
                                EarlyExitException eee =
                                    new EarlyExitException(91, input);
                                throw eee;
                        }
                        cnt91++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1()) ) {
                        throw new FailedPredicateException(input, "ruleForceSuccessNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getForceSuccessNodeAccess().getUnorderedGroup_1());
                    				

                    }
                    break;

            }

            this_BEGIN_19=(Token)match(input,RULE_BEGIN,FOLLOW_9); 

            			newLeafNode(this_BEGIN_19, grammarAccess.getForceSuccessNodeAccess().getBEGINTerminalRuleCall_2());
            		
            // InternalQualityBtCppParser.g:5614:3: ( (lv_child_20_0= ruleTreeNode ) )
            // InternalQualityBtCppParser.g:5615:4: (lv_child_20_0= ruleTreeNode )
            {
            // InternalQualityBtCppParser.g:5615:4: (lv_child_20_0= ruleTreeNode )
            // InternalQualityBtCppParser.g:5616:5: lv_child_20_0= ruleTreeNode
            {

            					newCompositeNode(grammarAccess.getForceSuccessNodeAccess().getChildTreeNodeParserRuleCall_3_0());
            				
            pushFollow(FOLLOW_10);
            lv_child_20_0=ruleTreeNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getForceSuccessNodeRule());
            					}
            					set(
            						current,
            						"child",
            						lv_child_20_0,
            						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            this_END_21=(Token)match(input,RULE_END,FOLLOW_2); 

            			newLeafNode(this_END_21, grammarAccess.getForceSuccessNodeAccess().getENDTerminalRuleCall_4());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleForceSuccessNode"


    // $ANTLR start "entryRuleForceFailureNode"
    // InternalQualityBtCppParser.g:5641:1: entryRuleForceFailureNode returns [EObject current=null] : iv_ruleForceFailureNode= ruleForceFailureNode EOF ;
    public final EObject entryRuleForceFailureNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleForceFailureNode = null;


        try {
            // InternalQualityBtCppParser.g:5641:57: (iv_ruleForceFailureNode= ruleForceFailureNode EOF )
            // InternalQualityBtCppParser.g:5642:2: iv_ruleForceFailureNode= ruleForceFailureNode EOF
            {
             newCompositeNode(grammarAccess.getForceFailureNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleForceFailureNode=ruleForceFailureNode();

            state._fsp--;

             current =iv_ruleForceFailureNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleForceFailureNode"


    // $ANTLR start "ruleForceFailureNode"
    // InternalQualityBtCppParser.g:5648:1: ruleForceFailureNode returns [EObject current=null] : (otherlv_0= ForceFailure ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_19= RULE_BEGIN ( (lv_child_20_0= ruleTreeNode ) ) this_END_21= RULE_END ) ;
    public final EObject ruleForceFailureNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token this_BEGIN_19=null;
        Token this_END_21=null;
        AntlrDatatypeRuleToken lv_name_5_0 = null;

        EObject lv_parameters_7_0 = null;

        EObject lv_parameters_9_0 = null;

        EObject lv_satisfices_11_0 = null;

        EObject lv_satisfices_13_0 = null;

        EObject lv_satisfies_15_0 = null;

        EObject lv_satisfies_17_0 = null;

        EObject lv_child_20_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:5654:2: ( (otherlv_0= ForceFailure ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_19= RULE_BEGIN ( (lv_child_20_0= ruleTreeNode ) ) this_END_21= RULE_END ) )
            // InternalQualityBtCppParser.g:5655:2: (otherlv_0= ForceFailure ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_19= RULE_BEGIN ( (lv_child_20_0= ruleTreeNode ) ) this_END_21= RULE_END )
            {
            // InternalQualityBtCppParser.g:5655:2: (otherlv_0= ForceFailure ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_19= RULE_BEGIN ( (lv_child_20_0= ruleTreeNode ) ) this_END_21= RULE_END )
            // InternalQualityBtCppParser.g:5656:3: otherlv_0= ForceFailure ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_19= RULE_BEGIN ( (lv_child_20_0= ruleTreeNode ) ) this_END_21= RULE_END
            {
            otherlv_0=(Token)match(input,ForceFailure,FOLLOW_15); 

            			newLeafNode(otherlv_0, grammarAccess.getForceFailureNodeAccess().getForceFailureKeyword_0());
            		
            // InternalQualityBtCppParser.g:5660:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt97=2;
            int LA97_0 = input.LA(1);

            if ( ((LA97_0>=Parameters && LA97_0<=Satisfies)||LA97_0==Name||(LA97_0>=LeftParenthesis && LA97_0<=RightParenthesis)) ) {
                alt97=1;
            }
            switch (alt97) {
                case 1 :
                    // InternalQualityBtCppParser.g:5661:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:5661:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:5662:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1());
                    				
                    // InternalQualityBtCppParser.g:5665:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:5666:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:5666:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+
                    int cnt96=0;
                    loop96:
                    do {
                        int alt96=7;
                        int LA96_0 = input.LA(1);

                        if ( LA96_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1(), 0) ) {
                            alt96=1;
                        }
                        else if ( LA96_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1(), 1) ) {
                            alt96=2;
                        }
                        else if ( LA96_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1(), 2) ) {
                            alt96=3;
                        }
                        else if ( LA96_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1(), 3) ) {
                            alt96=4;
                        }
                        else if ( LA96_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1(), 4) ) {
                            alt96=5;
                        }
                        else if ( LA96_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1(), 5) ) {
                            alt96=6;
                        }


                        switch (alt96) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:5667:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:5667:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:5668:5: {...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleForceFailureNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:5668:113: ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:5669:6: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:5672:9: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:5672:10: {...}? => (otherlv_2= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleForceFailureNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:5672:19: (otherlv_2= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:5672:20: otherlv_2= LeftParenthesis
                    	    {
                    	    otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_2, grammarAccess.getForceFailureNodeAccess().getLeftParenthesisKeyword_1_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:5682:4: ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:5682:4: ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:5683:5: {...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleForceFailureNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:5683:113: ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:5684:6: ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:5687:9: ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:5687:10: {...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleForceFailureNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:5687:19: (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:5687:20: otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) )
                    	    {
                    	    otherlv_3=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getForceFailureNodeAccess().getNameKeyword_1_1_0());
                    	    								
                    	    otherlv_4=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getForceFailureNodeAccess().getEqualsSignKeyword_1_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:5695:9: ( (lv_name_5_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:5696:10: (lv_name_5_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:5696:10: (lv_name_5_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:5697:11: lv_name_5_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getForceFailureNodeAccess().getNameEStringParserRuleCall_1_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_15);
                    	    lv_name_5_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getForceFailureNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_5_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:5720:4: ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:5720:4: ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:5721:5: {...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleForceFailureNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:5721:113: ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:5722:6: ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:5725:9: ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:5725:10: {...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleForceFailureNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:5725:19: (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:5725:20: otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_6=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_6, grammarAccess.getForceFailureNodeAccess().getParametersKeyword_1_2_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:5729:9: ( (lv_parameters_7_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:5730:10: (lv_parameters_7_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:5730:10: (lv_parameters_7_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:5731:11: lv_parameters_7_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getForceFailureNodeAccess().getParametersParameterParserRuleCall_1_2_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_parameters_7_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getForceFailureNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_7_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:5748:9: (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )*
                    	    loop93:
                    	    do {
                    	        int alt93=2;
                    	        int LA93_0 = input.LA(1);

                    	        if ( (LA93_0==Comma) ) {
                    	            alt93=1;
                    	        }


                    	        switch (alt93) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:5749:10: otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_8=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_8, grammarAccess.getForceFailureNodeAccess().getCommaKeyword_1_2_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:5753:10: ( (lv_parameters_9_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:5754:11: (lv_parameters_9_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:5754:11: (lv_parameters_9_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:5755:12: lv_parameters_9_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getForceFailureNodeAccess().getParametersParameterParserRuleCall_1_2_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_parameters_9_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getForceFailureNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_9_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop93;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:5779:4: ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:5779:4: ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:5780:5: {...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleForceFailureNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:5780:113: ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:5781:6: ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:5784:9: ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:5784:10: {...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleForceFailureNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:5784:19: (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:5784:20: otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_10=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_10, grammarAccess.getForceFailureNodeAccess().getSatisficesKeyword_1_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:5788:9: ( (lv_satisfices_11_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:5789:10: (lv_satisfices_11_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:5789:10: (lv_satisfices_11_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:5790:11: lv_satisfices_11_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getForceFailureNodeAccess().getSatisficesQualityParserRuleCall_1_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfices_11_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getForceFailureNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_11_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:5807:9: (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )*
                    	    loop94:
                    	    do {
                    	        int alt94=2;
                    	        int LA94_0 = input.LA(1);

                    	        if ( (LA94_0==Comma) ) {
                    	            alt94=1;
                    	        }


                    	        switch (alt94) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:5808:10: otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_12=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_12, grammarAccess.getForceFailureNodeAccess().getCommaKeyword_1_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:5812:10: ( (lv_satisfices_13_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:5813:11: (lv_satisfices_13_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:5813:11: (lv_satisfices_13_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:5814:12: lv_satisfices_13_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getForceFailureNodeAccess().getSatisficesQualityParserRuleCall_1_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfices_13_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getForceFailureNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_13_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop94;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:5838:4: ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:5838:4: ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:5839:5: {...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleForceFailureNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:5839:113: ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:5840:6: ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:5843:9: ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:5843:10: {...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleForceFailureNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:5843:19: (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:5843:20: otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_14=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_14, grammarAccess.getForceFailureNodeAccess().getSatisfiesKeyword_1_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:5847:9: ( (lv_satisfies_15_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:5848:10: (lv_satisfies_15_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:5848:10: (lv_satisfies_15_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:5849:11: lv_satisfies_15_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getForceFailureNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfies_15_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getForceFailureNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_15_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:5866:9: (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )*
                    	    loop95:
                    	    do {
                    	        int alt95=2;
                    	        int LA95_0 = input.LA(1);

                    	        if ( (LA95_0==Comma) ) {
                    	            alt95=1;
                    	        }


                    	        switch (alt95) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:5867:10: otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_16=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_16, grammarAccess.getForceFailureNodeAccess().getCommaKeyword_1_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:5871:10: ( (lv_satisfies_17_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:5872:11: (lv_satisfies_17_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:5872:11: (lv_satisfies_17_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:5873:12: lv_satisfies_17_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getForceFailureNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfies_17_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getForceFailureNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_17_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop95;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:5897:4: ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:5897:4: ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:5898:5: {...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleForceFailureNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:5898:113: ( ({...}? => (otherlv_18= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:5899:6: ({...}? => (otherlv_18= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:5902:9: ({...}? => (otherlv_18= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:5902:10: {...}? => (otherlv_18= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleForceFailureNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:5902:19: (otherlv_18= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:5902:20: otherlv_18= RightParenthesis
                    	    {
                    	    otherlv_18=(Token)match(input,RightParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_18, grammarAccess.getForceFailureNodeAccess().getRightParenthesisKeyword_1_5());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt96 >= 1 ) break loop96;
                                EarlyExitException eee =
                                    new EarlyExitException(96, input);
                                throw eee;
                        }
                        cnt96++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1()) ) {
                        throw new FailedPredicateException(input, "ruleForceFailureNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getForceFailureNodeAccess().getUnorderedGroup_1());
                    				

                    }
                    break;

            }

            this_BEGIN_19=(Token)match(input,RULE_BEGIN,FOLLOW_9); 

            			newLeafNode(this_BEGIN_19, grammarAccess.getForceFailureNodeAccess().getBEGINTerminalRuleCall_2());
            		
            // InternalQualityBtCppParser.g:5924:3: ( (lv_child_20_0= ruleTreeNode ) )
            // InternalQualityBtCppParser.g:5925:4: (lv_child_20_0= ruleTreeNode )
            {
            // InternalQualityBtCppParser.g:5925:4: (lv_child_20_0= ruleTreeNode )
            // InternalQualityBtCppParser.g:5926:5: lv_child_20_0= ruleTreeNode
            {

            					newCompositeNode(grammarAccess.getForceFailureNodeAccess().getChildTreeNodeParserRuleCall_3_0());
            				
            pushFollow(FOLLOW_10);
            lv_child_20_0=ruleTreeNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getForceFailureNodeRule());
            					}
            					set(
            						current,
            						"child",
            						lv_child_20_0,
            						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            this_END_21=(Token)match(input,RULE_END,FOLLOW_2); 

            			newLeafNode(this_END_21, grammarAccess.getForceFailureNodeAccess().getENDTerminalRuleCall_4());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleForceFailureNode"


    // $ANTLR start "entryRuleRepeatNode"
    // InternalQualityBtCppParser.g:5951:1: entryRuleRepeatNode returns [EObject current=null] : iv_ruleRepeatNode= ruleRepeatNode EOF ;
    public final EObject entryRuleRepeatNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRepeatNode = null;


        try {
            // InternalQualityBtCppParser.g:5951:51: (iv_ruleRepeatNode= ruleRepeatNode EOF )
            // InternalQualityBtCppParser.g:5952:2: iv_ruleRepeatNode= ruleRepeatNode EOF
            {
             newCompositeNode(grammarAccess.getRepeatNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleRepeatNode=ruleRepeatNode();

            state._fsp--;

             current =iv_ruleRepeatNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRepeatNode"


    // $ANTLR start "ruleRepeatNode"
    // InternalQualityBtCppParser.g:5958:1: ruleRepeatNode returns [EObject current=null] : (otherlv_0= Repeat ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Num_cycles otherlv_19= EqualsSign ( (lv_num_cycles_20_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END ) ;
    public final EObject ruleRepeatNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token this_BEGIN_22=null;
        Token this_END_24=null;
        AntlrDatatypeRuleToken lv_name_5_0 = null;

        EObject lv_parameters_7_0 = null;

        EObject lv_parameters_9_0 = null;

        EObject lv_satisfices_11_0 = null;

        EObject lv_satisfices_13_0 = null;

        EObject lv_satisfies_15_0 = null;

        EObject lv_satisfies_17_0 = null;

        AntlrDatatypeRuleToken lv_num_cycles_20_0 = null;

        EObject lv_child_23_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:5964:2: ( (otherlv_0= Repeat ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Num_cycles otherlv_19= EqualsSign ( (lv_num_cycles_20_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END ) )
            // InternalQualityBtCppParser.g:5965:2: (otherlv_0= Repeat ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Num_cycles otherlv_19= EqualsSign ( (lv_num_cycles_20_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END )
            {
            // InternalQualityBtCppParser.g:5965:2: (otherlv_0= Repeat ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Num_cycles otherlv_19= EqualsSign ( (lv_num_cycles_20_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END )
            // InternalQualityBtCppParser.g:5966:3: otherlv_0= Repeat ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Num_cycles otherlv_19= EqualsSign ( (lv_num_cycles_20_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END
            {
            otherlv_0=(Token)match(input,Repeat,FOLLOW_21); 

            			newLeafNode(otherlv_0, grammarAccess.getRepeatNodeAccess().getRepeatKeyword_0());
            		
            // InternalQualityBtCppParser.g:5970:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Num_cycles otherlv_19= EqualsSign ( (lv_num_cycles_20_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt102=2;
            int LA102_0 = input.LA(1);

            if ( (LA102_0==Num_cycles||(LA102_0>=Parameters && LA102_0<=Satisfies)||LA102_0==Name||(LA102_0>=LeftParenthesis && LA102_0<=RightParenthesis)) ) {
                alt102=1;
            }
            switch (alt102) {
                case 1 :
                    // InternalQualityBtCppParser.g:5971:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Num_cycles otherlv_19= EqualsSign ( (lv_num_cycles_20_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:5971:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Num_cycles otherlv_19= EqualsSign ( (lv_num_cycles_20_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:5972:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Num_cycles otherlv_19= EqualsSign ( (lv_num_cycles_20_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1());
                    				
                    // InternalQualityBtCppParser.g:5975:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Num_cycles otherlv_19= EqualsSign ( (lv_num_cycles_20_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:5976:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Num_cycles otherlv_19= EqualsSign ( (lv_num_cycles_20_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:5976:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Num_cycles otherlv_19= EqualsSign ( (lv_num_cycles_20_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+
                    int cnt101=0;
                    loop101:
                    do {
                        int alt101=8;
                        int LA101_0 = input.LA(1);

                        if ( LA101_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1(), 0) ) {
                            alt101=1;
                        }
                        else if ( LA101_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1(), 1) ) {
                            alt101=2;
                        }
                        else if ( LA101_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1(), 2) ) {
                            alt101=3;
                        }
                        else if ( LA101_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1(), 3) ) {
                            alt101=4;
                        }
                        else if ( LA101_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1(), 4) ) {
                            alt101=5;
                        }
                        else if ( LA101_0 == Num_cycles && getUnorderedGroupHelper().canSelect(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1(), 5) ) {
                            alt101=6;
                        }
                        else if ( LA101_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1(), 6) ) {
                            alt101=7;
                        }


                        switch (alt101) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:5977:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:5977:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:5978:5: {...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleRepeatNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:5978:107: ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:5979:6: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:5982:9: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:5982:10: {...}? => (otherlv_2= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleRepeatNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:5982:19: (otherlv_2= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:5982:20: otherlv_2= LeftParenthesis
                    	    {
                    	    otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_21); 

                    	    									newLeafNode(otherlv_2, grammarAccess.getRepeatNodeAccess().getLeftParenthesisKeyword_1_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:5992:4: ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:5992:4: ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:5993:5: {...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleRepeatNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:5993:107: ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:5994:6: ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:5997:9: ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:5997:10: {...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleRepeatNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:5997:19: (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:5997:20: otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) )
                    	    {
                    	    otherlv_3=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getRepeatNodeAccess().getNameKeyword_1_1_0());
                    	    								
                    	    otherlv_4=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getRepeatNodeAccess().getEqualsSignKeyword_1_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:6005:9: ( (lv_name_5_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:6006:10: (lv_name_5_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:6006:10: (lv_name_5_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:6007:11: lv_name_5_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getRepeatNodeAccess().getNameEStringParserRuleCall_1_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_21);
                    	    lv_name_5_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getRepeatNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_5_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:6030:4: ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:6030:4: ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:6031:5: {...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleRepeatNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:6031:107: ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:6032:6: ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:6035:9: ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:6035:10: {...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleRepeatNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:6035:19: (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:6035:20: otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_6=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_6, grammarAccess.getRepeatNodeAccess().getParametersKeyword_1_2_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:6039:9: ( (lv_parameters_7_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:6040:10: (lv_parameters_7_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:6040:10: (lv_parameters_7_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:6041:11: lv_parameters_7_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getRepeatNodeAccess().getParametersParameterParserRuleCall_1_2_1_0());
                    	    										
                    	    pushFollow(FOLLOW_22);
                    	    lv_parameters_7_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getRepeatNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_7_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:6058:9: (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )*
                    	    loop98:
                    	    do {
                    	        int alt98=2;
                    	        int LA98_0 = input.LA(1);

                    	        if ( (LA98_0==Comma) ) {
                    	            alt98=1;
                    	        }


                    	        switch (alt98) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:6059:10: otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_8=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_8, grammarAccess.getRepeatNodeAccess().getCommaKeyword_1_2_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:6063:10: ( (lv_parameters_9_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:6064:11: (lv_parameters_9_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:6064:11: (lv_parameters_9_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:6065:12: lv_parameters_9_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getRepeatNodeAccess().getParametersParameterParserRuleCall_1_2_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_22);
                    	    	    lv_parameters_9_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getRepeatNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_9_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop98;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:6089:4: ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:6089:4: ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:6090:5: {...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleRepeatNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:6090:107: ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:6091:6: ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:6094:9: ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:6094:10: {...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleRepeatNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:6094:19: (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:6094:20: otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_10=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_10, grammarAccess.getRepeatNodeAccess().getSatisficesKeyword_1_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:6098:9: ( (lv_satisfices_11_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:6099:10: (lv_satisfices_11_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:6099:10: (lv_satisfices_11_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:6100:11: lv_satisfices_11_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getRepeatNodeAccess().getSatisficesQualityParserRuleCall_1_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_22);
                    	    lv_satisfices_11_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getRepeatNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_11_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:6117:9: (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )*
                    	    loop99:
                    	    do {
                    	        int alt99=2;
                    	        int LA99_0 = input.LA(1);

                    	        if ( (LA99_0==Comma) ) {
                    	            alt99=1;
                    	        }


                    	        switch (alt99) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:6118:10: otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_12=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_12, grammarAccess.getRepeatNodeAccess().getCommaKeyword_1_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:6122:10: ( (lv_satisfices_13_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:6123:11: (lv_satisfices_13_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:6123:11: (lv_satisfices_13_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:6124:12: lv_satisfices_13_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getRepeatNodeAccess().getSatisficesQualityParserRuleCall_1_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_22);
                    	    	    lv_satisfices_13_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getRepeatNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_13_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop99;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:6148:4: ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:6148:4: ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:6149:5: {...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleRepeatNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:6149:107: ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:6150:6: ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:6153:9: ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:6153:10: {...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleRepeatNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:6153:19: (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:6153:20: otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_14=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_14, grammarAccess.getRepeatNodeAccess().getSatisfiesKeyword_1_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:6157:9: ( (lv_satisfies_15_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:6158:10: (lv_satisfies_15_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:6158:10: (lv_satisfies_15_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:6159:11: lv_satisfies_15_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getRepeatNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_22);
                    	    lv_satisfies_15_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getRepeatNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_15_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:6176:9: (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )*
                    	    loop100:
                    	    do {
                    	        int alt100=2;
                    	        int LA100_0 = input.LA(1);

                    	        if ( (LA100_0==Comma) ) {
                    	            alt100=1;
                    	        }


                    	        switch (alt100) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:6177:10: otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_16=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_16, grammarAccess.getRepeatNodeAccess().getCommaKeyword_1_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:6181:10: ( (lv_satisfies_17_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:6182:11: (lv_satisfies_17_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:6182:11: (lv_satisfies_17_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:6183:12: lv_satisfies_17_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getRepeatNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_22);
                    	    	    lv_satisfies_17_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getRepeatNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_17_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop100;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:6207:4: ({...}? => ( ({...}? => (otherlv_18= Num_cycles otherlv_19= EqualsSign ( (lv_num_cycles_20_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:6207:4: ({...}? => ( ({...}? => (otherlv_18= Num_cycles otherlv_19= EqualsSign ( (lv_num_cycles_20_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:6208:5: {...}? => ( ({...}? => (otherlv_18= Num_cycles otherlv_19= EqualsSign ( (lv_num_cycles_20_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleRepeatNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:6208:107: ( ({...}? => (otherlv_18= Num_cycles otherlv_19= EqualsSign ( (lv_num_cycles_20_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:6209:6: ({...}? => (otherlv_18= Num_cycles otherlv_19= EqualsSign ( (lv_num_cycles_20_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:6212:9: ({...}? => (otherlv_18= Num_cycles otherlv_19= EqualsSign ( (lv_num_cycles_20_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:6212:10: {...}? => (otherlv_18= Num_cycles otherlv_19= EqualsSign ( (lv_num_cycles_20_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleRepeatNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:6212:19: (otherlv_18= Num_cycles otherlv_19= EqualsSign ( (lv_num_cycles_20_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:6212:20: otherlv_18= Num_cycles otherlv_19= EqualsSign ( (lv_num_cycles_20_0= ruleEString ) )
                    	    {
                    	    otherlv_18=(Token)match(input,Num_cycles,FOLLOW_8); 

                    	    									newLeafNode(otherlv_18, grammarAccess.getRepeatNodeAccess().getNum_cyclesKeyword_1_5_0());
                    	    								
                    	    otherlv_19=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_19, grammarAccess.getRepeatNodeAccess().getEqualsSignKeyword_1_5_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:6220:9: ( (lv_num_cycles_20_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:6221:10: (lv_num_cycles_20_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:6221:10: (lv_num_cycles_20_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:6222:11: lv_num_cycles_20_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getRepeatNodeAccess().getNum_cyclesEStringParserRuleCall_1_5_2_0());
                    	    										
                    	    pushFollow(FOLLOW_21);
                    	    lv_num_cycles_20_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getRepeatNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"num_cycles",
                    	    												lv_num_cycles_20_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 7 :
                    	    // InternalQualityBtCppParser.g:6245:4: ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:6245:4: ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:6246:5: {...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1(), 6) ) {
                    	        throw new FailedPredicateException(input, "ruleRepeatNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1(), 6)");
                    	    }
                    	    // InternalQualityBtCppParser.g:6246:107: ( ({...}? => (otherlv_21= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:6247:6: ({...}? => (otherlv_21= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1(), 6);
                    	    					
                    	    // InternalQualityBtCppParser.g:6250:9: ({...}? => (otherlv_21= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:6250:10: {...}? => (otherlv_21= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleRepeatNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:6250:19: (otherlv_21= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:6250:20: otherlv_21= RightParenthesis
                    	    {
                    	    otherlv_21=(Token)match(input,RightParenthesis,FOLLOW_21); 

                    	    									newLeafNode(otherlv_21, grammarAccess.getRepeatNodeAccess().getRightParenthesisKeyword_1_6());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt101 >= 1 ) break loop101;
                                EarlyExitException eee =
                                    new EarlyExitException(101, input);
                                throw eee;
                        }
                        cnt101++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1()) ) {
                        throw new FailedPredicateException(input, "ruleRepeatNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getRepeatNodeAccess().getUnorderedGroup_1());
                    				

                    }
                    break;

            }

            this_BEGIN_22=(Token)match(input,RULE_BEGIN,FOLLOW_9); 

            			newLeafNode(this_BEGIN_22, grammarAccess.getRepeatNodeAccess().getBEGINTerminalRuleCall_2());
            		
            // InternalQualityBtCppParser.g:6272:3: ( (lv_child_23_0= ruleTreeNode ) )
            // InternalQualityBtCppParser.g:6273:4: (lv_child_23_0= ruleTreeNode )
            {
            // InternalQualityBtCppParser.g:6273:4: (lv_child_23_0= ruleTreeNode )
            // InternalQualityBtCppParser.g:6274:5: lv_child_23_0= ruleTreeNode
            {

            					newCompositeNode(grammarAccess.getRepeatNodeAccess().getChildTreeNodeParserRuleCall_3_0());
            				
            pushFollow(FOLLOW_10);
            lv_child_23_0=ruleTreeNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getRepeatNodeRule());
            					}
            					set(
            						current,
            						"child",
            						lv_child_23_0,
            						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            this_END_24=(Token)match(input,RULE_END,FOLLOW_2); 

            			newLeafNode(this_END_24, grammarAccess.getRepeatNodeAccess().getENDTerminalRuleCall_4());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRepeatNode"


    // $ANTLR start "entryRuleSubTree"
    // InternalQualityBtCppParser.g:6299:1: entryRuleSubTree returns [EObject current=null] : iv_ruleSubTree= ruleSubTree EOF ;
    public final EObject entryRuleSubTree() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSubTree = null;


        try {
            // InternalQualityBtCppParser.g:6299:48: (iv_ruleSubTree= ruleSubTree EOF )
            // InternalQualityBtCppParser.g:6300:2: iv_ruleSubTree= ruleSubTree EOF
            {
             newCompositeNode(grammarAccess.getSubTreeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleSubTree=ruleSubTree();

            state._fsp--;

             current =iv_ruleSubTree; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSubTree"


    // $ANTLR start "ruleSubTree"
    // InternalQualityBtCppParser.g:6306:1: ruleSubTree returns [EObject current=null] : ( () otherlv_1= SubTree ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? (this_BEGIN_23= RULE_BEGIN ( (lv_child_24_0= ruleTreeNode ) ) ( (lv_child_25_0= ruleTreeNode ) )* this_END_26= RULE_END )? ) ;
    public final EObject ruleSubTree() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        Token this_BEGIN_23=null;
        Token this_END_26=null;
        AntlrDatatypeRuleToken lv_ID_6_0 = null;

        AntlrDatatypeRuleToken lv_name_9_0 = null;

        EObject lv_parameters_11_0 = null;

        EObject lv_parameters_13_0 = null;

        EObject lv_satisfices_15_0 = null;

        EObject lv_satisfices_17_0 = null;

        EObject lv_satisfies_19_0 = null;

        EObject lv_satisfies_21_0 = null;

        EObject lv_child_24_0 = null;

        EObject lv_child_25_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:6312:2: ( ( () otherlv_1= SubTree ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? (this_BEGIN_23= RULE_BEGIN ( (lv_child_24_0= ruleTreeNode ) ) ( (lv_child_25_0= ruleTreeNode ) )* this_END_26= RULE_END )? ) )
            // InternalQualityBtCppParser.g:6313:2: ( () otherlv_1= SubTree ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? (this_BEGIN_23= RULE_BEGIN ( (lv_child_24_0= ruleTreeNode ) ) ( (lv_child_25_0= ruleTreeNode ) )* this_END_26= RULE_END )? )
            {
            // InternalQualityBtCppParser.g:6313:2: ( () otherlv_1= SubTree ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? (this_BEGIN_23= RULE_BEGIN ( (lv_child_24_0= ruleTreeNode ) ) ( (lv_child_25_0= ruleTreeNode ) )* this_END_26= RULE_END )? )
            // InternalQualityBtCppParser.g:6314:3: () otherlv_1= SubTree ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )? (this_BEGIN_23= RULE_BEGIN ( (lv_child_24_0= ruleTreeNode ) ) ( (lv_child_25_0= ruleTreeNode ) )* this_END_26= RULE_END )?
            {
            // InternalQualityBtCppParser.g:6314:3: ()
            // InternalQualityBtCppParser.g:6315:4: 
            {

            				current = forceCreateModelElement(
            					grammarAccess.getSubTreeAccess().getSubTreeAction_0(),
            					current);
            			

            }

            otherlv_1=(Token)match(input,SubTree,FOLLOW_23); 

            			newLeafNode(otherlv_1, grammarAccess.getSubTreeAccess().getSubTreeKeyword_1());
            		
            // InternalQualityBtCppParser.g:6325:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt107=2;
            int LA107_0 = input.LA(1);

            if ( ((LA107_0>=Parameters && LA107_0<=Satisfies)||LA107_0==Name||LA107_0==ID||(LA107_0>=LeftParenthesis && LA107_0<=RightParenthesis)) ) {
                alt107=1;
            }
            switch (alt107) {
                case 1 :
                    // InternalQualityBtCppParser.g:6326:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:6326:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:6327:5: ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getSubTreeAccess().getUnorderedGroup_2());
                    				
                    // InternalQualityBtCppParser.g:6330:5: ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:6331:6: ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:6331:6: ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) ) )+
                    int cnt106=0;
                    loop106:
                    do {
                        int alt106=8;
                        int LA106_0 = input.LA(1);

                        if ( LA106_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getSubTreeAccess().getUnorderedGroup_2(), 0) ) {
                            alt106=1;
                        }
                        else if ( LA106_0 == ID && getUnorderedGroupHelper().canSelect(grammarAccess.getSubTreeAccess().getUnorderedGroup_2(), 1) ) {
                            alt106=2;
                        }
                        else if ( LA106_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getSubTreeAccess().getUnorderedGroup_2(), 2) ) {
                            alt106=3;
                        }
                        else if ( LA106_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getSubTreeAccess().getUnorderedGroup_2(), 3) ) {
                            alt106=4;
                        }
                        else if ( LA106_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getSubTreeAccess().getUnorderedGroup_2(), 4) ) {
                            alt106=5;
                        }
                        else if ( LA106_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getSubTreeAccess().getUnorderedGroup_2(), 5) ) {
                            alt106=6;
                        }
                        else if ( LA106_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getSubTreeAccess().getUnorderedGroup_2(), 6) ) {
                            alt106=7;
                        }


                        switch (alt106) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:6332:4: ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:6332:4: ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:6333:5: {...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSubTreeAccess().getUnorderedGroup_2(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleSubTree", "getUnorderedGroupHelper().canSelect(grammarAccess.getSubTreeAccess().getUnorderedGroup_2(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:6333:104: ( ({...}? => (otherlv_3= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:6334:6: ({...}? => (otherlv_3= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSubTreeAccess().getUnorderedGroup_2(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:6337:9: ({...}? => (otherlv_3= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:6337:10: {...}? => (otherlv_3= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSubTree", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:6337:19: (otherlv_3= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:6337:20: otherlv_3= LeftParenthesis
                    	    {
                    	    otherlv_3=(Token)match(input,LeftParenthesis,FOLLOW_23); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getSubTreeAccess().getLeftParenthesisKeyword_2_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSubTreeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:6347:4: ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:6347:4: ({...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:6348:5: {...}? => ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSubTreeAccess().getUnorderedGroup_2(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleSubTree", "getUnorderedGroupHelper().canSelect(grammarAccess.getSubTreeAccess().getUnorderedGroup_2(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:6348:104: ( ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:6349:6: ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSubTreeAccess().getUnorderedGroup_2(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:6352:9: ({...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:6352:10: {...}? => (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSubTree", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:6352:19: (otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:6352:20: otherlv_4= ID otherlv_5= EqualsSign ( (lv_ID_6_0= ruleEString ) )
                    	    {
                    	    otherlv_4=(Token)match(input,ID,FOLLOW_8); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getSubTreeAccess().getIDKeyword_2_1_0());
                    	    								
                    	    otherlv_5=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_5, grammarAccess.getSubTreeAccess().getEqualsSignKeyword_2_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:6360:9: ( (lv_ID_6_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:6361:10: (lv_ID_6_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:6361:10: (lv_ID_6_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:6362:11: lv_ID_6_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getSubTreeAccess().getIDEStringParserRuleCall_2_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_23);
                    	    lv_ID_6_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getSubTreeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"ID",
                    	    												lv_ID_6_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSubTreeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:6385:4: ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:6385:4: ({...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:6386:5: {...}? => ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSubTreeAccess().getUnorderedGroup_2(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleSubTree", "getUnorderedGroupHelper().canSelect(grammarAccess.getSubTreeAccess().getUnorderedGroup_2(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:6386:104: ( ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:6387:6: ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSubTreeAccess().getUnorderedGroup_2(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:6390:9: ({...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:6390:10: {...}? => (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSubTree", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:6390:19: (otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:6390:20: otherlv_7= Name otherlv_8= EqualsSign ( (lv_name_9_0= ruleEString ) )
                    	    {
                    	    otherlv_7=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_7, grammarAccess.getSubTreeAccess().getNameKeyword_2_2_0());
                    	    								
                    	    otherlv_8=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_8, grammarAccess.getSubTreeAccess().getEqualsSignKeyword_2_2_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:6398:9: ( (lv_name_9_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:6399:10: (lv_name_9_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:6399:10: (lv_name_9_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:6400:11: lv_name_9_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getSubTreeAccess().getNameEStringParserRuleCall_2_2_2_0());
                    	    										
                    	    pushFollow(FOLLOW_23);
                    	    lv_name_9_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getSubTreeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_9_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSubTreeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:6423:4: ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:6423:4: ({...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:6424:5: {...}? => ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSubTreeAccess().getUnorderedGroup_2(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleSubTree", "getUnorderedGroupHelper().canSelect(grammarAccess.getSubTreeAccess().getUnorderedGroup_2(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:6424:104: ( ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:6425:6: ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSubTreeAccess().getUnorderedGroup_2(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:6428:9: ({...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:6428:10: {...}? => (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSubTree", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:6428:19: (otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:6428:20: otherlv_10= Parameters ( (lv_parameters_11_0= ruleParameter ) ) (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_10=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_10, grammarAccess.getSubTreeAccess().getParametersKeyword_2_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:6432:9: ( (lv_parameters_11_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:6433:10: (lv_parameters_11_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:6433:10: (lv_parameters_11_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:6434:11: lv_parameters_11_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getSubTreeAccess().getParametersParameterParserRuleCall_2_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_24);
                    	    lv_parameters_11_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getSubTreeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_11_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:6451:9: (otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) ) )*
                    	    loop103:
                    	    do {
                    	        int alt103=2;
                    	        int LA103_0 = input.LA(1);

                    	        if ( (LA103_0==Comma) ) {
                    	            alt103=1;
                    	        }


                    	        switch (alt103) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:6452:10: otherlv_12= Comma ( (lv_parameters_13_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_12=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_12, grammarAccess.getSubTreeAccess().getCommaKeyword_2_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:6456:10: ( (lv_parameters_13_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:6457:11: (lv_parameters_13_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:6457:11: (lv_parameters_13_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:6458:12: lv_parameters_13_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getSubTreeAccess().getParametersParameterParserRuleCall_2_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_24);
                    	    	    lv_parameters_13_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getSubTreeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_13_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop103;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSubTreeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:6482:4: ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:6482:4: ({...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:6483:5: {...}? => ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSubTreeAccess().getUnorderedGroup_2(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleSubTree", "getUnorderedGroupHelper().canSelect(grammarAccess.getSubTreeAccess().getUnorderedGroup_2(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:6483:104: ( ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:6484:6: ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSubTreeAccess().getUnorderedGroup_2(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:6487:9: ({...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:6487:10: {...}? => (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSubTree", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:6487:19: (otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:6487:20: otherlv_14= Satisfices ( (lv_satisfices_15_0= ruleQuality ) ) (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_14=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_14, grammarAccess.getSubTreeAccess().getSatisficesKeyword_2_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:6491:9: ( (lv_satisfices_15_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:6492:10: (lv_satisfices_15_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:6492:10: (lv_satisfices_15_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:6493:11: lv_satisfices_15_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getSubTreeAccess().getSatisficesQualityParserRuleCall_2_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_24);
                    	    lv_satisfices_15_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getSubTreeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_15_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:6510:9: (otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) ) )*
                    	    loop104:
                    	    do {
                    	        int alt104=2;
                    	        int LA104_0 = input.LA(1);

                    	        if ( (LA104_0==Comma) ) {
                    	            alt104=1;
                    	        }


                    	        switch (alt104) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:6511:10: otherlv_16= Comma ( (lv_satisfices_17_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_16=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_16, grammarAccess.getSubTreeAccess().getCommaKeyword_2_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:6515:10: ( (lv_satisfices_17_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:6516:11: (lv_satisfices_17_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:6516:11: (lv_satisfices_17_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:6517:12: lv_satisfices_17_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getSubTreeAccess().getSatisficesQualityParserRuleCall_2_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_24);
                    	    	    lv_satisfices_17_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getSubTreeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_17_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop104;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSubTreeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:6541:4: ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:6541:4: ({...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:6542:5: {...}? => ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSubTreeAccess().getUnorderedGroup_2(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleSubTree", "getUnorderedGroupHelper().canSelect(grammarAccess.getSubTreeAccess().getUnorderedGroup_2(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:6542:104: ( ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:6543:6: ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSubTreeAccess().getUnorderedGroup_2(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:6546:9: ({...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:6546:10: {...}? => (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSubTree", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:6546:19: (otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:6546:20: otherlv_18= Satisfies ( (lv_satisfies_19_0= ruleQualityRequirement ) ) (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_18=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_18, grammarAccess.getSubTreeAccess().getSatisfiesKeyword_2_5_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:6550:9: ( (lv_satisfies_19_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:6551:10: (lv_satisfies_19_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:6551:10: (lv_satisfies_19_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:6552:11: lv_satisfies_19_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getSubTreeAccess().getSatisfiesQualityRequirementParserRuleCall_2_5_1_0());
                    	    										
                    	    pushFollow(FOLLOW_24);
                    	    lv_satisfies_19_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getSubTreeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_19_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:6569:9: (otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) ) )*
                    	    loop105:
                    	    do {
                    	        int alt105=2;
                    	        int LA105_0 = input.LA(1);

                    	        if ( (LA105_0==Comma) ) {
                    	            alt105=1;
                    	        }


                    	        switch (alt105) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:6570:10: otherlv_20= Comma ( (lv_satisfies_21_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_20=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_20, grammarAccess.getSubTreeAccess().getCommaKeyword_2_5_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:6574:10: ( (lv_satisfies_21_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:6575:11: (lv_satisfies_21_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:6575:11: (lv_satisfies_21_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:6576:12: lv_satisfies_21_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getSubTreeAccess().getSatisfiesQualityRequirementParserRuleCall_2_5_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_24);
                    	    	    lv_satisfies_21_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getSubTreeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_21_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop105;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSubTreeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 7 :
                    	    // InternalQualityBtCppParser.g:6600:4: ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:6600:4: ({...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:6601:5: {...}? => ( ({...}? => (otherlv_22= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSubTreeAccess().getUnorderedGroup_2(), 6) ) {
                    	        throw new FailedPredicateException(input, "ruleSubTree", "getUnorderedGroupHelper().canSelect(grammarAccess.getSubTreeAccess().getUnorderedGroup_2(), 6)");
                    	    }
                    	    // InternalQualityBtCppParser.g:6601:104: ( ({...}? => (otherlv_22= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:6602:6: ({...}? => (otherlv_22= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSubTreeAccess().getUnorderedGroup_2(), 6);
                    	    					
                    	    // InternalQualityBtCppParser.g:6605:9: ({...}? => (otherlv_22= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:6605:10: {...}? => (otherlv_22= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSubTree", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:6605:19: (otherlv_22= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:6605:20: otherlv_22= RightParenthesis
                    	    {
                    	    otherlv_22=(Token)match(input,RightParenthesis,FOLLOW_23); 

                    	    									newLeafNode(otherlv_22, grammarAccess.getSubTreeAccess().getRightParenthesisKeyword_2_6());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSubTreeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt106 >= 1 ) break loop106;
                                EarlyExitException eee =
                                    new EarlyExitException(106, input);
                                throw eee;
                        }
                        cnt106++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getSubTreeAccess().getUnorderedGroup_2()) ) {
                        throw new FailedPredicateException(input, "ruleSubTree", "getUnorderedGroupHelper().canLeave(grammarAccess.getSubTreeAccess().getUnorderedGroup_2())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getSubTreeAccess().getUnorderedGroup_2());
                    				

                    }
                    break;

            }

            // InternalQualityBtCppParser.g:6623:3: (this_BEGIN_23= RULE_BEGIN ( (lv_child_24_0= ruleTreeNode ) ) ( (lv_child_25_0= ruleTreeNode ) )* this_END_26= RULE_END )?
            int alt109=2;
            int LA109_0 = input.LA(1);

            if ( (LA109_0==RULE_BEGIN) ) {
                alt109=1;
            }
            switch (alt109) {
                case 1 :
                    // InternalQualityBtCppParser.g:6624:4: this_BEGIN_23= RULE_BEGIN ( (lv_child_24_0= ruleTreeNode ) ) ( (lv_child_25_0= ruleTreeNode ) )* this_END_26= RULE_END
                    {
                    this_BEGIN_23=(Token)match(input,RULE_BEGIN,FOLLOW_9); 

                    				newLeafNode(this_BEGIN_23, grammarAccess.getSubTreeAccess().getBEGINTerminalRuleCall_3_0());
                    			
                    // InternalQualityBtCppParser.g:6628:4: ( (lv_child_24_0= ruleTreeNode ) )
                    // InternalQualityBtCppParser.g:6629:5: (lv_child_24_0= ruleTreeNode )
                    {
                    // InternalQualityBtCppParser.g:6629:5: (lv_child_24_0= ruleTreeNode )
                    // InternalQualityBtCppParser.g:6630:6: lv_child_24_0= ruleTreeNode
                    {

                    						newCompositeNode(grammarAccess.getSubTreeAccess().getChildTreeNodeParserRuleCall_3_1_0());
                    					
                    pushFollow(FOLLOW_18);
                    lv_child_24_0=ruleTreeNode();

                    state._fsp--;


                    						if (current==null) {
                    							current = createModelElementForParent(grammarAccess.getSubTreeRule());
                    						}
                    						add(
                    							current,
                    							"child",
                    							lv_child_24_0,
                    							"org.xtext.btcpp.QualityBtCpp.TreeNode");
                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalQualityBtCppParser.g:6647:4: ( (lv_child_25_0= ruleTreeNode ) )*
                    loop108:
                    do {
                        int alt108=2;
                        int LA108_0 = input.LA(1);

                        if ( ((LA108_0>=KeepRunningUntilFailure && LA108_0<=SetBlackboard)||(LA108_0>=ConsumeQueue && LA108_0<=ScriptAction)||LA108_0==WhileDoElse||(LA108_0>=CoroAction && LA108_0<=IfThenElse)||LA108_0==Inverter||(LA108_0>=RunOnce && LA108_0<=Sleep)||LA108_0==Loop||LA108_0==Test||(LA108_0>=M && LA108_0<=HyphenMinusGreaterThanSign)||(LA108_0>=R && LA108_0<=VerticalLineVerticalLine)||LA108_0==QuestionMark) ) {
                            alt108=1;
                        }


                        switch (alt108) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:6648:5: (lv_child_25_0= ruleTreeNode )
                    	    {
                    	    // InternalQualityBtCppParser.g:6648:5: (lv_child_25_0= ruleTreeNode )
                    	    // InternalQualityBtCppParser.g:6649:6: lv_child_25_0= ruleTreeNode
                    	    {

                    	    						newCompositeNode(grammarAccess.getSubTreeAccess().getChildTreeNodeParserRuleCall_3_2_0());
                    	    					
                    	    pushFollow(FOLLOW_18);
                    	    lv_child_25_0=ruleTreeNode();

                    	    state._fsp--;


                    	    						if (current==null) {
                    	    							current = createModelElementForParent(grammarAccess.getSubTreeRule());
                    	    						}
                    	    						add(
                    	    							current,
                    	    							"child",
                    	    							lv_child_25_0,
                    	    							"org.xtext.btcpp.QualityBtCpp.TreeNode");
                    	    						afterParserOrEnumRuleCall();
                    	    					

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop108;
                        }
                    } while (true);

                    this_END_26=(Token)match(input,RULE_END,FOLLOW_2); 

                    				newLeafNode(this_END_26, grammarAccess.getSubTreeAccess().getENDTerminalRuleCall_3_3());
                    			

                    }
                    break;

            }


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSubTree"


    // $ANTLR start "entryRuleRetryNode"
    // InternalQualityBtCppParser.g:6675:1: entryRuleRetryNode returns [EObject current=null] : iv_ruleRetryNode= ruleRetryNode EOF ;
    public final EObject entryRuleRetryNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRetryNode = null;


        try {
            // InternalQualityBtCppParser.g:6675:50: (iv_ruleRetryNode= ruleRetryNode EOF )
            // InternalQualityBtCppParser.g:6676:2: iv_ruleRetryNode= ruleRetryNode EOF
            {
             newCompositeNode(grammarAccess.getRetryNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleRetryNode=ruleRetryNode();

            state._fsp--;

             current =iv_ruleRetryNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRetryNode"


    // $ANTLR start "ruleRetryNode"
    // InternalQualityBtCppParser.g:6682:1: ruleRetryNode returns [EObject current=null] : (otherlv_0= Retry ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Num_attempts otherlv_19= EqualsSign ( (lv_num_attempts_20_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END ) ;
    public final EObject ruleRetryNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token this_BEGIN_22=null;
        Token this_END_24=null;
        AntlrDatatypeRuleToken lv_name_5_0 = null;

        EObject lv_parameters_7_0 = null;

        EObject lv_parameters_9_0 = null;

        EObject lv_satisfices_11_0 = null;

        EObject lv_satisfices_13_0 = null;

        EObject lv_satisfies_15_0 = null;

        EObject lv_satisfies_17_0 = null;

        AntlrDatatypeRuleToken lv_num_attempts_20_0 = null;

        EObject lv_child_23_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:6688:2: ( (otherlv_0= Retry ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Num_attempts otherlv_19= EqualsSign ( (lv_num_attempts_20_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END ) )
            // InternalQualityBtCppParser.g:6689:2: (otherlv_0= Retry ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Num_attempts otherlv_19= EqualsSign ( (lv_num_attempts_20_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END )
            {
            // InternalQualityBtCppParser.g:6689:2: (otherlv_0= Retry ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Num_attempts otherlv_19= EqualsSign ( (lv_num_attempts_20_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END )
            // InternalQualityBtCppParser.g:6690:3: otherlv_0= Retry ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Num_attempts otherlv_19= EqualsSign ( (lv_num_attempts_20_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END
            {
            otherlv_0=(Token)match(input,Retry,FOLLOW_25); 

            			newLeafNode(otherlv_0, grammarAccess.getRetryNodeAccess().getRetryKeyword_0());
            		
            // InternalQualityBtCppParser.g:6694:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Num_attempts otherlv_19= EqualsSign ( (lv_num_attempts_20_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt114=2;
            int LA114_0 = input.LA(1);

            if ( (LA114_0==Num_attempts||(LA114_0>=Parameters && LA114_0<=Satisfies)||LA114_0==Name||(LA114_0>=LeftParenthesis && LA114_0<=RightParenthesis)) ) {
                alt114=1;
            }
            switch (alt114) {
                case 1 :
                    // InternalQualityBtCppParser.g:6695:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Num_attempts otherlv_19= EqualsSign ( (lv_num_attempts_20_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:6695:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Num_attempts otherlv_19= EqualsSign ( (lv_num_attempts_20_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:6696:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Num_attempts otherlv_19= EqualsSign ( (lv_num_attempts_20_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1());
                    				
                    // InternalQualityBtCppParser.g:6699:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Num_attempts otherlv_19= EqualsSign ( (lv_num_attempts_20_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:6700:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Num_attempts otherlv_19= EqualsSign ( (lv_num_attempts_20_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:6700:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Num_attempts otherlv_19= EqualsSign ( (lv_num_attempts_20_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+
                    int cnt113=0;
                    loop113:
                    do {
                        int alt113=8;
                        int LA113_0 = input.LA(1);

                        if ( LA113_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1(), 0) ) {
                            alt113=1;
                        }
                        else if ( LA113_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1(), 1) ) {
                            alt113=2;
                        }
                        else if ( LA113_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1(), 2) ) {
                            alt113=3;
                        }
                        else if ( LA113_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1(), 3) ) {
                            alt113=4;
                        }
                        else if ( LA113_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1(), 4) ) {
                            alt113=5;
                        }
                        else if ( LA113_0 == Num_attempts && getUnorderedGroupHelper().canSelect(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1(), 5) ) {
                            alt113=6;
                        }
                        else if ( LA113_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1(), 6) ) {
                            alt113=7;
                        }


                        switch (alt113) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:6701:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:6701:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:6702:5: {...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleRetryNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:6702:106: ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:6703:6: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:6706:9: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:6706:10: {...}? => (otherlv_2= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleRetryNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:6706:19: (otherlv_2= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:6706:20: otherlv_2= LeftParenthesis
                    	    {
                    	    otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_25); 

                    	    									newLeafNode(otherlv_2, grammarAccess.getRetryNodeAccess().getLeftParenthesisKeyword_1_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:6716:4: ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:6716:4: ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:6717:5: {...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleRetryNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:6717:106: ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:6718:6: ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:6721:9: ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:6721:10: {...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleRetryNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:6721:19: (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:6721:20: otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) )
                    	    {
                    	    otherlv_3=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getRetryNodeAccess().getNameKeyword_1_1_0());
                    	    								
                    	    otherlv_4=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getRetryNodeAccess().getEqualsSignKeyword_1_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:6729:9: ( (lv_name_5_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:6730:10: (lv_name_5_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:6730:10: (lv_name_5_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:6731:11: lv_name_5_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getRetryNodeAccess().getNameEStringParserRuleCall_1_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_25);
                    	    lv_name_5_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getRetryNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_5_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:6754:4: ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:6754:4: ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:6755:5: {...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleRetryNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:6755:106: ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:6756:6: ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:6759:9: ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:6759:10: {...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleRetryNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:6759:19: (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:6759:20: otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_6=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_6, grammarAccess.getRetryNodeAccess().getParametersKeyword_1_2_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:6763:9: ( (lv_parameters_7_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:6764:10: (lv_parameters_7_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:6764:10: (lv_parameters_7_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:6765:11: lv_parameters_7_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getRetryNodeAccess().getParametersParameterParserRuleCall_1_2_1_0());
                    	    										
                    	    pushFollow(FOLLOW_26);
                    	    lv_parameters_7_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getRetryNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_7_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:6782:9: (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )*
                    	    loop110:
                    	    do {
                    	        int alt110=2;
                    	        int LA110_0 = input.LA(1);

                    	        if ( (LA110_0==Comma) ) {
                    	            alt110=1;
                    	        }


                    	        switch (alt110) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:6783:10: otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_8=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_8, grammarAccess.getRetryNodeAccess().getCommaKeyword_1_2_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:6787:10: ( (lv_parameters_9_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:6788:11: (lv_parameters_9_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:6788:11: (lv_parameters_9_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:6789:12: lv_parameters_9_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getRetryNodeAccess().getParametersParameterParserRuleCall_1_2_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_26);
                    	    	    lv_parameters_9_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getRetryNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_9_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop110;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:6813:4: ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:6813:4: ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:6814:5: {...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleRetryNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:6814:106: ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:6815:6: ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:6818:9: ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:6818:10: {...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleRetryNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:6818:19: (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:6818:20: otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_10=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_10, grammarAccess.getRetryNodeAccess().getSatisficesKeyword_1_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:6822:9: ( (lv_satisfices_11_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:6823:10: (lv_satisfices_11_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:6823:10: (lv_satisfices_11_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:6824:11: lv_satisfices_11_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getRetryNodeAccess().getSatisficesQualityParserRuleCall_1_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_26);
                    	    lv_satisfices_11_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getRetryNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_11_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:6841:9: (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )*
                    	    loop111:
                    	    do {
                    	        int alt111=2;
                    	        int LA111_0 = input.LA(1);

                    	        if ( (LA111_0==Comma) ) {
                    	            alt111=1;
                    	        }


                    	        switch (alt111) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:6842:10: otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_12=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_12, grammarAccess.getRetryNodeAccess().getCommaKeyword_1_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:6846:10: ( (lv_satisfices_13_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:6847:11: (lv_satisfices_13_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:6847:11: (lv_satisfices_13_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:6848:12: lv_satisfices_13_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getRetryNodeAccess().getSatisficesQualityParserRuleCall_1_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_26);
                    	    	    lv_satisfices_13_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getRetryNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_13_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop111;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:6872:4: ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:6872:4: ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:6873:5: {...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleRetryNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:6873:106: ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:6874:6: ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:6877:9: ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:6877:10: {...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleRetryNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:6877:19: (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:6877:20: otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_14=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_14, grammarAccess.getRetryNodeAccess().getSatisfiesKeyword_1_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:6881:9: ( (lv_satisfies_15_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:6882:10: (lv_satisfies_15_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:6882:10: (lv_satisfies_15_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:6883:11: lv_satisfies_15_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getRetryNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_26);
                    	    lv_satisfies_15_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getRetryNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_15_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:6900:9: (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )*
                    	    loop112:
                    	    do {
                    	        int alt112=2;
                    	        int LA112_0 = input.LA(1);

                    	        if ( (LA112_0==Comma) ) {
                    	            alt112=1;
                    	        }


                    	        switch (alt112) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:6901:10: otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_16=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_16, grammarAccess.getRetryNodeAccess().getCommaKeyword_1_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:6905:10: ( (lv_satisfies_17_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:6906:11: (lv_satisfies_17_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:6906:11: (lv_satisfies_17_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:6907:12: lv_satisfies_17_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getRetryNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_26);
                    	    	    lv_satisfies_17_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getRetryNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_17_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop112;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:6931:4: ({...}? => ( ({...}? => (otherlv_18= Num_attempts otherlv_19= EqualsSign ( (lv_num_attempts_20_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:6931:4: ({...}? => ( ({...}? => (otherlv_18= Num_attempts otherlv_19= EqualsSign ( (lv_num_attempts_20_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:6932:5: {...}? => ( ({...}? => (otherlv_18= Num_attempts otherlv_19= EqualsSign ( (lv_num_attempts_20_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleRetryNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:6932:106: ( ({...}? => (otherlv_18= Num_attempts otherlv_19= EqualsSign ( (lv_num_attempts_20_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:6933:6: ({...}? => (otherlv_18= Num_attempts otherlv_19= EqualsSign ( (lv_num_attempts_20_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:6936:9: ({...}? => (otherlv_18= Num_attempts otherlv_19= EqualsSign ( (lv_num_attempts_20_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:6936:10: {...}? => (otherlv_18= Num_attempts otherlv_19= EqualsSign ( (lv_num_attempts_20_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleRetryNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:6936:19: (otherlv_18= Num_attempts otherlv_19= EqualsSign ( (lv_num_attempts_20_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:6936:20: otherlv_18= Num_attempts otherlv_19= EqualsSign ( (lv_num_attempts_20_0= ruleEString ) )
                    	    {
                    	    otherlv_18=(Token)match(input,Num_attempts,FOLLOW_8); 

                    	    									newLeafNode(otherlv_18, grammarAccess.getRetryNodeAccess().getNum_attemptsKeyword_1_5_0());
                    	    								
                    	    otherlv_19=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_19, grammarAccess.getRetryNodeAccess().getEqualsSignKeyword_1_5_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:6944:9: ( (lv_num_attempts_20_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:6945:10: (lv_num_attempts_20_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:6945:10: (lv_num_attempts_20_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:6946:11: lv_num_attempts_20_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getRetryNodeAccess().getNum_attemptsEStringParserRuleCall_1_5_2_0());
                    	    										
                    	    pushFollow(FOLLOW_25);
                    	    lv_num_attempts_20_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getRetryNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"num_attempts",
                    	    												lv_num_attempts_20_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 7 :
                    	    // InternalQualityBtCppParser.g:6969:4: ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:6969:4: ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:6970:5: {...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1(), 6) ) {
                    	        throw new FailedPredicateException(input, "ruleRetryNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1(), 6)");
                    	    }
                    	    // InternalQualityBtCppParser.g:6970:106: ( ({...}? => (otherlv_21= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:6971:6: ({...}? => (otherlv_21= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1(), 6);
                    	    					
                    	    // InternalQualityBtCppParser.g:6974:9: ({...}? => (otherlv_21= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:6974:10: {...}? => (otherlv_21= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleRetryNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:6974:19: (otherlv_21= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:6974:20: otherlv_21= RightParenthesis
                    	    {
                    	    otherlv_21=(Token)match(input,RightParenthesis,FOLLOW_25); 

                    	    									newLeafNode(otherlv_21, grammarAccess.getRetryNodeAccess().getRightParenthesisKeyword_1_6());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt113 >= 1 ) break loop113;
                                EarlyExitException eee =
                                    new EarlyExitException(113, input);
                                throw eee;
                        }
                        cnt113++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1()) ) {
                        throw new FailedPredicateException(input, "ruleRetryNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getRetryNodeAccess().getUnorderedGroup_1());
                    				

                    }
                    break;

            }

            this_BEGIN_22=(Token)match(input,RULE_BEGIN,FOLLOW_9); 

            			newLeafNode(this_BEGIN_22, grammarAccess.getRetryNodeAccess().getBEGINTerminalRuleCall_2());
            		
            // InternalQualityBtCppParser.g:6996:3: ( (lv_child_23_0= ruleTreeNode ) )
            // InternalQualityBtCppParser.g:6997:4: (lv_child_23_0= ruleTreeNode )
            {
            // InternalQualityBtCppParser.g:6997:4: (lv_child_23_0= ruleTreeNode )
            // InternalQualityBtCppParser.g:6998:5: lv_child_23_0= ruleTreeNode
            {

            					newCompositeNode(grammarAccess.getRetryNodeAccess().getChildTreeNodeParserRuleCall_3_0());
            				
            pushFollow(FOLLOW_10);
            lv_child_23_0=ruleTreeNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getRetryNodeRule());
            					}
            					set(
            						current,
            						"child",
            						lv_child_23_0,
            						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            this_END_24=(Token)match(input,RULE_END,FOLLOW_2); 

            			newLeafNode(this_END_24, grammarAccess.getRetryNodeAccess().getENDTerminalRuleCall_4());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRetryNode"


    // $ANTLR start "entryRuleParallelAllNode"
    // InternalQualityBtCppParser.g:7023:1: entryRuleParallelAllNode returns [EObject current=null] : iv_ruleParallelAllNode= ruleParallelAllNode EOF ;
    public final EObject entryRuleParallelAllNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParallelAllNode = null;


        try {
            // InternalQualityBtCppParser.g:7023:56: (iv_ruleParallelAllNode= ruleParallelAllNode EOF )
            // InternalQualityBtCppParser.g:7024:2: iv_ruleParallelAllNode= ruleParallelAllNode EOF
            {
             newCompositeNode(grammarAccess.getParallelAllNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleParallelAllNode=ruleParallelAllNode();

            state._fsp--;

             current =iv_ruleParallelAllNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleParallelAllNode"


    // $ANTLR start "ruleParallelAllNode"
    // InternalQualityBtCppParser.g:7030:1: ruleParallelAllNode returns [EObject current=null] : (otherlv_0= All ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_19= RULE_BEGIN ( (lv_child_20_0= ruleTreeNode ) ) ( (lv_child_21_0= ruleTreeNode ) )* this_END_22= RULE_END ) ;
    public final EObject ruleParallelAllNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token this_BEGIN_19=null;
        Token this_END_22=null;
        AntlrDatatypeRuleToken lv_name_5_0 = null;

        EObject lv_parameters_7_0 = null;

        EObject lv_parameters_9_0 = null;

        EObject lv_satisfices_11_0 = null;

        EObject lv_satisfices_13_0 = null;

        EObject lv_satisfies_15_0 = null;

        EObject lv_satisfies_17_0 = null;

        EObject lv_child_20_0 = null;

        EObject lv_child_21_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:7036:2: ( (otherlv_0= All ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_19= RULE_BEGIN ( (lv_child_20_0= ruleTreeNode ) ) ( (lv_child_21_0= ruleTreeNode ) )* this_END_22= RULE_END ) )
            // InternalQualityBtCppParser.g:7037:2: (otherlv_0= All ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_19= RULE_BEGIN ( (lv_child_20_0= ruleTreeNode ) ) ( (lv_child_21_0= ruleTreeNode ) )* this_END_22= RULE_END )
            {
            // InternalQualityBtCppParser.g:7037:2: (otherlv_0= All ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_19= RULE_BEGIN ( (lv_child_20_0= ruleTreeNode ) ) ( (lv_child_21_0= ruleTreeNode ) )* this_END_22= RULE_END )
            // InternalQualityBtCppParser.g:7038:3: otherlv_0= All ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_19= RULE_BEGIN ( (lv_child_20_0= ruleTreeNode ) ) ( (lv_child_21_0= ruleTreeNode ) )* this_END_22= RULE_END
            {
            otherlv_0=(Token)match(input,All,FOLLOW_15); 

            			newLeafNode(otherlv_0, grammarAccess.getParallelAllNodeAccess().getAllKeyword_0());
            		
            // InternalQualityBtCppParser.g:7042:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt119=2;
            int LA119_0 = input.LA(1);

            if ( ((LA119_0>=Parameters && LA119_0<=Satisfies)||LA119_0==Name||(LA119_0>=LeftParenthesis && LA119_0<=RightParenthesis)) ) {
                alt119=1;
            }
            switch (alt119) {
                case 1 :
                    // InternalQualityBtCppParser.g:7043:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:7043:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:7044:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1());
                    				
                    // InternalQualityBtCppParser.g:7047:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:7048:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:7048:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+
                    int cnt118=0;
                    loop118:
                    do {
                        int alt118=7;
                        int LA118_0 = input.LA(1);

                        if ( LA118_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1(), 0) ) {
                            alt118=1;
                        }
                        else if ( LA118_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1(), 1) ) {
                            alt118=2;
                        }
                        else if ( LA118_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1(), 2) ) {
                            alt118=3;
                        }
                        else if ( LA118_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1(), 3) ) {
                            alt118=4;
                        }
                        else if ( LA118_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1(), 4) ) {
                            alt118=5;
                        }
                        else if ( LA118_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1(), 5) ) {
                            alt118=6;
                        }


                        switch (alt118) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:7049:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:7049:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:7050:5: {...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleParallelAllNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:7050:112: ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:7051:6: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:7054:9: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:7054:10: {...}? => (otherlv_2= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleParallelAllNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:7054:19: (otherlv_2= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:7054:20: otherlv_2= LeftParenthesis
                    	    {
                    	    otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_2, grammarAccess.getParallelAllNodeAccess().getLeftParenthesisKeyword_1_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:7064:4: ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:7064:4: ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:7065:5: {...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleParallelAllNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:7065:112: ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:7066:6: ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:7069:9: ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:7069:10: {...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleParallelAllNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:7069:19: (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:7069:20: otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) )
                    	    {
                    	    otherlv_3=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getParallelAllNodeAccess().getNameKeyword_1_1_0());
                    	    								
                    	    otherlv_4=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getParallelAllNodeAccess().getEqualsSignKeyword_1_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:7077:9: ( (lv_name_5_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:7078:10: (lv_name_5_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:7078:10: (lv_name_5_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:7079:11: lv_name_5_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getParallelAllNodeAccess().getNameEStringParserRuleCall_1_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_15);
                    	    lv_name_5_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getParallelAllNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_5_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:7102:4: ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:7102:4: ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:7103:5: {...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleParallelAllNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:7103:112: ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:7104:6: ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:7107:9: ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:7107:10: {...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleParallelAllNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:7107:19: (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:7107:20: otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_6=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_6, grammarAccess.getParallelAllNodeAccess().getParametersKeyword_1_2_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:7111:9: ( (lv_parameters_7_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:7112:10: (lv_parameters_7_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:7112:10: (lv_parameters_7_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:7113:11: lv_parameters_7_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getParallelAllNodeAccess().getParametersParameterParserRuleCall_1_2_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_parameters_7_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getParallelAllNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_7_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:7130:9: (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )*
                    	    loop115:
                    	    do {
                    	        int alt115=2;
                    	        int LA115_0 = input.LA(1);

                    	        if ( (LA115_0==Comma) ) {
                    	            alt115=1;
                    	        }


                    	        switch (alt115) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:7131:10: otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_8=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_8, grammarAccess.getParallelAllNodeAccess().getCommaKeyword_1_2_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:7135:10: ( (lv_parameters_9_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:7136:11: (lv_parameters_9_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:7136:11: (lv_parameters_9_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:7137:12: lv_parameters_9_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getParallelAllNodeAccess().getParametersParameterParserRuleCall_1_2_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_parameters_9_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getParallelAllNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_9_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop115;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:7161:4: ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:7161:4: ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:7162:5: {...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleParallelAllNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:7162:112: ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:7163:6: ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:7166:9: ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:7166:10: {...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleParallelAllNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:7166:19: (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:7166:20: otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_10=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_10, grammarAccess.getParallelAllNodeAccess().getSatisficesKeyword_1_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:7170:9: ( (lv_satisfices_11_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:7171:10: (lv_satisfices_11_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:7171:10: (lv_satisfices_11_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:7172:11: lv_satisfices_11_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getParallelAllNodeAccess().getSatisficesQualityParserRuleCall_1_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfices_11_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getParallelAllNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_11_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:7189:9: (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )*
                    	    loop116:
                    	    do {
                    	        int alt116=2;
                    	        int LA116_0 = input.LA(1);

                    	        if ( (LA116_0==Comma) ) {
                    	            alt116=1;
                    	        }


                    	        switch (alt116) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:7190:10: otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_12=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_12, grammarAccess.getParallelAllNodeAccess().getCommaKeyword_1_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:7194:10: ( (lv_satisfices_13_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:7195:11: (lv_satisfices_13_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:7195:11: (lv_satisfices_13_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:7196:12: lv_satisfices_13_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getParallelAllNodeAccess().getSatisficesQualityParserRuleCall_1_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfices_13_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getParallelAllNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_13_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop116;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:7220:4: ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:7220:4: ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:7221:5: {...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleParallelAllNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:7221:112: ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:7222:6: ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:7225:9: ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:7225:10: {...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleParallelAllNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:7225:19: (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:7225:20: otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_14=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_14, grammarAccess.getParallelAllNodeAccess().getSatisfiesKeyword_1_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:7229:9: ( (lv_satisfies_15_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:7230:10: (lv_satisfies_15_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:7230:10: (lv_satisfies_15_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:7231:11: lv_satisfies_15_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getParallelAllNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfies_15_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getParallelAllNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_15_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:7248:9: (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )*
                    	    loop117:
                    	    do {
                    	        int alt117=2;
                    	        int LA117_0 = input.LA(1);

                    	        if ( (LA117_0==Comma) ) {
                    	            alt117=1;
                    	        }


                    	        switch (alt117) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:7249:10: otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_16=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_16, grammarAccess.getParallelAllNodeAccess().getCommaKeyword_1_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:7253:10: ( (lv_satisfies_17_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:7254:11: (lv_satisfies_17_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:7254:11: (lv_satisfies_17_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:7255:12: lv_satisfies_17_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getParallelAllNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfies_17_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getParallelAllNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_17_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop117;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:7279:4: ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:7279:4: ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:7280:5: {...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleParallelAllNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:7280:112: ( ({...}? => (otherlv_18= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:7281:6: ({...}? => (otherlv_18= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:7284:9: ({...}? => (otherlv_18= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:7284:10: {...}? => (otherlv_18= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleParallelAllNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:7284:19: (otherlv_18= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:7284:20: otherlv_18= RightParenthesis
                    	    {
                    	    otherlv_18=(Token)match(input,RightParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_18, grammarAccess.getParallelAllNodeAccess().getRightParenthesisKeyword_1_5());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt118 >= 1 ) break loop118;
                                EarlyExitException eee =
                                    new EarlyExitException(118, input);
                                throw eee;
                        }
                        cnt118++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1()) ) {
                        throw new FailedPredicateException(input, "ruleParallelAllNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getParallelAllNodeAccess().getUnorderedGroup_1());
                    				

                    }
                    break;

            }

            this_BEGIN_19=(Token)match(input,RULE_BEGIN,FOLLOW_9); 

            			newLeafNode(this_BEGIN_19, grammarAccess.getParallelAllNodeAccess().getBEGINTerminalRuleCall_2());
            		
            // InternalQualityBtCppParser.g:7306:3: ( (lv_child_20_0= ruleTreeNode ) )
            // InternalQualityBtCppParser.g:7307:4: (lv_child_20_0= ruleTreeNode )
            {
            // InternalQualityBtCppParser.g:7307:4: (lv_child_20_0= ruleTreeNode )
            // InternalQualityBtCppParser.g:7308:5: lv_child_20_0= ruleTreeNode
            {

            					newCompositeNode(grammarAccess.getParallelAllNodeAccess().getChildTreeNodeParserRuleCall_3_0());
            				
            pushFollow(FOLLOW_18);
            lv_child_20_0=ruleTreeNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getParallelAllNodeRule());
            					}
            					add(
            						current,
            						"child",
            						lv_child_20_0,
            						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            // InternalQualityBtCppParser.g:7325:3: ( (lv_child_21_0= ruleTreeNode ) )*
            loop120:
            do {
                int alt120=2;
                int LA120_0 = input.LA(1);

                if ( ((LA120_0>=KeepRunningUntilFailure && LA120_0<=SetBlackboard)||(LA120_0>=ConsumeQueue && LA120_0<=ScriptAction)||LA120_0==WhileDoElse||(LA120_0>=CoroAction && LA120_0<=IfThenElse)||LA120_0==Inverter||(LA120_0>=RunOnce && LA120_0<=Sleep)||LA120_0==Loop||LA120_0==Test||(LA120_0>=M && LA120_0<=HyphenMinusGreaterThanSign)||(LA120_0>=R && LA120_0<=VerticalLineVerticalLine)||LA120_0==QuestionMark) ) {
                    alt120=1;
                }


                switch (alt120) {
            	case 1 :
            	    // InternalQualityBtCppParser.g:7326:4: (lv_child_21_0= ruleTreeNode )
            	    {
            	    // InternalQualityBtCppParser.g:7326:4: (lv_child_21_0= ruleTreeNode )
            	    // InternalQualityBtCppParser.g:7327:5: lv_child_21_0= ruleTreeNode
            	    {

            	    					newCompositeNode(grammarAccess.getParallelAllNodeAccess().getChildTreeNodeParserRuleCall_4_0());
            	    				
            	    pushFollow(FOLLOW_18);
            	    lv_child_21_0=ruleTreeNode();

            	    state._fsp--;


            	    					if (current==null) {
            	    						current = createModelElementForParent(grammarAccess.getParallelAllNodeRule());
            	    					}
            	    					add(
            	    						current,
            	    						"child",
            	    						lv_child_21_0,
            	    						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            	    					afterParserOrEnumRuleCall();
            	    				

            	    }


            	    }
            	    break;

            	default :
            	    break loop120;
                }
            } while (true);

            this_END_22=(Token)match(input,RULE_END,FOLLOW_2); 

            			newLeafNode(this_END_22, grammarAccess.getParallelAllNodeAccess().getENDTerminalRuleCall_5());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleParallelAllNode"


    // $ANTLR start "entryRuleDelayNode"
    // InternalQualityBtCppParser.g:7352:1: entryRuleDelayNode returns [EObject current=null] : iv_ruleDelayNode= ruleDelayNode EOF ;
    public final EObject entryRuleDelayNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDelayNode = null;


        try {
            // InternalQualityBtCppParser.g:7352:50: (iv_ruleDelayNode= ruleDelayNode EOF )
            // InternalQualityBtCppParser.g:7353:2: iv_ruleDelayNode= ruleDelayNode EOF
            {
             newCompositeNode(grammarAccess.getDelayNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleDelayNode=ruleDelayNode();

            state._fsp--;

             current =iv_ruleDelayNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDelayNode"


    // $ANTLR start "ruleDelayNode"
    // InternalQualityBtCppParser.g:7359:1: ruleDelayNode returns [EObject current=null] : (otherlv_0= Delay ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Delay_msec otherlv_7= EqualsSign ( (lv_delay_msec_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END ) ;
    public final EObject ruleDelayNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token this_BEGIN_22=null;
        Token this_END_24=null;
        AntlrDatatypeRuleToken lv_name_5_0 = null;

        AntlrDatatypeRuleToken lv_delay_msec_8_0 = null;

        EObject lv_parameters_10_0 = null;

        EObject lv_parameters_12_0 = null;

        EObject lv_satisfices_14_0 = null;

        EObject lv_satisfices_16_0 = null;

        EObject lv_satisfies_18_0 = null;

        EObject lv_satisfies_20_0 = null;

        EObject lv_child_23_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:7365:2: ( (otherlv_0= Delay ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Delay_msec otherlv_7= EqualsSign ( (lv_delay_msec_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END ) )
            // InternalQualityBtCppParser.g:7366:2: (otherlv_0= Delay ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Delay_msec otherlv_7= EqualsSign ( (lv_delay_msec_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END )
            {
            // InternalQualityBtCppParser.g:7366:2: (otherlv_0= Delay ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Delay_msec otherlv_7= EqualsSign ( (lv_delay_msec_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END )
            // InternalQualityBtCppParser.g:7367:3: otherlv_0= Delay ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Delay_msec otherlv_7= EqualsSign ( (lv_delay_msec_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_22= RULE_BEGIN ( (lv_child_23_0= ruleTreeNode ) ) this_END_24= RULE_END
            {
            otherlv_0=(Token)match(input,Delay,FOLLOW_27); 

            			newLeafNode(otherlv_0, grammarAccess.getDelayNodeAccess().getDelayKeyword_0());
            		
            // InternalQualityBtCppParser.g:7371:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Delay_msec otherlv_7= EqualsSign ( (lv_delay_msec_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt125=2;
            int LA125_0 = input.LA(1);

            if ( (LA125_0==Delay_msec||(LA125_0>=Parameters && LA125_0<=Satisfies)||LA125_0==Name||(LA125_0>=LeftParenthesis && LA125_0<=RightParenthesis)) ) {
                alt125=1;
            }
            switch (alt125) {
                case 1 :
                    // InternalQualityBtCppParser.g:7372:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Delay_msec otherlv_7= EqualsSign ( (lv_delay_msec_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:7372:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Delay_msec otherlv_7= EqualsSign ( (lv_delay_msec_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:7373:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Delay_msec otherlv_7= EqualsSign ( (lv_delay_msec_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1());
                    				
                    // InternalQualityBtCppParser.g:7376:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Delay_msec otherlv_7= EqualsSign ( (lv_delay_msec_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:7377:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Delay_msec otherlv_7= EqualsSign ( (lv_delay_msec_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:7377:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Delay_msec otherlv_7= EqualsSign ( (lv_delay_msec_8_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) ) )+
                    int cnt124=0;
                    loop124:
                    do {
                        int alt124=8;
                        int LA124_0 = input.LA(1);

                        if ( LA124_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1(), 0) ) {
                            alt124=1;
                        }
                        else if ( LA124_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1(), 1) ) {
                            alt124=2;
                        }
                        else if ( LA124_0 == Delay_msec && getUnorderedGroupHelper().canSelect(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1(), 2) ) {
                            alt124=3;
                        }
                        else if ( LA124_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1(), 3) ) {
                            alt124=4;
                        }
                        else if ( LA124_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1(), 4) ) {
                            alt124=5;
                        }
                        else if ( LA124_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1(), 5) ) {
                            alt124=6;
                        }
                        else if ( LA124_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1(), 6) ) {
                            alt124=7;
                        }


                        switch (alt124) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:7378:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:7378:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:7379:5: {...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleDelayNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:7379:106: ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:7380:6: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:7383:9: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:7383:10: {...}? => (otherlv_2= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleDelayNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:7383:19: (otherlv_2= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:7383:20: otherlv_2= LeftParenthesis
                    	    {
                    	    otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_27); 

                    	    									newLeafNode(otherlv_2, grammarAccess.getDelayNodeAccess().getLeftParenthesisKeyword_1_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:7393:4: ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:7393:4: ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:7394:5: {...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleDelayNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:7394:106: ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:7395:6: ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:7398:9: ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:7398:10: {...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleDelayNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:7398:19: (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:7398:20: otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) )
                    	    {
                    	    otherlv_3=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getDelayNodeAccess().getNameKeyword_1_1_0());
                    	    								
                    	    otherlv_4=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getDelayNodeAccess().getEqualsSignKeyword_1_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:7406:9: ( (lv_name_5_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:7407:10: (lv_name_5_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:7407:10: (lv_name_5_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:7408:11: lv_name_5_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getDelayNodeAccess().getNameEStringParserRuleCall_1_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_27);
                    	    lv_name_5_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getDelayNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_5_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:7431:4: ({...}? => ( ({...}? => (otherlv_6= Delay_msec otherlv_7= EqualsSign ( (lv_delay_msec_8_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:7431:4: ({...}? => ( ({...}? => (otherlv_6= Delay_msec otherlv_7= EqualsSign ( (lv_delay_msec_8_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:7432:5: {...}? => ( ({...}? => (otherlv_6= Delay_msec otherlv_7= EqualsSign ( (lv_delay_msec_8_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleDelayNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:7432:106: ( ({...}? => (otherlv_6= Delay_msec otherlv_7= EqualsSign ( (lv_delay_msec_8_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:7433:6: ({...}? => (otherlv_6= Delay_msec otherlv_7= EqualsSign ( (lv_delay_msec_8_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:7436:9: ({...}? => (otherlv_6= Delay_msec otherlv_7= EqualsSign ( (lv_delay_msec_8_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:7436:10: {...}? => (otherlv_6= Delay_msec otherlv_7= EqualsSign ( (lv_delay_msec_8_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleDelayNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:7436:19: (otherlv_6= Delay_msec otherlv_7= EqualsSign ( (lv_delay_msec_8_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:7436:20: otherlv_6= Delay_msec otherlv_7= EqualsSign ( (lv_delay_msec_8_0= ruleEString ) )
                    	    {
                    	    otherlv_6=(Token)match(input,Delay_msec,FOLLOW_8); 

                    	    									newLeafNode(otherlv_6, grammarAccess.getDelayNodeAccess().getDelay_msecKeyword_1_2_0());
                    	    								
                    	    otherlv_7=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_7, grammarAccess.getDelayNodeAccess().getEqualsSignKeyword_1_2_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:7444:9: ( (lv_delay_msec_8_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:7445:10: (lv_delay_msec_8_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:7445:10: (lv_delay_msec_8_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:7446:11: lv_delay_msec_8_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getDelayNodeAccess().getDelay_msecEStringParserRuleCall_1_2_2_0());
                    	    										
                    	    pushFollow(FOLLOW_27);
                    	    lv_delay_msec_8_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getDelayNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"delay_msec",
                    	    												lv_delay_msec_8_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:7469:4: ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:7469:4: ({...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:7470:5: {...}? => ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleDelayNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:7470:106: ( ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:7471:6: ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:7474:9: ({...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:7474:10: {...}? => (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleDelayNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:7474:19: (otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:7474:20: otherlv_9= Parameters ( (lv_parameters_10_0= ruleParameter ) ) (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_9=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_9, grammarAccess.getDelayNodeAccess().getParametersKeyword_1_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:7478:9: ( (lv_parameters_10_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:7479:10: (lv_parameters_10_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:7479:10: (lv_parameters_10_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:7480:11: lv_parameters_10_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getDelayNodeAccess().getParametersParameterParserRuleCall_1_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_28);
                    	    lv_parameters_10_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getDelayNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_10_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:7497:9: (otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) ) )*
                    	    loop121:
                    	    do {
                    	        int alt121=2;
                    	        int LA121_0 = input.LA(1);

                    	        if ( (LA121_0==Comma) ) {
                    	            alt121=1;
                    	        }


                    	        switch (alt121) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:7498:10: otherlv_11= Comma ( (lv_parameters_12_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_11=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_11, grammarAccess.getDelayNodeAccess().getCommaKeyword_1_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:7502:10: ( (lv_parameters_12_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:7503:11: (lv_parameters_12_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:7503:11: (lv_parameters_12_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:7504:12: lv_parameters_12_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getDelayNodeAccess().getParametersParameterParserRuleCall_1_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_28);
                    	    	    lv_parameters_12_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getDelayNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_12_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop121;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:7528:4: ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:7528:4: ({...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:7529:5: {...}? => ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleDelayNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:7529:106: ( ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:7530:6: ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:7533:9: ({...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:7533:10: {...}? => (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleDelayNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:7533:19: (otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:7533:20: otherlv_13= Satisfices ( (lv_satisfices_14_0= ruleQuality ) ) (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_13=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_13, grammarAccess.getDelayNodeAccess().getSatisficesKeyword_1_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:7537:9: ( (lv_satisfices_14_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:7538:10: (lv_satisfices_14_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:7538:10: (lv_satisfices_14_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:7539:11: lv_satisfices_14_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getDelayNodeAccess().getSatisficesQualityParserRuleCall_1_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_28);
                    	    lv_satisfices_14_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getDelayNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_14_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:7556:9: (otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) ) )*
                    	    loop122:
                    	    do {
                    	        int alt122=2;
                    	        int LA122_0 = input.LA(1);

                    	        if ( (LA122_0==Comma) ) {
                    	            alt122=1;
                    	        }


                    	        switch (alt122) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:7557:10: otherlv_15= Comma ( (lv_satisfices_16_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_15=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_15, grammarAccess.getDelayNodeAccess().getCommaKeyword_1_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:7561:10: ( (lv_satisfices_16_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:7562:11: (lv_satisfices_16_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:7562:11: (lv_satisfices_16_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:7563:12: lv_satisfices_16_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getDelayNodeAccess().getSatisficesQualityParserRuleCall_1_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_28);
                    	    	    lv_satisfices_16_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getDelayNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_16_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop122;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:7587:4: ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:7587:4: ({...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:7588:5: {...}? => ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleDelayNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:7588:106: ( ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:7589:6: ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:7592:9: ({...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:7592:10: {...}? => (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleDelayNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:7592:19: (otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:7592:20: otherlv_17= Satisfies ( (lv_satisfies_18_0= ruleQualityRequirement ) ) (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_17=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_17, grammarAccess.getDelayNodeAccess().getSatisfiesKeyword_1_5_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:7596:9: ( (lv_satisfies_18_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:7597:10: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:7597:10: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:7598:11: lv_satisfies_18_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getDelayNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_5_1_0());
                    	    										
                    	    pushFollow(FOLLOW_28);
                    	    lv_satisfies_18_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getDelayNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_18_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:7615:9: (otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) ) )*
                    	    loop123:
                    	    do {
                    	        int alt123=2;
                    	        int LA123_0 = input.LA(1);

                    	        if ( (LA123_0==Comma) ) {
                    	            alt123=1;
                    	        }


                    	        switch (alt123) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:7616:10: otherlv_19= Comma ( (lv_satisfies_20_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_19=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_19, grammarAccess.getDelayNodeAccess().getCommaKeyword_1_5_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:7620:10: ( (lv_satisfies_20_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:7621:11: (lv_satisfies_20_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:7621:11: (lv_satisfies_20_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:7622:12: lv_satisfies_20_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getDelayNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_5_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_28);
                    	    	    lv_satisfies_20_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getDelayNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_20_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop123;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 7 :
                    	    // InternalQualityBtCppParser.g:7646:4: ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:7646:4: ({...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:7647:5: {...}? => ( ({...}? => (otherlv_21= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1(), 6) ) {
                    	        throw new FailedPredicateException(input, "ruleDelayNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1(), 6)");
                    	    }
                    	    // InternalQualityBtCppParser.g:7647:106: ( ({...}? => (otherlv_21= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:7648:6: ({...}? => (otherlv_21= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1(), 6);
                    	    					
                    	    // InternalQualityBtCppParser.g:7651:9: ({...}? => (otherlv_21= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:7651:10: {...}? => (otherlv_21= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleDelayNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:7651:19: (otherlv_21= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:7651:20: otherlv_21= RightParenthesis
                    	    {
                    	    otherlv_21=(Token)match(input,RightParenthesis,FOLLOW_27); 

                    	    									newLeafNode(otherlv_21, grammarAccess.getDelayNodeAccess().getRightParenthesisKeyword_1_6());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt124 >= 1 ) break loop124;
                                EarlyExitException eee =
                                    new EarlyExitException(124, input);
                                throw eee;
                        }
                        cnt124++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1()) ) {
                        throw new FailedPredicateException(input, "ruleDelayNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getDelayNodeAccess().getUnorderedGroup_1());
                    				

                    }
                    break;

            }

            this_BEGIN_22=(Token)match(input,RULE_BEGIN,FOLLOW_9); 

            			newLeafNode(this_BEGIN_22, grammarAccess.getDelayNodeAccess().getBEGINTerminalRuleCall_2());
            		
            // InternalQualityBtCppParser.g:7673:3: ( (lv_child_23_0= ruleTreeNode ) )
            // InternalQualityBtCppParser.g:7674:4: (lv_child_23_0= ruleTreeNode )
            {
            // InternalQualityBtCppParser.g:7674:4: (lv_child_23_0= ruleTreeNode )
            // InternalQualityBtCppParser.g:7675:5: lv_child_23_0= ruleTreeNode
            {

            					newCompositeNode(grammarAccess.getDelayNodeAccess().getChildTreeNodeParserRuleCall_3_0());
            				
            pushFollow(FOLLOW_10);
            lv_child_23_0=ruleTreeNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getDelayNodeRule());
            					}
            					set(
            						current,
            						"child",
            						lv_child_23_0,
            						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            this_END_24=(Token)match(input,RULE_END,FOLLOW_2); 

            			newLeafNode(this_END_24, grammarAccess.getDelayNodeAccess().getENDTerminalRuleCall_4());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDelayNode"


    // $ANTLR start "entryRulePreconditionNode"
    // InternalQualityBtCppParser.g:7700:1: entryRulePreconditionNode returns [EObject current=null] : iv_rulePreconditionNode= rulePreconditionNode EOF ;
    public final EObject entryRulePreconditionNode() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePreconditionNode = null;


        try {
            // InternalQualityBtCppParser.g:7700:57: (iv_rulePreconditionNode= rulePreconditionNode EOF )
            // InternalQualityBtCppParser.g:7701:2: iv_rulePreconditionNode= rulePreconditionNode EOF
            {
             newCompositeNode(grammarAccess.getPreconditionNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_rulePreconditionNode=rulePreconditionNode();

            state._fsp--;

             current =iv_rulePreconditionNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePreconditionNode"


    // $ANTLR start "rulePreconditionNode"
    // InternalQualityBtCppParser.g:7707:1: rulePreconditionNode returns [EObject current=null] : (otherlv_0= Precondition ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_19= RULE_BEGIN ( (lv_child_20_0= ruleTreeNode ) ) this_END_21= RULE_END ) ;
    public final EObject rulePreconditionNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token this_BEGIN_19=null;
        Token this_END_21=null;
        AntlrDatatypeRuleToken lv_name_5_0 = null;

        EObject lv_parameters_7_0 = null;

        EObject lv_parameters_9_0 = null;

        EObject lv_satisfices_11_0 = null;

        EObject lv_satisfices_13_0 = null;

        EObject lv_satisfies_15_0 = null;

        EObject lv_satisfies_17_0 = null;

        EObject lv_child_20_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:7713:2: ( (otherlv_0= Precondition ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_19= RULE_BEGIN ( (lv_child_20_0= ruleTreeNode ) ) this_END_21= RULE_END ) )
            // InternalQualityBtCppParser.g:7714:2: (otherlv_0= Precondition ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_19= RULE_BEGIN ( (lv_child_20_0= ruleTreeNode ) ) this_END_21= RULE_END )
            {
            // InternalQualityBtCppParser.g:7714:2: (otherlv_0= Precondition ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_19= RULE_BEGIN ( (lv_child_20_0= ruleTreeNode ) ) this_END_21= RULE_END )
            // InternalQualityBtCppParser.g:7715:3: otherlv_0= Precondition ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_19= RULE_BEGIN ( (lv_child_20_0= ruleTreeNode ) ) this_END_21= RULE_END
            {
            otherlv_0=(Token)match(input,Precondition,FOLLOW_15); 

            			newLeafNode(otherlv_0, grammarAccess.getPreconditionNodeAccess().getPreconditionKeyword_0());
            		
            // InternalQualityBtCppParser.g:7719:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt130=2;
            int LA130_0 = input.LA(1);

            if ( ((LA130_0>=Parameters && LA130_0<=Satisfies)||LA130_0==Name||(LA130_0>=LeftParenthesis && LA130_0<=RightParenthesis)) ) {
                alt130=1;
            }
            switch (alt130) {
                case 1 :
                    // InternalQualityBtCppParser.g:7720:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:7720:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:7721:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1());
                    				
                    // InternalQualityBtCppParser.g:7724:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:7725:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:7725:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+
                    int cnt129=0;
                    loop129:
                    do {
                        int alt129=7;
                        int LA129_0 = input.LA(1);

                        if ( LA129_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1(), 0) ) {
                            alt129=1;
                        }
                        else if ( LA129_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1(), 1) ) {
                            alt129=2;
                        }
                        else if ( LA129_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1(), 2) ) {
                            alt129=3;
                        }
                        else if ( LA129_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1(), 3) ) {
                            alt129=4;
                        }
                        else if ( LA129_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1(), 4) ) {
                            alt129=5;
                        }
                        else if ( LA129_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1(), 5) ) {
                            alt129=6;
                        }


                        switch (alt129) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:7726:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:7726:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:7727:5: {...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1(), 0) ) {
                    	        throw new FailedPredicateException(input, "rulePreconditionNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:7727:113: ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:7728:6: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:7731:9: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:7731:10: {...}? => (otherlv_2= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "rulePreconditionNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:7731:19: (otherlv_2= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:7731:20: otherlv_2= LeftParenthesis
                    	    {
                    	    otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_2, grammarAccess.getPreconditionNodeAccess().getLeftParenthesisKeyword_1_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:7741:4: ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:7741:4: ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:7742:5: {...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1(), 1) ) {
                    	        throw new FailedPredicateException(input, "rulePreconditionNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:7742:113: ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:7743:6: ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:7746:9: ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:7746:10: {...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "rulePreconditionNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:7746:19: (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:7746:20: otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) )
                    	    {
                    	    otherlv_3=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getPreconditionNodeAccess().getNameKeyword_1_1_0());
                    	    								
                    	    otherlv_4=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getPreconditionNodeAccess().getEqualsSignKeyword_1_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:7754:9: ( (lv_name_5_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:7755:10: (lv_name_5_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:7755:10: (lv_name_5_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:7756:11: lv_name_5_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getPreconditionNodeAccess().getNameEStringParserRuleCall_1_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_15);
                    	    lv_name_5_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getPreconditionNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_5_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:7779:4: ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:7779:4: ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:7780:5: {...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1(), 2) ) {
                    	        throw new FailedPredicateException(input, "rulePreconditionNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:7780:113: ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:7781:6: ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:7784:9: ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:7784:10: {...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "rulePreconditionNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:7784:19: (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:7784:20: otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_6=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_6, grammarAccess.getPreconditionNodeAccess().getParametersKeyword_1_2_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:7788:9: ( (lv_parameters_7_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:7789:10: (lv_parameters_7_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:7789:10: (lv_parameters_7_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:7790:11: lv_parameters_7_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getPreconditionNodeAccess().getParametersParameterParserRuleCall_1_2_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_parameters_7_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getPreconditionNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_7_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:7807:9: (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )*
                    	    loop126:
                    	    do {
                    	        int alt126=2;
                    	        int LA126_0 = input.LA(1);

                    	        if ( (LA126_0==Comma) ) {
                    	            alt126=1;
                    	        }


                    	        switch (alt126) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:7808:10: otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_8=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_8, grammarAccess.getPreconditionNodeAccess().getCommaKeyword_1_2_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:7812:10: ( (lv_parameters_9_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:7813:11: (lv_parameters_9_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:7813:11: (lv_parameters_9_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:7814:12: lv_parameters_9_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getPreconditionNodeAccess().getParametersParameterParserRuleCall_1_2_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_parameters_9_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getPreconditionNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_9_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop126;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:7838:4: ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:7838:4: ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:7839:5: {...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1(), 3) ) {
                    	        throw new FailedPredicateException(input, "rulePreconditionNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:7839:113: ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:7840:6: ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:7843:9: ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:7843:10: {...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "rulePreconditionNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:7843:19: (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:7843:20: otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_10=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_10, grammarAccess.getPreconditionNodeAccess().getSatisficesKeyword_1_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:7847:9: ( (lv_satisfices_11_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:7848:10: (lv_satisfices_11_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:7848:10: (lv_satisfices_11_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:7849:11: lv_satisfices_11_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getPreconditionNodeAccess().getSatisficesQualityParserRuleCall_1_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfices_11_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getPreconditionNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_11_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:7866:9: (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )*
                    	    loop127:
                    	    do {
                    	        int alt127=2;
                    	        int LA127_0 = input.LA(1);

                    	        if ( (LA127_0==Comma) ) {
                    	            alt127=1;
                    	        }


                    	        switch (alt127) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:7867:10: otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_12=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_12, grammarAccess.getPreconditionNodeAccess().getCommaKeyword_1_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:7871:10: ( (lv_satisfices_13_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:7872:11: (lv_satisfices_13_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:7872:11: (lv_satisfices_13_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:7873:12: lv_satisfices_13_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getPreconditionNodeAccess().getSatisficesQualityParserRuleCall_1_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfices_13_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getPreconditionNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_13_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop127;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:7897:4: ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:7897:4: ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:7898:5: {...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1(), 4) ) {
                    	        throw new FailedPredicateException(input, "rulePreconditionNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:7898:113: ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:7899:6: ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:7902:9: ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:7902:10: {...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "rulePreconditionNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:7902:19: (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:7902:20: otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_14=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_14, grammarAccess.getPreconditionNodeAccess().getSatisfiesKeyword_1_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:7906:9: ( (lv_satisfies_15_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:7907:10: (lv_satisfies_15_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:7907:10: (lv_satisfies_15_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:7908:11: lv_satisfies_15_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getPreconditionNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfies_15_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getPreconditionNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_15_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:7925:9: (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )*
                    	    loop128:
                    	    do {
                    	        int alt128=2;
                    	        int LA128_0 = input.LA(1);

                    	        if ( (LA128_0==Comma) ) {
                    	            alt128=1;
                    	        }


                    	        switch (alt128) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:7926:10: otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_16=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_16, grammarAccess.getPreconditionNodeAccess().getCommaKeyword_1_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:7930:10: ( (lv_satisfies_17_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:7931:11: (lv_satisfies_17_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:7931:11: (lv_satisfies_17_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:7932:12: lv_satisfies_17_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getPreconditionNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfies_17_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getPreconditionNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_17_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop128;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:7956:4: ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:7956:4: ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:7957:5: {...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1(), 5) ) {
                    	        throw new FailedPredicateException(input, "rulePreconditionNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:7957:113: ( ({...}? => (otherlv_18= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:7958:6: ({...}? => (otherlv_18= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:7961:9: ({...}? => (otherlv_18= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:7961:10: {...}? => (otherlv_18= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "rulePreconditionNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:7961:19: (otherlv_18= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:7961:20: otherlv_18= RightParenthesis
                    	    {
                    	    otherlv_18=(Token)match(input,RightParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_18, grammarAccess.getPreconditionNodeAccess().getRightParenthesisKeyword_1_5());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt129 >= 1 ) break loop129;
                                EarlyExitException eee =
                                    new EarlyExitException(129, input);
                                throw eee;
                        }
                        cnt129++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1()) ) {
                        throw new FailedPredicateException(input, "rulePreconditionNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getPreconditionNodeAccess().getUnorderedGroup_1());
                    				

                    }
                    break;

            }

            this_BEGIN_19=(Token)match(input,RULE_BEGIN,FOLLOW_9); 

            			newLeafNode(this_BEGIN_19, grammarAccess.getPreconditionNodeAccess().getBEGINTerminalRuleCall_2());
            		
            // InternalQualityBtCppParser.g:7983:3: ( (lv_child_20_0= ruleTreeNode ) )
            // InternalQualityBtCppParser.g:7984:4: (lv_child_20_0= ruleTreeNode )
            {
            // InternalQualityBtCppParser.g:7984:4: (lv_child_20_0= ruleTreeNode )
            // InternalQualityBtCppParser.g:7985:5: lv_child_20_0= ruleTreeNode
            {

            					newCompositeNode(grammarAccess.getPreconditionNodeAccess().getChildTreeNodeParserRuleCall_3_0());
            				
            pushFollow(FOLLOW_10);
            lv_child_20_0=ruleTreeNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getPreconditionNodeRule());
            					}
            					set(
            						current,
            						"child",
            						lv_child_20_0,
            						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            this_END_21=(Token)match(input,RULE_END,FOLLOW_2); 

            			newLeafNode(this_END_21, grammarAccess.getPreconditionNodeAccess().getENDTerminalRuleCall_4());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePreconditionNode"


    // $ANTLR start "entryRuleEntryUpdatedDecoratorNode"
    // InternalQualityBtCppParser.g:8010:1: entryRuleEntryUpdatedDecoratorNode returns [EObject current=null] : iv_ruleEntryUpdatedDecoratorNode= ruleEntryUpdatedDecoratorNode EOF ;
    public final EObject entryRuleEntryUpdatedDecoratorNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEntryUpdatedDecoratorNode = null;


        try {
            // InternalQualityBtCppParser.g:8010:66: (iv_ruleEntryUpdatedDecoratorNode= ruleEntryUpdatedDecoratorNode EOF )
            // InternalQualityBtCppParser.g:8011:2: iv_ruleEntryUpdatedDecoratorNode= ruleEntryUpdatedDecoratorNode EOF
            {
             newCompositeNode(grammarAccess.getEntryUpdatedDecoratorNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleEntryUpdatedDecoratorNode=ruleEntryUpdatedDecoratorNode();

            state._fsp--;

             current =iv_ruleEntryUpdatedDecoratorNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEntryUpdatedDecoratorNode"


    // $ANTLR start "ruleEntryUpdatedDecoratorNode"
    // InternalQualityBtCppParser.g:8017:1: ruleEntryUpdatedDecoratorNode returns [EObject current=null] : (otherlv_0= EntryUpdatedDecorator ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_19= RULE_BEGIN ( (lv_child_20_0= ruleTreeNode ) ) this_END_21= RULE_END ) ;
    public final EObject ruleEntryUpdatedDecoratorNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token this_BEGIN_19=null;
        Token this_END_21=null;
        AntlrDatatypeRuleToken lv_name_5_0 = null;

        EObject lv_parameters_7_0 = null;

        EObject lv_parameters_9_0 = null;

        EObject lv_satisfices_11_0 = null;

        EObject lv_satisfices_13_0 = null;

        EObject lv_satisfies_15_0 = null;

        EObject lv_satisfies_17_0 = null;

        EObject lv_child_20_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:8023:2: ( (otherlv_0= EntryUpdatedDecorator ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_19= RULE_BEGIN ( (lv_child_20_0= ruleTreeNode ) ) this_END_21= RULE_END ) )
            // InternalQualityBtCppParser.g:8024:2: (otherlv_0= EntryUpdatedDecorator ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_19= RULE_BEGIN ( (lv_child_20_0= ruleTreeNode ) ) this_END_21= RULE_END )
            {
            // InternalQualityBtCppParser.g:8024:2: (otherlv_0= EntryUpdatedDecorator ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_19= RULE_BEGIN ( (lv_child_20_0= ruleTreeNode ) ) this_END_21= RULE_END )
            // InternalQualityBtCppParser.g:8025:3: otherlv_0= EntryUpdatedDecorator ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_19= RULE_BEGIN ( (lv_child_20_0= ruleTreeNode ) ) this_END_21= RULE_END
            {
            otherlv_0=(Token)match(input,EntryUpdatedDecorator,FOLLOW_15); 

            			newLeafNode(otherlv_0, grammarAccess.getEntryUpdatedDecoratorNodeAccess().getEntryUpdatedDecoratorKeyword_0());
            		
            // InternalQualityBtCppParser.g:8029:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt135=2;
            int LA135_0 = input.LA(1);

            if ( ((LA135_0>=Parameters && LA135_0<=Satisfies)||LA135_0==Name||(LA135_0>=LeftParenthesis && LA135_0<=RightParenthesis)) ) {
                alt135=1;
            }
            switch (alt135) {
                case 1 :
                    // InternalQualityBtCppParser.g:8030:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:8030:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:8031:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1());
                    				
                    // InternalQualityBtCppParser.g:8034:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:8035:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:8035:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+
                    int cnt134=0;
                    loop134:
                    do {
                        int alt134=7;
                        int LA134_0 = input.LA(1);

                        if ( LA134_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1(), 0) ) {
                            alt134=1;
                        }
                        else if ( LA134_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1(), 1) ) {
                            alt134=2;
                        }
                        else if ( LA134_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1(), 2) ) {
                            alt134=3;
                        }
                        else if ( LA134_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1(), 3) ) {
                            alt134=4;
                        }
                        else if ( LA134_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1(), 4) ) {
                            alt134=5;
                        }
                        else if ( LA134_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1(), 5) ) {
                            alt134=6;
                        }


                        switch (alt134) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:8036:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:8036:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:8037:5: {...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleEntryUpdatedDecoratorNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:8037:122: ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:8038:6: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:8041:9: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:8041:10: {...}? => (otherlv_2= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleEntryUpdatedDecoratorNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:8041:19: (otherlv_2= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:8041:20: otherlv_2= LeftParenthesis
                    	    {
                    	    otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_2, grammarAccess.getEntryUpdatedDecoratorNodeAccess().getLeftParenthesisKeyword_1_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:8051:4: ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:8051:4: ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:8052:5: {...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleEntryUpdatedDecoratorNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:8052:122: ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:8053:6: ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:8056:9: ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:8056:10: {...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleEntryUpdatedDecoratorNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:8056:19: (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:8056:20: otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) )
                    	    {
                    	    otherlv_3=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getEntryUpdatedDecoratorNodeAccess().getNameKeyword_1_1_0());
                    	    								
                    	    otherlv_4=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getEntryUpdatedDecoratorNodeAccess().getEqualsSignKeyword_1_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:8064:9: ( (lv_name_5_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:8065:10: (lv_name_5_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:8065:10: (lv_name_5_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:8066:11: lv_name_5_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getNameEStringParserRuleCall_1_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_15);
                    	    lv_name_5_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getEntryUpdatedDecoratorNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_5_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:8089:4: ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:8089:4: ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:8090:5: {...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleEntryUpdatedDecoratorNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:8090:122: ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:8091:6: ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:8094:9: ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:8094:10: {...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleEntryUpdatedDecoratorNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:8094:19: (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:8094:20: otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_6=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_6, grammarAccess.getEntryUpdatedDecoratorNodeAccess().getParametersKeyword_1_2_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:8098:9: ( (lv_parameters_7_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:8099:10: (lv_parameters_7_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:8099:10: (lv_parameters_7_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:8100:11: lv_parameters_7_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getParametersParameterParserRuleCall_1_2_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_parameters_7_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getEntryUpdatedDecoratorNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_7_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:8117:9: (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )*
                    	    loop131:
                    	    do {
                    	        int alt131=2;
                    	        int LA131_0 = input.LA(1);

                    	        if ( (LA131_0==Comma) ) {
                    	            alt131=1;
                    	        }


                    	        switch (alt131) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:8118:10: otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_8=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_8, grammarAccess.getEntryUpdatedDecoratorNodeAccess().getCommaKeyword_1_2_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:8122:10: ( (lv_parameters_9_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:8123:11: (lv_parameters_9_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:8123:11: (lv_parameters_9_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:8124:12: lv_parameters_9_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getParametersParameterParserRuleCall_1_2_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_parameters_9_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getEntryUpdatedDecoratorNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_9_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop131;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:8148:4: ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:8148:4: ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:8149:5: {...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleEntryUpdatedDecoratorNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:8149:122: ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:8150:6: ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:8153:9: ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:8153:10: {...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleEntryUpdatedDecoratorNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:8153:19: (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:8153:20: otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_10=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_10, grammarAccess.getEntryUpdatedDecoratorNodeAccess().getSatisficesKeyword_1_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:8157:9: ( (lv_satisfices_11_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:8158:10: (lv_satisfices_11_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:8158:10: (lv_satisfices_11_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:8159:11: lv_satisfices_11_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getSatisficesQualityParserRuleCall_1_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfices_11_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getEntryUpdatedDecoratorNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_11_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:8176:9: (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )*
                    	    loop132:
                    	    do {
                    	        int alt132=2;
                    	        int LA132_0 = input.LA(1);

                    	        if ( (LA132_0==Comma) ) {
                    	            alt132=1;
                    	        }


                    	        switch (alt132) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:8177:10: otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_12=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_12, grammarAccess.getEntryUpdatedDecoratorNodeAccess().getCommaKeyword_1_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:8181:10: ( (lv_satisfices_13_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:8182:11: (lv_satisfices_13_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:8182:11: (lv_satisfices_13_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:8183:12: lv_satisfices_13_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getSatisficesQualityParserRuleCall_1_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfices_13_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getEntryUpdatedDecoratorNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_13_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop132;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:8207:4: ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:8207:4: ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:8208:5: {...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleEntryUpdatedDecoratorNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:8208:122: ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:8209:6: ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:8212:9: ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:8212:10: {...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleEntryUpdatedDecoratorNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:8212:19: (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:8212:20: otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_14=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_14, grammarAccess.getEntryUpdatedDecoratorNodeAccess().getSatisfiesKeyword_1_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:8216:9: ( (lv_satisfies_15_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:8217:10: (lv_satisfies_15_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:8217:10: (lv_satisfies_15_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:8218:11: lv_satisfies_15_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfies_15_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getEntryUpdatedDecoratorNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_15_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:8235:9: (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )*
                    	    loop133:
                    	    do {
                    	        int alt133=2;
                    	        int LA133_0 = input.LA(1);

                    	        if ( (LA133_0==Comma) ) {
                    	            alt133=1;
                    	        }


                    	        switch (alt133) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:8236:10: otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_16=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_16, grammarAccess.getEntryUpdatedDecoratorNodeAccess().getCommaKeyword_1_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:8240:10: ( (lv_satisfies_17_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:8241:11: (lv_satisfies_17_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:8241:11: (lv_satisfies_17_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:8242:12: lv_satisfies_17_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfies_17_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getEntryUpdatedDecoratorNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_17_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop133;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:8266:4: ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:8266:4: ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:8267:5: {...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleEntryUpdatedDecoratorNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:8267:122: ( ({...}? => (otherlv_18= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:8268:6: ({...}? => (otherlv_18= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:8271:9: ({...}? => (otherlv_18= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:8271:10: {...}? => (otherlv_18= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleEntryUpdatedDecoratorNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:8271:19: (otherlv_18= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:8271:20: otherlv_18= RightParenthesis
                    	    {
                    	    otherlv_18=(Token)match(input,RightParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_18, grammarAccess.getEntryUpdatedDecoratorNodeAccess().getRightParenthesisKeyword_1_5());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt134 >= 1 ) break loop134;
                                EarlyExitException eee =
                                    new EarlyExitException(134, input);
                                throw eee;
                        }
                        cnt134++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1()) ) {
                        throw new FailedPredicateException(input, "ruleEntryUpdatedDecoratorNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getUnorderedGroup_1());
                    				

                    }
                    break;

            }

            this_BEGIN_19=(Token)match(input,RULE_BEGIN,FOLLOW_9); 

            			newLeafNode(this_BEGIN_19, grammarAccess.getEntryUpdatedDecoratorNodeAccess().getBEGINTerminalRuleCall_2());
            		
            // InternalQualityBtCppParser.g:8293:3: ( (lv_child_20_0= ruleTreeNode ) )
            // InternalQualityBtCppParser.g:8294:4: (lv_child_20_0= ruleTreeNode )
            {
            // InternalQualityBtCppParser.g:8294:4: (lv_child_20_0= ruleTreeNode )
            // InternalQualityBtCppParser.g:8295:5: lv_child_20_0= ruleTreeNode
            {

            					newCompositeNode(grammarAccess.getEntryUpdatedDecoratorNodeAccess().getChildTreeNodeParserRuleCall_3_0());
            				
            pushFollow(FOLLOW_10);
            lv_child_20_0=ruleTreeNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getEntryUpdatedDecoratorNodeRule());
            					}
            					set(
            						current,
            						"child",
            						lv_child_20_0,
            						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            this_END_21=(Token)match(input,RULE_END,FOLLOW_2); 

            			newLeafNode(this_END_21, grammarAccess.getEntryUpdatedDecoratorNodeAccess().getENDTerminalRuleCall_4());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEntryUpdatedDecoratorNode"


    // $ANTLR start "entryRuleRunOnceNode"
    // InternalQualityBtCppParser.g:8320:1: entryRuleRunOnceNode returns [EObject current=null] : iv_ruleRunOnceNode= ruleRunOnceNode EOF ;
    public final EObject entryRuleRunOnceNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRunOnceNode = null;


        try {
            // InternalQualityBtCppParser.g:8320:52: (iv_ruleRunOnceNode= ruleRunOnceNode EOF )
            // InternalQualityBtCppParser.g:8321:2: iv_ruleRunOnceNode= ruleRunOnceNode EOF
            {
             newCompositeNode(grammarAccess.getRunOnceNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleRunOnceNode=ruleRunOnceNode();

            state._fsp--;

             current =iv_ruleRunOnceNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRunOnceNode"


    // $ANTLR start "ruleRunOnceNode"
    // InternalQualityBtCppParser.g:8327:1: ruleRunOnceNode returns [EObject current=null] : (otherlv_0= RunOnce ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_19= RULE_BEGIN ( (lv_child_20_0= ruleTreeNode ) ) this_END_21= RULE_END ) ;
    public final EObject ruleRunOnceNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token this_BEGIN_19=null;
        Token this_END_21=null;
        AntlrDatatypeRuleToken lv_name_5_0 = null;

        EObject lv_parameters_7_0 = null;

        EObject lv_parameters_9_0 = null;

        EObject lv_satisfices_11_0 = null;

        EObject lv_satisfices_13_0 = null;

        EObject lv_satisfies_15_0 = null;

        EObject lv_satisfies_17_0 = null;

        EObject lv_child_20_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:8333:2: ( (otherlv_0= RunOnce ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_19= RULE_BEGIN ( (lv_child_20_0= ruleTreeNode ) ) this_END_21= RULE_END ) )
            // InternalQualityBtCppParser.g:8334:2: (otherlv_0= RunOnce ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_19= RULE_BEGIN ( (lv_child_20_0= ruleTreeNode ) ) this_END_21= RULE_END )
            {
            // InternalQualityBtCppParser.g:8334:2: (otherlv_0= RunOnce ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_19= RULE_BEGIN ( (lv_child_20_0= ruleTreeNode ) ) this_END_21= RULE_END )
            // InternalQualityBtCppParser.g:8335:3: otherlv_0= RunOnce ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_19= RULE_BEGIN ( (lv_child_20_0= ruleTreeNode ) ) this_END_21= RULE_END
            {
            otherlv_0=(Token)match(input,RunOnce,FOLLOW_15); 

            			newLeafNode(otherlv_0, grammarAccess.getRunOnceNodeAccess().getRunOnceKeyword_0());
            		
            // InternalQualityBtCppParser.g:8339:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt140=2;
            int LA140_0 = input.LA(1);

            if ( ((LA140_0>=Parameters && LA140_0<=Satisfies)||LA140_0==Name||(LA140_0>=LeftParenthesis && LA140_0<=RightParenthesis)) ) {
                alt140=1;
            }
            switch (alt140) {
                case 1 :
                    // InternalQualityBtCppParser.g:8340:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:8340:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:8341:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1());
                    				
                    // InternalQualityBtCppParser.g:8344:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:8345:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:8345:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+
                    int cnt139=0;
                    loop139:
                    do {
                        int alt139=7;
                        int LA139_0 = input.LA(1);

                        if ( LA139_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1(), 0) ) {
                            alt139=1;
                        }
                        else if ( LA139_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1(), 1) ) {
                            alt139=2;
                        }
                        else if ( LA139_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1(), 2) ) {
                            alt139=3;
                        }
                        else if ( LA139_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1(), 3) ) {
                            alt139=4;
                        }
                        else if ( LA139_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1(), 4) ) {
                            alt139=5;
                        }
                        else if ( LA139_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1(), 5) ) {
                            alt139=6;
                        }


                        switch (alt139) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:8346:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:8346:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:8347:5: {...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleRunOnceNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:8347:108: ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:8348:6: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:8351:9: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:8351:10: {...}? => (otherlv_2= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleRunOnceNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:8351:19: (otherlv_2= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:8351:20: otherlv_2= LeftParenthesis
                    	    {
                    	    otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_2, grammarAccess.getRunOnceNodeAccess().getLeftParenthesisKeyword_1_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:8361:4: ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:8361:4: ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:8362:5: {...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleRunOnceNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:8362:108: ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:8363:6: ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:8366:9: ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:8366:10: {...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleRunOnceNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:8366:19: (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:8366:20: otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) )
                    	    {
                    	    otherlv_3=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getRunOnceNodeAccess().getNameKeyword_1_1_0());
                    	    								
                    	    otherlv_4=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getRunOnceNodeAccess().getEqualsSignKeyword_1_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:8374:9: ( (lv_name_5_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:8375:10: (lv_name_5_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:8375:10: (lv_name_5_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:8376:11: lv_name_5_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getRunOnceNodeAccess().getNameEStringParserRuleCall_1_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_15);
                    	    lv_name_5_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getRunOnceNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_5_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:8399:4: ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:8399:4: ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:8400:5: {...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleRunOnceNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:8400:108: ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:8401:6: ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:8404:9: ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:8404:10: {...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleRunOnceNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:8404:19: (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:8404:20: otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_6=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_6, grammarAccess.getRunOnceNodeAccess().getParametersKeyword_1_2_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:8408:9: ( (lv_parameters_7_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:8409:10: (lv_parameters_7_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:8409:10: (lv_parameters_7_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:8410:11: lv_parameters_7_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getRunOnceNodeAccess().getParametersParameterParserRuleCall_1_2_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_parameters_7_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getRunOnceNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_7_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:8427:9: (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )*
                    	    loop136:
                    	    do {
                    	        int alt136=2;
                    	        int LA136_0 = input.LA(1);

                    	        if ( (LA136_0==Comma) ) {
                    	            alt136=1;
                    	        }


                    	        switch (alt136) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:8428:10: otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_8=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_8, grammarAccess.getRunOnceNodeAccess().getCommaKeyword_1_2_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:8432:10: ( (lv_parameters_9_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:8433:11: (lv_parameters_9_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:8433:11: (lv_parameters_9_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:8434:12: lv_parameters_9_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getRunOnceNodeAccess().getParametersParameterParserRuleCall_1_2_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_parameters_9_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getRunOnceNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_9_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop136;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:8458:4: ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:8458:4: ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:8459:5: {...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleRunOnceNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:8459:108: ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:8460:6: ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:8463:9: ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:8463:10: {...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleRunOnceNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:8463:19: (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:8463:20: otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_10=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_10, grammarAccess.getRunOnceNodeAccess().getSatisficesKeyword_1_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:8467:9: ( (lv_satisfices_11_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:8468:10: (lv_satisfices_11_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:8468:10: (lv_satisfices_11_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:8469:11: lv_satisfices_11_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getRunOnceNodeAccess().getSatisficesQualityParserRuleCall_1_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfices_11_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getRunOnceNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_11_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:8486:9: (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )*
                    	    loop137:
                    	    do {
                    	        int alt137=2;
                    	        int LA137_0 = input.LA(1);

                    	        if ( (LA137_0==Comma) ) {
                    	            alt137=1;
                    	        }


                    	        switch (alt137) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:8487:10: otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_12=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_12, grammarAccess.getRunOnceNodeAccess().getCommaKeyword_1_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:8491:10: ( (lv_satisfices_13_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:8492:11: (lv_satisfices_13_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:8492:11: (lv_satisfices_13_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:8493:12: lv_satisfices_13_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getRunOnceNodeAccess().getSatisficesQualityParserRuleCall_1_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfices_13_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getRunOnceNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_13_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop137;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:8517:4: ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:8517:4: ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:8518:5: {...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleRunOnceNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:8518:108: ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:8519:6: ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:8522:9: ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:8522:10: {...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleRunOnceNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:8522:19: (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:8522:20: otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_14=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_14, grammarAccess.getRunOnceNodeAccess().getSatisfiesKeyword_1_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:8526:9: ( (lv_satisfies_15_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:8527:10: (lv_satisfies_15_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:8527:10: (lv_satisfies_15_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:8528:11: lv_satisfies_15_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getRunOnceNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfies_15_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getRunOnceNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_15_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:8545:9: (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )*
                    	    loop138:
                    	    do {
                    	        int alt138=2;
                    	        int LA138_0 = input.LA(1);

                    	        if ( (LA138_0==Comma) ) {
                    	            alt138=1;
                    	        }


                    	        switch (alt138) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:8546:10: otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_16=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_16, grammarAccess.getRunOnceNodeAccess().getCommaKeyword_1_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:8550:10: ( (lv_satisfies_17_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:8551:11: (lv_satisfies_17_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:8551:11: (lv_satisfies_17_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:8552:12: lv_satisfies_17_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getRunOnceNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfies_17_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getRunOnceNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_17_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop138;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:8576:4: ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:8576:4: ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:8577:5: {...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleRunOnceNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:8577:108: ( ({...}? => (otherlv_18= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:8578:6: ({...}? => (otherlv_18= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:8581:9: ({...}? => (otherlv_18= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:8581:10: {...}? => (otherlv_18= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleRunOnceNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:8581:19: (otherlv_18= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:8581:20: otherlv_18= RightParenthesis
                    	    {
                    	    otherlv_18=(Token)match(input,RightParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_18, grammarAccess.getRunOnceNodeAccess().getRightParenthesisKeyword_1_5());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt139 >= 1 ) break loop139;
                                EarlyExitException eee =
                                    new EarlyExitException(139, input);
                                throw eee;
                        }
                        cnt139++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1()) ) {
                        throw new FailedPredicateException(input, "ruleRunOnceNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getRunOnceNodeAccess().getUnorderedGroup_1());
                    				

                    }
                    break;

            }

            this_BEGIN_19=(Token)match(input,RULE_BEGIN,FOLLOW_9); 

            			newLeafNode(this_BEGIN_19, grammarAccess.getRunOnceNodeAccess().getBEGINTerminalRuleCall_2());
            		
            // InternalQualityBtCppParser.g:8603:3: ( (lv_child_20_0= ruleTreeNode ) )
            // InternalQualityBtCppParser.g:8604:4: (lv_child_20_0= ruleTreeNode )
            {
            // InternalQualityBtCppParser.g:8604:4: (lv_child_20_0= ruleTreeNode )
            // InternalQualityBtCppParser.g:8605:5: lv_child_20_0= ruleTreeNode
            {

            					newCompositeNode(grammarAccess.getRunOnceNodeAccess().getChildTreeNodeParserRuleCall_3_0());
            				
            pushFollow(FOLLOW_10);
            lv_child_20_0=ruleTreeNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getRunOnceNodeRule());
            					}
            					set(
            						current,
            						"child",
            						lv_child_20_0,
            						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            this_END_21=(Token)match(input,RULE_END,FOLLOW_2); 

            			newLeafNode(this_END_21, grammarAccess.getRunOnceNodeAccess().getENDTerminalRuleCall_4());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRunOnceNode"


    // $ANTLR start "entryRuleLoopNode"
    // InternalQualityBtCppParser.g:8630:1: entryRuleLoopNode returns [EObject current=null] : iv_ruleLoopNode= ruleLoopNode EOF ;
    public final EObject entryRuleLoopNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLoopNode = null;


        try {
            // InternalQualityBtCppParser.g:8630:49: (iv_ruleLoopNode= ruleLoopNode EOF )
            // InternalQualityBtCppParser.g:8631:2: iv_ruleLoopNode= ruleLoopNode EOF
            {
             newCompositeNode(grammarAccess.getLoopNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleLoopNode=ruleLoopNode();

            state._fsp--;

             current =iv_ruleLoopNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLoopNode"


    // $ANTLR start "ruleLoopNode"
    // InternalQualityBtCppParser.g:8637:1: ruleLoopNode returns [EObject current=null] : (otherlv_0= Loop ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_19= RULE_BEGIN ( (lv_child_20_0= ruleTreeNode ) ) this_END_21= RULE_END ) ;
    public final EObject ruleLoopNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token this_BEGIN_19=null;
        Token this_END_21=null;
        AntlrDatatypeRuleToken lv_name_5_0 = null;

        EObject lv_parameters_7_0 = null;

        EObject lv_parameters_9_0 = null;

        EObject lv_satisfices_11_0 = null;

        EObject lv_satisfices_13_0 = null;

        EObject lv_satisfies_15_0 = null;

        EObject lv_satisfies_17_0 = null;

        EObject lv_child_20_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:8643:2: ( (otherlv_0= Loop ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_19= RULE_BEGIN ( (lv_child_20_0= ruleTreeNode ) ) this_END_21= RULE_END ) )
            // InternalQualityBtCppParser.g:8644:2: (otherlv_0= Loop ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_19= RULE_BEGIN ( (lv_child_20_0= ruleTreeNode ) ) this_END_21= RULE_END )
            {
            // InternalQualityBtCppParser.g:8644:2: (otherlv_0= Loop ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_19= RULE_BEGIN ( (lv_child_20_0= ruleTreeNode ) ) this_END_21= RULE_END )
            // InternalQualityBtCppParser.g:8645:3: otherlv_0= Loop ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_19= RULE_BEGIN ( (lv_child_20_0= ruleTreeNode ) ) this_END_21= RULE_END
            {
            otherlv_0=(Token)match(input,Loop,FOLLOW_15); 

            			newLeafNode(otherlv_0, grammarAccess.getLoopNodeAccess().getLoopKeyword_0());
            		
            // InternalQualityBtCppParser.g:8649:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt145=2;
            int LA145_0 = input.LA(1);

            if ( ((LA145_0>=Parameters && LA145_0<=Satisfies)||LA145_0==Name||(LA145_0>=LeftParenthesis && LA145_0<=RightParenthesis)) ) {
                alt145=1;
            }
            switch (alt145) {
                case 1 :
                    // InternalQualityBtCppParser.g:8650:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:8650:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:8651:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1());
                    				
                    // InternalQualityBtCppParser.g:8654:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:8655:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:8655:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+
                    int cnt144=0;
                    loop144:
                    do {
                        int alt144=7;
                        int LA144_0 = input.LA(1);

                        if ( LA144_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1(), 0) ) {
                            alt144=1;
                        }
                        else if ( LA144_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1(), 1) ) {
                            alt144=2;
                        }
                        else if ( LA144_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1(), 2) ) {
                            alt144=3;
                        }
                        else if ( LA144_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1(), 3) ) {
                            alt144=4;
                        }
                        else if ( LA144_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1(), 4) ) {
                            alt144=5;
                        }
                        else if ( LA144_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1(), 5) ) {
                            alt144=6;
                        }


                        switch (alt144) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:8656:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:8656:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:8657:5: {...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleLoopNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:8657:105: ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:8658:6: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:8661:9: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:8661:10: {...}? => (otherlv_2= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleLoopNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:8661:19: (otherlv_2= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:8661:20: otherlv_2= LeftParenthesis
                    	    {
                    	    otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_2, grammarAccess.getLoopNodeAccess().getLeftParenthesisKeyword_1_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:8671:4: ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:8671:4: ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:8672:5: {...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleLoopNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:8672:105: ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:8673:6: ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:8676:9: ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:8676:10: {...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleLoopNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:8676:19: (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:8676:20: otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) )
                    	    {
                    	    otherlv_3=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getLoopNodeAccess().getNameKeyword_1_1_0());
                    	    								
                    	    otherlv_4=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getLoopNodeAccess().getEqualsSignKeyword_1_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:8684:9: ( (lv_name_5_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:8685:10: (lv_name_5_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:8685:10: (lv_name_5_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:8686:11: lv_name_5_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getLoopNodeAccess().getNameEStringParserRuleCall_1_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_15);
                    	    lv_name_5_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getLoopNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_5_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:8709:4: ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:8709:4: ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:8710:5: {...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleLoopNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:8710:105: ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:8711:6: ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:8714:9: ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:8714:10: {...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleLoopNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:8714:19: (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:8714:20: otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_6=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_6, grammarAccess.getLoopNodeAccess().getParametersKeyword_1_2_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:8718:9: ( (lv_parameters_7_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:8719:10: (lv_parameters_7_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:8719:10: (lv_parameters_7_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:8720:11: lv_parameters_7_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getLoopNodeAccess().getParametersParameterParserRuleCall_1_2_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_parameters_7_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getLoopNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_7_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:8737:9: (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )*
                    	    loop141:
                    	    do {
                    	        int alt141=2;
                    	        int LA141_0 = input.LA(1);

                    	        if ( (LA141_0==Comma) ) {
                    	            alt141=1;
                    	        }


                    	        switch (alt141) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:8738:10: otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_8=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_8, grammarAccess.getLoopNodeAccess().getCommaKeyword_1_2_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:8742:10: ( (lv_parameters_9_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:8743:11: (lv_parameters_9_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:8743:11: (lv_parameters_9_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:8744:12: lv_parameters_9_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getLoopNodeAccess().getParametersParameterParserRuleCall_1_2_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_parameters_9_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getLoopNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_9_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop141;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:8768:4: ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:8768:4: ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:8769:5: {...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleLoopNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:8769:105: ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:8770:6: ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:8773:9: ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:8773:10: {...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleLoopNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:8773:19: (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:8773:20: otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_10=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_10, grammarAccess.getLoopNodeAccess().getSatisficesKeyword_1_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:8777:9: ( (lv_satisfices_11_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:8778:10: (lv_satisfices_11_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:8778:10: (lv_satisfices_11_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:8779:11: lv_satisfices_11_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getLoopNodeAccess().getSatisficesQualityParserRuleCall_1_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfices_11_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getLoopNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_11_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:8796:9: (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )*
                    	    loop142:
                    	    do {
                    	        int alt142=2;
                    	        int LA142_0 = input.LA(1);

                    	        if ( (LA142_0==Comma) ) {
                    	            alt142=1;
                    	        }


                    	        switch (alt142) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:8797:10: otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_12=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_12, grammarAccess.getLoopNodeAccess().getCommaKeyword_1_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:8801:10: ( (lv_satisfices_13_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:8802:11: (lv_satisfices_13_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:8802:11: (lv_satisfices_13_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:8803:12: lv_satisfices_13_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getLoopNodeAccess().getSatisficesQualityParserRuleCall_1_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfices_13_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getLoopNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_13_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop142;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:8827:4: ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:8827:4: ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:8828:5: {...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleLoopNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:8828:105: ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:8829:6: ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:8832:9: ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:8832:10: {...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleLoopNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:8832:19: (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:8832:20: otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_14=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_14, grammarAccess.getLoopNodeAccess().getSatisfiesKeyword_1_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:8836:9: ( (lv_satisfies_15_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:8837:10: (lv_satisfies_15_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:8837:10: (lv_satisfies_15_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:8838:11: lv_satisfies_15_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getLoopNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfies_15_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getLoopNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_15_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:8855:9: (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )*
                    	    loop143:
                    	    do {
                    	        int alt143=2;
                    	        int LA143_0 = input.LA(1);

                    	        if ( (LA143_0==Comma) ) {
                    	            alt143=1;
                    	        }


                    	        switch (alt143) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:8856:10: otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_16=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_16, grammarAccess.getLoopNodeAccess().getCommaKeyword_1_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:8860:10: ( (lv_satisfies_17_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:8861:11: (lv_satisfies_17_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:8861:11: (lv_satisfies_17_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:8862:12: lv_satisfies_17_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getLoopNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfies_17_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getLoopNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_17_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop143;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:8886:4: ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:8886:4: ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:8887:5: {...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleLoopNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:8887:105: ( ({...}? => (otherlv_18= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:8888:6: ({...}? => (otherlv_18= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:8891:9: ({...}? => (otherlv_18= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:8891:10: {...}? => (otherlv_18= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleLoopNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:8891:19: (otherlv_18= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:8891:20: otherlv_18= RightParenthesis
                    	    {
                    	    otherlv_18=(Token)match(input,RightParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_18, grammarAccess.getLoopNodeAccess().getRightParenthesisKeyword_1_5());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt144 >= 1 ) break loop144;
                                EarlyExitException eee =
                                    new EarlyExitException(144, input);
                                throw eee;
                        }
                        cnt144++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1()) ) {
                        throw new FailedPredicateException(input, "ruleLoopNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getLoopNodeAccess().getUnorderedGroup_1());
                    				

                    }
                    break;

            }

            this_BEGIN_19=(Token)match(input,RULE_BEGIN,FOLLOW_9); 

            			newLeafNode(this_BEGIN_19, grammarAccess.getLoopNodeAccess().getBEGINTerminalRuleCall_2());
            		
            // InternalQualityBtCppParser.g:8913:3: ( (lv_child_20_0= ruleTreeNode ) )
            // InternalQualityBtCppParser.g:8914:4: (lv_child_20_0= ruleTreeNode )
            {
            // InternalQualityBtCppParser.g:8914:4: (lv_child_20_0= ruleTreeNode )
            // InternalQualityBtCppParser.g:8915:5: lv_child_20_0= ruleTreeNode
            {

            					newCompositeNode(grammarAccess.getLoopNodeAccess().getChildTreeNodeParserRuleCall_3_0());
            				
            pushFollow(FOLLOW_10);
            lv_child_20_0=ruleTreeNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getLoopNodeRule());
            					}
            					set(
            						current,
            						"child",
            						lv_child_20_0,
            						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            this_END_21=(Token)match(input,RULE_END,FOLLOW_2); 

            			newLeafNode(this_END_21, grammarAccess.getLoopNodeAccess().getENDTerminalRuleCall_4());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLoopNode"


    // $ANTLR start "entryRuleConsumeQueueNode"
    // InternalQualityBtCppParser.g:8940:1: entryRuleConsumeQueueNode returns [EObject current=null] : iv_ruleConsumeQueueNode= ruleConsumeQueueNode EOF ;
    public final EObject entryRuleConsumeQueueNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConsumeQueueNode = null;


        try {
            // InternalQualityBtCppParser.g:8940:57: (iv_ruleConsumeQueueNode= ruleConsumeQueueNode EOF )
            // InternalQualityBtCppParser.g:8941:2: iv_ruleConsumeQueueNode= ruleConsumeQueueNode EOF
            {
             newCompositeNode(grammarAccess.getConsumeQueueNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleConsumeQueueNode=ruleConsumeQueueNode();

            state._fsp--;

             current =iv_ruleConsumeQueueNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConsumeQueueNode"


    // $ANTLR start "ruleConsumeQueueNode"
    // InternalQualityBtCppParser.g:8947:1: ruleConsumeQueueNode returns [EObject current=null] : (otherlv_0= ConsumeQueue ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_19= RULE_BEGIN ( (lv_child_20_0= ruleTreeNode ) ) this_END_21= RULE_END ) ;
    public final EObject ruleConsumeQueueNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token this_BEGIN_19=null;
        Token this_END_21=null;
        AntlrDatatypeRuleToken lv_name_5_0 = null;

        EObject lv_parameters_7_0 = null;

        EObject lv_parameters_9_0 = null;

        EObject lv_satisfices_11_0 = null;

        EObject lv_satisfices_13_0 = null;

        EObject lv_satisfies_15_0 = null;

        EObject lv_satisfies_17_0 = null;

        EObject lv_child_20_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:8953:2: ( (otherlv_0= ConsumeQueue ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_19= RULE_BEGIN ( (lv_child_20_0= ruleTreeNode ) ) this_END_21= RULE_END ) )
            // InternalQualityBtCppParser.g:8954:2: (otherlv_0= ConsumeQueue ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_19= RULE_BEGIN ( (lv_child_20_0= ruleTreeNode ) ) this_END_21= RULE_END )
            {
            // InternalQualityBtCppParser.g:8954:2: (otherlv_0= ConsumeQueue ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_19= RULE_BEGIN ( (lv_child_20_0= ruleTreeNode ) ) this_END_21= RULE_END )
            // InternalQualityBtCppParser.g:8955:3: otherlv_0= ConsumeQueue ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )? this_BEGIN_19= RULE_BEGIN ( (lv_child_20_0= ruleTreeNode ) ) this_END_21= RULE_END
            {
            otherlv_0=(Token)match(input,ConsumeQueue,FOLLOW_15); 

            			newLeafNode(otherlv_0, grammarAccess.getConsumeQueueNodeAccess().getConsumeQueueKeyword_0());
            		
            // InternalQualityBtCppParser.g:8959:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt150=2;
            int LA150_0 = input.LA(1);

            if ( ((LA150_0>=Parameters && LA150_0<=Satisfies)||LA150_0==Name||(LA150_0>=LeftParenthesis && LA150_0<=RightParenthesis)) ) {
                alt150=1;
            }
            switch (alt150) {
                case 1 :
                    // InternalQualityBtCppParser.g:8960:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:8960:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:8961:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1());
                    				
                    // InternalQualityBtCppParser.g:8964:5: ( ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:8965:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:8965:6: ( ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) ) )+
                    int cnt149=0;
                    loop149:
                    do {
                        int alt149=7;
                        int LA149_0 = input.LA(1);

                        if ( LA149_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1(), 0) ) {
                            alt149=1;
                        }
                        else if ( LA149_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1(), 1) ) {
                            alt149=2;
                        }
                        else if ( LA149_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1(), 2) ) {
                            alt149=3;
                        }
                        else if ( LA149_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1(), 3) ) {
                            alt149=4;
                        }
                        else if ( LA149_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1(), 4) ) {
                            alt149=5;
                        }
                        else if ( LA149_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1(), 5) ) {
                            alt149=6;
                        }


                        switch (alt149) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:8966:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:8966:4: ({...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:8967:5: {...}? => ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleConsumeQueueNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:8967:113: ( ({...}? => (otherlv_2= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:8968:6: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:8971:9: ({...}? => (otherlv_2= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:8971:10: {...}? => (otherlv_2= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleConsumeQueueNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:8971:19: (otherlv_2= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:8971:20: otherlv_2= LeftParenthesis
                    	    {
                    	    otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_2, grammarAccess.getConsumeQueueNodeAccess().getLeftParenthesisKeyword_1_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:8981:4: ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:8981:4: ({...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:8982:5: {...}? => ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleConsumeQueueNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:8982:113: ( ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:8983:6: ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:8986:9: ({...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:8986:10: {...}? => (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleConsumeQueueNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:8986:19: (otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:8986:20: otherlv_3= Name otherlv_4= EqualsSign ( (lv_name_5_0= ruleEString ) )
                    	    {
                    	    otherlv_3=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getConsumeQueueNodeAccess().getNameKeyword_1_1_0());
                    	    								
                    	    otherlv_4=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getConsumeQueueNodeAccess().getEqualsSignKeyword_1_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:8994:9: ( (lv_name_5_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:8995:10: (lv_name_5_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:8995:10: (lv_name_5_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:8996:11: lv_name_5_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getConsumeQueueNodeAccess().getNameEStringParserRuleCall_1_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_15);
                    	    lv_name_5_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getConsumeQueueNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_5_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:9019:4: ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:9019:4: ({...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:9020:5: {...}? => ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleConsumeQueueNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:9020:113: ( ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:9021:6: ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:9024:9: ({...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:9024:10: {...}? => (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleConsumeQueueNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:9024:19: (otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:9024:20: otherlv_6= Parameters ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_6=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_6, grammarAccess.getConsumeQueueNodeAccess().getParametersKeyword_1_2_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:9028:9: ( (lv_parameters_7_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:9029:10: (lv_parameters_7_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:9029:10: (lv_parameters_7_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:9030:11: lv_parameters_7_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getConsumeQueueNodeAccess().getParametersParameterParserRuleCall_1_2_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_parameters_7_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getConsumeQueueNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_7_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:9047:9: (otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) ) )*
                    	    loop146:
                    	    do {
                    	        int alt146=2;
                    	        int LA146_0 = input.LA(1);

                    	        if ( (LA146_0==Comma) ) {
                    	            alt146=1;
                    	        }


                    	        switch (alt146) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:9048:10: otherlv_8= Comma ( (lv_parameters_9_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_8=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_8, grammarAccess.getConsumeQueueNodeAccess().getCommaKeyword_1_2_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:9052:10: ( (lv_parameters_9_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:9053:11: (lv_parameters_9_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:9053:11: (lv_parameters_9_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:9054:12: lv_parameters_9_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getConsumeQueueNodeAccess().getParametersParameterParserRuleCall_1_2_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_parameters_9_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getConsumeQueueNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_9_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop146;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:9078:4: ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:9078:4: ({...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:9079:5: {...}? => ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleConsumeQueueNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:9079:113: ( ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:9080:6: ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:9083:9: ({...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:9083:10: {...}? => (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleConsumeQueueNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:9083:19: (otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:9083:20: otherlv_10= Satisfices ( (lv_satisfices_11_0= ruleQuality ) ) (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_10=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_10, grammarAccess.getConsumeQueueNodeAccess().getSatisficesKeyword_1_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:9087:9: ( (lv_satisfices_11_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:9088:10: (lv_satisfices_11_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:9088:10: (lv_satisfices_11_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:9089:11: lv_satisfices_11_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getConsumeQueueNodeAccess().getSatisficesQualityParserRuleCall_1_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfices_11_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getConsumeQueueNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_11_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:9106:9: (otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) ) )*
                    	    loop147:
                    	    do {
                    	        int alt147=2;
                    	        int LA147_0 = input.LA(1);

                    	        if ( (LA147_0==Comma) ) {
                    	            alt147=1;
                    	        }


                    	        switch (alt147) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:9107:10: otherlv_12= Comma ( (lv_satisfices_13_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_12=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_12, grammarAccess.getConsumeQueueNodeAccess().getCommaKeyword_1_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:9111:10: ( (lv_satisfices_13_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:9112:11: (lv_satisfices_13_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:9112:11: (lv_satisfices_13_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:9113:12: lv_satisfices_13_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getConsumeQueueNodeAccess().getSatisficesQualityParserRuleCall_1_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfices_13_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getConsumeQueueNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_13_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop147;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:9137:4: ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:9137:4: ({...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:9138:5: {...}? => ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleConsumeQueueNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:9138:113: ( ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:9139:6: ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:9142:9: ({...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:9142:10: {...}? => (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleConsumeQueueNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:9142:19: (otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:9142:20: otherlv_14= Satisfies ( (lv_satisfies_15_0= ruleQualityRequirement ) ) (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_14=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_14, grammarAccess.getConsumeQueueNodeAccess().getSatisfiesKeyword_1_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:9146:9: ( (lv_satisfies_15_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:9147:10: (lv_satisfies_15_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:9147:10: (lv_satisfies_15_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:9148:11: lv_satisfies_15_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getConsumeQueueNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_16);
                    	    lv_satisfies_15_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getConsumeQueueNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_15_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:9165:9: (otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) ) )*
                    	    loop148:
                    	    do {
                    	        int alt148=2;
                    	        int LA148_0 = input.LA(1);

                    	        if ( (LA148_0==Comma) ) {
                    	            alt148=1;
                    	        }


                    	        switch (alt148) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:9166:10: otherlv_16= Comma ( (lv_satisfies_17_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_16=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_16, grammarAccess.getConsumeQueueNodeAccess().getCommaKeyword_1_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:9170:10: ( (lv_satisfies_17_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:9171:11: (lv_satisfies_17_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:9171:11: (lv_satisfies_17_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:9172:12: lv_satisfies_17_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getConsumeQueueNodeAccess().getSatisfiesQualityRequirementParserRuleCall_1_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_16);
                    	    	    lv_satisfies_17_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getConsumeQueueNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_17_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop148;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:9196:4: ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:9196:4: ({...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:9197:5: {...}? => ( ({...}? => (otherlv_18= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleConsumeQueueNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:9197:113: ( ({...}? => (otherlv_18= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:9198:6: ({...}? => (otherlv_18= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:9201:9: ({...}? => (otherlv_18= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:9201:10: {...}? => (otherlv_18= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleConsumeQueueNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:9201:19: (otherlv_18= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:9201:20: otherlv_18= RightParenthesis
                    	    {
                    	    otherlv_18=(Token)match(input,RightParenthesis,FOLLOW_15); 

                    	    									newLeafNode(otherlv_18, grammarAccess.getConsumeQueueNodeAccess().getRightParenthesisKeyword_1_5());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt149 >= 1 ) break loop149;
                                EarlyExitException eee =
                                    new EarlyExitException(149, input);
                                throw eee;
                        }
                        cnt149++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1()) ) {
                        throw new FailedPredicateException(input, "ruleConsumeQueueNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getConsumeQueueNodeAccess().getUnorderedGroup_1());
                    				

                    }
                    break;

            }

            this_BEGIN_19=(Token)match(input,RULE_BEGIN,FOLLOW_9); 

            			newLeafNode(this_BEGIN_19, grammarAccess.getConsumeQueueNodeAccess().getBEGINTerminalRuleCall_2());
            		
            // InternalQualityBtCppParser.g:9223:3: ( (lv_child_20_0= ruleTreeNode ) )
            // InternalQualityBtCppParser.g:9224:4: (lv_child_20_0= ruleTreeNode )
            {
            // InternalQualityBtCppParser.g:9224:4: (lv_child_20_0= ruleTreeNode )
            // InternalQualityBtCppParser.g:9225:5: lv_child_20_0= ruleTreeNode
            {

            					newCompositeNode(grammarAccess.getConsumeQueueNodeAccess().getChildTreeNodeParserRuleCall_3_0());
            				
            pushFollow(FOLLOW_10);
            lv_child_20_0=ruleTreeNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getConsumeQueueNodeRule());
            					}
            					set(
            						current,
            						"child",
            						lv_child_20_0,
            						"org.xtext.btcpp.QualityBtCpp.TreeNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            this_END_21=(Token)match(input,RULE_END,FOLLOW_2); 

            			newLeafNode(this_END_21, grammarAccess.getConsumeQueueNodeAccess().getENDTerminalRuleCall_4());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConsumeQueueNode"


    // $ANTLR start "entryRuleScriptNode"
    // InternalQualityBtCppParser.g:9250:1: entryRuleScriptNode returns [EObject current=null] : iv_ruleScriptNode= ruleScriptNode EOF ;
    public final EObject entryRuleScriptNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleScriptNode = null;


        try {
            // InternalQualityBtCppParser.g:9250:51: (iv_ruleScriptNode= ruleScriptNode EOF )
            // InternalQualityBtCppParser.g:9251:2: iv_ruleScriptNode= ruleScriptNode EOF
            {
             newCompositeNode(grammarAccess.getScriptNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleScriptNode=ruleScriptNode();

            state._fsp--;

             current =iv_ruleScriptNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleScriptNode"


    // $ANTLR start "ruleScriptNode"
    // InternalQualityBtCppParser.g:9257:1: ruleScriptNode returns [EObject current=null] : ( () otherlv_1= ScriptAction ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?) ) )? ) ;
    public final EObject ruleScriptNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        AntlrDatatypeRuleToken lv_name_6_0 = null;

        EObject lv_parameters_8_0 = null;

        EObject lv_parameters_10_0 = null;

        EObject lv_satisfices_12_0 = null;

        EObject lv_satisfices_14_0 = null;

        EObject lv_satisfies_16_0 = null;

        EObject lv_satisfies_18_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:9263:2: ( ( () otherlv_1= ScriptAction ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?) ) )? ) )
            // InternalQualityBtCppParser.g:9264:2: ( () otherlv_1= ScriptAction ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?) ) )? )
            {
            // InternalQualityBtCppParser.g:9264:2: ( () otherlv_1= ScriptAction ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?) ) )? )
            // InternalQualityBtCppParser.g:9265:3: () otherlv_1= ScriptAction ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            {
            // InternalQualityBtCppParser.g:9265:3: ()
            // InternalQualityBtCppParser.g:9266:4: 
            {

            				current = forceCreateModelElement(
            					grammarAccess.getScriptNodeAccess().getScriptNodeAction_0(),
            					current);
            			

            }

            otherlv_1=(Token)match(input,ScriptAction,FOLLOW_29); 

            			newLeafNode(otherlv_1, grammarAccess.getScriptNodeAccess().getScriptActionKeyword_1());
            		
            // InternalQualityBtCppParser.g:9276:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt155=2;
            int LA155_0 = input.LA(1);

            if ( ((LA155_0>=Parameters && LA155_0<=Satisfies)||LA155_0==Name||(LA155_0>=LeftParenthesis && LA155_0<=RightParenthesis)) ) {
                alt155=1;
            }
            switch (alt155) {
                case 1 :
                    // InternalQualityBtCppParser.g:9277:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:9277:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:9278:5: ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2());
                    				
                    // InternalQualityBtCppParser.g:9281:5: ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:9282:6: ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:9282:6: ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+
                    int cnt154=0;
                    loop154:
                    do {
                        int alt154=7;
                        int LA154_0 = input.LA(1);

                        if ( LA154_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2(), 0) ) {
                            alt154=1;
                        }
                        else if ( LA154_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2(), 1) ) {
                            alt154=2;
                        }
                        else if ( LA154_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2(), 2) ) {
                            alt154=3;
                        }
                        else if ( LA154_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2(), 3) ) {
                            alt154=4;
                        }
                        else if ( LA154_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2(), 4) ) {
                            alt154=5;
                        }
                        else if ( LA154_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2(), 5) ) {
                            alt154=6;
                        }


                        switch (alt154) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:9283:4: ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:9283:4: ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:9284:5: {...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleScriptNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:9284:107: ( ({...}? => (otherlv_3= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:9285:6: ({...}? => (otherlv_3= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:9288:9: ({...}? => (otherlv_3= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:9288:10: {...}? => (otherlv_3= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleScriptNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:9288:19: (otherlv_3= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:9288:20: otherlv_3= LeftParenthesis
                    	    {
                    	    otherlv_3=(Token)match(input,LeftParenthesis,FOLLOW_29); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getScriptNodeAccess().getLeftParenthesisKeyword_2_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:9298:4: ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:9298:4: ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:9299:5: {...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleScriptNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:9299:107: ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:9300:6: ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:9303:9: ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:9303:10: {...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleScriptNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:9303:19: (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:9303:20: otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) )
                    	    {
                    	    otherlv_4=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getScriptNodeAccess().getNameKeyword_2_1_0());
                    	    								
                    	    otherlv_5=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_5, grammarAccess.getScriptNodeAccess().getEqualsSignKeyword_2_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:9311:9: ( (lv_name_6_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:9312:10: (lv_name_6_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:9312:10: (lv_name_6_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:9313:11: lv_name_6_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getScriptNodeAccess().getNameEStringParserRuleCall_2_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_29);
                    	    lv_name_6_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getScriptNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_6_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:9336:4: ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:9336:4: ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:9337:5: {...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleScriptNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:9337:107: ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:9338:6: ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:9341:9: ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:9341:10: {...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleScriptNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:9341:19: (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:9341:20: otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_7=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_7, grammarAccess.getScriptNodeAccess().getParametersKeyword_2_2_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:9345:9: ( (lv_parameters_8_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:9346:10: (lv_parameters_8_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:9346:10: (lv_parameters_8_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:9347:11: lv_parameters_8_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getScriptNodeAccess().getParametersParameterParserRuleCall_2_2_1_0());
                    	    										
                    	    pushFollow(FOLLOW_30);
                    	    lv_parameters_8_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getScriptNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_8_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:9364:9: (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )*
                    	    loop151:
                    	    do {
                    	        int alt151=2;
                    	        int LA151_0 = input.LA(1);

                    	        if ( (LA151_0==Comma) ) {
                    	            alt151=1;
                    	        }


                    	        switch (alt151) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:9365:10: otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_9=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_9, grammarAccess.getScriptNodeAccess().getCommaKeyword_2_2_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:9369:10: ( (lv_parameters_10_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:9370:11: (lv_parameters_10_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:9370:11: (lv_parameters_10_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:9371:12: lv_parameters_10_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getScriptNodeAccess().getParametersParameterParserRuleCall_2_2_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_30);
                    	    	    lv_parameters_10_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getScriptNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_10_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop151;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:9395:4: ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:9395:4: ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:9396:5: {...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleScriptNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:9396:107: ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:9397:6: ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:9400:9: ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:9400:10: {...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleScriptNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:9400:19: (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:9400:20: otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_11=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_11, grammarAccess.getScriptNodeAccess().getSatisficesKeyword_2_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:9404:9: ( (lv_satisfices_12_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:9405:10: (lv_satisfices_12_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:9405:10: (lv_satisfices_12_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:9406:11: lv_satisfices_12_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getScriptNodeAccess().getSatisficesQualityParserRuleCall_2_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_30);
                    	    lv_satisfices_12_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getScriptNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_12_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:9423:9: (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )*
                    	    loop152:
                    	    do {
                    	        int alt152=2;
                    	        int LA152_0 = input.LA(1);

                    	        if ( (LA152_0==Comma) ) {
                    	            alt152=1;
                    	        }


                    	        switch (alt152) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:9424:10: otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_13=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_13, grammarAccess.getScriptNodeAccess().getCommaKeyword_2_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:9428:10: ( (lv_satisfices_14_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:9429:11: (lv_satisfices_14_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:9429:11: (lv_satisfices_14_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:9430:12: lv_satisfices_14_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getScriptNodeAccess().getSatisficesQualityParserRuleCall_2_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_30);
                    	    	    lv_satisfices_14_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getScriptNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_14_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop152;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:9454:4: ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:9454:4: ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:9455:5: {...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleScriptNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:9455:107: ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:9456:6: ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:9459:9: ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:9459:10: {...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleScriptNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:9459:19: (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:9459:20: otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_15=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_15, grammarAccess.getScriptNodeAccess().getSatisfiesKeyword_2_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:9463:9: ( (lv_satisfies_16_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:9464:10: (lv_satisfies_16_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:9464:10: (lv_satisfies_16_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:9465:11: lv_satisfies_16_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getScriptNodeAccess().getSatisfiesQualityRequirementParserRuleCall_2_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_30);
                    	    lv_satisfies_16_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getScriptNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_16_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:9482:9: (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )*
                    	    loop153:
                    	    do {
                    	        int alt153=2;
                    	        int LA153_0 = input.LA(1);

                    	        if ( (LA153_0==Comma) ) {
                    	            alt153=1;
                    	        }


                    	        switch (alt153) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:9483:10: otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_17=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_17, grammarAccess.getScriptNodeAccess().getCommaKeyword_2_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:9487:10: ( (lv_satisfies_18_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:9488:11: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:9488:11: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:9489:12: lv_satisfies_18_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getScriptNodeAccess().getSatisfiesQualityRequirementParserRuleCall_2_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_30);
                    	    	    lv_satisfies_18_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getScriptNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_18_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop153;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:9513:4: ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:9513:4: ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:9514:5: {...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleScriptNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:9514:107: ( ({...}? => (otherlv_19= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:9515:6: ({...}? => (otherlv_19= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:9518:9: ({...}? => (otherlv_19= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:9518:10: {...}? => (otherlv_19= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleScriptNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:9518:19: (otherlv_19= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:9518:20: otherlv_19= RightParenthesis
                    	    {
                    	    otherlv_19=(Token)match(input,RightParenthesis,FOLLOW_29); 

                    	    									newLeafNode(otherlv_19, grammarAccess.getScriptNodeAccess().getRightParenthesisKeyword_2_5());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt154 >= 1 ) break loop154;
                                EarlyExitException eee =
                                    new EarlyExitException(154, input);
                                throw eee;
                        }
                        cnt154++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2()) ) {
                        throw new FailedPredicateException(input, "ruleScriptNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getScriptNodeAccess().getUnorderedGroup_2());
                    				

                    }
                    break;

            }


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleScriptNode"


    // $ANTLR start "entryRuleScriptConditionNode"
    // InternalQualityBtCppParser.g:9540:1: entryRuleScriptConditionNode returns [EObject current=null] : iv_ruleScriptConditionNode= ruleScriptConditionNode EOF ;
    public final EObject entryRuleScriptConditionNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleScriptConditionNode = null;


        try {
            // InternalQualityBtCppParser.g:9540:60: (iv_ruleScriptConditionNode= ruleScriptConditionNode EOF )
            // InternalQualityBtCppParser.g:9541:2: iv_ruleScriptConditionNode= ruleScriptConditionNode EOF
            {
             newCompositeNode(grammarAccess.getScriptConditionNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleScriptConditionNode=ruleScriptConditionNode();

            state._fsp--;

             current =iv_ruleScriptConditionNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleScriptConditionNode"


    // $ANTLR start "ruleScriptConditionNode"
    // InternalQualityBtCppParser.g:9547:1: ruleScriptConditionNode returns [EObject current=null] : ( () otherlv_1= ScriptCondition ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?) ) )? ) ;
    public final EObject ruleScriptConditionNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        AntlrDatatypeRuleToken lv_name_6_0 = null;

        EObject lv_parameters_8_0 = null;

        EObject lv_parameters_10_0 = null;

        EObject lv_satisfices_12_0 = null;

        EObject lv_satisfices_14_0 = null;

        EObject lv_satisfies_16_0 = null;

        EObject lv_satisfies_18_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:9553:2: ( ( () otherlv_1= ScriptCondition ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?) ) )? ) )
            // InternalQualityBtCppParser.g:9554:2: ( () otherlv_1= ScriptCondition ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?) ) )? )
            {
            // InternalQualityBtCppParser.g:9554:2: ( () otherlv_1= ScriptCondition ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?) ) )? )
            // InternalQualityBtCppParser.g:9555:3: () otherlv_1= ScriptCondition ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            {
            // InternalQualityBtCppParser.g:9555:3: ()
            // InternalQualityBtCppParser.g:9556:4: 
            {

            				current = forceCreateModelElement(
            					grammarAccess.getScriptConditionNodeAccess().getScriptConditionNodeAction_0(),
            					current);
            			

            }

            otherlv_1=(Token)match(input,ScriptCondition,FOLLOW_29); 

            			newLeafNode(otherlv_1, grammarAccess.getScriptConditionNodeAccess().getScriptConditionKeyword_1());
            		
            // InternalQualityBtCppParser.g:9566:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt160=2;
            int LA160_0 = input.LA(1);

            if ( ((LA160_0>=Parameters && LA160_0<=Satisfies)||LA160_0==Name||(LA160_0>=LeftParenthesis && LA160_0<=RightParenthesis)) ) {
                alt160=1;
            }
            switch (alt160) {
                case 1 :
                    // InternalQualityBtCppParser.g:9567:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:9567:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:9568:5: ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2());
                    				
                    // InternalQualityBtCppParser.g:9571:5: ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:9572:6: ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:9572:6: ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+
                    int cnt159=0;
                    loop159:
                    do {
                        int alt159=7;
                        int LA159_0 = input.LA(1);

                        if ( LA159_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2(), 0) ) {
                            alt159=1;
                        }
                        else if ( LA159_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2(), 1) ) {
                            alt159=2;
                        }
                        else if ( LA159_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2(), 2) ) {
                            alt159=3;
                        }
                        else if ( LA159_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2(), 3) ) {
                            alt159=4;
                        }
                        else if ( LA159_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2(), 4) ) {
                            alt159=5;
                        }
                        else if ( LA159_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2(), 5) ) {
                            alt159=6;
                        }


                        switch (alt159) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:9573:4: ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:9573:4: ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:9574:5: {...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleScriptConditionNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:9574:116: ( ({...}? => (otherlv_3= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:9575:6: ({...}? => (otherlv_3= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:9578:9: ({...}? => (otherlv_3= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:9578:10: {...}? => (otherlv_3= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleScriptConditionNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:9578:19: (otherlv_3= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:9578:20: otherlv_3= LeftParenthesis
                    	    {
                    	    otherlv_3=(Token)match(input,LeftParenthesis,FOLLOW_29); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getScriptConditionNodeAccess().getLeftParenthesisKeyword_2_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:9588:4: ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:9588:4: ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:9589:5: {...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleScriptConditionNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:9589:116: ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:9590:6: ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:9593:9: ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:9593:10: {...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleScriptConditionNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:9593:19: (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:9593:20: otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) )
                    	    {
                    	    otherlv_4=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getScriptConditionNodeAccess().getNameKeyword_2_1_0());
                    	    								
                    	    otherlv_5=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_5, grammarAccess.getScriptConditionNodeAccess().getEqualsSignKeyword_2_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:9601:9: ( (lv_name_6_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:9602:10: (lv_name_6_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:9602:10: (lv_name_6_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:9603:11: lv_name_6_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getScriptConditionNodeAccess().getNameEStringParserRuleCall_2_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_29);
                    	    lv_name_6_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getScriptConditionNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_6_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:9626:4: ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:9626:4: ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:9627:5: {...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleScriptConditionNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:9627:116: ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:9628:6: ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:9631:9: ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:9631:10: {...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleScriptConditionNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:9631:19: (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:9631:20: otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_7=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_7, grammarAccess.getScriptConditionNodeAccess().getParametersKeyword_2_2_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:9635:9: ( (lv_parameters_8_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:9636:10: (lv_parameters_8_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:9636:10: (lv_parameters_8_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:9637:11: lv_parameters_8_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getScriptConditionNodeAccess().getParametersParameterParserRuleCall_2_2_1_0());
                    	    										
                    	    pushFollow(FOLLOW_30);
                    	    lv_parameters_8_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getScriptConditionNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_8_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:9654:9: (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )*
                    	    loop156:
                    	    do {
                    	        int alt156=2;
                    	        int LA156_0 = input.LA(1);

                    	        if ( (LA156_0==Comma) ) {
                    	            alt156=1;
                    	        }


                    	        switch (alt156) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:9655:10: otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_9=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_9, grammarAccess.getScriptConditionNodeAccess().getCommaKeyword_2_2_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:9659:10: ( (lv_parameters_10_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:9660:11: (lv_parameters_10_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:9660:11: (lv_parameters_10_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:9661:12: lv_parameters_10_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getScriptConditionNodeAccess().getParametersParameterParserRuleCall_2_2_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_30);
                    	    	    lv_parameters_10_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getScriptConditionNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_10_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop156;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:9685:4: ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:9685:4: ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:9686:5: {...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleScriptConditionNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:9686:116: ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:9687:6: ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:9690:9: ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:9690:10: {...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleScriptConditionNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:9690:19: (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:9690:20: otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_11=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_11, grammarAccess.getScriptConditionNodeAccess().getSatisficesKeyword_2_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:9694:9: ( (lv_satisfices_12_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:9695:10: (lv_satisfices_12_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:9695:10: (lv_satisfices_12_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:9696:11: lv_satisfices_12_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getScriptConditionNodeAccess().getSatisficesQualityParserRuleCall_2_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_30);
                    	    lv_satisfices_12_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getScriptConditionNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_12_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:9713:9: (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )*
                    	    loop157:
                    	    do {
                    	        int alt157=2;
                    	        int LA157_0 = input.LA(1);

                    	        if ( (LA157_0==Comma) ) {
                    	            alt157=1;
                    	        }


                    	        switch (alt157) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:9714:10: otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_13=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_13, grammarAccess.getScriptConditionNodeAccess().getCommaKeyword_2_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:9718:10: ( (lv_satisfices_14_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:9719:11: (lv_satisfices_14_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:9719:11: (lv_satisfices_14_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:9720:12: lv_satisfices_14_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getScriptConditionNodeAccess().getSatisficesQualityParserRuleCall_2_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_30);
                    	    	    lv_satisfices_14_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getScriptConditionNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_14_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop157;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:9744:4: ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:9744:4: ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:9745:5: {...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleScriptConditionNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:9745:116: ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:9746:6: ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:9749:9: ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:9749:10: {...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleScriptConditionNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:9749:19: (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:9749:20: otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_15=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_15, grammarAccess.getScriptConditionNodeAccess().getSatisfiesKeyword_2_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:9753:9: ( (lv_satisfies_16_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:9754:10: (lv_satisfies_16_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:9754:10: (lv_satisfies_16_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:9755:11: lv_satisfies_16_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getScriptConditionNodeAccess().getSatisfiesQualityRequirementParserRuleCall_2_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_30);
                    	    lv_satisfies_16_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getScriptConditionNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_16_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:9772:9: (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )*
                    	    loop158:
                    	    do {
                    	        int alt158=2;
                    	        int LA158_0 = input.LA(1);

                    	        if ( (LA158_0==Comma) ) {
                    	            alt158=1;
                    	        }


                    	        switch (alt158) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:9773:10: otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_17=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_17, grammarAccess.getScriptConditionNodeAccess().getCommaKeyword_2_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:9777:10: ( (lv_satisfies_18_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:9778:11: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:9778:11: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:9779:12: lv_satisfies_18_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getScriptConditionNodeAccess().getSatisfiesQualityRequirementParserRuleCall_2_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_30);
                    	    	    lv_satisfies_18_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getScriptConditionNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_18_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop158;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:9803:4: ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:9803:4: ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:9804:5: {...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleScriptConditionNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:9804:116: ( ({...}? => (otherlv_19= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:9805:6: ({...}? => (otherlv_19= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:9808:9: ({...}? => (otherlv_19= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:9808:10: {...}? => (otherlv_19= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleScriptConditionNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:9808:19: (otherlv_19= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:9808:20: otherlv_19= RightParenthesis
                    	    {
                    	    otherlv_19=(Token)match(input,RightParenthesis,FOLLOW_29); 

                    	    									newLeafNode(otherlv_19, grammarAccess.getScriptConditionNodeAccess().getRightParenthesisKeyword_2_5());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt159 >= 1 ) break loop159;
                                EarlyExitException eee =
                                    new EarlyExitException(159, input);
                                throw eee;
                        }
                        cnt159++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2()) ) {
                        throw new FailedPredicateException(input, "ruleScriptConditionNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getScriptConditionNodeAccess().getUnorderedGroup_2());
                    				

                    }
                    break;

            }


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleScriptConditionNode"


    // $ANTLR start "entryRuleAlwaysFailureNode"
    // InternalQualityBtCppParser.g:9830:1: entryRuleAlwaysFailureNode returns [EObject current=null] : iv_ruleAlwaysFailureNode= ruleAlwaysFailureNode EOF ;
    public final EObject entryRuleAlwaysFailureNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAlwaysFailureNode = null;


        try {
            // InternalQualityBtCppParser.g:9830:58: (iv_ruleAlwaysFailureNode= ruleAlwaysFailureNode EOF )
            // InternalQualityBtCppParser.g:9831:2: iv_ruleAlwaysFailureNode= ruleAlwaysFailureNode EOF
            {
             newCompositeNode(grammarAccess.getAlwaysFailureNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleAlwaysFailureNode=ruleAlwaysFailureNode();

            state._fsp--;

             current =iv_ruleAlwaysFailureNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAlwaysFailureNode"


    // $ANTLR start "ruleAlwaysFailureNode"
    // InternalQualityBtCppParser.g:9837:1: ruleAlwaysFailureNode returns [EObject current=null] : ( () otherlv_1= AlwaysFailure ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?) ) )? ) ;
    public final EObject ruleAlwaysFailureNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        AntlrDatatypeRuleToken lv_name_6_0 = null;

        EObject lv_parameters_8_0 = null;

        EObject lv_parameters_10_0 = null;

        EObject lv_satisfices_12_0 = null;

        EObject lv_satisfices_14_0 = null;

        EObject lv_satisfies_16_0 = null;

        EObject lv_satisfies_18_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:9843:2: ( ( () otherlv_1= AlwaysFailure ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?) ) )? ) )
            // InternalQualityBtCppParser.g:9844:2: ( () otherlv_1= AlwaysFailure ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?) ) )? )
            {
            // InternalQualityBtCppParser.g:9844:2: ( () otherlv_1= AlwaysFailure ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?) ) )? )
            // InternalQualityBtCppParser.g:9845:3: () otherlv_1= AlwaysFailure ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            {
            // InternalQualityBtCppParser.g:9845:3: ()
            // InternalQualityBtCppParser.g:9846:4: 
            {

            				current = forceCreateModelElement(
            					grammarAccess.getAlwaysFailureNodeAccess().getAlwaysFailureNodeAction_0(),
            					current);
            			

            }

            otherlv_1=(Token)match(input,AlwaysFailure,FOLLOW_29); 

            			newLeafNode(otherlv_1, grammarAccess.getAlwaysFailureNodeAccess().getAlwaysFailureKeyword_1());
            		
            // InternalQualityBtCppParser.g:9856:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt165=2;
            int LA165_0 = input.LA(1);

            if ( ((LA165_0>=Parameters && LA165_0<=Satisfies)||LA165_0==Name||(LA165_0>=LeftParenthesis && LA165_0<=RightParenthesis)) ) {
                alt165=1;
            }
            switch (alt165) {
                case 1 :
                    // InternalQualityBtCppParser.g:9857:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:9857:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:9858:5: ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2());
                    				
                    // InternalQualityBtCppParser.g:9861:5: ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:9862:6: ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:9862:6: ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+
                    int cnt164=0;
                    loop164:
                    do {
                        int alt164=7;
                        int LA164_0 = input.LA(1);

                        if ( LA164_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2(), 0) ) {
                            alt164=1;
                        }
                        else if ( LA164_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2(), 1) ) {
                            alt164=2;
                        }
                        else if ( LA164_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2(), 2) ) {
                            alt164=3;
                        }
                        else if ( LA164_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2(), 3) ) {
                            alt164=4;
                        }
                        else if ( LA164_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2(), 4) ) {
                            alt164=5;
                        }
                        else if ( LA164_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2(), 5) ) {
                            alt164=6;
                        }


                        switch (alt164) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:9863:4: ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:9863:4: ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:9864:5: {...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleAlwaysFailureNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:9864:114: ( ({...}? => (otherlv_3= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:9865:6: ({...}? => (otherlv_3= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:9868:9: ({...}? => (otherlv_3= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:9868:10: {...}? => (otherlv_3= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleAlwaysFailureNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:9868:19: (otherlv_3= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:9868:20: otherlv_3= LeftParenthesis
                    	    {
                    	    otherlv_3=(Token)match(input,LeftParenthesis,FOLLOW_29); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getAlwaysFailureNodeAccess().getLeftParenthesisKeyword_2_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:9878:4: ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:9878:4: ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:9879:5: {...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleAlwaysFailureNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:9879:114: ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:9880:6: ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:9883:9: ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:9883:10: {...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleAlwaysFailureNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:9883:19: (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:9883:20: otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) )
                    	    {
                    	    otherlv_4=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getAlwaysFailureNodeAccess().getNameKeyword_2_1_0());
                    	    								
                    	    otherlv_5=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_5, grammarAccess.getAlwaysFailureNodeAccess().getEqualsSignKeyword_2_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:9891:9: ( (lv_name_6_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:9892:10: (lv_name_6_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:9892:10: (lv_name_6_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:9893:11: lv_name_6_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getAlwaysFailureNodeAccess().getNameEStringParserRuleCall_2_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_29);
                    	    lv_name_6_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getAlwaysFailureNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_6_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:9916:4: ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:9916:4: ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:9917:5: {...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleAlwaysFailureNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:9917:114: ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:9918:6: ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:9921:9: ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:9921:10: {...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleAlwaysFailureNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:9921:19: (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:9921:20: otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_7=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_7, grammarAccess.getAlwaysFailureNodeAccess().getParametersKeyword_2_2_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:9925:9: ( (lv_parameters_8_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:9926:10: (lv_parameters_8_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:9926:10: (lv_parameters_8_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:9927:11: lv_parameters_8_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getAlwaysFailureNodeAccess().getParametersParameterParserRuleCall_2_2_1_0());
                    	    										
                    	    pushFollow(FOLLOW_30);
                    	    lv_parameters_8_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getAlwaysFailureNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_8_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:9944:9: (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )*
                    	    loop161:
                    	    do {
                    	        int alt161=2;
                    	        int LA161_0 = input.LA(1);

                    	        if ( (LA161_0==Comma) ) {
                    	            alt161=1;
                    	        }


                    	        switch (alt161) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:9945:10: otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_9=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_9, grammarAccess.getAlwaysFailureNodeAccess().getCommaKeyword_2_2_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:9949:10: ( (lv_parameters_10_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:9950:11: (lv_parameters_10_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:9950:11: (lv_parameters_10_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:9951:12: lv_parameters_10_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getAlwaysFailureNodeAccess().getParametersParameterParserRuleCall_2_2_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_30);
                    	    	    lv_parameters_10_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getAlwaysFailureNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_10_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop161;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:9975:4: ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:9975:4: ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:9976:5: {...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleAlwaysFailureNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:9976:114: ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:9977:6: ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:9980:9: ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:9980:10: {...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleAlwaysFailureNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:9980:19: (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:9980:20: otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_11=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_11, grammarAccess.getAlwaysFailureNodeAccess().getSatisficesKeyword_2_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:9984:9: ( (lv_satisfices_12_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:9985:10: (lv_satisfices_12_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:9985:10: (lv_satisfices_12_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:9986:11: lv_satisfices_12_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getAlwaysFailureNodeAccess().getSatisficesQualityParserRuleCall_2_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_30);
                    	    lv_satisfices_12_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getAlwaysFailureNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_12_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:10003:9: (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )*
                    	    loop162:
                    	    do {
                    	        int alt162=2;
                    	        int LA162_0 = input.LA(1);

                    	        if ( (LA162_0==Comma) ) {
                    	            alt162=1;
                    	        }


                    	        switch (alt162) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:10004:10: otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_13=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_13, grammarAccess.getAlwaysFailureNodeAccess().getCommaKeyword_2_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:10008:10: ( (lv_satisfices_14_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:10009:11: (lv_satisfices_14_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:10009:11: (lv_satisfices_14_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:10010:12: lv_satisfices_14_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getAlwaysFailureNodeAccess().getSatisficesQualityParserRuleCall_2_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_30);
                    	    	    lv_satisfices_14_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getAlwaysFailureNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_14_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop162;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:10034:4: ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:10034:4: ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:10035:5: {...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleAlwaysFailureNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:10035:114: ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:10036:6: ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:10039:9: ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:10039:10: {...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleAlwaysFailureNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:10039:19: (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:10039:20: otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_15=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_15, grammarAccess.getAlwaysFailureNodeAccess().getSatisfiesKeyword_2_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:10043:9: ( (lv_satisfies_16_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:10044:10: (lv_satisfies_16_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:10044:10: (lv_satisfies_16_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:10045:11: lv_satisfies_16_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getAlwaysFailureNodeAccess().getSatisfiesQualityRequirementParserRuleCall_2_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_30);
                    	    lv_satisfies_16_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getAlwaysFailureNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_16_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:10062:9: (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )*
                    	    loop163:
                    	    do {
                    	        int alt163=2;
                    	        int LA163_0 = input.LA(1);

                    	        if ( (LA163_0==Comma) ) {
                    	            alt163=1;
                    	        }


                    	        switch (alt163) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:10063:10: otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_17=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_17, grammarAccess.getAlwaysFailureNodeAccess().getCommaKeyword_2_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:10067:10: ( (lv_satisfies_18_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:10068:11: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:10068:11: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:10069:12: lv_satisfies_18_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getAlwaysFailureNodeAccess().getSatisfiesQualityRequirementParserRuleCall_2_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_30);
                    	    	    lv_satisfies_18_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getAlwaysFailureNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_18_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop163;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:10093:4: ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:10093:4: ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:10094:5: {...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleAlwaysFailureNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:10094:114: ( ({...}? => (otherlv_19= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:10095:6: ({...}? => (otherlv_19= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:10098:9: ({...}? => (otherlv_19= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:10098:10: {...}? => (otherlv_19= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleAlwaysFailureNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:10098:19: (otherlv_19= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:10098:20: otherlv_19= RightParenthesis
                    	    {
                    	    otherlv_19=(Token)match(input,RightParenthesis,FOLLOW_29); 

                    	    									newLeafNode(otherlv_19, grammarAccess.getAlwaysFailureNodeAccess().getRightParenthesisKeyword_2_5());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt164 >= 1 ) break loop164;
                                EarlyExitException eee =
                                    new EarlyExitException(164, input);
                                throw eee;
                        }
                        cnt164++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2()) ) {
                        throw new FailedPredicateException(input, "ruleAlwaysFailureNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getAlwaysFailureNodeAccess().getUnorderedGroup_2());
                    				

                    }
                    break;

            }


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAlwaysFailureNode"


    // $ANTLR start "entryRuleAlwaysSuccessNode"
    // InternalQualityBtCppParser.g:10120:1: entryRuleAlwaysSuccessNode returns [EObject current=null] : iv_ruleAlwaysSuccessNode= ruleAlwaysSuccessNode EOF ;
    public final EObject entryRuleAlwaysSuccessNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAlwaysSuccessNode = null;


        try {
            // InternalQualityBtCppParser.g:10120:58: (iv_ruleAlwaysSuccessNode= ruleAlwaysSuccessNode EOF )
            // InternalQualityBtCppParser.g:10121:2: iv_ruleAlwaysSuccessNode= ruleAlwaysSuccessNode EOF
            {
             newCompositeNode(grammarAccess.getAlwaysSuccessNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleAlwaysSuccessNode=ruleAlwaysSuccessNode();

            state._fsp--;

             current =iv_ruleAlwaysSuccessNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAlwaysSuccessNode"


    // $ANTLR start "ruleAlwaysSuccessNode"
    // InternalQualityBtCppParser.g:10127:1: ruleAlwaysSuccessNode returns [EObject current=null] : ( () otherlv_1= AlwaysSuccess ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?) ) )? ) ;
    public final EObject ruleAlwaysSuccessNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        AntlrDatatypeRuleToken lv_name_6_0 = null;

        EObject lv_parameters_8_0 = null;

        EObject lv_parameters_10_0 = null;

        EObject lv_satisfices_12_0 = null;

        EObject lv_satisfices_14_0 = null;

        EObject lv_satisfies_16_0 = null;

        EObject lv_satisfies_18_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:10133:2: ( ( () otherlv_1= AlwaysSuccess ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?) ) )? ) )
            // InternalQualityBtCppParser.g:10134:2: ( () otherlv_1= AlwaysSuccess ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?) ) )? )
            {
            // InternalQualityBtCppParser.g:10134:2: ( () otherlv_1= AlwaysSuccess ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?) ) )? )
            // InternalQualityBtCppParser.g:10135:3: () otherlv_1= AlwaysSuccess ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            {
            // InternalQualityBtCppParser.g:10135:3: ()
            // InternalQualityBtCppParser.g:10136:4: 
            {

            				current = forceCreateModelElement(
            					grammarAccess.getAlwaysSuccessNodeAccess().getAlwaysSuccessNodeAction_0(),
            					current);
            			

            }

            otherlv_1=(Token)match(input,AlwaysSuccess,FOLLOW_29); 

            			newLeafNode(otherlv_1, grammarAccess.getAlwaysSuccessNodeAccess().getAlwaysSuccessKeyword_1());
            		
            // InternalQualityBtCppParser.g:10146:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt170=2;
            int LA170_0 = input.LA(1);

            if ( ((LA170_0>=Parameters && LA170_0<=Satisfies)||LA170_0==Name||(LA170_0>=LeftParenthesis && LA170_0<=RightParenthesis)) ) {
                alt170=1;
            }
            switch (alt170) {
                case 1 :
                    // InternalQualityBtCppParser.g:10147:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:10147:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:10148:5: ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2());
                    				
                    // InternalQualityBtCppParser.g:10151:5: ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:10152:6: ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:10152:6: ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+
                    int cnt169=0;
                    loop169:
                    do {
                        int alt169=7;
                        int LA169_0 = input.LA(1);

                        if ( LA169_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2(), 0) ) {
                            alt169=1;
                        }
                        else if ( LA169_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2(), 1) ) {
                            alt169=2;
                        }
                        else if ( LA169_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2(), 2) ) {
                            alt169=3;
                        }
                        else if ( LA169_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2(), 3) ) {
                            alt169=4;
                        }
                        else if ( LA169_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2(), 4) ) {
                            alt169=5;
                        }
                        else if ( LA169_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2(), 5) ) {
                            alt169=6;
                        }


                        switch (alt169) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:10153:4: ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:10153:4: ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:10154:5: {...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleAlwaysSuccessNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:10154:114: ( ({...}? => (otherlv_3= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:10155:6: ({...}? => (otherlv_3= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:10158:9: ({...}? => (otherlv_3= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:10158:10: {...}? => (otherlv_3= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleAlwaysSuccessNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:10158:19: (otherlv_3= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:10158:20: otherlv_3= LeftParenthesis
                    	    {
                    	    otherlv_3=(Token)match(input,LeftParenthesis,FOLLOW_29); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getAlwaysSuccessNodeAccess().getLeftParenthesisKeyword_2_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:10168:4: ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:10168:4: ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:10169:5: {...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleAlwaysSuccessNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:10169:114: ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:10170:6: ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:10173:9: ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:10173:10: {...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleAlwaysSuccessNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:10173:19: (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:10173:20: otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) )
                    	    {
                    	    otherlv_4=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getAlwaysSuccessNodeAccess().getNameKeyword_2_1_0());
                    	    								
                    	    otherlv_5=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_5, grammarAccess.getAlwaysSuccessNodeAccess().getEqualsSignKeyword_2_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:10181:9: ( (lv_name_6_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:10182:10: (lv_name_6_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:10182:10: (lv_name_6_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:10183:11: lv_name_6_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getAlwaysSuccessNodeAccess().getNameEStringParserRuleCall_2_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_29);
                    	    lv_name_6_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getAlwaysSuccessNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_6_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:10206:4: ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:10206:4: ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:10207:5: {...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleAlwaysSuccessNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:10207:114: ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:10208:6: ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:10211:9: ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:10211:10: {...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleAlwaysSuccessNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:10211:19: (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:10211:20: otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_7=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_7, grammarAccess.getAlwaysSuccessNodeAccess().getParametersKeyword_2_2_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:10215:9: ( (lv_parameters_8_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:10216:10: (lv_parameters_8_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:10216:10: (lv_parameters_8_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:10217:11: lv_parameters_8_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getAlwaysSuccessNodeAccess().getParametersParameterParserRuleCall_2_2_1_0());
                    	    										
                    	    pushFollow(FOLLOW_30);
                    	    lv_parameters_8_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getAlwaysSuccessNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_8_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:10234:9: (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )*
                    	    loop166:
                    	    do {
                    	        int alt166=2;
                    	        int LA166_0 = input.LA(1);

                    	        if ( (LA166_0==Comma) ) {
                    	            alt166=1;
                    	        }


                    	        switch (alt166) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:10235:10: otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_9=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_9, grammarAccess.getAlwaysSuccessNodeAccess().getCommaKeyword_2_2_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:10239:10: ( (lv_parameters_10_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:10240:11: (lv_parameters_10_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:10240:11: (lv_parameters_10_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:10241:12: lv_parameters_10_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getAlwaysSuccessNodeAccess().getParametersParameterParserRuleCall_2_2_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_30);
                    	    	    lv_parameters_10_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getAlwaysSuccessNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_10_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop166;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:10265:4: ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:10265:4: ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:10266:5: {...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleAlwaysSuccessNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:10266:114: ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:10267:6: ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:10270:9: ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:10270:10: {...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleAlwaysSuccessNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:10270:19: (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:10270:20: otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_11=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_11, grammarAccess.getAlwaysSuccessNodeAccess().getSatisficesKeyword_2_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:10274:9: ( (lv_satisfices_12_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:10275:10: (lv_satisfices_12_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:10275:10: (lv_satisfices_12_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:10276:11: lv_satisfices_12_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getAlwaysSuccessNodeAccess().getSatisficesQualityParserRuleCall_2_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_30);
                    	    lv_satisfices_12_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getAlwaysSuccessNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_12_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:10293:9: (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )*
                    	    loop167:
                    	    do {
                    	        int alt167=2;
                    	        int LA167_0 = input.LA(1);

                    	        if ( (LA167_0==Comma) ) {
                    	            alt167=1;
                    	        }


                    	        switch (alt167) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:10294:10: otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_13=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_13, grammarAccess.getAlwaysSuccessNodeAccess().getCommaKeyword_2_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:10298:10: ( (lv_satisfices_14_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:10299:11: (lv_satisfices_14_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:10299:11: (lv_satisfices_14_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:10300:12: lv_satisfices_14_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getAlwaysSuccessNodeAccess().getSatisficesQualityParserRuleCall_2_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_30);
                    	    	    lv_satisfices_14_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getAlwaysSuccessNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_14_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop167;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:10324:4: ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:10324:4: ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:10325:5: {...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleAlwaysSuccessNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:10325:114: ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:10326:6: ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:10329:9: ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:10329:10: {...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleAlwaysSuccessNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:10329:19: (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:10329:20: otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_15=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_15, grammarAccess.getAlwaysSuccessNodeAccess().getSatisfiesKeyword_2_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:10333:9: ( (lv_satisfies_16_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:10334:10: (lv_satisfies_16_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:10334:10: (lv_satisfies_16_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:10335:11: lv_satisfies_16_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getAlwaysSuccessNodeAccess().getSatisfiesQualityRequirementParserRuleCall_2_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_30);
                    	    lv_satisfies_16_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getAlwaysSuccessNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_16_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:10352:9: (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )*
                    	    loop168:
                    	    do {
                    	        int alt168=2;
                    	        int LA168_0 = input.LA(1);

                    	        if ( (LA168_0==Comma) ) {
                    	            alt168=1;
                    	        }


                    	        switch (alt168) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:10353:10: otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_17=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_17, grammarAccess.getAlwaysSuccessNodeAccess().getCommaKeyword_2_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:10357:10: ( (lv_satisfies_18_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:10358:11: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:10358:11: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:10359:12: lv_satisfies_18_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getAlwaysSuccessNodeAccess().getSatisfiesQualityRequirementParserRuleCall_2_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_30);
                    	    	    lv_satisfies_18_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getAlwaysSuccessNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_18_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop168;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:10383:4: ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:10383:4: ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:10384:5: {...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleAlwaysSuccessNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:10384:114: ( ({...}? => (otherlv_19= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:10385:6: ({...}? => (otherlv_19= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:10388:9: ({...}? => (otherlv_19= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:10388:10: {...}? => (otherlv_19= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleAlwaysSuccessNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:10388:19: (otherlv_19= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:10388:20: otherlv_19= RightParenthesis
                    	    {
                    	    otherlv_19=(Token)match(input,RightParenthesis,FOLLOW_29); 

                    	    									newLeafNode(otherlv_19, grammarAccess.getAlwaysSuccessNodeAccess().getRightParenthesisKeyword_2_5());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt169 >= 1 ) break loop169;
                                EarlyExitException eee =
                                    new EarlyExitException(169, input);
                                throw eee;
                        }
                        cnt169++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2()) ) {
                        throw new FailedPredicateException(input, "ruleAlwaysSuccessNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getAlwaysSuccessNodeAccess().getUnorderedGroup_2());
                    				

                    }
                    break;

            }


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAlwaysSuccessNode"


    // $ANTLR start "entryRuleSetBlackboardNode"
    // InternalQualityBtCppParser.g:10410:1: entryRuleSetBlackboardNode returns [EObject current=null] : iv_ruleSetBlackboardNode= ruleSetBlackboardNode EOF ;
    public final EObject entryRuleSetBlackboardNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSetBlackboardNode = null;


        try {
            // InternalQualityBtCppParser.g:10410:58: (iv_ruleSetBlackboardNode= ruleSetBlackboardNode EOF )
            // InternalQualityBtCppParser.g:10411:2: iv_ruleSetBlackboardNode= ruleSetBlackboardNode EOF
            {
             newCompositeNode(grammarAccess.getSetBlackboardNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleSetBlackboardNode=ruleSetBlackboardNode();

            state._fsp--;

             current =iv_ruleSetBlackboardNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSetBlackboardNode"


    // $ANTLR start "ruleSetBlackboardNode"
    // InternalQualityBtCppParser.g:10417:1: ruleSetBlackboardNode returns [EObject current=null] : ( () otherlv_1= SetBlackboard ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Satisfices ( (lv_satisfices_8_0= ruleQuality ) ) (otherlv_9= Comma ( (lv_satisfices_10_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Value otherlv_12= EqualsSign ( (lv_value_13_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Output_key otherlv_15= EqualsSign ( (lv_output_key_16_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Parameters ( (lv_parameters_18_0= ruleParameter ) ) (otherlv_19= Comma ( (lv_parameters_20_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Satisfies ( (lv_satisfies_22_0= ruleQualityRequirement ) ) (otherlv_23= Comma ( (lv_satisfies_24_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= RightParenthesis ) ) ) ) )+ {...}?) ) )? ) ;
    public final EObject ruleSetBlackboardNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token otherlv_23=null;
        Token otherlv_25=null;
        AntlrDatatypeRuleToken lv_name_6_0 = null;

        EObject lv_satisfices_8_0 = null;

        EObject lv_satisfices_10_0 = null;

        AntlrDatatypeRuleToken lv_value_13_0 = null;

        AntlrDatatypeRuleToken lv_output_key_16_0 = null;

        EObject lv_parameters_18_0 = null;

        EObject lv_parameters_20_0 = null;

        EObject lv_satisfies_22_0 = null;

        EObject lv_satisfies_24_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:10423:2: ( ( () otherlv_1= SetBlackboard ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Satisfices ( (lv_satisfices_8_0= ruleQuality ) ) (otherlv_9= Comma ( (lv_satisfices_10_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Value otherlv_12= EqualsSign ( (lv_value_13_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Output_key otherlv_15= EqualsSign ( (lv_output_key_16_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Parameters ( (lv_parameters_18_0= ruleParameter ) ) (otherlv_19= Comma ( (lv_parameters_20_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Satisfies ( (lv_satisfies_22_0= ruleQualityRequirement ) ) (otherlv_23= Comma ( (lv_satisfies_24_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= RightParenthesis ) ) ) ) )+ {...}?) ) )? ) )
            // InternalQualityBtCppParser.g:10424:2: ( () otherlv_1= SetBlackboard ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Satisfices ( (lv_satisfices_8_0= ruleQuality ) ) (otherlv_9= Comma ( (lv_satisfices_10_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Value otherlv_12= EqualsSign ( (lv_value_13_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Output_key otherlv_15= EqualsSign ( (lv_output_key_16_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Parameters ( (lv_parameters_18_0= ruleParameter ) ) (otherlv_19= Comma ( (lv_parameters_20_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Satisfies ( (lv_satisfies_22_0= ruleQualityRequirement ) ) (otherlv_23= Comma ( (lv_satisfies_24_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= RightParenthesis ) ) ) ) )+ {...}?) ) )? )
            {
            // InternalQualityBtCppParser.g:10424:2: ( () otherlv_1= SetBlackboard ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Satisfices ( (lv_satisfices_8_0= ruleQuality ) ) (otherlv_9= Comma ( (lv_satisfices_10_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Value otherlv_12= EqualsSign ( (lv_value_13_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Output_key otherlv_15= EqualsSign ( (lv_output_key_16_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Parameters ( (lv_parameters_18_0= ruleParameter ) ) (otherlv_19= Comma ( (lv_parameters_20_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Satisfies ( (lv_satisfies_22_0= ruleQualityRequirement ) ) (otherlv_23= Comma ( (lv_satisfies_24_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= RightParenthesis ) ) ) ) )+ {...}?) ) )? )
            // InternalQualityBtCppParser.g:10425:3: () otherlv_1= SetBlackboard ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Satisfices ( (lv_satisfices_8_0= ruleQuality ) ) (otherlv_9= Comma ( (lv_satisfices_10_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Value otherlv_12= EqualsSign ( (lv_value_13_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Output_key otherlv_15= EqualsSign ( (lv_output_key_16_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Parameters ( (lv_parameters_18_0= ruleParameter ) ) (otherlv_19= Comma ( (lv_parameters_20_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Satisfies ( (lv_satisfies_22_0= ruleQualityRequirement ) ) (otherlv_23= Comma ( (lv_satisfies_24_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            {
            // InternalQualityBtCppParser.g:10425:3: ()
            // InternalQualityBtCppParser.g:10426:4: 
            {

            				current = forceCreateModelElement(
            					grammarAccess.getSetBlackboardNodeAccess().getSetBlackboardNodeAction_0(),
            					current);
            			

            }

            otherlv_1=(Token)match(input,SetBlackboard,FOLLOW_31); 

            			newLeafNode(otherlv_1, grammarAccess.getSetBlackboardNodeAccess().getSetBlackboardKeyword_1());
            		
            // InternalQualityBtCppParser.g:10436:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Satisfices ( (lv_satisfices_8_0= ruleQuality ) ) (otherlv_9= Comma ( (lv_satisfices_10_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Value otherlv_12= EqualsSign ( (lv_value_13_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Output_key otherlv_15= EqualsSign ( (lv_output_key_16_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Parameters ( (lv_parameters_18_0= ruleParameter ) ) (otherlv_19= Comma ( (lv_parameters_20_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Satisfies ( (lv_satisfies_22_0= ruleQualityRequirement ) ) (otherlv_23= Comma ( (lv_satisfies_24_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt175=2;
            int LA175_0 = input.LA(1);

            if ( ((LA175_0>=Output_key && LA175_0<=Satisfies)||LA175_0==Value||LA175_0==Name||(LA175_0>=LeftParenthesis && LA175_0<=RightParenthesis)) ) {
                alt175=1;
            }
            switch (alt175) {
                case 1 :
                    // InternalQualityBtCppParser.g:10437:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Satisfices ( (lv_satisfices_8_0= ruleQuality ) ) (otherlv_9= Comma ( (lv_satisfices_10_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Value otherlv_12= EqualsSign ( (lv_value_13_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Output_key otherlv_15= EqualsSign ( (lv_output_key_16_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Parameters ( (lv_parameters_18_0= ruleParameter ) ) (otherlv_19= Comma ( (lv_parameters_20_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Satisfies ( (lv_satisfies_22_0= ruleQualityRequirement ) ) (otherlv_23= Comma ( (lv_satisfies_24_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:10437:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Satisfices ( (lv_satisfices_8_0= ruleQuality ) ) (otherlv_9= Comma ( (lv_satisfices_10_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Value otherlv_12= EqualsSign ( (lv_value_13_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Output_key otherlv_15= EqualsSign ( (lv_output_key_16_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Parameters ( (lv_parameters_18_0= ruleParameter ) ) (otherlv_19= Comma ( (lv_parameters_20_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Satisfies ( (lv_satisfies_22_0= ruleQualityRequirement ) ) (otherlv_23= Comma ( (lv_satisfies_24_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:10438:5: ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Satisfices ( (lv_satisfices_8_0= ruleQuality ) ) (otherlv_9= Comma ( (lv_satisfices_10_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Value otherlv_12= EqualsSign ( (lv_value_13_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Output_key otherlv_15= EqualsSign ( (lv_output_key_16_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Parameters ( (lv_parameters_18_0= ruleParameter ) ) (otherlv_19= Comma ( (lv_parameters_20_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Satisfies ( (lv_satisfies_22_0= ruleQualityRequirement ) ) (otherlv_23= Comma ( (lv_satisfies_24_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2());
                    				
                    // InternalQualityBtCppParser.g:10441:5: ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Satisfices ( (lv_satisfices_8_0= ruleQuality ) ) (otherlv_9= Comma ( (lv_satisfices_10_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Value otherlv_12= EqualsSign ( (lv_value_13_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Output_key otherlv_15= EqualsSign ( (lv_output_key_16_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Parameters ( (lv_parameters_18_0= ruleParameter ) ) (otherlv_19= Comma ( (lv_parameters_20_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Satisfies ( (lv_satisfies_22_0= ruleQualityRequirement ) ) (otherlv_23= Comma ( (lv_satisfies_24_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:10442:6: ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Satisfices ( (lv_satisfices_8_0= ruleQuality ) ) (otherlv_9= Comma ( (lv_satisfices_10_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Value otherlv_12= EqualsSign ( (lv_value_13_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Output_key otherlv_15= EqualsSign ( (lv_output_key_16_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Parameters ( (lv_parameters_18_0= ruleParameter ) ) (otherlv_19= Comma ( (lv_parameters_20_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Satisfies ( (lv_satisfies_22_0= ruleQualityRequirement ) ) (otherlv_23= Comma ( (lv_satisfies_24_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:10442:6: ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Satisfices ( (lv_satisfices_8_0= ruleQuality ) ) (otherlv_9= Comma ( (lv_satisfices_10_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Value otherlv_12= EqualsSign ( (lv_value_13_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Output_key otherlv_15= EqualsSign ( (lv_output_key_16_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Parameters ( (lv_parameters_18_0= ruleParameter ) ) (otherlv_19= Comma ( (lv_parameters_20_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Satisfies ( (lv_satisfies_22_0= ruleQualityRequirement ) ) (otherlv_23= Comma ( (lv_satisfies_24_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= RightParenthesis ) ) ) ) )+
                    int cnt174=0;
                    loop174:
                    do {
                        int alt174=9;
                        alt174 = dfa174.predict(input);
                        switch (alt174) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:10443:4: ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:10443:4: ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:10444:5: {...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleSetBlackboardNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:10444:114: ( ({...}? => (otherlv_3= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:10445:6: ({...}? => (otherlv_3= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:10448:9: ({...}? => (otherlv_3= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:10448:10: {...}? => (otherlv_3= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSetBlackboardNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:10448:19: (otherlv_3= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:10448:20: otherlv_3= LeftParenthesis
                    	    {
                    	    otherlv_3=(Token)match(input,LeftParenthesis,FOLLOW_31); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getSetBlackboardNodeAccess().getLeftParenthesisKeyword_2_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:10458:4: ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:10458:4: ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:10459:5: {...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleSetBlackboardNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:10459:114: ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:10460:6: ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:10463:9: ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:10463:10: {...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSetBlackboardNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:10463:19: (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:10463:20: otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) )
                    	    {
                    	    otherlv_4=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getSetBlackboardNodeAccess().getNameKeyword_2_1_0());
                    	    								
                    	    otherlv_5=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_5, grammarAccess.getSetBlackboardNodeAccess().getEqualsSignKeyword_2_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:10471:9: ( (lv_name_6_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:10472:10: (lv_name_6_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:10472:10: (lv_name_6_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:10473:11: lv_name_6_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getSetBlackboardNodeAccess().getNameEStringParserRuleCall_2_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_31);
                    	    lv_name_6_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getSetBlackboardNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_6_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:10496:4: ({...}? => ( ({...}? => (otherlv_7= Satisfices ( (lv_satisfices_8_0= ruleQuality ) ) (otherlv_9= Comma ( (lv_satisfices_10_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:10496:4: ({...}? => ( ({...}? => (otherlv_7= Satisfices ( (lv_satisfices_8_0= ruleQuality ) ) (otherlv_9= Comma ( (lv_satisfices_10_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:10497:5: {...}? => ( ({...}? => (otherlv_7= Satisfices ( (lv_satisfices_8_0= ruleQuality ) ) (otherlv_9= Comma ( (lv_satisfices_10_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleSetBlackboardNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:10497:114: ( ({...}? => (otherlv_7= Satisfices ( (lv_satisfices_8_0= ruleQuality ) ) (otherlv_9= Comma ( (lv_satisfices_10_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:10498:6: ({...}? => (otherlv_7= Satisfices ( (lv_satisfices_8_0= ruleQuality ) ) (otherlv_9= Comma ( (lv_satisfices_10_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:10501:9: ({...}? => (otherlv_7= Satisfices ( (lv_satisfices_8_0= ruleQuality ) ) (otherlv_9= Comma ( (lv_satisfices_10_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:10501:10: {...}? => (otherlv_7= Satisfices ( (lv_satisfices_8_0= ruleQuality ) ) (otherlv_9= Comma ( (lv_satisfices_10_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSetBlackboardNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:10501:19: (otherlv_7= Satisfices ( (lv_satisfices_8_0= ruleQuality ) ) (otherlv_9= Comma ( (lv_satisfices_10_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:10501:20: otherlv_7= Satisfices ( (lv_satisfices_8_0= ruleQuality ) ) (otherlv_9= Comma ( (lv_satisfices_10_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_7=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_7, grammarAccess.getSetBlackboardNodeAccess().getSatisficesKeyword_2_2_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:10505:9: ( (lv_satisfices_8_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:10506:10: (lv_satisfices_8_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:10506:10: (lv_satisfices_8_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:10507:11: lv_satisfices_8_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getSetBlackboardNodeAccess().getSatisficesQualityParserRuleCall_2_2_1_0());
                    	    										
                    	    pushFollow(FOLLOW_32);
                    	    lv_satisfices_8_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getSetBlackboardNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_8_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:10524:9: (otherlv_9= Comma ( (lv_satisfices_10_0= ruleQuality ) ) )*
                    	    loop171:
                    	    do {
                    	        int alt171=2;
                    	        int LA171_0 = input.LA(1);

                    	        if ( (LA171_0==Comma) ) {
                    	            alt171=1;
                    	        }


                    	        switch (alt171) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:10525:10: otherlv_9= Comma ( (lv_satisfices_10_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_9=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_9, grammarAccess.getSetBlackboardNodeAccess().getCommaKeyword_2_2_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:10529:10: ( (lv_satisfices_10_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:10530:11: (lv_satisfices_10_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:10530:11: (lv_satisfices_10_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:10531:12: lv_satisfices_10_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getSetBlackboardNodeAccess().getSatisficesQualityParserRuleCall_2_2_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_32);
                    	    	    lv_satisfices_10_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getSetBlackboardNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_10_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop171;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:10555:4: ({...}? => ( ({...}? => (otherlv_11= Value otherlv_12= EqualsSign ( (lv_value_13_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:10555:4: ({...}? => ( ({...}? => (otherlv_11= Value otherlv_12= EqualsSign ( (lv_value_13_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:10556:5: {...}? => ( ({...}? => (otherlv_11= Value otherlv_12= EqualsSign ( (lv_value_13_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleSetBlackboardNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:10556:114: ( ({...}? => (otherlv_11= Value otherlv_12= EqualsSign ( (lv_value_13_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:10557:6: ({...}? => (otherlv_11= Value otherlv_12= EqualsSign ( (lv_value_13_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:10560:9: ({...}? => (otherlv_11= Value otherlv_12= EqualsSign ( (lv_value_13_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:10560:10: {...}? => (otherlv_11= Value otherlv_12= EqualsSign ( (lv_value_13_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSetBlackboardNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:10560:19: (otherlv_11= Value otherlv_12= EqualsSign ( (lv_value_13_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:10560:20: otherlv_11= Value otherlv_12= EqualsSign ( (lv_value_13_0= ruleEString ) )
                    	    {
                    	    otherlv_11=(Token)match(input,Value,FOLLOW_8); 

                    	    									newLeafNode(otherlv_11, grammarAccess.getSetBlackboardNodeAccess().getValueKeyword_2_3_0());
                    	    								
                    	    otherlv_12=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_12, grammarAccess.getSetBlackboardNodeAccess().getEqualsSignKeyword_2_3_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:10568:9: ( (lv_value_13_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:10569:10: (lv_value_13_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:10569:10: (lv_value_13_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:10570:11: lv_value_13_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getSetBlackboardNodeAccess().getValueEStringParserRuleCall_2_3_2_0());
                    	    										
                    	    pushFollow(FOLLOW_31);
                    	    lv_value_13_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getSetBlackboardNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"value",
                    	    												lv_value_13_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:10593:4: ({...}? => ( ({...}? => (otherlv_14= Output_key otherlv_15= EqualsSign ( (lv_output_key_16_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:10593:4: ({...}? => ( ({...}? => (otherlv_14= Output_key otherlv_15= EqualsSign ( (lv_output_key_16_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:10594:5: {...}? => ( ({...}? => (otherlv_14= Output_key otherlv_15= EqualsSign ( (lv_output_key_16_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleSetBlackboardNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:10594:114: ( ({...}? => (otherlv_14= Output_key otherlv_15= EqualsSign ( (lv_output_key_16_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:10595:6: ({...}? => (otherlv_14= Output_key otherlv_15= EqualsSign ( (lv_output_key_16_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:10598:9: ({...}? => (otherlv_14= Output_key otherlv_15= EqualsSign ( (lv_output_key_16_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:10598:10: {...}? => (otherlv_14= Output_key otherlv_15= EqualsSign ( (lv_output_key_16_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSetBlackboardNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:10598:19: (otherlv_14= Output_key otherlv_15= EqualsSign ( (lv_output_key_16_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:10598:20: otherlv_14= Output_key otherlv_15= EqualsSign ( (lv_output_key_16_0= ruleEString ) )
                    	    {
                    	    otherlv_14=(Token)match(input,Output_key,FOLLOW_8); 

                    	    									newLeafNode(otherlv_14, grammarAccess.getSetBlackboardNodeAccess().getOutput_keyKeyword_2_4_0());
                    	    								
                    	    otherlv_15=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_15, grammarAccess.getSetBlackboardNodeAccess().getEqualsSignKeyword_2_4_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:10606:9: ( (lv_output_key_16_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:10607:10: (lv_output_key_16_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:10607:10: (lv_output_key_16_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:10608:11: lv_output_key_16_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getSetBlackboardNodeAccess().getOutput_keyEStringParserRuleCall_2_4_2_0());
                    	    										
                    	    pushFollow(FOLLOW_31);
                    	    lv_output_key_16_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getSetBlackboardNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"output_key",
                    	    												lv_output_key_16_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:10631:4: ({...}? => ( ({...}? => (otherlv_17= Parameters ( (lv_parameters_18_0= ruleParameter ) ) (otherlv_19= Comma ( (lv_parameters_20_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:10631:4: ({...}? => ( ({...}? => (otherlv_17= Parameters ( (lv_parameters_18_0= ruleParameter ) ) (otherlv_19= Comma ( (lv_parameters_20_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:10632:5: {...}? => ( ({...}? => (otherlv_17= Parameters ( (lv_parameters_18_0= ruleParameter ) ) (otherlv_19= Comma ( (lv_parameters_20_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleSetBlackboardNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:10632:114: ( ({...}? => (otherlv_17= Parameters ( (lv_parameters_18_0= ruleParameter ) ) (otherlv_19= Comma ( (lv_parameters_20_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:10633:6: ({...}? => (otherlv_17= Parameters ( (lv_parameters_18_0= ruleParameter ) ) (otherlv_19= Comma ( (lv_parameters_20_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:10636:9: ({...}? => (otherlv_17= Parameters ( (lv_parameters_18_0= ruleParameter ) ) (otherlv_19= Comma ( (lv_parameters_20_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:10636:10: {...}? => (otherlv_17= Parameters ( (lv_parameters_18_0= ruleParameter ) ) (otherlv_19= Comma ( (lv_parameters_20_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSetBlackboardNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:10636:19: (otherlv_17= Parameters ( (lv_parameters_18_0= ruleParameter ) ) (otherlv_19= Comma ( (lv_parameters_20_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:10636:20: otherlv_17= Parameters ( (lv_parameters_18_0= ruleParameter ) ) (otherlv_19= Comma ( (lv_parameters_20_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_17=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_17, grammarAccess.getSetBlackboardNodeAccess().getParametersKeyword_2_5_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:10640:9: ( (lv_parameters_18_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:10641:10: (lv_parameters_18_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:10641:10: (lv_parameters_18_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:10642:11: lv_parameters_18_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getSetBlackboardNodeAccess().getParametersParameterParserRuleCall_2_5_1_0());
                    	    										
                    	    pushFollow(FOLLOW_32);
                    	    lv_parameters_18_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getSetBlackboardNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_18_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:10659:9: (otherlv_19= Comma ( (lv_parameters_20_0= ruleParameter ) ) )*
                    	    loop172:
                    	    do {
                    	        int alt172=2;
                    	        int LA172_0 = input.LA(1);

                    	        if ( (LA172_0==Comma) ) {
                    	            alt172=1;
                    	        }


                    	        switch (alt172) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:10660:10: otherlv_19= Comma ( (lv_parameters_20_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_19=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_19, grammarAccess.getSetBlackboardNodeAccess().getCommaKeyword_2_5_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:10664:10: ( (lv_parameters_20_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:10665:11: (lv_parameters_20_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:10665:11: (lv_parameters_20_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:10666:12: lv_parameters_20_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getSetBlackboardNodeAccess().getParametersParameterParserRuleCall_2_5_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_32);
                    	    	    lv_parameters_20_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getSetBlackboardNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_20_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop172;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 7 :
                    	    // InternalQualityBtCppParser.g:10690:4: ({...}? => ( ({...}? => (otherlv_21= Satisfies ( (lv_satisfies_22_0= ruleQualityRequirement ) ) (otherlv_23= Comma ( (lv_satisfies_24_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:10690:4: ({...}? => ( ({...}? => (otherlv_21= Satisfies ( (lv_satisfies_22_0= ruleQualityRequirement ) ) (otherlv_23= Comma ( (lv_satisfies_24_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:10691:5: {...}? => ( ({...}? => (otherlv_21= Satisfies ( (lv_satisfies_22_0= ruleQualityRequirement ) ) (otherlv_23= Comma ( (lv_satisfies_24_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 6) ) {
                    	        throw new FailedPredicateException(input, "ruleSetBlackboardNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 6)");
                    	    }
                    	    // InternalQualityBtCppParser.g:10691:114: ( ({...}? => (otherlv_21= Satisfies ( (lv_satisfies_22_0= ruleQualityRequirement ) ) (otherlv_23= Comma ( (lv_satisfies_24_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:10692:6: ({...}? => (otherlv_21= Satisfies ( (lv_satisfies_22_0= ruleQualityRequirement ) ) (otherlv_23= Comma ( (lv_satisfies_24_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 6);
                    	    					
                    	    // InternalQualityBtCppParser.g:10695:9: ({...}? => (otherlv_21= Satisfies ( (lv_satisfies_22_0= ruleQualityRequirement ) ) (otherlv_23= Comma ( (lv_satisfies_24_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:10695:10: {...}? => (otherlv_21= Satisfies ( (lv_satisfies_22_0= ruleQualityRequirement ) ) (otherlv_23= Comma ( (lv_satisfies_24_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSetBlackboardNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:10695:19: (otherlv_21= Satisfies ( (lv_satisfies_22_0= ruleQualityRequirement ) ) (otherlv_23= Comma ( (lv_satisfies_24_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:10695:20: otherlv_21= Satisfies ( (lv_satisfies_22_0= ruleQualityRequirement ) ) (otherlv_23= Comma ( (lv_satisfies_24_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_21=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_21, grammarAccess.getSetBlackboardNodeAccess().getSatisfiesKeyword_2_6_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:10699:9: ( (lv_satisfies_22_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:10700:10: (lv_satisfies_22_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:10700:10: (lv_satisfies_22_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:10701:11: lv_satisfies_22_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getSetBlackboardNodeAccess().getSatisfiesQualityRequirementParserRuleCall_2_6_1_0());
                    	    										
                    	    pushFollow(FOLLOW_32);
                    	    lv_satisfies_22_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getSetBlackboardNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_22_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:10718:9: (otherlv_23= Comma ( (lv_satisfies_24_0= ruleQualityRequirement ) ) )*
                    	    loop173:
                    	    do {
                    	        int alt173=2;
                    	        int LA173_0 = input.LA(1);

                    	        if ( (LA173_0==Comma) ) {
                    	            alt173=1;
                    	        }


                    	        switch (alt173) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:10719:10: otherlv_23= Comma ( (lv_satisfies_24_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_23=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_23, grammarAccess.getSetBlackboardNodeAccess().getCommaKeyword_2_6_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:10723:10: ( (lv_satisfies_24_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:10724:11: (lv_satisfies_24_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:10724:11: (lv_satisfies_24_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:10725:12: lv_satisfies_24_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getSetBlackboardNodeAccess().getSatisfiesQualityRequirementParserRuleCall_2_6_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_32);
                    	    	    lv_satisfies_24_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getSetBlackboardNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_24_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop173;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 8 :
                    	    // InternalQualityBtCppParser.g:10749:4: ({...}? => ( ({...}? => (otherlv_25= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:10749:4: ({...}? => ( ({...}? => (otherlv_25= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:10750:5: {...}? => ( ({...}? => (otherlv_25= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 7) ) {
                    	        throw new FailedPredicateException(input, "ruleSetBlackboardNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 7)");
                    	    }
                    	    // InternalQualityBtCppParser.g:10750:114: ( ({...}? => (otherlv_25= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:10751:6: ({...}? => (otherlv_25= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 7);
                    	    					
                    	    // InternalQualityBtCppParser.g:10754:9: ({...}? => (otherlv_25= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:10754:10: {...}? => (otherlv_25= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSetBlackboardNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:10754:19: (otherlv_25= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:10754:20: otherlv_25= RightParenthesis
                    	    {
                    	    otherlv_25=(Token)match(input,RightParenthesis,FOLLOW_31); 

                    	    									newLeafNode(otherlv_25, grammarAccess.getSetBlackboardNodeAccess().getRightParenthesisKeyword_2_7());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt174 >= 1 ) break loop174;
                                EarlyExitException eee =
                                    new EarlyExitException(174, input);
                                throw eee;
                        }
                        cnt174++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2()) ) {
                        throw new FailedPredicateException(input, "ruleSetBlackboardNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2());
                    				

                    }
                    break;

            }


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSetBlackboardNode"


    // $ANTLR start "entryRuleTestNode"
    // InternalQualityBtCppParser.g:10776:1: entryRuleTestNode returns [EObject current=null] : iv_ruleTestNode= ruleTestNode EOF ;
    public final EObject entryRuleTestNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTestNode = null;


        try {
            // InternalQualityBtCppParser.g:10776:49: (iv_ruleTestNode= ruleTestNode EOF )
            // InternalQualityBtCppParser.g:10777:2: iv_ruleTestNode= ruleTestNode EOF
            {
             newCompositeNode(grammarAccess.getTestNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleTestNode=ruleTestNode();

            state._fsp--;

             current =iv_ruleTestNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTestNode"


    // $ANTLR start "ruleTestNode"
    // InternalQualityBtCppParser.g:10783:1: ruleTestNode returns [EObject current=null] : ( () otherlv_1= Test ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?) ) )? ) ;
    public final EObject ruleTestNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        AntlrDatatypeRuleToken lv_name_6_0 = null;

        EObject lv_parameters_8_0 = null;

        EObject lv_parameters_10_0 = null;

        EObject lv_satisfices_12_0 = null;

        EObject lv_satisfices_14_0 = null;

        EObject lv_satisfies_16_0 = null;

        EObject lv_satisfies_18_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:10789:2: ( ( () otherlv_1= Test ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?) ) )? ) )
            // InternalQualityBtCppParser.g:10790:2: ( () otherlv_1= Test ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?) ) )? )
            {
            // InternalQualityBtCppParser.g:10790:2: ( () otherlv_1= Test ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?) ) )? )
            // InternalQualityBtCppParser.g:10791:3: () otherlv_1= Test ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            {
            // InternalQualityBtCppParser.g:10791:3: ()
            // InternalQualityBtCppParser.g:10792:4: 
            {

            				current = forceCreateModelElement(
            					grammarAccess.getTestNodeAccess().getTestNodeAction_0(),
            					current);
            			

            }

            otherlv_1=(Token)match(input,Test,FOLLOW_29); 

            			newLeafNode(otherlv_1, grammarAccess.getTestNodeAccess().getTestKeyword_1());
            		
            // InternalQualityBtCppParser.g:10802:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt180=2;
            int LA180_0 = input.LA(1);

            if ( ((LA180_0>=Parameters && LA180_0<=Satisfies)||LA180_0==Name||(LA180_0>=LeftParenthesis && LA180_0<=RightParenthesis)) ) {
                alt180=1;
            }
            switch (alt180) {
                case 1 :
                    // InternalQualityBtCppParser.g:10803:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:10803:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:10804:5: ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getTestNodeAccess().getUnorderedGroup_2());
                    				
                    // InternalQualityBtCppParser.g:10807:5: ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:10808:6: ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:10808:6: ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+
                    int cnt179=0;
                    loop179:
                    do {
                        int alt179=7;
                        int LA179_0 = input.LA(1);

                        if ( LA179_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getTestNodeAccess().getUnorderedGroup_2(), 0) ) {
                            alt179=1;
                        }
                        else if ( LA179_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getTestNodeAccess().getUnorderedGroup_2(), 1) ) {
                            alt179=2;
                        }
                        else if ( LA179_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getTestNodeAccess().getUnorderedGroup_2(), 2) ) {
                            alt179=3;
                        }
                        else if ( LA179_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getTestNodeAccess().getUnorderedGroup_2(), 3) ) {
                            alt179=4;
                        }
                        else if ( LA179_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getTestNodeAccess().getUnorderedGroup_2(), 4) ) {
                            alt179=5;
                        }
                        else if ( LA179_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getTestNodeAccess().getUnorderedGroup_2(), 5) ) {
                            alt179=6;
                        }


                        switch (alt179) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:10809:4: ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:10809:4: ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:10810:5: {...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getTestNodeAccess().getUnorderedGroup_2(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleTestNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getTestNodeAccess().getUnorderedGroup_2(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:10810:105: ( ({...}? => (otherlv_3= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:10811:6: ({...}? => (otherlv_3= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getTestNodeAccess().getUnorderedGroup_2(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:10814:9: ({...}? => (otherlv_3= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:10814:10: {...}? => (otherlv_3= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleTestNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:10814:19: (otherlv_3= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:10814:20: otherlv_3= LeftParenthesis
                    	    {
                    	    otherlv_3=(Token)match(input,LeftParenthesis,FOLLOW_29); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getTestNodeAccess().getLeftParenthesisKeyword_2_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTestNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:10824:4: ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:10824:4: ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:10825:5: {...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getTestNodeAccess().getUnorderedGroup_2(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleTestNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getTestNodeAccess().getUnorderedGroup_2(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:10825:105: ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:10826:6: ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getTestNodeAccess().getUnorderedGroup_2(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:10829:9: ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:10829:10: {...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleTestNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:10829:19: (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:10829:20: otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) )
                    	    {
                    	    otherlv_4=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getTestNodeAccess().getNameKeyword_2_1_0());
                    	    								
                    	    otherlv_5=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_5, grammarAccess.getTestNodeAccess().getEqualsSignKeyword_2_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:10837:9: ( (lv_name_6_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:10838:10: (lv_name_6_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:10838:10: (lv_name_6_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:10839:11: lv_name_6_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getTestNodeAccess().getNameEStringParserRuleCall_2_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_29);
                    	    lv_name_6_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getTestNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_6_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTestNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:10862:4: ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:10862:4: ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:10863:5: {...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getTestNodeAccess().getUnorderedGroup_2(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleTestNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getTestNodeAccess().getUnorderedGroup_2(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:10863:105: ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:10864:6: ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getTestNodeAccess().getUnorderedGroup_2(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:10867:9: ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:10867:10: {...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleTestNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:10867:19: (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:10867:20: otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_7=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_7, grammarAccess.getTestNodeAccess().getParametersKeyword_2_2_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:10871:9: ( (lv_parameters_8_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:10872:10: (lv_parameters_8_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:10872:10: (lv_parameters_8_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:10873:11: lv_parameters_8_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getTestNodeAccess().getParametersParameterParserRuleCall_2_2_1_0());
                    	    										
                    	    pushFollow(FOLLOW_30);
                    	    lv_parameters_8_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getTestNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_8_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:10890:9: (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )*
                    	    loop176:
                    	    do {
                    	        int alt176=2;
                    	        int LA176_0 = input.LA(1);

                    	        if ( (LA176_0==Comma) ) {
                    	            alt176=1;
                    	        }


                    	        switch (alt176) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:10891:10: otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_9=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_9, grammarAccess.getTestNodeAccess().getCommaKeyword_2_2_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:10895:10: ( (lv_parameters_10_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:10896:11: (lv_parameters_10_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:10896:11: (lv_parameters_10_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:10897:12: lv_parameters_10_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getTestNodeAccess().getParametersParameterParserRuleCall_2_2_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_30);
                    	    	    lv_parameters_10_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getTestNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_10_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop176;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTestNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:10921:4: ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:10921:4: ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:10922:5: {...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getTestNodeAccess().getUnorderedGroup_2(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleTestNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getTestNodeAccess().getUnorderedGroup_2(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:10922:105: ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:10923:6: ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getTestNodeAccess().getUnorderedGroup_2(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:10926:9: ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:10926:10: {...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleTestNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:10926:19: (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:10926:20: otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_11=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_11, grammarAccess.getTestNodeAccess().getSatisficesKeyword_2_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:10930:9: ( (lv_satisfices_12_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:10931:10: (lv_satisfices_12_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:10931:10: (lv_satisfices_12_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:10932:11: lv_satisfices_12_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getTestNodeAccess().getSatisficesQualityParserRuleCall_2_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_30);
                    	    lv_satisfices_12_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getTestNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_12_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:10949:9: (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )*
                    	    loop177:
                    	    do {
                    	        int alt177=2;
                    	        int LA177_0 = input.LA(1);

                    	        if ( (LA177_0==Comma) ) {
                    	            alt177=1;
                    	        }


                    	        switch (alt177) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:10950:10: otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_13=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_13, grammarAccess.getTestNodeAccess().getCommaKeyword_2_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:10954:10: ( (lv_satisfices_14_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:10955:11: (lv_satisfices_14_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:10955:11: (lv_satisfices_14_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:10956:12: lv_satisfices_14_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getTestNodeAccess().getSatisficesQualityParserRuleCall_2_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_30);
                    	    	    lv_satisfices_14_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getTestNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_14_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop177;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTestNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:10980:4: ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:10980:4: ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:10981:5: {...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getTestNodeAccess().getUnorderedGroup_2(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleTestNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getTestNodeAccess().getUnorderedGroup_2(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:10981:105: ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:10982:6: ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getTestNodeAccess().getUnorderedGroup_2(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:10985:9: ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:10985:10: {...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleTestNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:10985:19: (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:10985:20: otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_15=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_15, grammarAccess.getTestNodeAccess().getSatisfiesKeyword_2_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:10989:9: ( (lv_satisfies_16_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:10990:10: (lv_satisfies_16_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:10990:10: (lv_satisfies_16_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:10991:11: lv_satisfies_16_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getTestNodeAccess().getSatisfiesQualityRequirementParserRuleCall_2_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_30);
                    	    lv_satisfies_16_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getTestNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_16_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:11008:9: (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )*
                    	    loop178:
                    	    do {
                    	        int alt178=2;
                    	        int LA178_0 = input.LA(1);

                    	        if ( (LA178_0==Comma) ) {
                    	            alt178=1;
                    	        }


                    	        switch (alt178) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:11009:10: otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_17=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_17, grammarAccess.getTestNodeAccess().getCommaKeyword_2_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:11013:10: ( (lv_satisfies_18_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:11014:11: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:11014:11: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:11015:12: lv_satisfies_18_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getTestNodeAccess().getSatisfiesQualityRequirementParserRuleCall_2_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_30);
                    	    	    lv_satisfies_18_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getTestNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_18_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop178;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTestNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:11039:4: ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:11039:4: ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:11040:5: {...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getTestNodeAccess().getUnorderedGroup_2(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleTestNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getTestNodeAccess().getUnorderedGroup_2(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:11040:105: ( ({...}? => (otherlv_19= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:11041:6: ({...}? => (otherlv_19= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getTestNodeAccess().getUnorderedGroup_2(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:11044:9: ({...}? => (otherlv_19= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:11044:10: {...}? => (otherlv_19= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleTestNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:11044:19: (otherlv_19= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:11044:20: otherlv_19= RightParenthesis
                    	    {
                    	    otherlv_19=(Token)match(input,RightParenthesis,FOLLOW_29); 

                    	    									newLeafNode(otherlv_19, grammarAccess.getTestNodeAccess().getRightParenthesisKeyword_2_5());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTestNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt179 >= 1 ) break loop179;
                                EarlyExitException eee =
                                    new EarlyExitException(179, input);
                                throw eee;
                        }
                        cnt179++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getTestNodeAccess().getUnorderedGroup_2()) ) {
                        throw new FailedPredicateException(input, "ruleTestNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getTestNodeAccess().getUnorderedGroup_2())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getTestNodeAccess().getUnorderedGroup_2());
                    				

                    }
                    break;

            }


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTestNode"


    // $ANTLR start "entryRuleEntryUpdatedActionNode"
    // InternalQualityBtCppParser.g:11066:1: entryRuleEntryUpdatedActionNode returns [EObject current=null] : iv_ruleEntryUpdatedActionNode= ruleEntryUpdatedActionNode EOF ;
    public final EObject entryRuleEntryUpdatedActionNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEntryUpdatedActionNode = null;


        try {
            // InternalQualityBtCppParser.g:11066:63: (iv_ruleEntryUpdatedActionNode= ruleEntryUpdatedActionNode EOF )
            // InternalQualityBtCppParser.g:11067:2: iv_ruleEntryUpdatedActionNode= ruleEntryUpdatedActionNode EOF
            {
             newCompositeNode(grammarAccess.getEntryUpdatedActionNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleEntryUpdatedActionNode=ruleEntryUpdatedActionNode();

            state._fsp--;

             current =iv_ruleEntryUpdatedActionNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEntryUpdatedActionNode"


    // $ANTLR start "ruleEntryUpdatedActionNode"
    // InternalQualityBtCppParser.g:11073:1: ruleEntryUpdatedActionNode returns [EObject current=null] : ( () otherlv_1= EntryUpdatedAction ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?) ) )? ) ;
    public final EObject ruleEntryUpdatedActionNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        AntlrDatatypeRuleToken lv_name_6_0 = null;

        EObject lv_parameters_8_0 = null;

        EObject lv_parameters_10_0 = null;

        EObject lv_satisfices_12_0 = null;

        EObject lv_satisfices_14_0 = null;

        EObject lv_satisfies_16_0 = null;

        EObject lv_satisfies_18_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:11079:2: ( ( () otherlv_1= EntryUpdatedAction ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?) ) )? ) )
            // InternalQualityBtCppParser.g:11080:2: ( () otherlv_1= EntryUpdatedAction ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?) ) )? )
            {
            // InternalQualityBtCppParser.g:11080:2: ( () otherlv_1= EntryUpdatedAction ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?) ) )? )
            // InternalQualityBtCppParser.g:11081:3: () otherlv_1= EntryUpdatedAction ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            {
            // InternalQualityBtCppParser.g:11081:3: ()
            // InternalQualityBtCppParser.g:11082:4: 
            {

            				current = forceCreateModelElement(
            					grammarAccess.getEntryUpdatedActionNodeAccess().getEntryUpdatedActionNodeAction_0(),
            					current);
            			

            }

            otherlv_1=(Token)match(input,EntryUpdatedAction,FOLLOW_29); 

            			newLeafNode(otherlv_1, grammarAccess.getEntryUpdatedActionNodeAccess().getEntryUpdatedActionKeyword_1());
            		
            // InternalQualityBtCppParser.g:11092:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt185=2;
            int LA185_0 = input.LA(1);

            if ( ((LA185_0>=Parameters && LA185_0<=Satisfies)||LA185_0==Name||(LA185_0>=LeftParenthesis && LA185_0<=RightParenthesis)) ) {
                alt185=1;
            }
            switch (alt185) {
                case 1 :
                    // InternalQualityBtCppParser.g:11093:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:11093:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:11094:5: ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2());
                    				
                    // InternalQualityBtCppParser.g:11097:5: ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:11098:6: ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:11098:6: ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+
                    int cnt184=0;
                    loop184:
                    do {
                        int alt184=7;
                        int LA184_0 = input.LA(1);

                        if ( LA184_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2(), 0) ) {
                            alt184=1;
                        }
                        else if ( LA184_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2(), 1) ) {
                            alt184=2;
                        }
                        else if ( LA184_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2(), 2) ) {
                            alt184=3;
                        }
                        else if ( LA184_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2(), 3) ) {
                            alt184=4;
                        }
                        else if ( LA184_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2(), 4) ) {
                            alt184=5;
                        }
                        else if ( LA184_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2(), 5) ) {
                            alt184=6;
                        }


                        switch (alt184) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:11099:4: ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:11099:4: ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:11100:5: {...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleEntryUpdatedActionNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:11100:119: ( ({...}? => (otherlv_3= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:11101:6: ({...}? => (otherlv_3= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:11104:9: ({...}? => (otherlv_3= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:11104:10: {...}? => (otherlv_3= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleEntryUpdatedActionNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:11104:19: (otherlv_3= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:11104:20: otherlv_3= LeftParenthesis
                    	    {
                    	    otherlv_3=(Token)match(input,LeftParenthesis,FOLLOW_29); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getEntryUpdatedActionNodeAccess().getLeftParenthesisKeyword_2_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:11114:4: ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:11114:4: ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:11115:5: {...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleEntryUpdatedActionNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:11115:119: ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:11116:6: ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:11119:9: ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:11119:10: {...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleEntryUpdatedActionNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:11119:19: (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:11119:20: otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) )
                    	    {
                    	    otherlv_4=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getEntryUpdatedActionNodeAccess().getNameKeyword_2_1_0());
                    	    								
                    	    otherlv_5=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_5, grammarAccess.getEntryUpdatedActionNodeAccess().getEqualsSignKeyword_2_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:11127:9: ( (lv_name_6_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:11128:10: (lv_name_6_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:11128:10: (lv_name_6_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:11129:11: lv_name_6_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getEntryUpdatedActionNodeAccess().getNameEStringParserRuleCall_2_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_29);
                    	    lv_name_6_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getEntryUpdatedActionNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_6_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:11152:4: ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:11152:4: ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:11153:5: {...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleEntryUpdatedActionNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:11153:119: ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:11154:6: ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:11157:9: ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:11157:10: {...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleEntryUpdatedActionNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:11157:19: (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:11157:20: otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_7=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_7, grammarAccess.getEntryUpdatedActionNodeAccess().getParametersKeyword_2_2_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:11161:9: ( (lv_parameters_8_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:11162:10: (lv_parameters_8_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:11162:10: (lv_parameters_8_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:11163:11: lv_parameters_8_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getEntryUpdatedActionNodeAccess().getParametersParameterParserRuleCall_2_2_1_0());
                    	    										
                    	    pushFollow(FOLLOW_30);
                    	    lv_parameters_8_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getEntryUpdatedActionNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_8_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:11180:9: (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )*
                    	    loop181:
                    	    do {
                    	        int alt181=2;
                    	        int LA181_0 = input.LA(1);

                    	        if ( (LA181_0==Comma) ) {
                    	            alt181=1;
                    	        }


                    	        switch (alt181) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:11181:10: otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_9=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_9, grammarAccess.getEntryUpdatedActionNodeAccess().getCommaKeyword_2_2_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:11185:10: ( (lv_parameters_10_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:11186:11: (lv_parameters_10_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:11186:11: (lv_parameters_10_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:11187:12: lv_parameters_10_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getEntryUpdatedActionNodeAccess().getParametersParameterParserRuleCall_2_2_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_30);
                    	    	    lv_parameters_10_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getEntryUpdatedActionNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_10_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop181;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:11211:4: ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:11211:4: ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:11212:5: {...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleEntryUpdatedActionNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:11212:119: ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:11213:6: ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:11216:9: ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:11216:10: {...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleEntryUpdatedActionNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:11216:19: (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:11216:20: otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_11=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_11, grammarAccess.getEntryUpdatedActionNodeAccess().getSatisficesKeyword_2_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:11220:9: ( (lv_satisfices_12_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:11221:10: (lv_satisfices_12_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:11221:10: (lv_satisfices_12_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:11222:11: lv_satisfices_12_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getEntryUpdatedActionNodeAccess().getSatisficesQualityParserRuleCall_2_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_30);
                    	    lv_satisfices_12_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getEntryUpdatedActionNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_12_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:11239:9: (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )*
                    	    loop182:
                    	    do {
                    	        int alt182=2;
                    	        int LA182_0 = input.LA(1);

                    	        if ( (LA182_0==Comma) ) {
                    	            alt182=1;
                    	        }


                    	        switch (alt182) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:11240:10: otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_13=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_13, grammarAccess.getEntryUpdatedActionNodeAccess().getCommaKeyword_2_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:11244:10: ( (lv_satisfices_14_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:11245:11: (lv_satisfices_14_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:11245:11: (lv_satisfices_14_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:11246:12: lv_satisfices_14_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getEntryUpdatedActionNodeAccess().getSatisficesQualityParserRuleCall_2_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_30);
                    	    	    lv_satisfices_14_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getEntryUpdatedActionNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_14_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop182;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:11270:4: ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:11270:4: ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:11271:5: {...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleEntryUpdatedActionNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:11271:119: ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:11272:6: ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:11275:9: ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:11275:10: {...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleEntryUpdatedActionNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:11275:19: (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:11275:20: otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_15=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_15, grammarAccess.getEntryUpdatedActionNodeAccess().getSatisfiesKeyword_2_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:11279:9: ( (lv_satisfies_16_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:11280:10: (lv_satisfies_16_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:11280:10: (lv_satisfies_16_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:11281:11: lv_satisfies_16_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getEntryUpdatedActionNodeAccess().getSatisfiesQualityRequirementParserRuleCall_2_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_30);
                    	    lv_satisfies_16_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getEntryUpdatedActionNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_16_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:11298:9: (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )*
                    	    loop183:
                    	    do {
                    	        int alt183=2;
                    	        int LA183_0 = input.LA(1);

                    	        if ( (LA183_0==Comma) ) {
                    	            alt183=1;
                    	        }


                    	        switch (alt183) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:11299:10: otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_17=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_17, grammarAccess.getEntryUpdatedActionNodeAccess().getCommaKeyword_2_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:11303:10: ( (lv_satisfies_18_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:11304:11: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:11304:11: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:11305:12: lv_satisfies_18_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getEntryUpdatedActionNodeAccess().getSatisfiesQualityRequirementParserRuleCall_2_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_30);
                    	    	    lv_satisfies_18_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getEntryUpdatedActionNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_18_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop183;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:11329:4: ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:11329:4: ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:11330:5: {...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleEntryUpdatedActionNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:11330:119: ( ({...}? => (otherlv_19= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:11331:6: ({...}? => (otherlv_19= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:11334:9: ({...}? => (otherlv_19= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:11334:10: {...}? => (otherlv_19= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleEntryUpdatedActionNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:11334:19: (otherlv_19= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:11334:20: otherlv_19= RightParenthesis
                    	    {
                    	    otherlv_19=(Token)match(input,RightParenthesis,FOLLOW_29); 

                    	    									newLeafNode(otherlv_19, grammarAccess.getEntryUpdatedActionNodeAccess().getRightParenthesisKeyword_2_5());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt184 >= 1 ) break loop184;
                                EarlyExitException eee =
                                    new EarlyExitException(184, input);
                                throw eee;
                        }
                        cnt184++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2()) ) {
                        throw new FailedPredicateException(input, "ruleEntryUpdatedActionNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getEntryUpdatedActionNodeAccess().getUnorderedGroup_2());
                    				

                    }
                    break;

            }


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEntryUpdatedActionNode"


    // $ANTLR start "entryRuleUnsetBlackboardNode"
    // InternalQualityBtCppParser.g:11356:1: entryRuleUnsetBlackboardNode returns [EObject current=null] : iv_ruleUnsetBlackboardNode= ruleUnsetBlackboardNode EOF ;
    public final EObject entryRuleUnsetBlackboardNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUnsetBlackboardNode = null;


        try {
            // InternalQualityBtCppParser.g:11356:60: (iv_ruleUnsetBlackboardNode= ruleUnsetBlackboardNode EOF )
            // InternalQualityBtCppParser.g:11357:2: iv_ruleUnsetBlackboardNode= ruleUnsetBlackboardNode EOF
            {
             newCompositeNode(grammarAccess.getUnsetBlackboardNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleUnsetBlackboardNode=ruleUnsetBlackboardNode();

            state._fsp--;

             current =iv_ruleUnsetBlackboardNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUnsetBlackboardNode"


    // $ANTLR start "ruleUnsetBlackboardNode"
    // InternalQualityBtCppParser.g:11363:1: ruleUnsetBlackboardNode returns [EObject current=null] : ( () otherlv_1= UnsetBlackboard ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?) ) )? ) ;
    public final EObject ruleUnsetBlackboardNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        AntlrDatatypeRuleToken lv_name_6_0 = null;

        EObject lv_parameters_8_0 = null;

        EObject lv_parameters_10_0 = null;

        EObject lv_satisfices_12_0 = null;

        EObject lv_satisfices_14_0 = null;

        EObject lv_satisfies_16_0 = null;

        EObject lv_satisfies_18_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:11369:2: ( ( () otherlv_1= UnsetBlackboard ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?) ) )? ) )
            // InternalQualityBtCppParser.g:11370:2: ( () otherlv_1= UnsetBlackboard ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?) ) )? )
            {
            // InternalQualityBtCppParser.g:11370:2: ( () otherlv_1= UnsetBlackboard ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?) ) )? )
            // InternalQualityBtCppParser.g:11371:3: () otherlv_1= UnsetBlackboard ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            {
            // InternalQualityBtCppParser.g:11371:3: ()
            // InternalQualityBtCppParser.g:11372:4: 
            {

            				current = forceCreateModelElement(
            					grammarAccess.getUnsetBlackboardNodeAccess().getUnsetBlackboardNodeAction_0(),
            					current);
            			

            }

            otherlv_1=(Token)match(input,UnsetBlackboard,FOLLOW_29); 

            			newLeafNode(otherlv_1, grammarAccess.getUnsetBlackboardNodeAccess().getUnsetBlackboardKeyword_1());
            		
            // InternalQualityBtCppParser.g:11382:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt190=2;
            int LA190_0 = input.LA(1);

            if ( ((LA190_0>=Parameters && LA190_0<=Satisfies)||LA190_0==Name||(LA190_0>=LeftParenthesis && LA190_0<=RightParenthesis)) ) {
                alt190=1;
            }
            switch (alt190) {
                case 1 :
                    // InternalQualityBtCppParser.g:11383:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:11383:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:11384:5: ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2());
                    				
                    // InternalQualityBtCppParser.g:11387:5: ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:11388:6: ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:11388:6: ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+
                    int cnt189=0;
                    loop189:
                    do {
                        int alt189=7;
                        int LA189_0 = input.LA(1);

                        if ( LA189_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2(), 0) ) {
                            alt189=1;
                        }
                        else if ( LA189_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2(), 1) ) {
                            alt189=2;
                        }
                        else if ( LA189_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2(), 2) ) {
                            alt189=3;
                        }
                        else if ( LA189_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2(), 3) ) {
                            alt189=4;
                        }
                        else if ( LA189_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2(), 4) ) {
                            alt189=5;
                        }
                        else if ( LA189_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2(), 5) ) {
                            alt189=6;
                        }


                        switch (alt189) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:11389:4: ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:11389:4: ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:11390:5: {...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleUnsetBlackboardNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:11390:116: ( ({...}? => (otherlv_3= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:11391:6: ({...}? => (otherlv_3= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:11394:9: ({...}? => (otherlv_3= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:11394:10: {...}? => (otherlv_3= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleUnsetBlackboardNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:11394:19: (otherlv_3= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:11394:20: otherlv_3= LeftParenthesis
                    	    {
                    	    otherlv_3=(Token)match(input,LeftParenthesis,FOLLOW_29); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getUnsetBlackboardNodeAccess().getLeftParenthesisKeyword_2_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:11404:4: ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:11404:4: ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:11405:5: {...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleUnsetBlackboardNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:11405:116: ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:11406:6: ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:11409:9: ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:11409:10: {...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleUnsetBlackboardNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:11409:19: (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:11409:20: otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) )
                    	    {
                    	    otherlv_4=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getUnsetBlackboardNodeAccess().getNameKeyword_2_1_0());
                    	    								
                    	    otherlv_5=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_5, grammarAccess.getUnsetBlackboardNodeAccess().getEqualsSignKeyword_2_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:11417:9: ( (lv_name_6_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:11418:10: (lv_name_6_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:11418:10: (lv_name_6_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:11419:11: lv_name_6_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getUnsetBlackboardNodeAccess().getNameEStringParserRuleCall_2_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_29);
                    	    lv_name_6_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getUnsetBlackboardNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_6_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:11442:4: ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:11442:4: ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:11443:5: {...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleUnsetBlackboardNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:11443:116: ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:11444:6: ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:11447:9: ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:11447:10: {...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleUnsetBlackboardNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:11447:19: (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:11447:20: otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_7=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_7, grammarAccess.getUnsetBlackboardNodeAccess().getParametersKeyword_2_2_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:11451:9: ( (lv_parameters_8_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:11452:10: (lv_parameters_8_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:11452:10: (lv_parameters_8_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:11453:11: lv_parameters_8_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getUnsetBlackboardNodeAccess().getParametersParameterParserRuleCall_2_2_1_0());
                    	    										
                    	    pushFollow(FOLLOW_30);
                    	    lv_parameters_8_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getUnsetBlackboardNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_8_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:11470:9: (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )*
                    	    loop186:
                    	    do {
                    	        int alt186=2;
                    	        int LA186_0 = input.LA(1);

                    	        if ( (LA186_0==Comma) ) {
                    	            alt186=1;
                    	        }


                    	        switch (alt186) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:11471:10: otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_9=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_9, grammarAccess.getUnsetBlackboardNodeAccess().getCommaKeyword_2_2_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:11475:10: ( (lv_parameters_10_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:11476:11: (lv_parameters_10_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:11476:11: (lv_parameters_10_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:11477:12: lv_parameters_10_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getUnsetBlackboardNodeAccess().getParametersParameterParserRuleCall_2_2_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_30);
                    	    	    lv_parameters_10_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getUnsetBlackboardNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_10_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop186;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:11501:4: ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:11501:4: ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:11502:5: {...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleUnsetBlackboardNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:11502:116: ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:11503:6: ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:11506:9: ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:11506:10: {...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleUnsetBlackboardNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:11506:19: (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:11506:20: otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_11=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_11, grammarAccess.getUnsetBlackboardNodeAccess().getSatisficesKeyword_2_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:11510:9: ( (lv_satisfices_12_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:11511:10: (lv_satisfices_12_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:11511:10: (lv_satisfices_12_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:11512:11: lv_satisfices_12_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getUnsetBlackboardNodeAccess().getSatisficesQualityParserRuleCall_2_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_30);
                    	    lv_satisfices_12_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getUnsetBlackboardNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_12_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:11529:9: (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )*
                    	    loop187:
                    	    do {
                    	        int alt187=2;
                    	        int LA187_0 = input.LA(1);

                    	        if ( (LA187_0==Comma) ) {
                    	            alt187=1;
                    	        }


                    	        switch (alt187) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:11530:10: otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_13=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_13, grammarAccess.getUnsetBlackboardNodeAccess().getCommaKeyword_2_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:11534:10: ( (lv_satisfices_14_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:11535:11: (lv_satisfices_14_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:11535:11: (lv_satisfices_14_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:11536:12: lv_satisfices_14_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getUnsetBlackboardNodeAccess().getSatisficesQualityParserRuleCall_2_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_30);
                    	    	    lv_satisfices_14_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getUnsetBlackboardNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_14_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop187;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:11560:4: ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:11560:4: ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:11561:5: {...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleUnsetBlackboardNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:11561:116: ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:11562:6: ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:11565:9: ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:11565:10: {...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleUnsetBlackboardNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:11565:19: (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:11565:20: otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_15=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_15, grammarAccess.getUnsetBlackboardNodeAccess().getSatisfiesKeyword_2_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:11569:9: ( (lv_satisfies_16_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:11570:10: (lv_satisfies_16_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:11570:10: (lv_satisfies_16_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:11571:11: lv_satisfies_16_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getUnsetBlackboardNodeAccess().getSatisfiesQualityRequirementParserRuleCall_2_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_30);
                    	    lv_satisfies_16_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getUnsetBlackboardNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_16_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:11588:9: (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )*
                    	    loop188:
                    	    do {
                    	        int alt188=2;
                    	        int LA188_0 = input.LA(1);

                    	        if ( (LA188_0==Comma) ) {
                    	            alt188=1;
                    	        }


                    	        switch (alt188) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:11589:10: otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_17=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_17, grammarAccess.getUnsetBlackboardNodeAccess().getCommaKeyword_2_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:11593:10: ( (lv_satisfies_18_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:11594:11: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:11594:11: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:11595:12: lv_satisfies_18_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getUnsetBlackboardNodeAccess().getSatisfiesQualityRequirementParserRuleCall_2_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_30);
                    	    	    lv_satisfies_18_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getUnsetBlackboardNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_18_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop188;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:11619:4: ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:11619:4: ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:11620:5: {...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleUnsetBlackboardNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:11620:116: ( ({...}? => (otherlv_19= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:11621:6: ({...}? => (otherlv_19= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:11624:9: ({...}? => (otherlv_19= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:11624:10: {...}? => (otherlv_19= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleUnsetBlackboardNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:11624:19: (otherlv_19= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:11624:20: otherlv_19= RightParenthesis
                    	    {
                    	    otherlv_19=(Token)match(input,RightParenthesis,FOLLOW_29); 

                    	    									newLeafNode(otherlv_19, grammarAccess.getUnsetBlackboardNodeAccess().getRightParenthesisKeyword_2_5());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt189 >= 1 ) break loop189;
                                EarlyExitException eee =
                                    new EarlyExitException(189, input);
                                throw eee;
                        }
                        cnt189++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2()) ) {
                        throw new FailedPredicateException(input, "ruleUnsetBlackboardNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getUnsetBlackboardNodeAccess().getUnorderedGroup_2());
                    				

                    }
                    break;

            }


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUnsetBlackboardNode"


    // $ANTLR start "entryRuleThreadedActionNode"
    // InternalQualityBtCppParser.g:11646:1: entryRuleThreadedActionNode returns [EObject current=null] : iv_ruleThreadedActionNode= ruleThreadedActionNode EOF ;
    public final EObject entryRuleThreadedActionNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleThreadedActionNode = null;


        try {
            // InternalQualityBtCppParser.g:11646:59: (iv_ruleThreadedActionNode= ruleThreadedActionNode EOF )
            // InternalQualityBtCppParser.g:11647:2: iv_ruleThreadedActionNode= ruleThreadedActionNode EOF
            {
             newCompositeNode(grammarAccess.getThreadedActionNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleThreadedActionNode=ruleThreadedActionNode();

            state._fsp--;

             current =iv_ruleThreadedActionNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleThreadedActionNode"


    // $ANTLR start "ruleThreadedActionNode"
    // InternalQualityBtCppParser.g:11653:1: ruleThreadedActionNode returns [EObject current=null] : ( () otherlv_1= ThreadedAction ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?) ) )? ) ;
    public final EObject ruleThreadedActionNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        AntlrDatatypeRuleToken lv_name_6_0 = null;

        EObject lv_parameters_8_0 = null;

        EObject lv_parameters_10_0 = null;

        EObject lv_satisfices_12_0 = null;

        EObject lv_satisfices_14_0 = null;

        EObject lv_satisfies_16_0 = null;

        EObject lv_satisfies_18_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:11659:2: ( ( () otherlv_1= ThreadedAction ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?) ) )? ) )
            // InternalQualityBtCppParser.g:11660:2: ( () otherlv_1= ThreadedAction ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?) ) )? )
            {
            // InternalQualityBtCppParser.g:11660:2: ( () otherlv_1= ThreadedAction ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?) ) )? )
            // InternalQualityBtCppParser.g:11661:3: () otherlv_1= ThreadedAction ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            {
            // InternalQualityBtCppParser.g:11661:3: ()
            // InternalQualityBtCppParser.g:11662:4: 
            {

            				current = forceCreateModelElement(
            					grammarAccess.getThreadedActionNodeAccess().getThreadedActionNodeAction_0(),
            					current);
            			

            }

            otherlv_1=(Token)match(input,ThreadedAction,FOLLOW_29); 

            			newLeafNode(otherlv_1, grammarAccess.getThreadedActionNodeAccess().getThreadedActionKeyword_1());
            		
            // InternalQualityBtCppParser.g:11672:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt195=2;
            int LA195_0 = input.LA(1);

            if ( ((LA195_0>=Parameters && LA195_0<=Satisfies)||LA195_0==Name||(LA195_0>=LeftParenthesis && LA195_0<=RightParenthesis)) ) {
                alt195=1;
            }
            switch (alt195) {
                case 1 :
                    // InternalQualityBtCppParser.g:11673:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:11673:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:11674:5: ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2());
                    				
                    // InternalQualityBtCppParser.g:11677:5: ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:11678:6: ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:11678:6: ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+
                    int cnt194=0;
                    loop194:
                    do {
                        int alt194=7;
                        int LA194_0 = input.LA(1);

                        if ( LA194_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2(), 0) ) {
                            alt194=1;
                        }
                        else if ( LA194_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2(), 1) ) {
                            alt194=2;
                        }
                        else if ( LA194_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2(), 2) ) {
                            alt194=3;
                        }
                        else if ( LA194_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2(), 3) ) {
                            alt194=4;
                        }
                        else if ( LA194_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2(), 4) ) {
                            alt194=5;
                        }
                        else if ( LA194_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2(), 5) ) {
                            alt194=6;
                        }


                        switch (alt194) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:11679:4: ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:11679:4: ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:11680:5: {...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleThreadedActionNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:11680:115: ( ({...}? => (otherlv_3= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:11681:6: ({...}? => (otherlv_3= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:11684:9: ({...}? => (otherlv_3= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:11684:10: {...}? => (otherlv_3= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleThreadedActionNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:11684:19: (otherlv_3= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:11684:20: otherlv_3= LeftParenthesis
                    	    {
                    	    otherlv_3=(Token)match(input,LeftParenthesis,FOLLOW_29); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getThreadedActionNodeAccess().getLeftParenthesisKeyword_2_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:11694:4: ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:11694:4: ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:11695:5: {...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleThreadedActionNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:11695:115: ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:11696:6: ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:11699:9: ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:11699:10: {...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleThreadedActionNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:11699:19: (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:11699:20: otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) )
                    	    {
                    	    otherlv_4=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getThreadedActionNodeAccess().getNameKeyword_2_1_0());
                    	    								
                    	    otherlv_5=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_5, grammarAccess.getThreadedActionNodeAccess().getEqualsSignKeyword_2_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:11707:9: ( (lv_name_6_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:11708:10: (lv_name_6_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:11708:10: (lv_name_6_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:11709:11: lv_name_6_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getThreadedActionNodeAccess().getNameEStringParserRuleCall_2_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_29);
                    	    lv_name_6_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getThreadedActionNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_6_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:11732:4: ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:11732:4: ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:11733:5: {...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleThreadedActionNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:11733:115: ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:11734:6: ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:11737:9: ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:11737:10: {...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleThreadedActionNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:11737:19: (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:11737:20: otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_7=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_7, grammarAccess.getThreadedActionNodeAccess().getParametersKeyword_2_2_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:11741:9: ( (lv_parameters_8_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:11742:10: (lv_parameters_8_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:11742:10: (lv_parameters_8_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:11743:11: lv_parameters_8_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getThreadedActionNodeAccess().getParametersParameterParserRuleCall_2_2_1_0());
                    	    										
                    	    pushFollow(FOLLOW_30);
                    	    lv_parameters_8_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getThreadedActionNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_8_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:11760:9: (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )*
                    	    loop191:
                    	    do {
                    	        int alt191=2;
                    	        int LA191_0 = input.LA(1);

                    	        if ( (LA191_0==Comma) ) {
                    	            alt191=1;
                    	        }


                    	        switch (alt191) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:11761:10: otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_9=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_9, grammarAccess.getThreadedActionNodeAccess().getCommaKeyword_2_2_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:11765:10: ( (lv_parameters_10_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:11766:11: (lv_parameters_10_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:11766:11: (lv_parameters_10_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:11767:12: lv_parameters_10_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getThreadedActionNodeAccess().getParametersParameterParserRuleCall_2_2_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_30);
                    	    	    lv_parameters_10_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getThreadedActionNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_10_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop191;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:11791:4: ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:11791:4: ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:11792:5: {...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleThreadedActionNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:11792:115: ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:11793:6: ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:11796:9: ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:11796:10: {...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleThreadedActionNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:11796:19: (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:11796:20: otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_11=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_11, grammarAccess.getThreadedActionNodeAccess().getSatisficesKeyword_2_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:11800:9: ( (lv_satisfices_12_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:11801:10: (lv_satisfices_12_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:11801:10: (lv_satisfices_12_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:11802:11: lv_satisfices_12_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getThreadedActionNodeAccess().getSatisficesQualityParserRuleCall_2_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_30);
                    	    lv_satisfices_12_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getThreadedActionNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_12_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:11819:9: (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )*
                    	    loop192:
                    	    do {
                    	        int alt192=2;
                    	        int LA192_0 = input.LA(1);

                    	        if ( (LA192_0==Comma) ) {
                    	            alt192=1;
                    	        }


                    	        switch (alt192) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:11820:10: otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_13=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_13, grammarAccess.getThreadedActionNodeAccess().getCommaKeyword_2_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:11824:10: ( (lv_satisfices_14_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:11825:11: (lv_satisfices_14_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:11825:11: (lv_satisfices_14_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:11826:12: lv_satisfices_14_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getThreadedActionNodeAccess().getSatisficesQualityParserRuleCall_2_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_30);
                    	    	    lv_satisfices_14_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getThreadedActionNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_14_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop192;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:11850:4: ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:11850:4: ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:11851:5: {...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleThreadedActionNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:11851:115: ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:11852:6: ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:11855:9: ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:11855:10: {...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleThreadedActionNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:11855:19: (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:11855:20: otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_15=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_15, grammarAccess.getThreadedActionNodeAccess().getSatisfiesKeyword_2_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:11859:9: ( (lv_satisfies_16_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:11860:10: (lv_satisfies_16_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:11860:10: (lv_satisfies_16_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:11861:11: lv_satisfies_16_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getThreadedActionNodeAccess().getSatisfiesQualityRequirementParserRuleCall_2_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_30);
                    	    lv_satisfies_16_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getThreadedActionNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_16_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:11878:9: (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )*
                    	    loop193:
                    	    do {
                    	        int alt193=2;
                    	        int LA193_0 = input.LA(1);

                    	        if ( (LA193_0==Comma) ) {
                    	            alt193=1;
                    	        }


                    	        switch (alt193) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:11879:10: otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_17=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_17, grammarAccess.getThreadedActionNodeAccess().getCommaKeyword_2_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:11883:10: ( (lv_satisfies_18_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:11884:11: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:11884:11: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:11885:12: lv_satisfies_18_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getThreadedActionNodeAccess().getSatisfiesQualityRequirementParserRuleCall_2_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_30);
                    	    	    lv_satisfies_18_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getThreadedActionNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_18_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop193;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:11909:4: ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:11909:4: ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:11910:5: {...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleThreadedActionNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:11910:115: ( ({...}? => (otherlv_19= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:11911:6: ({...}? => (otherlv_19= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:11914:9: ({...}? => (otherlv_19= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:11914:10: {...}? => (otherlv_19= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleThreadedActionNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:11914:19: (otherlv_19= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:11914:20: otherlv_19= RightParenthesis
                    	    {
                    	    otherlv_19=(Token)match(input,RightParenthesis,FOLLOW_29); 

                    	    									newLeafNode(otherlv_19, grammarAccess.getThreadedActionNodeAccess().getRightParenthesisKeyword_2_5());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt194 >= 1 ) break loop194;
                                EarlyExitException eee =
                                    new EarlyExitException(194, input);
                                throw eee;
                        }
                        cnt194++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2()) ) {
                        throw new FailedPredicateException(input, "ruleThreadedActionNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getThreadedActionNodeAccess().getUnorderedGroup_2());
                    				

                    }
                    break;

            }


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleThreadedActionNode"


    // $ANTLR start "entryRuleCoroActionNode"
    // InternalQualityBtCppParser.g:11936:1: entryRuleCoroActionNode returns [EObject current=null] : iv_ruleCoroActionNode= ruleCoroActionNode EOF ;
    public final EObject entryRuleCoroActionNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCoroActionNode = null;


        try {
            // InternalQualityBtCppParser.g:11936:55: (iv_ruleCoroActionNode= ruleCoroActionNode EOF )
            // InternalQualityBtCppParser.g:11937:2: iv_ruleCoroActionNode= ruleCoroActionNode EOF
            {
             newCompositeNode(grammarAccess.getCoroActionNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleCoroActionNode=ruleCoroActionNode();

            state._fsp--;

             current =iv_ruleCoroActionNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCoroActionNode"


    // $ANTLR start "ruleCoroActionNode"
    // InternalQualityBtCppParser.g:11943:1: ruleCoroActionNode returns [EObject current=null] : ( () otherlv_1= CoroAction ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?) ) )? ) ;
    public final EObject ruleCoroActionNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        AntlrDatatypeRuleToken lv_name_6_0 = null;

        EObject lv_parameters_8_0 = null;

        EObject lv_parameters_10_0 = null;

        EObject lv_satisfices_12_0 = null;

        EObject lv_satisfices_14_0 = null;

        EObject lv_satisfies_16_0 = null;

        EObject lv_satisfies_18_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:11949:2: ( ( () otherlv_1= CoroAction ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?) ) )? ) )
            // InternalQualityBtCppParser.g:11950:2: ( () otherlv_1= CoroAction ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?) ) )? )
            {
            // InternalQualityBtCppParser.g:11950:2: ( () otherlv_1= CoroAction ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?) ) )? )
            // InternalQualityBtCppParser.g:11951:3: () otherlv_1= CoroAction ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            {
            // InternalQualityBtCppParser.g:11951:3: ()
            // InternalQualityBtCppParser.g:11952:4: 
            {

            				current = forceCreateModelElement(
            					grammarAccess.getCoroActionNodeAccess().getCoroActionNodeAction_0(),
            					current);
            			

            }

            otherlv_1=(Token)match(input,CoroAction,FOLLOW_29); 

            			newLeafNode(otherlv_1, grammarAccess.getCoroActionNodeAccess().getCoroActionKeyword_1());
            		
            // InternalQualityBtCppParser.g:11962:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt200=2;
            int LA200_0 = input.LA(1);

            if ( ((LA200_0>=Parameters && LA200_0<=Satisfies)||LA200_0==Name||(LA200_0>=LeftParenthesis && LA200_0<=RightParenthesis)) ) {
                alt200=1;
            }
            switch (alt200) {
                case 1 :
                    // InternalQualityBtCppParser.g:11963:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:11963:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:11964:5: ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2());
                    				
                    // InternalQualityBtCppParser.g:11967:5: ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:11968:6: ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:11968:6: ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+
                    int cnt199=0;
                    loop199:
                    do {
                        int alt199=7;
                        int LA199_0 = input.LA(1);

                        if ( LA199_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2(), 0) ) {
                            alt199=1;
                        }
                        else if ( LA199_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2(), 1) ) {
                            alt199=2;
                        }
                        else if ( LA199_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2(), 2) ) {
                            alt199=3;
                        }
                        else if ( LA199_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2(), 3) ) {
                            alt199=4;
                        }
                        else if ( LA199_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2(), 4) ) {
                            alt199=5;
                        }
                        else if ( LA199_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2(), 5) ) {
                            alt199=6;
                        }


                        switch (alt199) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:11969:4: ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:11969:4: ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:11970:5: {...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleCoroActionNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:11970:111: ( ({...}? => (otherlv_3= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:11971:6: ({...}? => (otherlv_3= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:11974:9: ({...}? => (otherlv_3= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:11974:10: {...}? => (otherlv_3= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleCoroActionNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:11974:19: (otherlv_3= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:11974:20: otherlv_3= LeftParenthesis
                    	    {
                    	    otherlv_3=(Token)match(input,LeftParenthesis,FOLLOW_29); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getCoroActionNodeAccess().getLeftParenthesisKeyword_2_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:11984:4: ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:11984:4: ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:11985:5: {...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleCoroActionNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:11985:111: ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:11986:6: ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:11989:9: ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:11989:10: {...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleCoroActionNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:11989:19: (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:11989:20: otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) )
                    	    {
                    	    otherlv_4=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getCoroActionNodeAccess().getNameKeyword_2_1_0());
                    	    								
                    	    otherlv_5=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_5, grammarAccess.getCoroActionNodeAccess().getEqualsSignKeyword_2_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:11997:9: ( (lv_name_6_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:11998:10: (lv_name_6_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:11998:10: (lv_name_6_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:11999:11: lv_name_6_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getCoroActionNodeAccess().getNameEStringParserRuleCall_2_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_29);
                    	    lv_name_6_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getCoroActionNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_6_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:12022:4: ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:12022:4: ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:12023:5: {...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleCoroActionNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:12023:111: ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:12024:6: ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:12027:9: ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:12027:10: {...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleCoroActionNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:12027:19: (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:12027:20: otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_7=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_7, grammarAccess.getCoroActionNodeAccess().getParametersKeyword_2_2_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:12031:9: ( (lv_parameters_8_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:12032:10: (lv_parameters_8_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:12032:10: (lv_parameters_8_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:12033:11: lv_parameters_8_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getCoroActionNodeAccess().getParametersParameterParserRuleCall_2_2_1_0());
                    	    										
                    	    pushFollow(FOLLOW_30);
                    	    lv_parameters_8_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getCoroActionNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_8_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:12050:9: (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )*
                    	    loop196:
                    	    do {
                    	        int alt196=2;
                    	        int LA196_0 = input.LA(1);

                    	        if ( (LA196_0==Comma) ) {
                    	            alt196=1;
                    	        }


                    	        switch (alt196) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:12051:10: otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_9=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_9, grammarAccess.getCoroActionNodeAccess().getCommaKeyword_2_2_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:12055:10: ( (lv_parameters_10_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:12056:11: (lv_parameters_10_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:12056:11: (lv_parameters_10_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:12057:12: lv_parameters_10_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getCoroActionNodeAccess().getParametersParameterParserRuleCall_2_2_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_30);
                    	    	    lv_parameters_10_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getCoroActionNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_10_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop196;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:12081:4: ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:12081:4: ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:12082:5: {...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleCoroActionNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:12082:111: ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:12083:6: ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:12086:9: ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:12086:10: {...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleCoroActionNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:12086:19: (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:12086:20: otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_11=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_11, grammarAccess.getCoroActionNodeAccess().getSatisficesKeyword_2_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:12090:9: ( (lv_satisfices_12_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:12091:10: (lv_satisfices_12_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:12091:10: (lv_satisfices_12_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:12092:11: lv_satisfices_12_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getCoroActionNodeAccess().getSatisficesQualityParserRuleCall_2_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_30);
                    	    lv_satisfices_12_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getCoroActionNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_12_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:12109:9: (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )*
                    	    loop197:
                    	    do {
                    	        int alt197=2;
                    	        int LA197_0 = input.LA(1);

                    	        if ( (LA197_0==Comma) ) {
                    	            alt197=1;
                    	        }


                    	        switch (alt197) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:12110:10: otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_13=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_13, grammarAccess.getCoroActionNodeAccess().getCommaKeyword_2_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:12114:10: ( (lv_satisfices_14_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:12115:11: (lv_satisfices_14_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:12115:11: (lv_satisfices_14_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:12116:12: lv_satisfices_14_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getCoroActionNodeAccess().getSatisficesQualityParserRuleCall_2_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_30);
                    	    	    lv_satisfices_14_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getCoroActionNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_14_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop197;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:12140:4: ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:12140:4: ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:12141:5: {...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleCoroActionNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:12141:111: ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:12142:6: ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:12145:9: ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:12145:10: {...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleCoroActionNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:12145:19: (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:12145:20: otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_15=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_15, grammarAccess.getCoroActionNodeAccess().getSatisfiesKeyword_2_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:12149:9: ( (lv_satisfies_16_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:12150:10: (lv_satisfies_16_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:12150:10: (lv_satisfies_16_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:12151:11: lv_satisfies_16_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getCoroActionNodeAccess().getSatisfiesQualityRequirementParserRuleCall_2_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_30);
                    	    lv_satisfies_16_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getCoroActionNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_16_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:12168:9: (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )*
                    	    loop198:
                    	    do {
                    	        int alt198=2;
                    	        int LA198_0 = input.LA(1);

                    	        if ( (LA198_0==Comma) ) {
                    	            alt198=1;
                    	        }


                    	        switch (alt198) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:12169:10: otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_17=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_17, grammarAccess.getCoroActionNodeAccess().getCommaKeyword_2_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:12173:10: ( (lv_satisfies_18_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:12174:11: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:12174:11: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:12175:12: lv_satisfies_18_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getCoroActionNodeAccess().getSatisfiesQualityRequirementParserRuleCall_2_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_30);
                    	    	    lv_satisfies_18_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getCoroActionNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_18_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop198;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:12199:4: ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:12199:4: ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:12200:5: {...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleCoroActionNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:12200:111: ( ({...}? => (otherlv_19= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:12201:6: ({...}? => (otherlv_19= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:12204:9: ({...}? => (otherlv_19= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:12204:10: {...}? => (otherlv_19= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleCoroActionNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:12204:19: (otherlv_19= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:12204:20: otherlv_19= RightParenthesis
                    	    {
                    	    otherlv_19=(Token)match(input,RightParenthesis,FOLLOW_29); 

                    	    									newLeafNode(otherlv_19, grammarAccess.getCoroActionNodeAccess().getRightParenthesisKeyword_2_5());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt199 >= 1 ) break loop199;
                                EarlyExitException eee =
                                    new EarlyExitException(199, input);
                                throw eee;
                        }
                        cnt199++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2()) ) {
                        throw new FailedPredicateException(input, "ruleCoroActionNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getCoroActionNodeAccess().getUnorderedGroup_2());
                    				

                    }
                    break;

            }


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCoroActionNode"


    // $ANTLR start "entryRuleSleepNode"
    // InternalQualityBtCppParser.g:12226:1: entryRuleSleepNode returns [EObject current=null] : iv_ruleSleepNode= ruleSleepNode EOF ;
    public final EObject entryRuleSleepNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSleepNode = null;


        try {
            // InternalQualityBtCppParser.g:12226:50: (iv_ruleSleepNode= ruleSleepNode EOF )
            // InternalQualityBtCppParser.g:12227:2: iv_ruleSleepNode= ruleSleepNode EOF
            {
             newCompositeNode(grammarAccess.getSleepNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleSleepNode=ruleSleepNode();

            state._fsp--;

             current =iv_ruleSleepNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSleepNode"


    // $ANTLR start "ruleSleepNode"
    // InternalQualityBtCppParser.g:12233:1: ruleSleepNode returns [EObject current=null] : ( () otherlv_1= Sleep ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?) ) )? ) ;
    public final EObject ruleSleepNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        AntlrDatatypeRuleToken lv_name_6_0 = null;

        EObject lv_parameters_8_0 = null;

        EObject lv_parameters_10_0 = null;

        EObject lv_satisfices_12_0 = null;

        EObject lv_satisfices_14_0 = null;

        EObject lv_satisfies_16_0 = null;

        EObject lv_satisfies_18_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:12239:2: ( ( () otherlv_1= Sleep ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?) ) )? ) )
            // InternalQualityBtCppParser.g:12240:2: ( () otherlv_1= Sleep ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?) ) )? )
            {
            // InternalQualityBtCppParser.g:12240:2: ( () otherlv_1= Sleep ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?) ) )? )
            // InternalQualityBtCppParser.g:12241:3: () otherlv_1= Sleep ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            {
            // InternalQualityBtCppParser.g:12241:3: ()
            // InternalQualityBtCppParser.g:12242:4: 
            {

            				current = forceCreateModelElement(
            					grammarAccess.getSleepNodeAccess().getSleepNodeAction_0(),
            					current);
            			

            }

            otherlv_1=(Token)match(input,Sleep,FOLLOW_29); 

            			newLeafNode(otherlv_1, grammarAccess.getSleepNodeAccess().getSleepKeyword_1());
            		
            // InternalQualityBtCppParser.g:12252:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt205=2;
            int LA205_0 = input.LA(1);

            if ( ((LA205_0>=Parameters && LA205_0<=Satisfies)||LA205_0==Name||(LA205_0>=LeftParenthesis && LA205_0<=RightParenthesis)) ) {
                alt205=1;
            }
            switch (alt205) {
                case 1 :
                    // InternalQualityBtCppParser.g:12253:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:12253:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:12254:5: ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2());
                    				
                    // InternalQualityBtCppParser.g:12257:5: ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:12258:6: ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:12258:6: ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+
                    int cnt204=0;
                    loop204:
                    do {
                        int alt204=7;
                        int LA204_0 = input.LA(1);

                        if ( LA204_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2(), 0) ) {
                            alt204=1;
                        }
                        else if ( LA204_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2(), 1) ) {
                            alt204=2;
                        }
                        else if ( LA204_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2(), 2) ) {
                            alt204=3;
                        }
                        else if ( LA204_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2(), 3) ) {
                            alt204=4;
                        }
                        else if ( LA204_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2(), 4) ) {
                            alt204=5;
                        }
                        else if ( LA204_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2(), 5) ) {
                            alt204=6;
                        }


                        switch (alt204) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:12259:4: ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:12259:4: ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:12260:5: {...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2(), 0) ) {
                    	        throw new FailedPredicateException(input, "ruleSleepNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:12260:106: ( ({...}? => (otherlv_3= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:12261:6: ({...}? => (otherlv_3= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:12264:9: ({...}? => (otherlv_3= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:12264:10: {...}? => (otherlv_3= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSleepNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:12264:19: (otherlv_3= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:12264:20: otherlv_3= LeftParenthesis
                    	    {
                    	    otherlv_3=(Token)match(input,LeftParenthesis,FOLLOW_29); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getSleepNodeAccess().getLeftParenthesisKeyword_2_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:12274:4: ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:12274:4: ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:12275:5: {...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2(), 1) ) {
                    	        throw new FailedPredicateException(input, "ruleSleepNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:12275:106: ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:12276:6: ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:12279:9: ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:12279:10: {...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSleepNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:12279:19: (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:12279:20: otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) )
                    	    {
                    	    otherlv_4=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getSleepNodeAccess().getNameKeyword_2_1_0());
                    	    								
                    	    otherlv_5=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_5, grammarAccess.getSleepNodeAccess().getEqualsSignKeyword_2_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:12287:9: ( (lv_name_6_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:12288:10: (lv_name_6_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:12288:10: (lv_name_6_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:12289:11: lv_name_6_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getSleepNodeAccess().getNameEStringParserRuleCall_2_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_29);
                    	    lv_name_6_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getSleepNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_6_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:12312:4: ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:12312:4: ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:12313:5: {...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2(), 2) ) {
                    	        throw new FailedPredicateException(input, "ruleSleepNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:12313:106: ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:12314:6: ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:12317:9: ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:12317:10: {...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSleepNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:12317:19: (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:12317:20: otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_7=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_7, grammarAccess.getSleepNodeAccess().getParametersKeyword_2_2_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:12321:9: ( (lv_parameters_8_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:12322:10: (lv_parameters_8_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:12322:10: (lv_parameters_8_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:12323:11: lv_parameters_8_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getSleepNodeAccess().getParametersParameterParserRuleCall_2_2_1_0());
                    	    										
                    	    pushFollow(FOLLOW_30);
                    	    lv_parameters_8_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getSleepNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_8_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:12340:9: (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )*
                    	    loop201:
                    	    do {
                    	        int alt201=2;
                    	        int LA201_0 = input.LA(1);

                    	        if ( (LA201_0==Comma) ) {
                    	            alt201=1;
                    	        }


                    	        switch (alt201) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:12341:10: otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_9=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_9, grammarAccess.getSleepNodeAccess().getCommaKeyword_2_2_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:12345:10: ( (lv_parameters_10_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:12346:11: (lv_parameters_10_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:12346:11: (lv_parameters_10_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:12347:12: lv_parameters_10_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getSleepNodeAccess().getParametersParameterParserRuleCall_2_2_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_30);
                    	    	    lv_parameters_10_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getSleepNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_10_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop201;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:12371:4: ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:12371:4: ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:12372:5: {...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2(), 3) ) {
                    	        throw new FailedPredicateException(input, "ruleSleepNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:12372:106: ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:12373:6: ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:12376:9: ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:12376:10: {...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSleepNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:12376:19: (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:12376:20: otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_11=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_11, grammarAccess.getSleepNodeAccess().getSatisficesKeyword_2_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:12380:9: ( (lv_satisfices_12_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:12381:10: (lv_satisfices_12_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:12381:10: (lv_satisfices_12_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:12382:11: lv_satisfices_12_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getSleepNodeAccess().getSatisficesQualityParserRuleCall_2_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_30);
                    	    lv_satisfices_12_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getSleepNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_12_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:12399:9: (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )*
                    	    loop202:
                    	    do {
                    	        int alt202=2;
                    	        int LA202_0 = input.LA(1);

                    	        if ( (LA202_0==Comma) ) {
                    	            alt202=1;
                    	        }


                    	        switch (alt202) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:12400:10: otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_13=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_13, grammarAccess.getSleepNodeAccess().getCommaKeyword_2_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:12404:10: ( (lv_satisfices_14_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:12405:11: (lv_satisfices_14_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:12405:11: (lv_satisfices_14_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:12406:12: lv_satisfices_14_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getSleepNodeAccess().getSatisficesQualityParserRuleCall_2_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_30);
                    	    	    lv_satisfices_14_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getSleepNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_14_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop202;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:12430:4: ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:12430:4: ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:12431:5: {...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2(), 4) ) {
                    	        throw new FailedPredicateException(input, "ruleSleepNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:12431:106: ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:12432:6: ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:12435:9: ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:12435:10: {...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSleepNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:12435:19: (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:12435:20: otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_15=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_15, grammarAccess.getSleepNodeAccess().getSatisfiesKeyword_2_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:12439:9: ( (lv_satisfies_16_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:12440:10: (lv_satisfies_16_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:12440:10: (lv_satisfies_16_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:12441:11: lv_satisfies_16_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getSleepNodeAccess().getSatisfiesQualityRequirementParserRuleCall_2_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_30);
                    	    lv_satisfies_16_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getSleepNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_16_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:12458:9: (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )*
                    	    loop203:
                    	    do {
                    	        int alt203=2;
                    	        int LA203_0 = input.LA(1);

                    	        if ( (LA203_0==Comma) ) {
                    	            alt203=1;
                    	        }


                    	        switch (alt203) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:12459:10: otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_17=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_17, grammarAccess.getSleepNodeAccess().getCommaKeyword_2_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:12463:10: ( (lv_satisfies_18_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:12464:11: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:12464:11: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:12465:12: lv_satisfies_18_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getSleepNodeAccess().getSatisfiesQualityRequirementParserRuleCall_2_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_30);
                    	    	    lv_satisfies_18_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getSleepNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_18_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop203;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:12489:4: ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:12489:4: ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:12490:5: {...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2(), 5) ) {
                    	        throw new FailedPredicateException(input, "ruleSleepNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:12490:106: ( ({...}? => (otherlv_19= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:12491:6: ({...}? => (otherlv_19= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:12494:9: ({...}? => (otherlv_19= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:12494:10: {...}? => (otherlv_19= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "ruleSleepNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:12494:19: (otherlv_19= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:12494:20: otherlv_19= RightParenthesis
                    	    {
                    	    otherlv_19=(Token)match(input,RightParenthesis,FOLLOW_29); 

                    	    									newLeafNode(otherlv_19, grammarAccess.getSleepNodeAccess().getRightParenthesisKeyword_2_5());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt204 >= 1 ) break loop204;
                                EarlyExitException eee =
                                    new EarlyExitException(204, input);
                                throw eee;
                        }
                        cnt204++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2()) ) {
                        throw new FailedPredicateException(input, "ruleSleepNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getSleepNodeAccess().getUnorderedGroup_2());
                    				

                    }
                    break;

            }


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSleepNode"


    // $ANTLR start "entryRulePopFromQueueNode"
    // InternalQualityBtCppParser.g:12516:1: entryRulePopFromQueueNode returns [EObject current=null] : iv_rulePopFromQueueNode= rulePopFromQueueNode EOF ;
    public final EObject entryRulePopFromQueueNode() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePopFromQueueNode = null;


        try {
            // InternalQualityBtCppParser.g:12516:57: (iv_rulePopFromQueueNode= rulePopFromQueueNode EOF )
            // InternalQualityBtCppParser.g:12517:2: iv_rulePopFromQueueNode= rulePopFromQueueNode EOF
            {
             newCompositeNode(grammarAccess.getPopFromQueueNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_rulePopFromQueueNode=rulePopFromQueueNode();

            state._fsp--;

             current =iv_rulePopFromQueueNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePopFromQueueNode"


    // $ANTLR start "rulePopFromQueueNode"
    // InternalQualityBtCppParser.g:12523:1: rulePopFromQueueNode returns [EObject current=null] : ( () otherlv_1= PopFromQueue ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?) ) )? ) ;
    public final EObject rulePopFromQueueNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        AntlrDatatypeRuleToken lv_name_6_0 = null;

        EObject lv_parameters_8_0 = null;

        EObject lv_parameters_10_0 = null;

        EObject lv_satisfices_12_0 = null;

        EObject lv_satisfices_14_0 = null;

        EObject lv_satisfies_16_0 = null;

        EObject lv_satisfies_18_0 = null;



        	enterRule();

        try {
            // InternalQualityBtCppParser.g:12529:2: ( ( () otherlv_1= PopFromQueue ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?) ) )? ) )
            // InternalQualityBtCppParser.g:12530:2: ( () otherlv_1= PopFromQueue ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?) ) )? )
            {
            // InternalQualityBtCppParser.g:12530:2: ( () otherlv_1= PopFromQueue ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?) ) )? )
            // InternalQualityBtCppParser.g:12531:3: () otherlv_1= PopFromQueue ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            {
            // InternalQualityBtCppParser.g:12531:3: ()
            // InternalQualityBtCppParser.g:12532:4: 
            {

            				current = forceCreateModelElement(
            					grammarAccess.getPopFromQueueNodeAccess().getPopFromQueueNodeAction_0(),
            					current);
            			

            }

            otherlv_1=(Token)match(input,PopFromQueue,FOLLOW_29); 

            			newLeafNode(otherlv_1, grammarAccess.getPopFromQueueNodeAccess().getPopFromQueueKeyword_1());
            		
            // InternalQualityBtCppParser.g:12542:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?) ) )?
            int alt210=2;
            int LA210_0 = input.LA(1);

            if ( ((LA210_0>=Parameters && LA210_0<=Satisfies)||LA210_0==Name||(LA210_0>=LeftParenthesis && LA210_0<=RightParenthesis)) ) {
                alt210=1;
            }
            switch (alt210) {
                case 1 :
                    // InternalQualityBtCppParser.g:12543:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?) )
                    {
                    // InternalQualityBtCppParser.g:12543:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?) )
                    // InternalQualityBtCppParser.g:12544:5: ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?)
                    {
                     
                    				  getUnorderedGroupHelper().enter(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2());
                    				
                    // InternalQualityBtCppParser.g:12547:5: ( ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?)
                    // InternalQualityBtCppParser.g:12548:6: ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+ {...}?
                    {
                    // InternalQualityBtCppParser.g:12548:6: ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) ) )+
                    int cnt209=0;
                    loop209:
                    do {
                        int alt209=7;
                        int LA209_0 = input.LA(1);

                        if ( LA209_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2(), 0) ) {
                            alt209=1;
                        }
                        else if ( LA209_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2(), 1) ) {
                            alt209=2;
                        }
                        else if ( LA209_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2(), 2) ) {
                            alt209=3;
                        }
                        else if ( LA209_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2(), 3) ) {
                            alt209=4;
                        }
                        else if ( LA209_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2(), 4) ) {
                            alt209=5;
                        }
                        else if ( LA209_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2(), 5) ) {
                            alt209=6;
                        }


                        switch (alt209) {
                    	case 1 :
                    	    // InternalQualityBtCppParser.g:12549:4: ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:12549:4: ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:12550:5: {...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2(), 0) ) {
                    	        throw new FailedPredicateException(input, "rulePopFromQueueNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2(), 0)");
                    	    }
                    	    // InternalQualityBtCppParser.g:12550:113: ( ({...}? => (otherlv_3= LeftParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:12551:6: ({...}? => (otherlv_3= LeftParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2(), 0);
                    	    					
                    	    // InternalQualityBtCppParser.g:12554:9: ({...}? => (otherlv_3= LeftParenthesis ) )
                    	    // InternalQualityBtCppParser.g:12554:10: {...}? => (otherlv_3= LeftParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "rulePopFromQueueNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:12554:19: (otherlv_3= LeftParenthesis )
                    	    // InternalQualityBtCppParser.g:12554:20: otherlv_3= LeftParenthesis
                    	    {
                    	    otherlv_3=(Token)match(input,LeftParenthesis,FOLLOW_29); 

                    	    									newLeafNode(otherlv_3, grammarAccess.getPopFromQueueNodeAccess().getLeftParenthesisKeyword_2_0());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQualityBtCppParser.g:12564:4: ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:12564:4: ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:12565:5: {...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2(), 1) ) {
                    	        throw new FailedPredicateException(input, "rulePopFromQueueNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2(), 1)");
                    	    }
                    	    // InternalQualityBtCppParser.g:12565:113: ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) )
                    	    // InternalQualityBtCppParser.g:12566:6: ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2(), 1);
                    	    					
                    	    // InternalQualityBtCppParser.g:12569:9: ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) )
                    	    // InternalQualityBtCppParser.g:12569:10: {...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "rulePopFromQueueNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:12569:19: (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) )
                    	    // InternalQualityBtCppParser.g:12569:20: otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) )
                    	    {
                    	    otherlv_4=(Token)match(input,Name,FOLLOW_8); 

                    	    									newLeafNode(otherlv_4, grammarAccess.getPopFromQueueNodeAccess().getNameKeyword_2_1_0());
                    	    								
                    	    otherlv_5=(Token)match(input,EqualsSign,FOLLOW_3); 

                    	    									newLeafNode(otherlv_5, grammarAccess.getPopFromQueueNodeAccess().getEqualsSignKeyword_2_1_1());
                    	    								
                    	    // InternalQualityBtCppParser.g:12577:9: ( (lv_name_6_0= ruleEString ) )
                    	    // InternalQualityBtCppParser.g:12578:10: (lv_name_6_0= ruleEString )
                    	    {
                    	    // InternalQualityBtCppParser.g:12578:10: (lv_name_6_0= ruleEString )
                    	    // InternalQualityBtCppParser.g:12579:11: lv_name_6_0= ruleEString
                    	    {

                    	    											newCompositeNode(grammarAccess.getPopFromQueueNodeAccess().getNameEStringParserRuleCall_2_1_2_0());
                    	    										
                    	    pushFollow(FOLLOW_29);
                    	    lv_name_6_0=ruleEString();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getPopFromQueueNodeRule());
                    	    											}
                    	    											set(
                    	    												current,
                    	    												"name",
                    	    												lv_name_6_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.EString");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalQualityBtCppParser.g:12602:4: ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:12602:4: ({...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:12603:5: {...}? => ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2(), 2) ) {
                    	        throw new FailedPredicateException(input, "rulePopFromQueueNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2(), 2)");
                    	    }
                    	    // InternalQualityBtCppParser.g:12603:113: ( ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:12604:6: ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2(), 2);
                    	    					
                    	    // InternalQualityBtCppParser.g:12607:9: ({...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:12607:10: {...}? => (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "rulePopFromQueueNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:12607:19: (otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )* )
                    	    // InternalQualityBtCppParser.g:12607:20: otherlv_7= Parameters ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )*
                    	    {
                    	    otherlv_7=(Token)match(input,Parameters,FOLLOW_3); 

                    	    									newLeafNode(otherlv_7, grammarAccess.getPopFromQueueNodeAccess().getParametersKeyword_2_2_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:12611:9: ( (lv_parameters_8_0= ruleParameter ) )
                    	    // InternalQualityBtCppParser.g:12612:10: (lv_parameters_8_0= ruleParameter )
                    	    {
                    	    // InternalQualityBtCppParser.g:12612:10: (lv_parameters_8_0= ruleParameter )
                    	    // InternalQualityBtCppParser.g:12613:11: lv_parameters_8_0= ruleParameter
                    	    {

                    	    											newCompositeNode(grammarAccess.getPopFromQueueNodeAccess().getParametersParameterParserRuleCall_2_2_1_0());
                    	    										
                    	    pushFollow(FOLLOW_30);
                    	    lv_parameters_8_0=ruleParameter();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getPopFromQueueNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"parameters",
                    	    												lv_parameters_8_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:12630:9: (otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) ) )*
                    	    loop206:
                    	    do {
                    	        int alt206=2;
                    	        int LA206_0 = input.LA(1);

                    	        if ( (LA206_0==Comma) ) {
                    	            alt206=1;
                    	        }


                    	        switch (alt206) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:12631:10: otherlv_9= Comma ( (lv_parameters_10_0= ruleParameter ) )
                    	    	    {
                    	    	    otherlv_9=(Token)match(input,Comma,FOLLOW_3); 

                    	    	    										newLeafNode(otherlv_9, grammarAccess.getPopFromQueueNodeAccess().getCommaKeyword_2_2_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:12635:10: ( (lv_parameters_10_0= ruleParameter ) )
                    	    	    // InternalQualityBtCppParser.g:12636:11: (lv_parameters_10_0= ruleParameter )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:12636:11: (lv_parameters_10_0= ruleParameter )
                    	    	    // InternalQualityBtCppParser.g:12637:12: lv_parameters_10_0= ruleParameter
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getPopFromQueueNodeAccess().getParametersParameterParserRuleCall_2_2_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_30);
                    	    	    lv_parameters_10_0=ruleParameter();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getPopFromQueueNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"parameters",
                    	    	    													lv_parameters_10_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Parameter");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop206;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalQualityBtCppParser.g:12661:4: ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:12661:4: ({...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:12662:5: {...}? => ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2(), 3) ) {
                    	        throw new FailedPredicateException(input, "rulePopFromQueueNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2(), 3)");
                    	    }
                    	    // InternalQualityBtCppParser.g:12662:113: ( ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:12663:6: ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2(), 3);
                    	    					
                    	    // InternalQualityBtCppParser.g:12666:9: ({...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:12666:10: {...}? => (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "rulePopFromQueueNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:12666:19: (otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )* )
                    	    // InternalQualityBtCppParser.g:12666:20: otherlv_11= Satisfices ( (lv_satisfices_12_0= ruleQuality ) ) (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )*
                    	    {
                    	    otherlv_11=(Token)match(input,Satisfices,FOLLOW_17); 

                    	    									newLeafNode(otherlv_11, grammarAccess.getPopFromQueueNodeAccess().getSatisficesKeyword_2_3_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:12670:9: ( (lv_satisfices_12_0= ruleQuality ) )
                    	    // InternalQualityBtCppParser.g:12671:10: (lv_satisfices_12_0= ruleQuality )
                    	    {
                    	    // InternalQualityBtCppParser.g:12671:10: (lv_satisfices_12_0= ruleQuality )
                    	    // InternalQualityBtCppParser.g:12672:11: lv_satisfices_12_0= ruleQuality
                    	    {

                    	    											newCompositeNode(grammarAccess.getPopFromQueueNodeAccess().getSatisficesQualityParserRuleCall_2_3_1_0());
                    	    										
                    	    pushFollow(FOLLOW_30);
                    	    lv_satisfices_12_0=ruleQuality();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getPopFromQueueNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfices",
                    	    												lv_satisfices_12_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:12689:9: (otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) ) )*
                    	    loop207:
                    	    do {
                    	        int alt207=2;
                    	        int LA207_0 = input.LA(1);

                    	        if ( (LA207_0==Comma) ) {
                    	            alt207=1;
                    	        }


                    	        switch (alt207) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:12690:10: otherlv_13= Comma ( (lv_satisfices_14_0= ruleQuality ) )
                    	    	    {
                    	    	    otherlv_13=(Token)match(input,Comma,FOLLOW_17); 

                    	    	    										newLeafNode(otherlv_13, grammarAccess.getPopFromQueueNodeAccess().getCommaKeyword_2_3_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:12694:10: ( (lv_satisfices_14_0= ruleQuality ) )
                    	    	    // InternalQualityBtCppParser.g:12695:11: (lv_satisfices_14_0= ruleQuality )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:12695:11: (lv_satisfices_14_0= ruleQuality )
                    	    	    // InternalQualityBtCppParser.g:12696:12: lv_satisfices_14_0= ruleQuality
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getPopFromQueueNodeAccess().getSatisficesQualityParserRuleCall_2_3_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_30);
                    	    	    lv_satisfices_14_0=ruleQuality();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getPopFromQueueNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfices",
                    	    	    													lv_satisfices_14_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.Quality");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop207;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalQualityBtCppParser.g:12720:4: ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:12720:4: ({...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) ) )
                    	    // InternalQualityBtCppParser.g:12721:5: {...}? => ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2(), 4) ) {
                    	        throw new FailedPredicateException(input, "rulePopFromQueueNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2(), 4)");
                    	    }
                    	    // InternalQualityBtCppParser.g:12721:113: ( ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) ) )
                    	    // InternalQualityBtCppParser.g:12722:6: ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2(), 4);
                    	    					
                    	    // InternalQualityBtCppParser.g:12725:9: ({...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* ) )
                    	    // InternalQualityBtCppParser.g:12725:10: {...}? => (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "rulePopFromQueueNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:12725:19: (otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )* )
                    	    // InternalQualityBtCppParser.g:12725:20: otherlv_15= Satisfies ( (lv_satisfies_16_0= ruleQualityRequirement ) ) (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )*
                    	    {
                    	    otherlv_15=(Token)match(input,Satisfies,FOLLOW_12); 

                    	    									newLeafNode(otherlv_15, grammarAccess.getPopFromQueueNodeAccess().getSatisfiesKeyword_2_4_0());
                    	    								
                    	    // InternalQualityBtCppParser.g:12729:9: ( (lv_satisfies_16_0= ruleQualityRequirement ) )
                    	    // InternalQualityBtCppParser.g:12730:10: (lv_satisfies_16_0= ruleQualityRequirement )
                    	    {
                    	    // InternalQualityBtCppParser.g:12730:10: (lv_satisfies_16_0= ruleQualityRequirement )
                    	    // InternalQualityBtCppParser.g:12731:11: lv_satisfies_16_0= ruleQualityRequirement
                    	    {

                    	    											newCompositeNode(grammarAccess.getPopFromQueueNodeAccess().getSatisfiesQualityRequirementParserRuleCall_2_4_1_0());
                    	    										
                    	    pushFollow(FOLLOW_30);
                    	    lv_satisfies_16_0=ruleQualityRequirement();

                    	    state._fsp--;


                    	    											if (current==null) {
                    	    												current = createModelElementForParent(grammarAccess.getPopFromQueueNodeRule());
                    	    											}
                    	    											add(
                    	    												current,
                    	    												"satisfies",
                    	    												lv_satisfies_16_0,
                    	    												"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    											afterParserOrEnumRuleCall();
                    	    										

                    	    }


                    	    }

                    	    // InternalQualityBtCppParser.g:12748:9: (otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) ) )*
                    	    loop208:
                    	    do {
                    	        int alt208=2;
                    	        int LA208_0 = input.LA(1);

                    	        if ( (LA208_0==Comma) ) {
                    	            alt208=1;
                    	        }


                    	        switch (alt208) {
                    	    	case 1 :
                    	    	    // InternalQualityBtCppParser.g:12749:10: otherlv_17= Comma ( (lv_satisfies_18_0= ruleQualityRequirement ) )
                    	    	    {
                    	    	    otherlv_17=(Token)match(input,Comma,FOLLOW_12); 

                    	    	    										newLeafNode(otherlv_17, grammarAccess.getPopFromQueueNodeAccess().getCommaKeyword_2_4_2_0());
                    	    	    									
                    	    	    // InternalQualityBtCppParser.g:12753:10: ( (lv_satisfies_18_0= ruleQualityRequirement ) )
                    	    	    // InternalQualityBtCppParser.g:12754:11: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    	    {
                    	    	    // InternalQualityBtCppParser.g:12754:11: (lv_satisfies_18_0= ruleQualityRequirement )
                    	    	    // InternalQualityBtCppParser.g:12755:12: lv_satisfies_18_0= ruleQualityRequirement
                    	    	    {

                    	    	    												newCompositeNode(grammarAccess.getPopFromQueueNodeAccess().getSatisfiesQualityRequirementParserRuleCall_2_4_2_1_0());
                    	    	    											
                    	    	    pushFollow(FOLLOW_30);
                    	    	    lv_satisfies_18_0=ruleQualityRequirement();

                    	    	    state._fsp--;


                    	    	    												if (current==null) {
                    	    	    													current = createModelElementForParent(grammarAccess.getPopFromQueueNodeRule());
                    	    	    												}
                    	    	    												add(
                    	    	    													current,
                    	    	    													"satisfies",
                    	    	    													lv_satisfies_18_0,
                    	    	    													"org.xtext.btcpp.QualityBtCpp.QualityRequirement");
                    	    	    												afterParserOrEnumRuleCall();
                    	    	    											

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop208;
                    	        }
                    	    } while (true);


                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalQualityBtCppParser.g:12779:4: ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) )
                    	    {
                    	    // InternalQualityBtCppParser.g:12779:4: ({...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) ) )
                    	    // InternalQualityBtCppParser.g:12780:5: {...}? => ( ({...}? => (otherlv_19= RightParenthesis ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2(), 5) ) {
                    	        throw new FailedPredicateException(input, "rulePopFromQueueNode", "getUnorderedGroupHelper().canSelect(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2(), 5)");
                    	    }
                    	    // InternalQualityBtCppParser.g:12780:113: ( ({...}? => (otherlv_19= RightParenthesis ) ) )
                    	    // InternalQualityBtCppParser.g:12781:6: ({...}? => (otherlv_19= RightParenthesis ) )
                    	    {

                    	    						getUnorderedGroupHelper().select(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2(), 5);
                    	    					
                    	    // InternalQualityBtCppParser.g:12784:9: ({...}? => (otherlv_19= RightParenthesis ) )
                    	    // InternalQualityBtCppParser.g:12784:10: {...}? => (otherlv_19= RightParenthesis )
                    	    {
                    	    if ( !((true)) ) {
                    	        throw new FailedPredicateException(input, "rulePopFromQueueNode", "true");
                    	    }
                    	    // InternalQualityBtCppParser.g:12784:19: (otherlv_19= RightParenthesis )
                    	    // InternalQualityBtCppParser.g:12784:20: otherlv_19= RightParenthesis
                    	    {
                    	    otherlv_19=(Token)match(input,RightParenthesis,FOLLOW_29); 

                    	    									newLeafNode(otherlv_19, grammarAccess.getPopFromQueueNodeAccess().getRightParenthesisKeyword_2_5());
                    	    								

                    	    }


                    	    }

                    	     
                    	    						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2());
                    	    					

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt209 >= 1 ) break loop209;
                                EarlyExitException eee =
                                    new EarlyExitException(209, input);
                                throw eee;
                        }
                        cnt209++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2()) ) {
                        throw new FailedPredicateException(input, "rulePopFromQueueNode", "getUnorderedGroupHelper().canLeave(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2())");
                    }

                    }


                    }

                     
                    				  getUnorderedGroupHelper().leave(grammarAccess.getPopFromQueueNodeAccess().getUnorderedGroup_2());
                    				

                    }
                    break;

            }


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePopFromQueueNode"

    // Delegated rules


    protected DFA174 dfa174 = new DFA174(this);
    static final String dfa_1s = "\12\uffff";
    static final String dfa_2s = "\1\1\11\uffff";
    static final String dfa_3s = "\1\4\11\uffff";
    static final String dfa_4s = "\1\77\11\uffff";
    static final String dfa_5s = "\1\uffff\1\11\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10";
    static final String dfa_6s = "\1\0\11\uffff}>";
    static final String[] dfa_7s = {
            "\12\1\1\uffff\6\1\1\uffff\1\1\1\uffff\2\1\3\uffff\1\6\1\7\1\4\1\10\1\1\1\uffff\11\1\1\5\1\1\1\uffff\1\1\1\uffff\1\3\3\1\1\uffff\2\1\1\2\1\11\2\uffff\1\1\2\uffff\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final short[] dfa_2 = DFA.unpackEncodedString(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final char[] dfa_4 = DFA.unpackEncodedStringToUnsignedChars(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[] dfa_6 = DFA.unpackEncodedString(dfa_6s);
    static final short[][] dfa_7 = unpackEncodedStringArray(dfa_7s);

    class DFA174 extends DFA {

        public DFA174(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 174;
            this.eot = dfa_1;
            this.eof = dfa_2;
            this.min = dfa_3;
            this.max = dfa_4;
            this.accept = dfa_5;
            this.special = dfa_6;
            this.transition = dfa_7;
        }
        public String getDescription() {
            return "()+ loopback of 10442:6: ( ({...}? => ( ({...}? => (otherlv_3= LeftParenthesis ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= Name otherlv_5= EqualsSign ( (lv_name_6_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Satisfices ( (lv_satisfices_8_0= ruleQuality ) ) (otherlv_9= Comma ( (lv_satisfices_10_0= ruleQuality ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Value otherlv_12= EqualsSign ( (lv_value_13_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Output_key otherlv_15= EqualsSign ( (lv_output_key_16_0= ruleEString ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Parameters ( (lv_parameters_18_0= ruleParameter ) ) (otherlv_19= Comma ( (lv_parameters_20_0= ruleParameter ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Satisfies ( (lv_satisfies_22_0= ruleQualityRequirement ) ) (otherlv_23= Comma ( (lv_satisfies_24_0= ruleQualityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= RightParenthesis ) ) ) ) )+";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA174_0 = input.LA(1);

                         
                        int index174_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA174_0==EOF||(LA174_0>=KeepRunningUntilFailure && LA174_0<=SetBlackboard)||(LA174_0>=ConsumeQueue && LA174_0<=ScriptAction)||LA174_0==WhileDoElse||(LA174_0>=CoroAction && LA174_0<=IfThenElse)||LA174_0==Inverter||(LA174_0>=RunOnce && LA174_0<=Sleep)||LA174_0==Loop||LA174_0==Test||(LA174_0>=M && LA174_0<=HyphenMinusGreaterThanSign)||(LA174_0>=R && LA174_0<=VerticalLineVerticalLine)||LA174_0==QuestionMark||LA174_0==RULE_END) ) {s = 1;}

                        else if ( LA174_0 == LeftParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 0) ) {s = 2;}

                        else if ( LA174_0 == Name && getUnorderedGroupHelper().canSelect(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 1) ) {s = 3;}

                        else if ( LA174_0 == Satisfices && getUnorderedGroupHelper().canSelect(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 2) ) {s = 4;}

                        else if ( LA174_0 == Value && getUnorderedGroupHelper().canSelect(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 3) ) {s = 5;}

                        else if ( LA174_0 == Output_key && getUnorderedGroupHelper().canSelect(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 4) ) {s = 6;}

                        else if ( LA174_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 5) ) {s = 7;}

                        else if ( LA174_0 == Satisfies && getUnorderedGroupHelper().canSelect(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 6) ) {s = 8;}

                        else if ( LA174_0 == RightParenthesis && getUnorderedGroupHelper().canSelect(grammarAccess.getSetBlackboardNodeAccess().getUnorderedGroup_2(), 7) ) {s = 9;}

                         
                        input.seek(index174_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 174, _s, input);
            error(nvae);
            throw nvae;
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000005L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x4000000000000000L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x8000000000004000L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0020000000000000L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0800000000000000L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x10DCAFFA035FBFF0L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x8000000000000000L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0100000000000002L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0600000000000000L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x43020001C0000000L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x47020001C0000000L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x90DCAFFA035FBFF0L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x43030001C0000000L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x47030001C0000000L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x43020001D0000000L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x47020001D0000000L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x43220001C0000002L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x47220001C0000002L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x43020001C0200000L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x47020001C0200000L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x43020001C8000000L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x47020001C8000000L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x03020001C0000002L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x07020001C0000002L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x03021001E0000002L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x07021001E0000002L});

}
