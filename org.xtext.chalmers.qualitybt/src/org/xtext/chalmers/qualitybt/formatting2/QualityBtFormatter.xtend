/*
 * generated by Xtext 2.36.0
 */
package org.xtext.chalmers.qualitybt.formatting2

import btcpp.BehaviorTree
import btcpp.Root
import com.google.inject.Inject
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument
import org.xtext.chalmers.qualitybt.services.QualityBtGrammarAccess

class QualityBtFormatter extends AbstractFormatter2 {
	
	@Inject extension QualityBtGrammarAccess

	def dispatch void format(Root root, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (behaviorTree : root.behaviortrees) {
			behaviorTree.format
		}
	}

	def dispatch void format(BehaviorTree behaviorTree, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (treeNode : behaviorTree.node) {
			treeNode.format
		}
	}
	
	// TODO: implement for AlwaysFailureNode, AlwaysSuccessNode, SetBlackboardNode, FallbackNode, IfThenElseNode, MnualNode, ParallelNode, SequenceStarNode, SwitchNode, ReactiveFallback, WhileDoElseNode, ReactiveSequence, SequenceNode, SubtreeNode, TimeoutNode, KeepRunningUntilFailureNode, TimerQueueNode, InverterNode, ForceSuccessNode, ForceFailureNode, RepeatNode, SubTree, SimpleActionNode, SimpleConditionNode, RetryNode, BlackboardCheckInt, BlackboardCheckDouble, BlackboardCheckString
}
