/*
 * generated by Xtext 2.36.0
 */
package org.xtext.chalmers.qualitybt.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class QualityBtGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class RootElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.chalmers.qualitybt.QualityBt.Root");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRootKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cMain_tree_to_executeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cMain_tree_to_executeEStringParserRuleCall_1_0 = (RuleCall)cMain_tree_to_executeAssignment_1.eContents().get(0);
		private final RuleCall cBEGINTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cBehaviortreesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cBehaviortreesBehaviorTreeParserRuleCall_3_0 = (RuleCall)cBehaviortreesAssignment_3.eContents().get(0);
		private final Assignment cBehaviortreesAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cBehaviortreesBehaviorTreeParserRuleCall_4_0 = (RuleCall)cBehaviortreesAssignment_4.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		
		//Root returns Root:
		//    'root' main_tree_to_execute=EString
		//        BEGIN behaviortrees+=BehaviorTree (behaviortrees+=BehaviorTree)* END
		//        ;
		@Override public ParserRule getRule() { return rule; }
		
		//'root' main_tree_to_execute=EString
		//    BEGIN behaviortrees+=BehaviorTree (behaviortrees+=BehaviorTree)* END
		public Group getGroup() { return cGroup; }
		
		//'root'
		public Keyword getRootKeyword_0() { return cRootKeyword_0; }
		
		//main_tree_to_execute=EString
		public Assignment getMain_tree_to_executeAssignment_1() { return cMain_tree_to_executeAssignment_1; }
		
		//EString
		public RuleCall getMain_tree_to_executeEStringParserRuleCall_1_0() { return cMain_tree_to_executeEStringParserRuleCall_1_0; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_2() { return cBEGINTerminalRuleCall_2; }
		
		//behaviortrees+=BehaviorTree
		public Assignment getBehaviortreesAssignment_3() { return cBehaviortreesAssignment_3; }
		
		//BehaviorTree
		public RuleCall getBehaviortreesBehaviorTreeParserRuleCall_3_0() { return cBehaviortreesBehaviorTreeParserRuleCall_3_0; }
		
		//(behaviortrees+=BehaviorTree)*
		public Assignment getBehaviortreesAssignment_4() { return cBehaviortreesAssignment_4; }
		
		//BehaviorTree
		public RuleCall getBehaviortreesBehaviorTreeParserRuleCall_4_0() { return cBehaviortreesBehaviorTreeParserRuleCall_4_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_5() { return cENDTerminalRuleCall_5; }
	}
	public class TreeNodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.chalmers.qualitybt.QualityBt.TreeNode");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cLeafNodeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cControlNodeParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cDecoratorNodeParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cSubTreeParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//TreeNode returns TreeNode:
		//    (LeafNode | ControlNode | DecoratorNode | SubTree);
		@Override public ParserRule getRule() { return rule; }
		
		//(LeafNode | ControlNode | DecoratorNode | SubTree)
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//LeafNode
		public RuleCall getLeafNodeParserRuleCall_0() { return cLeafNodeParserRuleCall_0; }
		
		//ControlNode
		public RuleCall getControlNodeParserRuleCall_1() { return cControlNodeParserRuleCall_1; }
		
		//DecoratorNode
		public RuleCall getDecoratorNodeParserRuleCall_2() { return cDecoratorNodeParserRuleCall_2; }
		
		//SubTree
		public RuleCall getSubTreeParserRuleCall_3() { return cSubTreeParserRuleCall_3; }
	}
	public class LeafNodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.chalmers.qualitybt.QualityBt.LeafNode");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cActionNodeBaseParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cSimpleConditionNodeParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//LeafNode returns LeafNode:
		//    ActionNodeBase | SimpleConditionNode;
		@Override public ParserRule getRule() { return rule; }
		
		//ActionNodeBase | SimpleConditionNode
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ActionNodeBase
		public RuleCall getActionNodeBaseParserRuleCall_0() { return cActionNodeBaseParserRuleCall_0; }
		
		//SimpleConditionNode
		public RuleCall getSimpleConditionNodeParserRuleCall_1() { return cSimpleConditionNodeParserRuleCall_1; }
	}
	public class ActionNodeBaseElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.chalmers.qualitybt.QualityBt.ActionNodeBase");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSimpleActionNodeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cAlwaysSuccessNodeParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cAlwaysFailureNodeParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cSetBlackboardNodeParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//ActionNodeBase returns ActionNodeBase:
		//    SimpleActionNode | AlwaysSuccessNode | AlwaysFailureNode| SetBlackboardNode ;
		@Override public ParserRule getRule() { return rule; }
		
		//SimpleActionNode | AlwaysSuccessNode | AlwaysFailureNode| SetBlackboardNode
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//SimpleActionNode
		public RuleCall getSimpleActionNodeParserRuleCall_0() { return cSimpleActionNodeParserRuleCall_0; }
		
		//AlwaysSuccessNode
		public RuleCall getAlwaysSuccessNodeParserRuleCall_1() { return cAlwaysSuccessNodeParserRuleCall_1; }
		
		//AlwaysFailureNode
		public RuleCall getAlwaysFailureNodeParserRuleCall_2() { return cAlwaysFailureNodeParserRuleCall_2; }
		
		//SetBlackboardNode
		public RuleCall getSetBlackboardNodeParserRuleCall_3() { return cSetBlackboardNodeParserRuleCall_3; }
	}
	public class ControlNodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.chalmers.qualitybt.QualityBt.ControlNode");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cReactiveSequenceParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cSequenceNodeParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cFallbackNodeParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cReactiveFallbackParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cSequenceStarNodeParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cParallelNodeParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cIfThenElseNodeParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cSwitchNodeParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		private final RuleCall cWhileDoElseNodeParserRuleCall_8 = (RuleCall)cAlternatives.eContents().get(8);
		private final RuleCall cMnualNodeParserRuleCall_9 = (RuleCall)cAlternatives.eContents().get(9);
		
		//ControlNode returns ControlNode:
		//    ReactiveSequence | SequenceNode | FallbackNode | ReactiveFallback | SequenceStarNode | ParallelNode | IfThenElseNode | SwitchNode | WhileDoElseNode | MnualNode;
		@Override public ParserRule getRule() { return rule; }
		
		//ReactiveSequence | SequenceNode | FallbackNode | ReactiveFallback | SequenceStarNode | ParallelNode | IfThenElseNode | SwitchNode | WhileDoElseNode | MnualNode
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ReactiveSequence
		public RuleCall getReactiveSequenceParserRuleCall_0() { return cReactiveSequenceParserRuleCall_0; }
		
		//SequenceNode
		public RuleCall getSequenceNodeParserRuleCall_1() { return cSequenceNodeParserRuleCall_1; }
		
		//FallbackNode
		public RuleCall getFallbackNodeParserRuleCall_2() { return cFallbackNodeParserRuleCall_2; }
		
		//ReactiveFallback
		public RuleCall getReactiveFallbackParserRuleCall_3() { return cReactiveFallbackParserRuleCall_3; }
		
		//SequenceStarNode
		public RuleCall getSequenceStarNodeParserRuleCall_4() { return cSequenceStarNodeParserRuleCall_4; }
		
		//ParallelNode
		public RuleCall getParallelNodeParserRuleCall_5() { return cParallelNodeParserRuleCall_5; }
		
		//IfThenElseNode
		public RuleCall getIfThenElseNodeParserRuleCall_6() { return cIfThenElseNodeParserRuleCall_6; }
		
		//SwitchNode
		public RuleCall getSwitchNodeParserRuleCall_7() { return cSwitchNodeParserRuleCall_7; }
		
		//WhileDoElseNode
		public RuleCall getWhileDoElseNodeParserRuleCall_8() { return cWhileDoElseNodeParserRuleCall_8; }
		
		//MnualNode
		public RuleCall getMnualNodeParserRuleCall_9() { return cMnualNodeParserRuleCall_9; }
	}
	public class DecoratorNodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.chalmers.qualitybt.QualityBt.DecoratorNode");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cRepeatNodeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cForceFailureNodeParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cForceSuccessNodeParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cRetryNodeParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cInverterNodeParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cTimeoutNodeParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cKeepRunningUntilFailureNodeParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cTimerQueueNodeParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		private final RuleCall cBlackboardCheckIntParserRuleCall_8 = (RuleCall)cAlternatives.eContents().get(8);
		private final RuleCall cBlackboardCheckDoubleParserRuleCall_9 = (RuleCall)cAlternatives.eContents().get(9);
		private final RuleCall cBlackboardCheckStringParserRuleCall_10 = (RuleCall)cAlternatives.eContents().get(10);
		
		//DecoratorNode returns DecoratorNode:
		//    RepeatNode | ForceFailureNode | ForceSuccessNode | RetryNode | InverterNode | TimeoutNode | KeepRunningUntilFailureNode | TimerQueueNode | BlackboardCheckInt | BlackboardCheckDouble |BlackboardCheckString;
		@Override public ParserRule getRule() { return rule; }
		
		//RepeatNode | ForceFailureNode | ForceSuccessNode | RetryNode | InverterNode | TimeoutNode | KeepRunningUntilFailureNode | TimerQueueNode | BlackboardCheckInt | BlackboardCheckDouble |BlackboardCheckString
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//RepeatNode
		public RuleCall getRepeatNodeParserRuleCall_0() { return cRepeatNodeParserRuleCall_0; }
		
		//ForceFailureNode
		public RuleCall getForceFailureNodeParserRuleCall_1() { return cForceFailureNodeParserRuleCall_1; }
		
		//ForceSuccessNode
		public RuleCall getForceSuccessNodeParserRuleCall_2() { return cForceSuccessNodeParserRuleCall_2; }
		
		//RetryNode
		public RuleCall getRetryNodeParserRuleCall_3() { return cRetryNodeParserRuleCall_3; }
		
		//InverterNode
		public RuleCall getInverterNodeParserRuleCall_4() { return cInverterNodeParserRuleCall_4; }
		
		//TimeoutNode
		public RuleCall getTimeoutNodeParserRuleCall_5() { return cTimeoutNodeParserRuleCall_5; }
		
		//KeepRunningUntilFailureNode
		public RuleCall getKeepRunningUntilFailureNodeParserRuleCall_6() { return cKeepRunningUntilFailureNodeParserRuleCall_6; }
		
		//TimerQueueNode
		public RuleCall getTimerQueueNodeParserRuleCall_7() { return cTimerQueueNodeParserRuleCall_7; }
		
		//BlackboardCheckInt
		public RuleCall getBlackboardCheckIntParserRuleCall_8() { return cBlackboardCheckIntParserRuleCall_8; }
		
		//BlackboardCheckDouble
		public RuleCall getBlackboardCheckDoubleParserRuleCall_9() { return cBlackboardCheckDoubleParserRuleCall_9; }
		
		//BlackboardCheckString
		public RuleCall getBlackboardCheckStringParserRuleCall_10() { return cBlackboardCheckStringParserRuleCall_10; }
	}
	public class BehaviorTreeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.chalmers.qualitybt.QualityBt.BehaviorTree");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cBehaviorTreeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cIDKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cEqualsSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cIDAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cIDEStringParserRuleCall_3_0 = (RuleCall)cIDAssignment_3.eContents().get(0);
		private final RuleCall cBEGINTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final Assignment cNodeAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cNodeTreeNodeParserRuleCall_5_0 = (RuleCall)cNodeAssignment_5.eContents().get(0);
		private final Assignment cNodeAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cNodeTreeNodeParserRuleCall_6_0 = (RuleCall)cNodeAssignment_6.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_7 = (RuleCall)cGroup.eContents().get(7);
		
		//BehaviorTree returns BehaviorTree:
		//    'BehaviorTree'
		//        'ID' "=" ID=EString
		//        BEGIN node+=TreeNode (node+=TreeNode)*  END
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'BehaviorTree'
		//    'ID' "=" ID=EString
		//    BEGIN node+=TreeNode (node+=TreeNode)*  END
		public Group getGroup() { return cGroup; }
		
		//'BehaviorTree'
		public Keyword getBehaviorTreeKeyword_0() { return cBehaviorTreeKeyword_0; }
		
		//'ID'
		public Keyword getIDKeyword_1() { return cIDKeyword_1; }
		
		//"="
		public Keyword getEqualsSignKeyword_2() { return cEqualsSignKeyword_2; }
		
		//ID=EString
		public Assignment getIDAssignment_3() { return cIDAssignment_3; }
		
		//EString
		public RuleCall getIDEStringParserRuleCall_3_0() { return cIDEStringParserRuleCall_3_0; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_4() { return cBEGINTerminalRuleCall_4; }
		
		//node+=TreeNode
		public Assignment getNodeAssignment_5() { return cNodeAssignment_5; }
		
		//TreeNode
		public RuleCall getNodeTreeNodeParserRuleCall_5_0() { return cNodeTreeNodeParserRuleCall_5_0; }
		
		//(node+=TreeNode)*
		public Assignment getNodeAssignment_6() { return cNodeAssignment_6; }
		
		//TreeNode
		public RuleCall getNodeTreeNodeParserRuleCall_6_0() { return cNodeTreeNodeParserRuleCall_6_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_7() { return cENDTerminalRuleCall_7; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.chalmers.qualitybt.QualityBt.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString returns ecore::EString:
		//    STRING | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	public class ParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.chalmers.qualitybt.QualityBt.Parameter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cKeyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cKeyEStringParserRuleCall_0_0 = (RuleCall)cKeyAssignment_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueEStringParserRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		//Parameter returns Parameter:
		//        key=EString "=" value=EString
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//key=EString "=" value=EString
		public Group getGroup() { return cGroup; }
		
		//key=EString
		public Assignment getKeyAssignment_0() { return cKeyAssignment_0; }
		
		//EString
		public RuleCall getKeyEStringParserRuleCall_0_0() { return cKeyEStringParserRuleCall_0_0; }
		
		//"="
		public Keyword getEqualsSignKeyword_1() { return cEqualsSignKeyword_1; }
		
		//value=EString
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }
		
		//EString
		public RuleCall getValueEStringParserRuleCall_2_0() { return cValueEStringParserRuleCall_2_0; }
	}
	public class AlwaysFailureNodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.chalmers.qualitybt.QualityBt.AlwaysFailureNode");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cAlwaysFailureNodeAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cAlwaysFailureKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//AlwaysFailureNode returns AlwaysFailureNode:
		//    {AlwaysFailureNode}
		//    'AlwaysFailure'
		////    name=EString
		////        ('ID' uID=EString)?
		////        ('NodeType' NodeType=NodeType)?
		////        ('NodeStatus' NodeStatus=NodeStatus)?
		////        ('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{AlwaysFailureNode}
		//'AlwaysFailure'
		public Group getGroup() { return cGroup; }
		
		//{AlwaysFailureNode}
		public Action getAlwaysFailureNodeAction_0() { return cAlwaysFailureNodeAction_0; }
		
		//'AlwaysFailure'
		public Keyword getAlwaysFailureKeyword_1() { return cAlwaysFailureKeyword_1; }
	}
	public class AlwaysSuccessNodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.chalmers.qualitybt.QualityBt.AlwaysSuccessNode");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cAlwaysSuccessNodeAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cAlwaysSuccessNodeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cIDKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cUIDAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cUIDEStringParserRuleCall_4_1_0 = (RuleCall)cUIDAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cNodeTypeKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cNodeTypeAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cNodeTypeNodeTypeEnumRuleCall_5_1_0 = (RuleCall)cNodeTypeAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cNodeStatusKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cNodeStatusAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cNodeStatusNodeStatusEnumRuleCall_6_1_0 = (RuleCall)cNodeStatusAssignment_6_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cParametersKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Assignment cParametersAssignment_7_2 = (Assignment)cGroup_7.eContents().get(2);
		private final RuleCall cParametersParameterParserRuleCall_7_2_0 = (RuleCall)cParametersAssignment_7_2.eContents().get(0);
		private final Group cGroup_7_3 = (Group)cGroup_7.eContents().get(3);
		private final Keyword cCommaKeyword_7_3_0 = (Keyword)cGroup_7_3.eContents().get(0);
		private final Assignment cParametersAssignment_7_3_1 = (Assignment)cGroup_7_3.eContents().get(1);
		private final RuleCall cParametersParameterParserRuleCall_7_3_1_0 = (RuleCall)cParametersAssignment_7_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7_4 = (Keyword)cGroup_7.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//AlwaysSuccessNode returns AlwaysSuccessNode:
		//    {AlwaysSuccessNode}
		//    'AlwaysSuccessNode'
		//    name=EString
		//    '{'
		//        ('ID' uID=EString)?
		//        ('NodeType' NodeType=NodeType)?
		//        ('NodeStatus' NodeStatus=NodeStatus)?
		//        ('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{AlwaysSuccessNode}
		//'AlwaysSuccessNode'
		//name=EString
		//'{'
		//    ('ID' uID=EString)?
		//    ('NodeType' NodeType=NodeType)?
		//    ('NodeStatus' NodeStatus=NodeStatus)?
		//    ('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{AlwaysSuccessNode}
		public Action getAlwaysSuccessNodeAction_0() { return cAlwaysSuccessNodeAction_0; }
		
		//'AlwaysSuccessNode'
		public Keyword getAlwaysSuccessNodeKeyword_1() { return cAlwaysSuccessNodeKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//('ID' uID=EString)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'ID'
		public Keyword getIDKeyword_4_0() { return cIDKeyword_4_0; }
		
		//uID=EString
		public Assignment getUIDAssignment_4_1() { return cUIDAssignment_4_1; }
		
		//EString
		public RuleCall getUIDEStringParserRuleCall_4_1_0() { return cUIDEStringParserRuleCall_4_1_0; }
		
		//('NodeType' NodeType=NodeType)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'NodeType'
		public Keyword getNodeTypeKeyword_5_0() { return cNodeTypeKeyword_5_0; }
		
		//NodeType=NodeType
		public Assignment getNodeTypeAssignment_5_1() { return cNodeTypeAssignment_5_1; }
		
		//NodeType
		public RuleCall getNodeTypeNodeTypeEnumRuleCall_5_1_0() { return cNodeTypeNodeTypeEnumRuleCall_5_1_0; }
		
		//('NodeStatus' NodeStatus=NodeStatus)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'NodeStatus'
		public Keyword getNodeStatusKeyword_6_0() { return cNodeStatusKeyword_6_0; }
		
		//NodeStatus=NodeStatus
		public Assignment getNodeStatusAssignment_6_1() { return cNodeStatusAssignment_6_1; }
		
		//NodeStatus
		public RuleCall getNodeStatusNodeStatusEnumRuleCall_6_1_0() { return cNodeStatusNodeStatusEnumRuleCall_6_1_0; }
		
		//('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		public Group getGroup_7() { return cGroup_7; }
		
		//'parameters'
		public Keyword getParametersKeyword_7_0() { return cParametersKeyword_7_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_7_1() { return cLeftCurlyBracketKeyword_7_1; }
		
		//parameters+=Parameter
		public Assignment getParametersAssignment_7_2() { return cParametersAssignment_7_2; }
		
		//Parameter
		public RuleCall getParametersParameterParserRuleCall_7_2_0() { return cParametersParameterParserRuleCall_7_2_0; }
		
		//( "," parameters+=Parameter)*
		public Group getGroup_7_3() { return cGroup_7_3; }
		
		//","
		public Keyword getCommaKeyword_7_3_0() { return cCommaKeyword_7_3_0; }
		
		//parameters+=Parameter
		public Assignment getParametersAssignment_7_3_1() { return cParametersAssignment_7_3_1; }
		
		//Parameter
		public RuleCall getParametersParameterParserRuleCall_7_3_1_0() { return cParametersParameterParserRuleCall_7_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7_4() { return cRightCurlyBracketKeyword_7_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}
	public class SetBlackboardNodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.chalmers.qualitybt.QualityBt.SetBlackboardNode");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSetBlackboardNodeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cIDKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cUIDAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cUIDEStringParserRuleCall_3_1_0 = (RuleCall)cUIDAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cNodeTypeKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cNodeTypeAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cNodeTypeNodeTypeEnumRuleCall_4_1_0 = (RuleCall)cNodeTypeAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cNodeStatusKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cNodeStatusAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cNodeStatusNodeStatusEnumRuleCall_5_1_0 = (RuleCall)cNodeStatusAssignment_5_1.eContents().get(0);
		private final Keyword cValueKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cValueAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cValueEStringParserRuleCall_7_0 = (RuleCall)cValueAssignment_7.eContents().get(0);
		private final Keyword cOutput_keyKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cOutput_keyAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cOutput_keyEStringParserRuleCall_9_0 = (RuleCall)cOutput_keyAssignment_9.eContents().get(0);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cParametersKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_10_1 = (Keyword)cGroup_10.eContents().get(1);
		private final Assignment cParametersAssignment_10_2 = (Assignment)cGroup_10.eContents().get(2);
		private final RuleCall cParametersParameterParserRuleCall_10_2_0 = (RuleCall)cParametersAssignment_10_2.eContents().get(0);
		private final Group cGroup_10_3 = (Group)cGroup_10.eContents().get(3);
		private final Keyword cCommaKeyword_10_3_0 = (Keyword)cGroup_10_3.eContents().get(0);
		private final Assignment cParametersAssignment_10_3_1 = (Assignment)cGroup_10_3.eContents().get(1);
		private final RuleCall cParametersParameterParserRuleCall_10_3_1_0 = (RuleCall)cParametersAssignment_10_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_10_4 = (Keyword)cGroup_10.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		
		//SetBlackboardNode returns SetBlackboardNode:
		//    'SetBlackboardNode'
		//    name=EString
		//    '{'
		//        ("ID" uID=EString)?
		//        ('NodeType' NodeType=NodeType)?
		//        ('NodeStatus' NodeStatus=NodeStatus)?
		//        'value' value=EString
		//        'output_key' output_key=EString
		//        ('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'SetBlackboardNode'
		//name=EString
		//'{'
		//    ("ID" uID=EString)?
		//    ('NodeType' NodeType=NodeType)?
		//    ('NodeStatus' NodeStatus=NodeStatus)?
		//    'value' value=EString
		//    'output_key' output_key=EString
		//    ('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'SetBlackboardNode'
		public Keyword getSetBlackboardNodeKeyword_0() { return cSetBlackboardNodeKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//("ID" uID=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//"ID"
		public Keyword getIDKeyword_3_0() { return cIDKeyword_3_0; }
		
		//uID=EString
		public Assignment getUIDAssignment_3_1() { return cUIDAssignment_3_1; }
		
		//EString
		public RuleCall getUIDEStringParserRuleCall_3_1_0() { return cUIDEStringParserRuleCall_3_1_0; }
		
		//('NodeType' NodeType=NodeType)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'NodeType'
		public Keyword getNodeTypeKeyword_4_0() { return cNodeTypeKeyword_4_0; }
		
		//NodeType=NodeType
		public Assignment getNodeTypeAssignment_4_1() { return cNodeTypeAssignment_4_1; }
		
		//NodeType
		public RuleCall getNodeTypeNodeTypeEnumRuleCall_4_1_0() { return cNodeTypeNodeTypeEnumRuleCall_4_1_0; }
		
		//('NodeStatus' NodeStatus=NodeStatus)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'NodeStatus'
		public Keyword getNodeStatusKeyword_5_0() { return cNodeStatusKeyword_5_0; }
		
		//NodeStatus=NodeStatus
		public Assignment getNodeStatusAssignment_5_1() { return cNodeStatusAssignment_5_1; }
		
		//NodeStatus
		public RuleCall getNodeStatusNodeStatusEnumRuleCall_5_1_0() { return cNodeStatusNodeStatusEnumRuleCall_5_1_0; }
		
		//'value'
		public Keyword getValueKeyword_6() { return cValueKeyword_6; }
		
		//value=EString
		public Assignment getValueAssignment_7() { return cValueAssignment_7; }
		
		//EString
		public RuleCall getValueEStringParserRuleCall_7_0() { return cValueEStringParserRuleCall_7_0; }
		
		//'output_key'
		public Keyword getOutput_keyKeyword_8() { return cOutput_keyKeyword_8; }
		
		//output_key=EString
		public Assignment getOutput_keyAssignment_9() { return cOutput_keyAssignment_9; }
		
		//EString
		public RuleCall getOutput_keyEStringParserRuleCall_9_0() { return cOutput_keyEStringParserRuleCall_9_0; }
		
		//('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		public Group getGroup_10() { return cGroup_10; }
		
		//'parameters'
		public Keyword getParametersKeyword_10_0() { return cParametersKeyword_10_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_10_1() { return cLeftCurlyBracketKeyword_10_1; }
		
		//parameters+=Parameter
		public Assignment getParametersAssignment_10_2() { return cParametersAssignment_10_2; }
		
		//Parameter
		public RuleCall getParametersParameterParserRuleCall_10_2_0() { return cParametersParameterParserRuleCall_10_2_0; }
		
		//( "," parameters+=Parameter)*
		public Group getGroup_10_3() { return cGroup_10_3; }
		
		//","
		public Keyword getCommaKeyword_10_3_0() { return cCommaKeyword_10_3_0; }
		
		//parameters+=Parameter
		public Assignment getParametersAssignment_10_3_1() { return cParametersAssignment_10_3_1; }
		
		//Parameter
		public RuleCall getParametersParameterParserRuleCall_10_3_1_0() { return cParametersParameterParserRuleCall_10_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_10_4() { return cRightCurlyBracketKeyword_10_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_11() { return cRightCurlyBracketKeyword_11; }
	}
	public class FallbackNodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.chalmers.qualitybt.QualityBt.FallbackNode");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFallbackNodeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cIDKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cUIDAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cUIDEStringParserRuleCall_3_1_0 = (RuleCall)cUIDAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cNodeTypeKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cNodeTypeAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cNodeTypeNodeTypeEnumRuleCall_4_1_0 = (RuleCall)cNodeTypeAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cNodeStatusKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cNodeStatusAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cNodeStatusNodeStatusEnumRuleCall_5_1_0 = (RuleCall)cNodeStatusAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cParametersKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cParametersAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cParametersParameterParserRuleCall_6_2_0 = (RuleCall)cParametersAssignment_6_2.eContents().get(0);
		private final Group cGroup_6_3 = (Group)cGroup_6.eContents().get(3);
		private final Keyword cCommaKeyword_6_3_0 = (Keyword)cGroup_6_3.eContents().get(0);
		private final Assignment cParametersAssignment_6_3_1 = (Assignment)cGroup_6_3.eContents().get(1);
		private final RuleCall cParametersParameterParserRuleCall_6_3_1_0 = (RuleCall)cParametersAssignment_6_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6_4 = (Keyword)cGroup_6.eContents().get(4);
		private final Keyword cChildKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cLeftCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cChildAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cChildTreeNodeParserRuleCall_9_0 = (RuleCall)cChildAssignment_9.eContents().get(0);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cCommaKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Assignment cChildAssignment_10_1 = (Assignment)cGroup_10.eContents().get(1);
		private final RuleCall cChildTreeNodeParserRuleCall_10_1_0 = (RuleCall)cChildAssignment_10_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Keyword cRightCurlyBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		
		//FallbackNode returns FallbackNode:
		//    'FallbackNode'
		//    name=EString
		//    '{'
		//        ("ID" uID=EString)?
		//        ('NodeType' NodeType=NodeType)?
		//        ('NodeStatus' NodeStatus=NodeStatus)?
		//        ('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		//        'child' '{' child+=TreeNode ( "," child+=TreeNode)* '}'
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'FallbackNode'
		//name=EString
		//'{'
		//    ("ID" uID=EString)?
		//    ('NodeType' NodeType=NodeType)?
		//    ('NodeStatus' NodeStatus=NodeStatus)?
		//    ('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		//    'child' '{' child+=TreeNode ( "," child+=TreeNode)* '}'
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'FallbackNode'
		public Keyword getFallbackNodeKeyword_0() { return cFallbackNodeKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//("ID" uID=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//"ID"
		public Keyword getIDKeyword_3_0() { return cIDKeyword_3_0; }
		
		//uID=EString
		public Assignment getUIDAssignment_3_1() { return cUIDAssignment_3_1; }
		
		//EString
		public RuleCall getUIDEStringParserRuleCall_3_1_0() { return cUIDEStringParserRuleCall_3_1_0; }
		
		//('NodeType' NodeType=NodeType)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'NodeType'
		public Keyword getNodeTypeKeyword_4_0() { return cNodeTypeKeyword_4_0; }
		
		//NodeType=NodeType
		public Assignment getNodeTypeAssignment_4_1() { return cNodeTypeAssignment_4_1; }
		
		//NodeType
		public RuleCall getNodeTypeNodeTypeEnumRuleCall_4_1_0() { return cNodeTypeNodeTypeEnumRuleCall_4_1_0; }
		
		//('NodeStatus' NodeStatus=NodeStatus)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'NodeStatus'
		public Keyword getNodeStatusKeyword_5_0() { return cNodeStatusKeyword_5_0; }
		
		//NodeStatus=NodeStatus
		public Assignment getNodeStatusAssignment_5_1() { return cNodeStatusAssignment_5_1; }
		
		//NodeStatus
		public RuleCall getNodeStatusNodeStatusEnumRuleCall_5_1_0() { return cNodeStatusNodeStatusEnumRuleCall_5_1_0; }
		
		//('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		public Group getGroup_6() { return cGroup_6; }
		
		//'parameters'
		public Keyword getParametersKeyword_6_0() { return cParametersKeyword_6_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6_1() { return cLeftCurlyBracketKeyword_6_1; }
		
		//parameters+=Parameter
		public Assignment getParametersAssignment_6_2() { return cParametersAssignment_6_2; }
		
		//Parameter
		public RuleCall getParametersParameterParserRuleCall_6_2_0() { return cParametersParameterParserRuleCall_6_2_0; }
		
		//( "," parameters+=Parameter)*
		public Group getGroup_6_3() { return cGroup_6_3; }
		
		//","
		public Keyword getCommaKeyword_6_3_0() { return cCommaKeyword_6_3_0; }
		
		//parameters+=Parameter
		public Assignment getParametersAssignment_6_3_1() { return cParametersAssignment_6_3_1; }
		
		//Parameter
		public RuleCall getParametersParameterParserRuleCall_6_3_1_0() { return cParametersParameterParserRuleCall_6_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6_4() { return cRightCurlyBracketKeyword_6_4; }
		
		//'child'
		public Keyword getChildKeyword_7() { return cChildKeyword_7; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_8() { return cLeftCurlyBracketKeyword_8; }
		
		//child+=TreeNode
		public Assignment getChildAssignment_9() { return cChildAssignment_9; }
		
		//TreeNode
		public RuleCall getChildTreeNodeParserRuleCall_9_0() { return cChildTreeNodeParserRuleCall_9_0; }
		
		//( "," child+=TreeNode)*
		public Group getGroup_10() { return cGroup_10; }
		
		//","
		public Keyword getCommaKeyword_10_0() { return cCommaKeyword_10_0; }
		
		//child+=TreeNode
		public Assignment getChildAssignment_10_1() { return cChildAssignment_10_1; }
		
		//TreeNode
		public RuleCall getChildTreeNodeParserRuleCall_10_1_0() { return cChildTreeNodeParserRuleCall_10_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_11() { return cRightCurlyBracketKeyword_11; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_12() { return cRightCurlyBracketKeyword_12; }
	}
	public class IfThenElseNodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.chalmers.qualitybt.QualityBt.IfThenElseNode");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cIfThenElseNodeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cIDKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cUIDAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cUIDEStringParserRuleCall_3_1_0 = (RuleCall)cUIDAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cNodeTypeKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cNodeTypeAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cNodeTypeNodeTypeEnumRuleCall_4_1_0 = (RuleCall)cNodeTypeAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cNodeStatusKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cNodeStatusAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cNodeStatusNodeStatusEnumRuleCall_5_1_0 = (RuleCall)cNodeStatusAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cParametersKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cParametersAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cParametersParameterParserRuleCall_6_2_0 = (RuleCall)cParametersAssignment_6_2.eContents().get(0);
		private final Group cGroup_6_3 = (Group)cGroup_6.eContents().get(3);
		private final Keyword cCommaKeyword_6_3_0 = (Keyword)cGroup_6_3.eContents().get(0);
		private final Assignment cParametersAssignment_6_3_1 = (Assignment)cGroup_6_3.eContents().get(1);
		private final RuleCall cParametersParameterParserRuleCall_6_3_1_0 = (RuleCall)cParametersAssignment_6_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6_4 = (Keyword)cGroup_6.eContents().get(4);
		private final Keyword cChildKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cLeftCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cChildAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cChildTreeNodeParserRuleCall_9_0 = (RuleCall)cChildAssignment_9.eContents().get(0);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cCommaKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Assignment cChildAssignment_10_1 = (Assignment)cGroup_10.eContents().get(1);
		private final RuleCall cChildTreeNodeParserRuleCall_10_1_0 = (RuleCall)cChildAssignment_10_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Keyword cRightCurlyBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		
		//IfThenElseNode returns IfThenElseNode:
		//    'IfThenElseNode'
		//    name=EString
		//    '{'
		//        ("ID" uID=EString)?
		//        ('NodeType' NodeType=NodeType)?
		//        ('NodeStatus' NodeStatus=NodeStatus)?
		//        ('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		//        'child' '{' child+=TreeNode ( "," child+=TreeNode)* '}'
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'IfThenElseNode'
		//name=EString
		//'{'
		//    ("ID" uID=EString)?
		//    ('NodeType' NodeType=NodeType)?
		//    ('NodeStatus' NodeStatus=NodeStatus)?
		//    ('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		//    'child' '{' child+=TreeNode ( "," child+=TreeNode)* '}'
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'IfThenElseNode'
		public Keyword getIfThenElseNodeKeyword_0() { return cIfThenElseNodeKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//("ID" uID=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//"ID"
		public Keyword getIDKeyword_3_0() { return cIDKeyword_3_0; }
		
		//uID=EString
		public Assignment getUIDAssignment_3_1() { return cUIDAssignment_3_1; }
		
		//EString
		public RuleCall getUIDEStringParserRuleCall_3_1_0() { return cUIDEStringParserRuleCall_3_1_0; }
		
		//('NodeType' NodeType=NodeType)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'NodeType'
		public Keyword getNodeTypeKeyword_4_0() { return cNodeTypeKeyword_4_0; }
		
		//NodeType=NodeType
		public Assignment getNodeTypeAssignment_4_1() { return cNodeTypeAssignment_4_1; }
		
		//NodeType
		public RuleCall getNodeTypeNodeTypeEnumRuleCall_4_1_0() { return cNodeTypeNodeTypeEnumRuleCall_4_1_0; }
		
		//('NodeStatus' NodeStatus=NodeStatus)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'NodeStatus'
		public Keyword getNodeStatusKeyword_5_0() { return cNodeStatusKeyword_5_0; }
		
		//NodeStatus=NodeStatus
		public Assignment getNodeStatusAssignment_5_1() { return cNodeStatusAssignment_5_1; }
		
		//NodeStatus
		public RuleCall getNodeStatusNodeStatusEnumRuleCall_5_1_0() { return cNodeStatusNodeStatusEnumRuleCall_5_1_0; }
		
		//('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		public Group getGroup_6() { return cGroup_6; }
		
		//'parameters'
		public Keyword getParametersKeyword_6_0() { return cParametersKeyword_6_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6_1() { return cLeftCurlyBracketKeyword_6_1; }
		
		//parameters+=Parameter
		public Assignment getParametersAssignment_6_2() { return cParametersAssignment_6_2; }
		
		//Parameter
		public RuleCall getParametersParameterParserRuleCall_6_2_0() { return cParametersParameterParserRuleCall_6_2_0; }
		
		//( "," parameters+=Parameter)*
		public Group getGroup_6_3() { return cGroup_6_3; }
		
		//","
		public Keyword getCommaKeyword_6_3_0() { return cCommaKeyword_6_3_0; }
		
		//parameters+=Parameter
		public Assignment getParametersAssignment_6_3_1() { return cParametersAssignment_6_3_1; }
		
		//Parameter
		public RuleCall getParametersParameterParserRuleCall_6_3_1_0() { return cParametersParameterParserRuleCall_6_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6_4() { return cRightCurlyBracketKeyword_6_4; }
		
		//'child'
		public Keyword getChildKeyword_7() { return cChildKeyword_7; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_8() { return cLeftCurlyBracketKeyword_8; }
		
		//child+=TreeNode
		public Assignment getChildAssignment_9() { return cChildAssignment_9; }
		
		//TreeNode
		public RuleCall getChildTreeNodeParserRuleCall_9_0() { return cChildTreeNodeParserRuleCall_9_0; }
		
		//( "," child+=TreeNode)*
		public Group getGroup_10() { return cGroup_10; }
		
		//","
		public Keyword getCommaKeyword_10_0() { return cCommaKeyword_10_0; }
		
		//child+=TreeNode
		public Assignment getChildAssignment_10_1() { return cChildAssignment_10_1; }
		
		//TreeNode
		public RuleCall getChildTreeNodeParserRuleCall_10_1_0() { return cChildTreeNodeParserRuleCall_10_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_11() { return cRightCurlyBracketKeyword_11; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_12() { return cRightCurlyBracketKeyword_12; }
	}
	public class MnualNodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.chalmers.qualitybt.QualityBt.MnualNode");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMnualNodeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cIDKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cUIDAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cUIDEStringParserRuleCall_3_1_0 = (RuleCall)cUIDAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cNodeTypeKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cNodeTypeAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cNodeTypeNodeTypeEnumRuleCall_4_1_0 = (RuleCall)cNodeTypeAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cNodeStatusKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cNodeStatusAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cNodeStatusNodeStatusEnumRuleCall_5_1_0 = (RuleCall)cNodeStatusAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cParametersKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cParametersAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cParametersParameterParserRuleCall_6_2_0 = (RuleCall)cParametersAssignment_6_2.eContents().get(0);
		private final Group cGroup_6_3 = (Group)cGroup_6.eContents().get(3);
		private final Keyword cCommaKeyword_6_3_0 = (Keyword)cGroup_6_3.eContents().get(0);
		private final Assignment cParametersAssignment_6_3_1 = (Assignment)cGroup_6_3.eContents().get(1);
		private final RuleCall cParametersParameterParserRuleCall_6_3_1_0 = (RuleCall)cParametersAssignment_6_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6_4 = (Keyword)cGroup_6.eContents().get(4);
		private final Keyword cChildKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cLeftCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cChildAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cChildTreeNodeParserRuleCall_9_0 = (RuleCall)cChildAssignment_9.eContents().get(0);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cCommaKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Assignment cChildAssignment_10_1 = (Assignment)cGroup_10.eContents().get(1);
		private final RuleCall cChildTreeNodeParserRuleCall_10_1_0 = (RuleCall)cChildAssignment_10_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Keyword cRightCurlyBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		
		//MnualNode returns MnualNode:
		//    'MnualNode'
		//    name=EString
		//    '{'
		//        ("ID" uID=EString)?
		//        ('NodeType' NodeType=NodeType)?
		//        ('NodeStatus' NodeStatus=NodeStatus)?
		//        ('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		//        'child' '{' child+=TreeNode ( "," child+=TreeNode)* '}'
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'MnualNode'
		//name=EString
		//'{'
		//    ("ID" uID=EString)?
		//    ('NodeType' NodeType=NodeType)?
		//    ('NodeStatus' NodeStatus=NodeStatus)?
		//    ('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		//    'child' '{' child+=TreeNode ( "," child+=TreeNode)* '}'
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'MnualNode'
		public Keyword getMnualNodeKeyword_0() { return cMnualNodeKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//("ID" uID=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//"ID"
		public Keyword getIDKeyword_3_0() { return cIDKeyword_3_0; }
		
		//uID=EString
		public Assignment getUIDAssignment_3_1() { return cUIDAssignment_3_1; }
		
		//EString
		public RuleCall getUIDEStringParserRuleCall_3_1_0() { return cUIDEStringParserRuleCall_3_1_0; }
		
		//('NodeType' NodeType=NodeType)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'NodeType'
		public Keyword getNodeTypeKeyword_4_0() { return cNodeTypeKeyword_4_0; }
		
		//NodeType=NodeType
		public Assignment getNodeTypeAssignment_4_1() { return cNodeTypeAssignment_4_1; }
		
		//NodeType
		public RuleCall getNodeTypeNodeTypeEnumRuleCall_4_1_0() { return cNodeTypeNodeTypeEnumRuleCall_4_1_0; }
		
		//('NodeStatus' NodeStatus=NodeStatus)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'NodeStatus'
		public Keyword getNodeStatusKeyword_5_0() { return cNodeStatusKeyword_5_0; }
		
		//NodeStatus=NodeStatus
		public Assignment getNodeStatusAssignment_5_1() { return cNodeStatusAssignment_5_1; }
		
		//NodeStatus
		public RuleCall getNodeStatusNodeStatusEnumRuleCall_5_1_0() { return cNodeStatusNodeStatusEnumRuleCall_5_1_0; }
		
		//('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		public Group getGroup_6() { return cGroup_6; }
		
		//'parameters'
		public Keyword getParametersKeyword_6_0() { return cParametersKeyword_6_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6_1() { return cLeftCurlyBracketKeyword_6_1; }
		
		//parameters+=Parameter
		public Assignment getParametersAssignment_6_2() { return cParametersAssignment_6_2; }
		
		//Parameter
		public RuleCall getParametersParameterParserRuleCall_6_2_0() { return cParametersParameterParserRuleCall_6_2_0; }
		
		//( "," parameters+=Parameter)*
		public Group getGroup_6_3() { return cGroup_6_3; }
		
		//","
		public Keyword getCommaKeyword_6_3_0() { return cCommaKeyword_6_3_0; }
		
		//parameters+=Parameter
		public Assignment getParametersAssignment_6_3_1() { return cParametersAssignment_6_3_1; }
		
		//Parameter
		public RuleCall getParametersParameterParserRuleCall_6_3_1_0() { return cParametersParameterParserRuleCall_6_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6_4() { return cRightCurlyBracketKeyword_6_4; }
		
		//'child'
		public Keyword getChildKeyword_7() { return cChildKeyword_7; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_8() { return cLeftCurlyBracketKeyword_8; }
		
		//child+=TreeNode
		public Assignment getChildAssignment_9() { return cChildAssignment_9; }
		
		//TreeNode
		public RuleCall getChildTreeNodeParserRuleCall_9_0() { return cChildTreeNodeParserRuleCall_9_0; }
		
		//( "," child+=TreeNode)*
		public Group getGroup_10() { return cGroup_10; }
		
		//","
		public Keyword getCommaKeyword_10_0() { return cCommaKeyword_10_0; }
		
		//child+=TreeNode
		public Assignment getChildAssignment_10_1() { return cChildAssignment_10_1; }
		
		//TreeNode
		public RuleCall getChildTreeNodeParserRuleCall_10_1_0() { return cChildTreeNodeParserRuleCall_10_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_11() { return cRightCurlyBracketKeyword_11; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_12() { return cRightCurlyBracketKeyword_12; }
	}
	public class ParallelNodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.chalmers.qualitybt.QualityBt.ParallelNode");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cParallelNodeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cIDKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cUIDAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cUIDEStringParserRuleCall_3_1_0 = (RuleCall)cUIDAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cNodeTypeKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cNodeTypeAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cNodeTypeNodeTypeEnumRuleCall_4_1_0 = (RuleCall)cNodeTypeAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cNodeStatusKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cNodeStatusAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cNodeStatusNodeStatusEnumRuleCall_5_1_0 = (RuleCall)cNodeStatusAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cParametersKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cParametersAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cParametersParameterParserRuleCall_6_2_0 = (RuleCall)cParametersAssignment_6_2.eContents().get(0);
		private final Group cGroup_6_3 = (Group)cGroup_6.eContents().get(3);
		private final Keyword cCommaKeyword_6_3_0 = (Keyword)cGroup_6_3.eContents().get(0);
		private final Assignment cParametersAssignment_6_3_1 = (Assignment)cGroup_6_3.eContents().get(1);
		private final RuleCall cParametersParameterParserRuleCall_6_3_1_0 = (RuleCall)cParametersAssignment_6_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6_4 = (Keyword)cGroup_6.eContents().get(4);
		private final Keyword cChildKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cLeftCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cChildAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cChildTreeNodeParserRuleCall_9_0 = (RuleCall)cChildAssignment_9.eContents().get(0);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cCommaKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Assignment cChildAssignment_10_1 = (Assignment)cGroup_10.eContents().get(1);
		private final RuleCall cChildTreeNodeParserRuleCall_10_1_0 = (RuleCall)cChildAssignment_10_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Keyword cRightCurlyBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		
		//ParallelNode returns ParallelNode:
		//    'ParallelNode'
		//    name=EString
		//    '{'
		//        ("ID" uID=EString)?
		//        ('NodeType' NodeType=NodeType)?
		//        ('NodeStatus' NodeStatus=NodeStatus)?
		//        ('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		//        'child' '{' child+=TreeNode ( "," child+=TreeNode)* '}'
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'ParallelNode'
		//name=EString
		//'{'
		//    ("ID" uID=EString)?
		//    ('NodeType' NodeType=NodeType)?
		//    ('NodeStatus' NodeStatus=NodeStatus)?
		//    ('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		//    'child' '{' child+=TreeNode ( "," child+=TreeNode)* '}'
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'ParallelNode'
		public Keyword getParallelNodeKeyword_0() { return cParallelNodeKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//("ID" uID=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//"ID"
		public Keyword getIDKeyword_3_0() { return cIDKeyword_3_0; }
		
		//uID=EString
		public Assignment getUIDAssignment_3_1() { return cUIDAssignment_3_1; }
		
		//EString
		public RuleCall getUIDEStringParserRuleCall_3_1_0() { return cUIDEStringParserRuleCall_3_1_0; }
		
		//('NodeType' NodeType=NodeType)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'NodeType'
		public Keyword getNodeTypeKeyword_4_0() { return cNodeTypeKeyword_4_0; }
		
		//NodeType=NodeType
		public Assignment getNodeTypeAssignment_4_1() { return cNodeTypeAssignment_4_1; }
		
		//NodeType
		public RuleCall getNodeTypeNodeTypeEnumRuleCall_4_1_0() { return cNodeTypeNodeTypeEnumRuleCall_4_1_0; }
		
		//('NodeStatus' NodeStatus=NodeStatus)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'NodeStatus'
		public Keyword getNodeStatusKeyword_5_0() { return cNodeStatusKeyword_5_0; }
		
		//NodeStatus=NodeStatus
		public Assignment getNodeStatusAssignment_5_1() { return cNodeStatusAssignment_5_1; }
		
		//NodeStatus
		public RuleCall getNodeStatusNodeStatusEnumRuleCall_5_1_0() { return cNodeStatusNodeStatusEnumRuleCall_5_1_0; }
		
		//('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		public Group getGroup_6() { return cGroup_6; }
		
		//'parameters'
		public Keyword getParametersKeyword_6_0() { return cParametersKeyword_6_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6_1() { return cLeftCurlyBracketKeyword_6_1; }
		
		//parameters+=Parameter
		public Assignment getParametersAssignment_6_2() { return cParametersAssignment_6_2; }
		
		//Parameter
		public RuleCall getParametersParameterParserRuleCall_6_2_0() { return cParametersParameterParserRuleCall_6_2_0; }
		
		//( "," parameters+=Parameter)*
		public Group getGroup_6_3() { return cGroup_6_3; }
		
		//","
		public Keyword getCommaKeyword_6_3_0() { return cCommaKeyword_6_3_0; }
		
		//parameters+=Parameter
		public Assignment getParametersAssignment_6_3_1() { return cParametersAssignment_6_3_1; }
		
		//Parameter
		public RuleCall getParametersParameterParserRuleCall_6_3_1_0() { return cParametersParameterParserRuleCall_6_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6_4() { return cRightCurlyBracketKeyword_6_4; }
		
		//'child'
		public Keyword getChildKeyword_7() { return cChildKeyword_7; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_8() { return cLeftCurlyBracketKeyword_8; }
		
		//child+=TreeNode
		public Assignment getChildAssignment_9() { return cChildAssignment_9; }
		
		//TreeNode
		public RuleCall getChildTreeNodeParserRuleCall_9_0() { return cChildTreeNodeParserRuleCall_9_0; }
		
		//( "," child+=TreeNode)*
		public Group getGroup_10() { return cGroup_10; }
		
		//","
		public Keyword getCommaKeyword_10_0() { return cCommaKeyword_10_0; }
		
		//child+=TreeNode
		public Assignment getChildAssignment_10_1() { return cChildAssignment_10_1; }
		
		//TreeNode
		public RuleCall getChildTreeNodeParserRuleCall_10_1_0() { return cChildTreeNodeParserRuleCall_10_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_11() { return cRightCurlyBracketKeyword_11; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_12() { return cRightCurlyBracketKeyword_12; }
	}
	public class SequenceStarNodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.chalmers.qualitybt.QualityBt.SequenceStarNode");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSequenceStarNodeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cIDKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cUIDAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cUIDEStringParserRuleCall_3_1_0 = (RuleCall)cUIDAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cNodeTypeKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cNodeTypeAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cNodeTypeNodeTypeEnumRuleCall_4_1_0 = (RuleCall)cNodeTypeAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cNodeStatusKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cNodeStatusAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cNodeStatusNodeStatusEnumRuleCall_5_1_0 = (RuleCall)cNodeStatusAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cParametersKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cParametersAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cParametersParameterParserRuleCall_6_2_0 = (RuleCall)cParametersAssignment_6_2.eContents().get(0);
		private final Group cGroup_6_3 = (Group)cGroup_6.eContents().get(3);
		private final Keyword cCommaKeyword_6_3_0 = (Keyword)cGroup_6_3.eContents().get(0);
		private final Assignment cParametersAssignment_6_3_1 = (Assignment)cGroup_6_3.eContents().get(1);
		private final RuleCall cParametersParameterParserRuleCall_6_3_1_0 = (RuleCall)cParametersAssignment_6_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6_4 = (Keyword)cGroup_6.eContents().get(4);
		private final Keyword cChildKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cLeftCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cChildAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cChildTreeNodeParserRuleCall_9_0 = (RuleCall)cChildAssignment_9.eContents().get(0);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cCommaKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Assignment cChildAssignment_10_1 = (Assignment)cGroup_10.eContents().get(1);
		private final RuleCall cChildTreeNodeParserRuleCall_10_1_0 = (RuleCall)cChildAssignment_10_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Keyword cRightCurlyBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		
		//SequenceStarNode returns SequenceStarNode:
		//    'SequenceStarNode'
		//    name=EString
		//    '{'
		//        ("ID" uID=EString)?
		//        ('NodeType' NodeType=NodeType)?
		//        ('NodeStatus' NodeStatus=NodeStatus)?
		//        ('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		//        'child' '{' child+=TreeNode ( "," child+=TreeNode)* '}'
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'SequenceStarNode'
		//name=EString
		//'{'
		//    ("ID" uID=EString)?
		//    ('NodeType' NodeType=NodeType)?
		//    ('NodeStatus' NodeStatus=NodeStatus)?
		//    ('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		//    'child' '{' child+=TreeNode ( "," child+=TreeNode)* '}'
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'SequenceStarNode'
		public Keyword getSequenceStarNodeKeyword_0() { return cSequenceStarNodeKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//("ID" uID=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//"ID"
		public Keyword getIDKeyword_3_0() { return cIDKeyword_3_0; }
		
		//uID=EString
		public Assignment getUIDAssignment_3_1() { return cUIDAssignment_3_1; }
		
		//EString
		public RuleCall getUIDEStringParserRuleCall_3_1_0() { return cUIDEStringParserRuleCall_3_1_0; }
		
		//('NodeType' NodeType=NodeType)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'NodeType'
		public Keyword getNodeTypeKeyword_4_0() { return cNodeTypeKeyword_4_0; }
		
		//NodeType=NodeType
		public Assignment getNodeTypeAssignment_4_1() { return cNodeTypeAssignment_4_1; }
		
		//NodeType
		public RuleCall getNodeTypeNodeTypeEnumRuleCall_4_1_0() { return cNodeTypeNodeTypeEnumRuleCall_4_1_0; }
		
		//('NodeStatus' NodeStatus=NodeStatus)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'NodeStatus'
		public Keyword getNodeStatusKeyword_5_0() { return cNodeStatusKeyword_5_0; }
		
		//NodeStatus=NodeStatus
		public Assignment getNodeStatusAssignment_5_1() { return cNodeStatusAssignment_5_1; }
		
		//NodeStatus
		public RuleCall getNodeStatusNodeStatusEnumRuleCall_5_1_0() { return cNodeStatusNodeStatusEnumRuleCall_5_1_0; }
		
		//('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		public Group getGroup_6() { return cGroup_6; }
		
		//'parameters'
		public Keyword getParametersKeyword_6_0() { return cParametersKeyword_6_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6_1() { return cLeftCurlyBracketKeyword_6_1; }
		
		//parameters+=Parameter
		public Assignment getParametersAssignment_6_2() { return cParametersAssignment_6_2; }
		
		//Parameter
		public RuleCall getParametersParameterParserRuleCall_6_2_0() { return cParametersParameterParserRuleCall_6_2_0; }
		
		//( "," parameters+=Parameter)*
		public Group getGroup_6_3() { return cGroup_6_3; }
		
		//","
		public Keyword getCommaKeyword_6_3_0() { return cCommaKeyword_6_3_0; }
		
		//parameters+=Parameter
		public Assignment getParametersAssignment_6_3_1() { return cParametersAssignment_6_3_1; }
		
		//Parameter
		public RuleCall getParametersParameterParserRuleCall_6_3_1_0() { return cParametersParameterParserRuleCall_6_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6_4() { return cRightCurlyBracketKeyword_6_4; }
		
		//'child'
		public Keyword getChildKeyword_7() { return cChildKeyword_7; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_8() { return cLeftCurlyBracketKeyword_8; }
		
		//child+=TreeNode
		public Assignment getChildAssignment_9() { return cChildAssignment_9; }
		
		//TreeNode
		public RuleCall getChildTreeNodeParserRuleCall_9_0() { return cChildTreeNodeParserRuleCall_9_0; }
		
		//( "," child+=TreeNode)*
		public Group getGroup_10() { return cGroup_10; }
		
		//","
		public Keyword getCommaKeyword_10_0() { return cCommaKeyword_10_0; }
		
		//child+=TreeNode
		public Assignment getChildAssignment_10_1() { return cChildAssignment_10_1; }
		
		//TreeNode
		public RuleCall getChildTreeNodeParserRuleCall_10_1_0() { return cChildTreeNodeParserRuleCall_10_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_11() { return cRightCurlyBracketKeyword_11; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_12() { return cRightCurlyBracketKeyword_12; }
	}
	public class SwitchNodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.chalmers.qualitybt.QualityBt.SwitchNode");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSwitchNodeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cIDKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cUIDAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cUIDEStringParserRuleCall_3_1_0 = (RuleCall)cUIDAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cNodeTypeKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cNodeTypeAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cNodeTypeNodeTypeEnumRuleCall_4_1_0 = (RuleCall)cNodeTypeAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cNodeStatusKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cNodeStatusAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cNodeStatusNodeStatusEnumRuleCall_5_1_0 = (RuleCall)cNodeStatusAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cParametersKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cParametersAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cParametersParameterParserRuleCall_6_2_0 = (RuleCall)cParametersAssignment_6_2.eContents().get(0);
		private final Group cGroup_6_3 = (Group)cGroup_6.eContents().get(3);
		private final Keyword cCommaKeyword_6_3_0 = (Keyword)cGroup_6_3.eContents().get(0);
		private final Assignment cParametersAssignment_6_3_1 = (Assignment)cGroup_6_3.eContents().get(1);
		private final RuleCall cParametersParameterParserRuleCall_6_3_1_0 = (RuleCall)cParametersAssignment_6_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6_4 = (Keyword)cGroup_6.eContents().get(4);
		private final Keyword cChildKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cLeftCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cChildAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cChildTreeNodeParserRuleCall_9_0 = (RuleCall)cChildAssignment_9.eContents().get(0);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cCommaKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Assignment cChildAssignment_10_1 = (Assignment)cGroup_10.eContents().get(1);
		private final RuleCall cChildTreeNodeParserRuleCall_10_1_0 = (RuleCall)cChildAssignment_10_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Keyword cRightCurlyBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		
		//SwitchNode returns SwitchNode:
		//    'SwitchNode'
		//    name=EString
		//    '{'
		//        ("ID" uID=EString)?
		//        ('NodeType' NodeType=NodeType)?
		//        ('NodeStatus' NodeStatus=NodeStatus)?
		//        ('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		//        'child' '{' child+=TreeNode ( "," child+=TreeNode)* '}'
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'SwitchNode'
		//name=EString
		//'{'
		//    ("ID" uID=EString)?
		//    ('NodeType' NodeType=NodeType)?
		//    ('NodeStatus' NodeStatus=NodeStatus)?
		//    ('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		//    'child' '{' child+=TreeNode ( "," child+=TreeNode)* '}'
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'SwitchNode'
		public Keyword getSwitchNodeKeyword_0() { return cSwitchNodeKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//("ID" uID=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//"ID"
		public Keyword getIDKeyword_3_0() { return cIDKeyword_3_0; }
		
		//uID=EString
		public Assignment getUIDAssignment_3_1() { return cUIDAssignment_3_1; }
		
		//EString
		public RuleCall getUIDEStringParserRuleCall_3_1_0() { return cUIDEStringParserRuleCall_3_1_0; }
		
		//('NodeType' NodeType=NodeType)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'NodeType'
		public Keyword getNodeTypeKeyword_4_0() { return cNodeTypeKeyword_4_0; }
		
		//NodeType=NodeType
		public Assignment getNodeTypeAssignment_4_1() { return cNodeTypeAssignment_4_1; }
		
		//NodeType
		public RuleCall getNodeTypeNodeTypeEnumRuleCall_4_1_0() { return cNodeTypeNodeTypeEnumRuleCall_4_1_0; }
		
		//('NodeStatus' NodeStatus=NodeStatus)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'NodeStatus'
		public Keyword getNodeStatusKeyword_5_0() { return cNodeStatusKeyword_5_0; }
		
		//NodeStatus=NodeStatus
		public Assignment getNodeStatusAssignment_5_1() { return cNodeStatusAssignment_5_1; }
		
		//NodeStatus
		public RuleCall getNodeStatusNodeStatusEnumRuleCall_5_1_0() { return cNodeStatusNodeStatusEnumRuleCall_5_1_0; }
		
		//('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		public Group getGroup_6() { return cGroup_6; }
		
		//'parameters'
		public Keyword getParametersKeyword_6_0() { return cParametersKeyword_6_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6_1() { return cLeftCurlyBracketKeyword_6_1; }
		
		//parameters+=Parameter
		public Assignment getParametersAssignment_6_2() { return cParametersAssignment_6_2; }
		
		//Parameter
		public RuleCall getParametersParameterParserRuleCall_6_2_0() { return cParametersParameterParserRuleCall_6_2_0; }
		
		//( "," parameters+=Parameter)*
		public Group getGroup_6_3() { return cGroup_6_3; }
		
		//","
		public Keyword getCommaKeyword_6_3_0() { return cCommaKeyword_6_3_0; }
		
		//parameters+=Parameter
		public Assignment getParametersAssignment_6_3_1() { return cParametersAssignment_6_3_1; }
		
		//Parameter
		public RuleCall getParametersParameterParserRuleCall_6_3_1_0() { return cParametersParameterParserRuleCall_6_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6_4() { return cRightCurlyBracketKeyword_6_4; }
		
		//'child'
		public Keyword getChildKeyword_7() { return cChildKeyword_7; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_8() { return cLeftCurlyBracketKeyword_8; }
		
		//child+=TreeNode
		public Assignment getChildAssignment_9() { return cChildAssignment_9; }
		
		//TreeNode
		public RuleCall getChildTreeNodeParserRuleCall_9_0() { return cChildTreeNodeParserRuleCall_9_0; }
		
		//( "," child+=TreeNode)*
		public Group getGroup_10() { return cGroup_10; }
		
		//","
		public Keyword getCommaKeyword_10_0() { return cCommaKeyword_10_0; }
		
		//child+=TreeNode
		public Assignment getChildAssignment_10_1() { return cChildAssignment_10_1; }
		
		//TreeNode
		public RuleCall getChildTreeNodeParserRuleCall_10_1_0() { return cChildTreeNodeParserRuleCall_10_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_11() { return cRightCurlyBracketKeyword_11; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_12() { return cRightCurlyBracketKeyword_12; }
	}
	public class ReactiveFallbackElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.chalmers.qualitybt.QualityBt.ReactiveFallback");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cReactiveFallbackKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cIDKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cUIDAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cUIDEStringParserRuleCall_3_1_0 = (RuleCall)cUIDAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cNodeTypeKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cNodeTypeAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cNodeTypeNodeTypeEnumRuleCall_4_1_0 = (RuleCall)cNodeTypeAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cNodeStatusKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cNodeStatusAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cNodeStatusNodeStatusEnumRuleCall_5_1_0 = (RuleCall)cNodeStatusAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cParametersKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cParametersAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cParametersParameterParserRuleCall_6_2_0 = (RuleCall)cParametersAssignment_6_2.eContents().get(0);
		private final Group cGroup_6_3 = (Group)cGroup_6.eContents().get(3);
		private final Keyword cCommaKeyword_6_3_0 = (Keyword)cGroup_6_3.eContents().get(0);
		private final Assignment cParametersAssignment_6_3_1 = (Assignment)cGroup_6_3.eContents().get(1);
		private final RuleCall cParametersParameterParserRuleCall_6_3_1_0 = (RuleCall)cParametersAssignment_6_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6_4 = (Keyword)cGroup_6.eContents().get(4);
		private final Keyword cChildKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cLeftCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cChildAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cChildTreeNodeParserRuleCall_9_0 = (RuleCall)cChildAssignment_9.eContents().get(0);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cCommaKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Assignment cChildAssignment_10_1 = (Assignment)cGroup_10.eContents().get(1);
		private final RuleCall cChildTreeNodeParserRuleCall_10_1_0 = (RuleCall)cChildAssignment_10_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Keyword cRightCurlyBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		
		//ReactiveFallback returns ReactiveFallback:
		//    'ReactiveFallback'
		//    name=EString
		//    '{'
		//        ("ID" uID=EString)?
		//        ('NodeType' NodeType=NodeType)?
		//        ('NodeStatus' NodeStatus=NodeStatus)?
		//        ('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		//        'child' '{' child+=TreeNode ( "," child+=TreeNode)* '}'
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'ReactiveFallback'
		//name=EString
		//'{'
		//    ("ID" uID=EString)?
		//    ('NodeType' NodeType=NodeType)?
		//    ('NodeStatus' NodeStatus=NodeStatus)?
		//    ('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		//    'child' '{' child+=TreeNode ( "," child+=TreeNode)* '}'
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'ReactiveFallback'
		public Keyword getReactiveFallbackKeyword_0() { return cReactiveFallbackKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//("ID" uID=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//"ID"
		public Keyword getIDKeyword_3_0() { return cIDKeyword_3_0; }
		
		//uID=EString
		public Assignment getUIDAssignment_3_1() { return cUIDAssignment_3_1; }
		
		//EString
		public RuleCall getUIDEStringParserRuleCall_3_1_0() { return cUIDEStringParserRuleCall_3_1_0; }
		
		//('NodeType' NodeType=NodeType)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'NodeType'
		public Keyword getNodeTypeKeyword_4_0() { return cNodeTypeKeyword_4_0; }
		
		//NodeType=NodeType
		public Assignment getNodeTypeAssignment_4_1() { return cNodeTypeAssignment_4_1; }
		
		//NodeType
		public RuleCall getNodeTypeNodeTypeEnumRuleCall_4_1_0() { return cNodeTypeNodeTypeEnumRuleCall_4_1_0; }
		
		//('NodeStatus' NodeStatus=NodeStatus)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'NodeStatus'
		public Keyword getNodeStatusKeyword_5_0() { return cNodeStatusKeyword_5_0; }
		
		//NodeStatus=NodeStatus
		public Assignment getNodeStatusAssignment_5_1() { return cNodeStatusAssignment_5_1; }
		
		//NodeStatus
		public RuleCall getNodeStatusNodeStatusEnumRuleCall_5_1_0() { return cNodeStatusNodeStatusEnumRuleCall_5_1_0; }
		
		//('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		public Group getGroup_6() { return cGroup_6; }
		
		//'parameters'
		public Keyword getParametersKeyword_6_0() { return cParametersKeyword_6_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6_1() { return cLeftCurlyBracketKeyword_6_1; }
		
		//parameters+=Parameter
		public Assignment getParametersAssignment_6_2() { return cParametersAssignment_6_2; }
		
		//Parameter
		public RuleCall getParametersParameterParserRuleCall_6_2_0() { return cParametersParameterParserRuleCall_6_2_0; }
		
		//( "," parameters+=Parameter)*
		public Group getGroup_6_3() { return cGroup_6_3; }
		
		//","
		public Keyword getCommaKeyword_6_3_0() { return cCommaKeyword_6_3_0; }
		
		//parameters+=Parameter
		public Assignment getParametersAssignment_6_3_1() { return cParametersAssignment_6_3_1; }
		
		//Parameter
		public RuleCall getParametersParameterParserRuleCall_6_3_1_0() { return cParametersParameterParserRuleCall_6_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6_4() { return cRightCurlyBracketKeyword_6_4; }
		
		//'child'
		public Keyword getChildKeyword_7() { return cChildKeyword_7; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_8() { return cLeftCurlyBracketKeyword_8; }
		
		//child+=TreeNode
		public Assignment getChildAssignment_9() { return cChildAssignment_9; }
		
		//TreeNode
		public RuleCall getChildTreeNodeParserRuleCall_9_0() { return cChildTreeNodeParserRuleCall_9_0; }
		
		//( "," child+=TreeNode)*
		public Group getGroup_10() { return cGroup_10; }
		
		//","
		public Keyword getCommaKeyword_10_0() { return cCommaKeyword_10_0; }
		
		//child+=TreeNode
		public Assignment getChildAssignment_10_1() { return cChildAssignment_10_1; }
		
		//TreeNode
		public RuleCall getChildTreeNodeParserRuleCall_10_1_0() { return cChildTreeNodeParserRuleCall_10_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_11() { return cRightCurlyBracketKeyword_11; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_12() { return cRightCurlyBracketKeyword_12; }
	}
	public class WhileDoElseNodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.chalmers.qualitybt.QualityBt.WhileDoElseNode");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cWhileDoElseNodeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cIDKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cUIDAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cUIDEStringParserRuleCall_3_1_0 = (RuleCall)cUIDAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cNodeTypeKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cNodeTypeAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cNodeTypeNodeTypeEnumRuleCall_4_1_0 = (RuleCall)cNodeTypeAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cNodeStatusKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cNodeStatusAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cNodeStatusNodeStatusEnumRuleCall_5_1_0 = (RuleCall)cNodeStatusAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cParametersKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cParametersAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cParametersParameterParserRuleCall_6_2_0 = (RuleCall)cParametersAssignment_6_2.eContents().get(0);
		private final Group cGroup_6_3 = (Group)cGroup_6.eContents().get(3);
		private final Keyword cCommaKeyword_6_3_0 = (Keyword)cGroup_6_3.eContents().get(0);
		private final Assignment cParametersAssignment_6_3_1 = (Assignment)cGroup_6_3.eContents().get(1);
		private final RuleCall cParametersParameterParserRuleCall_6_3_1_0 = (RuleCall)cParametersAssignment_6_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6_4 = (Keyword)cGroup_6.eContents().get(4);
		private final Keyword cChildKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cLeftCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cChildAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cChildTreeNodeParserRuleCall_9_0 = (RuleCall)cChildAssignment_9.eContents().get(0);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cCommaKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Assignment cChildAssignment_10_1 = (Assignment)cGroup_10.eContents().get(1);
		private final RuleCall cChildTreeNodeParserRuleCall_10_1_0 = (RuleCall)cChildAssignment_10_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Keyword cRightCurlyBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		
		//WhileDoElseNode returns WhileDoElseNode:
		//    'WhileDoElseNode'
		//    name=EString
		//    '{'
		//        ("ID" uID=EString)?
		//        ('NodeType' NodeType=NodeType)?
		//        ('NodeStatus' NodeStatus=NodeStatus)?
		//        ('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		//        'child' '{' child+=TreeNode ( "," child+=TreeNode)* '}'
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'WhileDoElseNode'
		//name=EString
		//'{'
		//    ("ID" uID=EString)?
		//    ('NodeType' NodeType=NodeType)?
		//    ('NodeStatus' NodeStatus=NodeStatus)?
		//    ('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		//    'child' '{' child+=TreeNode ( "," child+=TreeNode)* '}'
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'WhileDoElseNode'
		public Keyword getWhileDoElseNodeKeyword_0() { return cWhileDoElseNodeKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//("ID" uID=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//"ID"
		public Keyword getIDKeyword_3_0() { return cIDKeyword_3_0; }
		
		//uID=EString
		public Assignment getUIDAssignment_3_1() { return cUIDAssignment_3_1; }
		
		//EString
		public RuleCall getUIDEStringParserRuleCall_3_1_0() { return cUIDEStringParserRuleCall_3_1_0; }
		
		//('NodeType' NodeType=NodeType)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'NodeType'
		public Keyword getNodeTypeKeyword_4_0() { return cNodeTypeKeyword_4_0; }
		
		//NodeType=NodeType
		public Assignment getNodeTypeAssignment_4_1() { return cNodeTypeAssignment_4_1; }
		
		//NodeType
		public RuleCall getNodeTypeNodeTypeEnumRuleCall_4_1_0() { return cNodeTypeNodeTypeEnumRuleCall_4_1_0; }
		
		//('NodeStatus' NodeStatus=NodeStatus)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'NodeStatus'
		public Keyword getNodeStatusKeyword_5_0() { return cNodeStatusKeyword_5_0; }
		
		//NodeStatus=NodeStatus
		public Assignment getNodeStatusAssignment_5_1() { return cNodeStatusAssignment_5_1; }
		
		//NodeStatus
		public RuleCall getNodeStatusNodeStatusEnumRuleCall_5_1_0() { return cNodeStatusNodeStatusEnumRuleCall_5_1_0; }
		
		//('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		public Group getGroup_6() { return cGroup_6; }
		
		//'parameters'
		public Keyword getParametersKeyword_6_0() { return cParametersKeyword_6_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6_1() { return cLeftCurlyBracketKeyword_6_1; }
		
		//parameters+=Parameter
		public Assignment getParametersAssignment_6_2() { return cParametersAssignment_6_2; }
		
		//Parameter
		public RuleCall getParametersParameterParserRuleCall_6_2_0() { return cParametersParameterParserRuleCall_6_2_0; }
		
		//( "," parameters+=Parameter)*
		public Group getGroup_6_3() { return cGroup_6_3; }
		
		//","
		public Keyword getCommaKeyword_6_3_0() { return cCommaKeyword_6_3_0; }
		
		//parameters+=Parameter
		public Assignment getParametersAssignment_6_3_1() { return cParametersAssignment_6_3_1; }
		
		//Parameter
		public RuleCall getParametersParameterParserRuleCall_6_3_1_0() { return cParametersParameterParserRuleCall_6_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6_4() { return cRightCurlyBracketKeyword_6_4; }
		
		//'child'
		public Keyword getChildKeyword_7() { return cChildKeyword_7; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_8() { return cLeftCurlyBracketKeyword_8; }
		
		//child+=TreeNode
		public Assignment getChildAssignment_9() { return cChildAssignment_9; }
		
		//TreeNode
		public RuleCall getChildTreeNodeParserRuleCall_9_0() { return cChildTreeNodeParserRuleCall_9_0; }
		
		//( "," child+=TreeNode)*
		public Group getGroup_10() { return cGroup_10; }
		
		//","
		public Keyword getCommaKeyword_10_0() { return cCommaKeyword_10_0; }
		
		//child+=TreeNode
		public Assignment getChildAssignment_10_1() { return cChildAssignment_10_1; }
		
		//TreeNode
		public RuleCall getChildTreeNodeParserRuleCall_10_1_0() { return cChildTreeNodeParserRuleCall_10_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_11() { return cRightCurlyBracketKeyword_11; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_12() { return cRightCurlyBracketKeyword_12; }
	}
	public class ReactiveSequenceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.chalmers.qualitybt.QualityBt.ReactiveSequence");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cReactiveSequenceKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cIDKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cUIDAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cUIDEStringParserRuleCall_3_1_0 = (RuleCall)cUIDAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cNodeTypeKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cNodeTypeAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cNodeTypeNodeTypeEnumRuleCall_4_1_0 = (RuleCall)cNodeTypeAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cNodeStatusKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cNodeStatusAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cNodeStatusNodeStatusEnumRuleCall_5_1_0 = (RuleCall)cNodeStatusAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cParametersKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cParametersAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cParametersParameterParserRuleCall_6_2_0 = (RuleCall)cParametersAssignment_6_2.eContents().get(0);
		private final Group cGroup_6_3 = (Group)cGroup_6.eContents().get(3);
		private final Keyword cCommaKeyword_6_3_0 = (Keyword)cGroup_6_3.eContents().get(0);
		private final Assignment cParametersAssignment_6_3_1 = (Assignment)cGroup_6_3.eContents().get(1);
		private final RuleCall cParametersParameterParserRuleCall_6_3_1_0 = (RuleCall)cParametersAssignment_6_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6_4 = (Keyword)cGroup_6.eContents().get(4);
		private final Keyword cChildKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cLeftCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cChildAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cChildTreeNodeParserRuleCall_9_0 = (RuleCall)cChildAssignment_9.eContents().get(0);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cCommaKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Assignment cChildAssignment_10_1 = (Assignment)cGroup_10.eContents().get(1);
		private final RuleCall cChildTreeNodeParserRuleCall_10_1_0 = (RuleCall)cChildAssignment_10_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Keyword cRightCurlyBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		
		//ReactiveSequence returns ReactiveSequence:
		//    'ReactiveSequence'
		//    name=EString
		//    '{'
		//        ("ID" uID=EString)?
		//        ('NodeType' NodeType=NodeType)?
		//        ('NodeStatus' NodeStatus=NodeStatus)?
		//        ('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		//        'child' '{' child+=TreeNode ( "," child+=TreeNode)* '}'
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'ReactiveSequence'
		//name=EString
		//'{'
		//    ("ID" uID=EString)?
		//    ('NodeType' NodeType=NodeType)?
		//    ('NodeStatus' NodeStatus=NodeStatus)?
		//    ('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		//    'child' '{' child+=TreeNode ( "," child+=TreeNode)* '}'
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'ReactiveSequence'
		public Keyword getReactiveSequenceKeyword_0() { return cReactiveSequenceKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//("ID" uID=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//"ID"
		public Keyword getIDKeyword_3_0() { return cIDKeyword_3_0; }
		
		//uID=EString
		public Assignment getUIDAssignment_3_1() { return cUIDAssignment_3_1; }
		
		//EString
		public RuleCall getUIDEStringParserRuleCall_3_1_0() { return cUIDEStringParserRuleCall_3_1_0; }
		
		//('NodeType' NodeType=NodeType)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'NodeType'
		public Keyword getNodeTypeKeyword_4_0() { return cNodeTypeKeyword_4_0; }
		
		//NodeType=NodeType
		public Assignment getNodeTypeAssignment_4_1() { return cNodeTypeAssignment_4_1; }
		
		//NodeType
		public RuleCall getNodeTypeNodeTypeEnumRuleCall_4_1_0() { return cNodeTypeNodeTypeEnumRuleCall_4_1_0; }
		
		//('NodeStatus' NodeStatus=NodeStatus)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'NodeStatus'
		public Keyword getNodeStatusKeyword_5_0() { return cNodeStatusKeyword_5_0; }
		
		//NodeStatus=NodeStatus
		public Assignment getNodeStatusAssignment_5_1() { return cNodeStatusAssignment_5_1; }
		
		//NodeStatus
		public RuleCall getNodeStatusNodeStatusEnumRuleCall_5_1_0() { return cNodeStatusNodeStatusEnumRuleCall_5_1_0; }
		
		//('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		public Group getGroup_6() { return cGroup_6; }
		
		//'parameters'
		public Keyword getParametersKeyword_6_0() { return cParametersKeyword_6_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6_1() { return cLeftCurlyBracketKeyword_6_1; }
		
		//parameters+=Parameter
		public Assignment getParametersAssignment_6_2() { return cParametersAssignment_6_2; }
		
		//Parameter
		public RuleCall getParametersParameterParserRuleCall_6_2_0() { return cParametersParameterParserRuleCall_6_2_0; }
		
		//( "," parameters+=Parameter)*
		public Group getGroup_6_3() { return cGroup_6_3; }
		
		//","
		public Keyword getCommaKeyword_6_3_0() { return cCommaKeyword_6_3_0; }
		
		//parameters+=Parameter
		public Assignment getParametersAssignment_6_3_1() { return cParametersAssignment_6_3_1; }
		
		//Parameter
		public RuleCall getParametersParameterParserRuleCall_6_3_1_0() { return cParametersParameterParserRuleCall_6_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6_4() { return cRightCurlyBracketKeyword_6_4; }
		
		//'child'
		public Keyword getChildKeyword_7() { return cChildKeyword_7; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_8() { return cLeftCurlyBracketKeyword_8; }
		
		//child+=TreeNode
		public Assignment getChildAssignment_9() { return cChildAssignment_9; }
		
		//TreeNode
		public RuleCall getChildTreeNodeParserRuleCall_9_0() { return cChildTreeNodeParserRuleCall_9_0; }
		
		//( "," child+=TreeNode)*
		public Group getGroup_10() { return cGroup_10; }
		
		//","
		public Keyword getCommaKeyword_10_0() { return cCommaKeyword_10_0; }
		
		//child+=TreeNode
		public Assignment getChildAssignment_10_1() { return cChildAssignment_10_1; }
		
		//TreeNode
		public RuleCall getChildTreeNodeParserRuleCall_10_1_0() { return cChildTreeNodeParserRuleCall_10_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_11() { return cRightCurlyBracketKeyword_11; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_12() { return cRightCurlyBracketKeyword_12; }
	}
	public class SequenceNodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.chalmers.qualitybt.QualityBt.SequenceNode");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSequenceNodeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cIDKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cUIDAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cUIDEStringParserRuleCall_3_1_0 = (RuleCall)cUIDAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cNodeTypeKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cNodeTypeAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cNodeTypeNodeTypeEnumRuleCall_4_1_0 = (RuleCall)cNodeTypeAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cNodeStatusKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cNodeStatusAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cNodeStatusNodeStatusEnumRuleCall_5_1_0 = (RuleCall)cNodeStatusAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cParametersKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cParametersAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cParametersParameterParserRuleCall_6_2_0 = (RuleCall)cParametersAssignment_6_2.eContents().get(0);
		private final Group cGroup_6_3 = (Group)cGroup_6.eContents().get(3);
		private final Keyword cCommaKeyword_6_3_0 = (Keyword)cGroup_6_3.eContents().get(0);
		private final Assignment cParametersAssignment_6_3_1 = (Assignment)cGroup_6_3.eContents().get(1);
		private final RuleCall cParametersParameterParserRuleCall_6_3_1_0 = (RuleCall)cParametersAssignment_6_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6_4 = (Keyword)cGroup_6.eContents().get(4);
		private final Keyword cChildKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cLeftCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cChildAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cChildTreeNodeParserRuleCall_9_0 = (RuleCall)cChildAssignment_9.eContents().get(0);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cCommaKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Assignment cChildAssignment_10_1 = (Assignment)cGroup_10.eContents().get(1);
		private final RuleCall cChildTreeNodeParserRuleCall_10_1_0 = (RuleCall)cChildAssignment_10_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Keyword cRightCurlyBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		
		//SequenceNode returns SequenceNode:
		//    'SequenceNode'
		//    name=EString
		//    '{'
		//        ("ID" uID=EString)?
		//        ('NodeType' NodeType=NodeType)?
		//        ('NodeStatus' NodeStatus=NodeStatus)?
		//        ('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		//        'child' '{' child+=TreeNode ( "," child+=TreeNode)* '}'
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'SequenceNode'
		//name=EString
		//'{'
		//    ("ID" uID=EString)?
		//    ('NodeType' NodeType=NodeType)?
		//    ('NodeStatus' NodeStatus=NodeStatus)?
		//    ('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		//    'child' '{' child+=TreeNode ( "," child+=TreeNode)* '}'
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'SequenceNode'
		public Keyword getSequenceNodeKeyword_0() { return cSequenceNodeKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//("ID" uID=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//"ID"
		public Keyword getIDKeyword_3_0() { return cIDKeyword_3_0; }
		
		//uID=EString
		public Assignment getUIDAssignment_3_1() { return cUIDAssignment_3_1; }
		
		//EString
		public RuleCall getUIDEStringParserRuleCall_3_1_0() { return cUIDEStringParserRuleCall_3_1_0; }
		
		//('NodeType' NodeType=NodeType)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'NodeType'
		public Keyword getNodeTypeKeyword_4_0() { return cNodeTypeKeyword_4_0; }
		
		//NodeType=NodeType
		public Assignment getNodeTypeAssignment_4_1() { return cNodeTypeAssignment_4_1; }
		
		//NodeType
		public RuleCall getNodeTypeNodeTypeEnumRuleCall_4_1_0() { return cNodeTypeNodeTypeEnumRuleCall_4_1_0; }
		
		//('NodeStatus' NodeStatus=NodeStatus)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'NodeStatus'
		public Keyword getNodeStatusKeyword_5_0() { return cNodeStatusKeyword_5_0; }
		
		//NodeStatus=NodeStatus
		public Assignment getNodeStatusAssignment_5_1() { return cNodeStatusAssignment_5_1; }
		
		//NodeStatus
		public RuleCall getNodeStatusNodeStatusEnumRuleCall_5_1_0() { return cNodeStatusNodeStatusEnumRuleCall_5_1_0; }
		
		//('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		public Group getGroup_6() { return cGroup_6; }
		
		//'parameters'
		public Keyword getParametersKeyword_6_0() { return cParametersKeyword_6_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6_1() { return cLeftCurlyBracketKeyword_6_1; }
		
		//parameters+=Parameter
		public Assignment getParametersAssignment_6_2() { return cParametersAssignment_6_2; }
		
		//Parameter
		public RuleCall getParametersParameterParserRuleCall_6_2_0() { return cParametersParameterParserRuleCall_6_2_0; }
		
		//( "," parameters+=Parameter)*
		public Group getGroup_6_3() { return cGroup_6_3; }
		
		//","
		public Keyword getCommaKeyword_6_3_0() { return cCommaKeyword_6_3_0; }
		
		//parameters+=Parameter
		public Assignment getParametersAssignment_6_3_1() { return cParametersAssignment_6_3_1; }
		
		//Parameter
		public RuleCall getParametersParameterParserRuleCall_6_3_1_0() { return cParametersParameterParserRuleCall_6_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6_4() { return cRightCurlyBracketKeyword_6_4; }
		
		//'child'
		public Keyword getChildKeyword_7() { return cChildKeyword_7; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_8() { return cLeftCurlyBracketKeyword_8; }
		
		//child+=TreeNode
		public Assignment getChildAssignment_9() { return cChildAssignment_9; }
		
		//TreeNode
		public RuleCall getChildTreeNodeParserRuleCall_9_0() { return cChildTreeNodeParserRuleCall_9_0; }
		
		//( "," child+=TreeNode)*
		public Group getGroup_10() { return cGroup_10; }
		
		//","
		public Keyword getCommaKeyword_10_0() { return cCommaKeyword_10_0; }
		
		//child+=TreeNode
		public Assignment getChildAssignment_10_1() { return cChildAssignment_10_1; }
		
		//TreeNode
		public RuleCall getChildTreeNodeParserRuleCall_10_1_0() { return cChildTreeNodeParserRuleCall_10_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_11() { return cRightCurlyBracketKeyword_11; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_12() { return cRightCurlyBracketKeyword_12; }
	}
	public class SubtreeNodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.chalmers.qualitybt.QualityBt.SubtreeNode");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSubtreeNodeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cIDKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cUIDAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cUIDEStringParserRuleCall_3_1_0 = (RuleCall)cUIDAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cNodeTypeKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cNodeTypeAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cNodeTypeNodeTypeEnumRuleCall_4_1_0 = (RuleCall)cNodeTypeAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cNodeStatusKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cNodeStatusAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cNodeStatusNodeStatusEnumRuleCall_5_1_0 = (RuleCall)cNodeStatusAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cParametersKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cParametersAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cParametersParameterParserRuleCall_6_2_0 = (RuleCall)cParametersAssignment_6_2.eContents().get(0);
		private final Group cGroup_6_3 = (Group)cGroup_6.eContents().get(3);
		private final Keyword cCommaKeyword_6_3_0 = (Keyword)cGroup_6_3.eContents().get(0);
		private final Assignment cParametersAssignment_6_3_1 = (Assignment)cGroup_6_3.eContents().get(1);
		private final RuleCall cParametersParameterParserRuleCall_6_3_1_0 = (RuleCall)cParametersAssignment_6_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6_4 = (Keyword)cGroup_6.eContents().get(4);
		private final Keyword cChildKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cChildAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cChildTreeNodeParserRuleCall_8_0 = (RuleCall)cChildAssignment_8.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//SubtreeNode returns SubtreeNode:
		//    'SubtreeNode'
		//    name=EString
		//    '{'
		//        ("ID" uID=EString)?
		//        ('NodeType' NodeType=NodeType)?
		//        ('NodeStatus' NodeStatus=NodeStatus)?
		//        ('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		//        'child' child=TreeNode
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'SubtreeNode'
		//name=EString
		//'{'
		//    ("ID" uID=EString)?
		//    ('NodeType' NodeType=NodeType)?
		//    ('NodeStatus' NodeStatus=NodeStatus)?
		//    ('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		//    'child' child=TreeNode
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'SubtreeNode'
		public Keyword getSubtreeNodeKeyword_0() { return cSubtreeNodeKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//("ID" uID=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//"ID"
		public Keyword getIDKeyword_3_0() { return cIDKeyword_3_0; }
		
		//uID=EString
		public Assignment getUIDAssignment_3_1() { return cUIDAssignment_3_1; }
		
		//EString
		public RuleCall getUIDEStringParserRuleCall_3_1_0() { return cUIDEStringParserRuleCall_3_1_0; }
		
		//('NodeType' NodeType=NodeType)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'NodeType'
		public Keyword getNodeTypeKeyword_4_0() { return cNodeTypeKeyword_4_0; }
		
		//NodeType=NodeType
		public Assignment getNodeTypeAssignment_4_1() { return cNodeTypeAssignment_4_1; }
		
		//NodeType
		public RuleCall getNodeTypeNodeTypeEnumRuleCall_4_1_0() { return cNodeTypeNodeTypeEnumRuleCall_4_1_0; }
		
		//('NodeStatus' NodeStatus=NodeStatus)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'NodeStatus'
		public Keyword getNodeStatusKeyword_5_0() { return cNodeStatusKeyword_5_0; }
		
		//NodeStatus=NodeStatus
		public Assignment getNodeStatusAssignment_5_1() { return cNodeStatusAssignment_5_1; }
		
		//NodeStatus
		public RuleCall getNodeStatusNodeStatusEnumRuleCall_5_1_0() { return cNodeStatusNodeStatusEnumRuleCall_5_1_0; }
		
		//('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		public Group getGroup_6() { return cGroup_6; }
		
		//'parameters'
		public Keyword getParametersKeyword_6_0() { return cParametersKeyword_6_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6_1() { return cLeftCurlyBracketKeyword_6_1; }
		
		//parameters+=Parameter
		public Assignment getParametersAssignment_6_2() { return cParametersAssignment_6_2; }
		
		//Parameter
		public RuleCall getParametersParameterParserRuleCall_6_2_0() { return cParametersParameterParserRuleCall_6_2_0; }
		
		//( "," parameters+=Parameter)*
		public Group getGroup_6_3() { return cGroup_6_3; }
		
		//","
		public Keyword getCommaKeyword_6_3_0() { return cCommaKeyword_6_3_0; }
		
		//parameters+=Parameter
		public Assignment getParametersAssignment_6_3_1() { return cParametersAssignment_6_3_1; }
		
		//Parameter
		public RuleCall getParametersParameterParserRuleCall_6_3_1_0() { return cParametersParameterParserRuleCall_6_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6_4() { return cRightCurlyBracketKeyword_6_4; }
		
		//'child'
		public Keyword getChildKeyword_7() { return cChildKeyword_7; }
		
		//child=TreeNode
		public Assignment getChildAssignment_8() { return cChildAssignment_8; }
		
		//TreeNode
		public RuleCall getChildTreeNodeParserRuleCall_8_0() { return cChildTreeNodeParserRuleCall_8_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}
	public class TimeoutNodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.chalmers.qualitybt.QualityBt.TimeoutNode");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTimeoutNodeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cIDKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cUIDAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cUIDEStringParserRuleCall_3_1_0 = (RuleCall)cUIDAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cNodeTypeKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cNodeTypeAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cNodeTypeNodeTypeEnumRuleCall_4_1_0 = (RuleCall)cNodeTypeAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cNodeStatusKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cNodeStatusAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cNodeStatusNodeStatusEnumRuleCall_5_1_0 = (RuleCall)cNodeStatusAssignment_5_1.eContents().get(0);
		private final Keyword cMsecKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cMsecAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cMsecEStringParserRuleCall_7_0 = (RuleCall)cMsecAssignment_7.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cParametersKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_8_1 = (Keyword)cGroup_8.eContents().get(1);
		private final Assignment cParametersAssignment_8_2 = (Assignment)cGroup_8.eContents().get(2);
		private final RuleCall cParametersParameterParserRuleCall_8_2_0 = (RuleCall)cParametersAssignment_8_2.eContents().get(0);
		private final Group cGroup_8_3 = (Group)cGroup_8.eContents().get(3);
		private final Keyword cCommaKeyword_8_3_0 = (Keyword)cGroup_8_3.eContents().get(0);
		private final Assignment cParametersAssignment_8_3_1 = (Assignment)cGroup_8_3.eContents().get(1);
		private final RuleCall cParametersParameterParserRuleCall_8_3_1_0 = (RuleCall)cParametersAssignment_8_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8_4 = (Keyword)cGroup_8.eContents().get(4);
		private final Keyword cChildKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cChildAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cChildTreeNodeParserRuleCall_10_0 = (RuleCall)cChildAssignment_10.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		
		//TimeoutNode returns TimeoutNode:
		//    'TimeoutNode'
		//    name=EString
		//    '{'
		//        ("ID" uID=EString)?
		//        ('NodeType' NodeType=NodeType)?
		//        ('NodeStatus' NodeStatus=NodeStatus)?
		//        'msec' msec=EString
		//        ('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		//        'child' child=TreeNode
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'TimeoutNode'
		//name=EString
		//'{'
		//    ("ID" uID=EString)?
		//    ('NodeType' NodeType=NodeType)?
		//    ('NodeStatus' NodeStatus=NodeStatus)?
		//    'msec' msec=EString
		//    ('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		//    'child' child=TreeNode
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'TimeoutNode'
		public Keyword getTimeoutNodeKeyword_0() { return cTimeoutNodeKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//("ID" uID=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//"ID"
		public Keyword getIDKeyword_3_0() { return cIDKeyword_3_0; }
		
		//uID=EString
		public Assignment getUIDAssignment_3_1() { return cUIDAssignment_3_1; }
		
		//EString
		public RuleCall getUIDEStringParserRuleCall_3_1_0() { return cUIDEStringParserRuleCall_3_1_0; }
		
		//('NodeType' NodeType=NodeType)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'NodeType'
		public Keyword getNodeTypeKeyword_4_0() { return cNodeTypeKeyword_4_0; }
		
		//NodeType=NodeType
		public Assignment getNodeTypeAssignment_4_1() { return cNodeTypeAssignment_4_1; }
		
		//NodeType
		public RuleCall getNodeTypeNodeTypeEnumRuleCall_4_1_0() { return cNodeTypeNodeTypeEnumRuleCall_4_1_0; }
		
		//('NodeStatus' NodeStatus=NodeStatus)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'NodeStatus'
		public Keyword getNodeStatusKeyword_5_0() { return cNodeStatusKeyword_5_0; }
		
		//NodeStatus=NodeStatus
		public Assignment getNodeStatusAssignment_5_1() { return cNodeStatusAssignment_5_1; }
		
		//NodeStatus
		public RuleCall getNodeStatusNodeStatusEnumRuleCall_5_1_0() { return cNodeStatusNodeStatusEnumRuleCall_5_1_0; }
		
		//'msec'
		public Keyword getMsecKeyword_6() { return cMsecKeyword_6; }
		
		//msec=EString
		public Assignment getMsecAssignment_7() { return cMsecAssignment_7; }
		
		//EString
		public RuleCall getMsecEStringParserRuleCall_7_0() { return cMsecEStringParserRuleCall_7_0; }
		
		//('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		public Group getGroup_8() { return cGroup_8; }
		
		//'parameters'
		public Keyword getParametersKeyword_8_0() { return cParametersKeyword_8_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_8_1() { return cLeftCurlyBracketKeyword_8_1; }
		
		//parameters+=Parameter
		public Assignment getParametersAssignment_8_2() { return cParametersAssignment_8_2; }
		
		//Parameter
		public RuleCall getParametersParameterParserRuleCall_8_2_0() { return cParametersParameterParserRuleCall_8_2_0; }
		
		//( "," parameters+=Parameter)*
		public Group getGroup_8_3() { return cGroup_8_3; }
		
		//","
		public Keyword getCommaKeyword_8_3_0() { return cCommaKeyword_8_3_0; }
		
		//parameters+=Parameter
		public Assignment getParametersAssignment_8_3_1() { return cParametersAssignment_8_3_1; }
		
		//Parameter
		public RuleCall getParametersParameterParserRuleCall_8_3_1_0() { return cParametersParameterParserRuleCall_8_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8_4() { return cRightCurlyBracketKeyword_8_4; }
		
		//'child'
		public Keyword getChildKeyword_9() { return cChildKeyword_9; }
		
		//child=TreeNode
		public Assignment getChildAssignment_10() { return cChildAssignment_10; }
		
		//TreeNode
		public RuleCall getChildTreeNodeParserRuleCall_10_0() { return cChildTreeNodeParserRuleCall_10_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_11() { return cRightCurlyBracketKeyword_11; }
	}
	public class KeepRunningUntilFailureNodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.chalmers.qualitybt.QualityBt.KeepRunningUntilFailureNode");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cKeepRunningUntilFailureNodeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cIDKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cUIDAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cUIDEStringParserRuleCall_3_1_0 = (RuleCall)cUIDAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cNodeTypeKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cNodeTypeAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cNodeTypeNodeTypeEnumRuleCall_4_1_0 = (RuleCall)cNodeTypeAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cNodeStatusKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cNodeStatusAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cNodeStatusNodeStatusEnumRuleCall_5_1_0 = (RuleCall)cNodeStatusAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cParametersKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cParametersAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cParametersParameterParserRuleCall_6_2_0 = (RuleCall)cParametersAssignment_6_2.eContents().get(0);
		private final Group cGroup_6_3 = (Group)cGroup_6.eContents().get(3);
		private final Keyword cCommaKeyword_6_3_0 = (Keyword)cGroup_6_3.eContents().get(0);
		private final Assignment cParametersAssignment_6_3_1 = (Assignment)cGroup_6_3.eContents().get(1);
		private final RuleCall cParametersParameterParserRuleCall_6_3_1_0 = (RuleCall)cParametersAssignment_6_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6_4 = (Keyword)cGroup_6.eContents().get(4);
		private final Keyword cChildKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cChildAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cChildTreeNodeParserRuleCall_8_0 = (RuleCall)cChildAssignment_8.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//KeepRunningUntilFailureNode returns KeepRunningUntilFailureNode:
		//    'KeepRunningUntilFailureNode'
		//    name=EString
		//    '{'
		//        ("ID" uID=EString)?
		//        ('NodeType' NodeType=NodeType)?
		//        ('NodeStatus' NodeStatus=NodeStatus)?
		//        ('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		//        'child' child=TreeNode
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'KeepRunningUntilFailureNode'
		//name=EString
		//'{'
		//    ("ID" uID=EString)?
		//    ('NodeType' NodeType=NodeType)?
		//    ('NodeStatus' NodeStatus=NodeStatus)?
		//    ('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		//    'child' child=TreeNode
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'KeepRunningUntilFailureNode'
		public Keyword getKeepRunningUntilFailureNodeKeyword_0() { return cKeepRunningUntilFailureNodeKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//("ID" uID=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//"ID"
		public Keyword getIDKeyword_3_0() { return cIDKeyword_3_0; }
		
		//uID=EString
		public Assignment getUIDAssignment_3_1() { return cUIDAssignment_3_1; }
		
		//EString
		public RuleCall getUIDEStringParserRuleCall_3_1_0() { return cUIDEStringParserRuleCall_3_1_0; }
		
		//('NodeType' NodeType=NodeType)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'NodeType'
		public Keyword getNodeTypeKeyword_4_0() { return cNodeTypeKeyword_4_0; }
		
		//NodeType=NodeType
		public Assignment getNodeTypeAssignment_4_1() { return cNodeTypeAssignment_4_1; }
		
		//NodeType
		public RuleCall getNodeTypeNodeTypeEnumRuleCall_4_1_0() { return cNodeTypeNodeTypeEnumRuleCall_4_1_0; }
		
		//('NodeStatus' NodeStatus=NodeStatus)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'NodeStatus'
		public Keyword getNodeStatusKeyword_5_0() { return cNodeStatusKeyword_5_0; }
		
		//NodeStatus=NodeStatus
		public Assignment getNodeStatusAssignment_5_1() { return cNodeStatusAssignment_5_1; }
		
		//NodeStatus
		public RuleCall getNodeStatusNodeStatusEnumRuleCall_5_1_0() { return cNodeStatusNodeStatusEnumRuleCall_5_1_0; }
		
		//('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		public Group getGroup_6() { return cGroup_6; }
		
		//'parameters'
		public Keyword getParametersKeyword_6_0() { return cParametersKeyword_6_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6_1() { return cLeftCurlyBracketKeyword_6_1; }
		
		//parameters+=Parameter
		public Assignment getParametersAssignment_6_2() { return cParametersAssignment_6_2; }
		
		//Parameter
		public RuleCall getParametersParameterParserRuleCall_6_2_0() { return cParametersParameterParserRuleCall_6_2_0; }
		
		//( "," parameters+=Parameter)*
		public Group getGroup_6_3() { return cGroup_6_3; }
		
		//","
		public Keyword getCommaKeyword_6_3_0() { return cCommaKeyword_6_3_0; }
		
		//parameters+=Parameter
		public Assignment getParametersAssignment_6_3_1() { return cParametersAssignment_6_3_1; }
		
		//Parameter
		public RuleCall getParametersParameterParserRuleCall_6_3_1_0() { return cParametersParameterParserRuleCall_6_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6_4() { return cRightCurlyBracketKeyword_6_4; }
		
		//'child'
		public Keyword getChildKeyword_7() { return cChildKeyword_7; }
		
		//child=TreeNode
		public Assignment getChildAssignment_8() { return cChildAssignment_8; }
		
		//TreeNode
		public RuleCall getChildTreeNodeParserRuleCall_8_0() { return cChildTreeNodeParserRuleCall_8_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}
	public class TimerQueueNodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.chalmers.qualitybt.QualityBt.TimerQueueNode");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTimerQueueNodeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cIDKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cUIDAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cUIDEStringParserRuleCall_3_1_0 = (RuleCall)cUIDAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cNodeTypeKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cNodeTypeAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cNodeTypeNodeTypeEnumRuleCall_4_1_0 = (RuleCall)cNodeTypeAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cNodeStatusKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cNodeStatusAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cNodeStatusNodeStatusEnumRuleCall_5_1_0 = (RuleCall)cNodeStatusAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cParametersKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cParametersAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cParametersParameterParserRuleCall_6_2_0 = (RuleCall)cParametersAssignment_6_2.eContents().get(0);
		private final Group cGroup_6_3 = (Group)cGroup_6.eContents().get(3);
		private final Keyword cCommaKeyword_6_3_0 = (Keyword)cGroup_6_3.eContents().get(0);
		private final Assignment cParametersAssignment_6_3_1 = (Assignment)cGroup_6_3.eContents().get(1);
		private final RuleCall cParametersParameterParserRuleCall_6_3_1_0 = (RuleCall)cParametersAssignment_6_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6_4 = (Keyword)cGroup_6.eContents().get(4);
		private final Keyword cChildKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cChildAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cChildTreeNodeParserRuleCall_8_0 = (RuleCall)cChildAssignment_8.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//TimerQueueNode returns TimerQueueNode:
		//    'TimerQueueNode'
		//    name=EString
		//    '{'
		//        ("ID" uID=EString)?
		//        ('NodeType' NodeType=NodeType)?
		//        ('NodeStatus' NodeStatus=NodeStatus)?
		//        ('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		//        'child' child=TreeNode
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'TimerQueueNode'
		//name=EString
		//'{'
		//    ("ID" uID=EString)?
		//    ('NodeType' NodeType=NodeType)?
		//    ('NodeStatus' NodeStatus=NodeStatus)?
		//    ('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		//    'child' child=TreeNode
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'TimerQueueNode'
		public Keyword getTimerQueueNodeKeyword_0() { return cTimerQueueNodeKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//("ID" uID=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//"ID"
		public Keyword getIDKeyword_3_0() { return cIDKeyword_3_0; }
		
		//uID=EString
		public Assignment getUIDAssignment_3_1() { return cUIDAssignment_3_1; }
		
		//EString
		public RuleCall getUIDEStringParserRuleCall_3_1_0() { return cUIDEStringParserRuleCall_3_1_0; }
		
		//('NodeType' NodeType=NodeType)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'NodeType'
		public Keyword getNodeTypeKeyword_4_0() { return cNodeTypeKeyword_4_0; }
		
		//NodeType=NodeType
		public Assignment getNodeTypeAssignment_4_1() { return cNodeTypeAssignment_4_1; }
		
		//NodeType
		public RuleCall getNodeTypeNodeTypeEnumRuleCall_4_1_0() { return cNodeTypeNodeTypeEnumRuleCall_4_1_0; }
		
		//('NodeStatus' NodeStatus=NodeStatus)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'NodeStatus'
		public Keyword getNodeStatusKeyword_5_0() { return cNodeStatusKeyword_5_0; }
		
		//NodeStatus=NodeStatus
		public Assignment getNodeStatusAssignment_5_1() { return cNodeStatusAssignment_5_1; }
		
		//NodeStatus
		public RuleCall getNodeStatusNodeStatusEnumRuleCall_5_1_0() { return cNodeStatusNodeStatusEnumRuleCall_5_1_0; }
		
		//('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		public Group getGroup_6() { return cGroup_6; }
		
		//'parameters'
		public Keyword getParametersKeyword_6_0() { return cParametersKeyword_6_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6_1() { return cLeftCurlyBracketKeyword_6_1; }
		
		//parameters+=Parameter
		public Assignment getParametersAssignment_6_2() { return cParametersAssignment_6_2; }
		
		//Parameter
		public RuleCall getParametersParameterParserRuleCall_6_2_0() { return cParametersParameterParserRuleCall_6_2_0; }
		
		//( "," parameters+=Parameter)*
		public Group getGroup_6_3() { return cGroup_6_3; }
		
		//","
		public Keyword getCommaKeyword_6_3_0() { return cCommaKeyword_6_3_0; }
		
		//parameters+=Parameter
		public Assignment getParametersAssignment_6_3_1() { return cParametersAssignment_6_3_1; }
		
		//Parameter
		public RuleCall getParametersParameterParserRuleCall_6_3_1_0() { return cParametersParameterParserRuleCall_6_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6_4() { return cRightCurlyBracketKeyword_6_4; }
		
		//'child'
		public Keyword getChildKeyword_7() { return cChildKeyword_7; }
		
		//child=TreeNode
		public Assignment getChildAssignment_8() { return cChildAssignment_8; }
		
		//TreeNode
		public RuleCall getChildTreeNodeParserRuleCall_8_0() { return cChildTreeNodeParserRuleCall_8_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}
	public class InverterNodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.chalmers.qualitybt.QualityBt.InverterNode");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cInverterNodeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cIDKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cUIDAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cUIDEStringParserRuleCall_3_1_0 = (RuleCall)cUIDAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cNodeTypeKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cNodeTypeAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cNodeTypeNodeTypeEnumRuleCall_4_1_0 = (RuleCall)cNodeTypeAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cNodeStatusKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cNodeStatusAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cNodeStatusNodeStatusEnumRuleCall_5_1_0 = (RuleCall)cNodeStatusAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cParametersKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cParametersAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cParametersParameterParserRuleCall_6_2_0 = (RuleCall)cParametersAssignment_6_2.eContents().get(0);
		private final Group cGroup_6_3 = (Group)cGroup_6.eContents().get(3);
		private final Keyword cCommaKeyword_6_3_0 = (Keyword)cGroup_6_3.eContents().get(0);
		private final Assignment cParametersAssignment_6_3_1 = (Assignment)cGroup_6_3.eContents().get(1);
		private final RuleCall cParametersParameterParserRuleCall_6_3_1_0 = (RuleCall)cParametersAssignment_6_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6_4 = (Keyword)cGroup_6.eContents().get(4);
		private final Keyword cChildKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cChildAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cChildTreeNodeParserRuleCall_8_0 = (RuleCall)cChildAssignment_8.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//InverterNode returns InverterNode:
		//    'InverterNode'
		//    name=EString
		//    '{'
		//        ("ID" uID=EString)?
		//        ('NodeType' NodeType=NodeType)?
		//        ('NodeStatus' NodeStatus=NodeStatus)?
		//        ('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		//        'child' child=TreeNode
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'InverterNode'
		//name=EString
		//'{'
		//    ("ID" uID=EString)?
		//    ('NodeType' NodeType=NodeType)?
		//    ('NodeStatus' NodeStatus=NodeStatus)?
		//    ('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		//    'child' child=TreeNode
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'InverterNode'
		public Keyword getInverterNodeKeyword_0() { return cInverterNodeKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//("ID" uID=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//"ID"
		public Keyword getIDKeyword_3_0() { return cIDKeyword_3_0; }
		
		//uID=EString
		public Assignment getUIDAssignment_3_1() { return cUIDAssignment_3_1; }
		
		//EString
		public RuleCall getUIDEStringParserRuleCall_3_1_0() { return cUIDEStringParserRuleCall_3_1_0; }
		
		//('NodeType' NodeType=NodeType)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'NodeType'
		public Keyword getNodeTypeKeyword_4_0() { return cNodeTypeKeyword_4_0; }
		
		//NodeType=NodeType
		public Assignment getNodeTypeAssignment_4_1() { return cNodeTypeAssignment_4_1; }
		
		//NodeType
		public RuleCall getNodeTypeNodeTypeEnumRuleCall_4_1_0() { return cNodeTypeNodeTypeEnumRuleCall_4_1_0; }
		
		//('NodeStatus' NodeStatus=NodeStatus)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'NodeStatus'
		public Keyword getNodeStatusKeyword_5_0() { return cNodeStatusKeyword_5_0; }
		
		//NodeStatus=NodeStatus
		public Assignment getNodeStatusAssignment_5_1() { return cNodeStatusAssignment_5_1; }
		
		//NodeStatus
		public RuleCall getNodeStatusNodeStatusEnumRuleCall_5_1_0() { return cNodeStatusNodeStatusEnumRuleCall_5_1_0; }
		
		//('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		public Group getGroup_6() { return cGroup_6; }
		
		//'parameters'
		public Keyword getParametersKeyword_6_0() { return cParametersKeyword_6_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6_1() { return cLeftCurlyBracketKeyword_6_1; }
		
		//parameters+=Parameter
		public Assignment getParametersAssignment_6_2() { return cParametersAssignment_6_2; }
		
		//Parameter
		public RuleCall getParametersParameterParserRuleCall_6_2_0() { return cParametersParameterParserRuleCall_6_2_0; }
		
		//( "," parameters+=Parameter)*
		public Group getGroup_6_3() { return cGroup_6_3; }
		
		//","
		public Keyword getCommaKeyword_6_3_0() { return cCommaKeyword_6_3_0; }
		
		//parameters+=Parameter
		public Assignment getParametersAssignment_6_3_1() { return cParametersAssignment_6_3_1; }
		
		//Parameter
		public RuleCall getParametersParameterParserRuleCall_6_3_1_0() { return cParametersParameterParserRuleCall_6_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6_4() { return cRightCurlyBracketKeyword_6_4; }
		
		//'child'
		public Keyword getChildKeyword_7() { return cChildKeyword_7; }
		
		//child=TreeNode
		public Assignment getChildAssignment_8() { return cChildAssignment_8; }
		
		//TreeNode
		public RuleCall getChildTreeNodeParserRuleCall_8_0() { return cChildTreeNodeParserRuleCall_8_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}
	public class ForceSuccessNodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.chalmers.qualitybt.QualityBt.ForceSuccessNode");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cForceSuccessNodeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cIDKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cUIDAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cUIDEStringParserRuleCall_3_1_0 = (RuleCall)cUIDAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cNodeTypeKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cNodeTypeAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cNodeTypeNodeTypeEnumRuleCall_4_1_0 = (RuleCall)cNodeTypeAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cNodeStatusKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cNodeStatusAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cNodeStatusNodeStatusEnumRuleCall_5_1_0 = (RuleCall)cNodeStatusAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cParametersKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cParametersAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cParametersParameterParserRuleCall_6_2_0 = (RuleCall)cParametersAssignment_6_2.eContents().get(0);
		private final Group cGroup_6_3 = (Group)cGroup_6.eContents().get(3);
		private final Keyword cCommaKeyword_6_3_0 = (Keyword)cGroup_6_3.eContents().get(0);
		private final Assignment cParametersAssignment_6_3_1 = (Assignment)cGroup_6_3.eContents().get(1);
		private final RuleCall cParametersParameterParserRuleCall_6_3_1_0 = (RuleCall)cParametersAssignment_6_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6_4 = (Keyword)cGroup_6.eContents().get(4);
		private final Keyword cChildKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cChildAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cChildTreeNodeParserRuleCall_8_0 = (RuleCall)cChildAssignment_8.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//ForceSuccessNode returns ForceSuccessNode:
		//    'ForceSuccessNode'
		//    name=EString
		//    '{'
		//        ("ID" uID=EString)?
		//        ('NodeType' NodeType=NodeType)?
		//        ('NodeStatus' NodeStatus=NodeStatus)?
		//        ('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		//        'child' child=TreeNode
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'ForceSuccessNode'
		//name=EString
		//'{'
		//    ("ID" uID=EString)?
		//    ('NodeType' NodeType=NodeType)?
		//    ('NodeStatus' NodeStatus=NodeStatus)?
		//    ('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		//    'child' child=TreeNode
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'ForceSuccessNode'
		public Keyword getForceSuccessNodeKeyword_0() { return cForceSuccessNodeKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//("ID" uID=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//"ID"
		public Keyword getIDKeyword_3_0() { return cIDKeyword_3_0; }
		
		//uID=EString
		public Assignment getUIDAssignment_3_1() { return cUIDAssignment_3_1; }
		
		//EString
		public RuleCall getUIDEStringParserRuleCall_3_1_0() { return cUIDEStringParserRuleCall_3_1_0; }
		
		//('NodeType' NodeType=NodeType)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'NodeType'
		public Keyword getNodeTypeKeyword_4_0() { return cNodeTypeKeyword_4_0; }
		
		//NodeType=NodeType
		public Assignment getNodeTypeAssignment_4_1() { return cNodeTypeAssignment_4_1; }
		
		//NodeType
		public RuleCall getNodeTypeNodeTypeEnumRuleCall_4_1_0() { return cNodeTypeNodeTypeEnumRuleCall_4_1_0; }
		
		//('NodeStatus' NodeStatus=NodeStatus)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'NodeStatus'
		public Keyword getNodeStatusKeyword_5_0() { return cNodeStatusKeyword_5_0; }
		
		//NodeStatus=NodeStatus
		public Assignment getNodeStatusAssignment_5_1() { return cNodeStatusAssignment_5_1; }
		
		//NodeStatus
		public RuleCall getNodeStatusNodeStatusEnumRuleCall_5_1_0() { return cNodeStatusNodeStatusEnumRuleCall_5_1_0; }
		
		//('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		public Group getGroup_6() { return cGroup_6; }
		
		//'parameters'
		public Keyword getParametersKeyword_6_0() { return cParametersKeyword_6_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6_1() { return cLeftCurlyBracketKeyword_6_1; }
		
		//parameters+=Parameter
		public Assignment getParametersAssignment_6_2() { return cParametersAssignment_6_2; }
		
		//Parameter
		public RuleCall getParametersParameterParserRuleCall_6_2_0() { return cParametersParameterParserRuleCall_6_2_0; }
		
		//( "," parameters+=Parameter)*
		public Group getGroup_6_3() { return cGroup_6_3; }
		
		//","
		public Keyword getCommaKeyword_6_3_0() { return cCommaKeyword_6_3_0; }
		
		//parameters+=Parameter
		public Assignment getParametersAssignment_6_3_1() { return cParametersAssignment_6_3_1; }
		
		//Parameter
		public RuleCall getParametersParameterParserRuleCall_6_3_1_0() { return cParametersParameterParserRuleCall_6_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6_4() { return cRightCurlyBracketKeyword_6_4; }
		
		//'child'
		public Keyword getChildKeyword_7() { return cChildKeyword_7; }
		
		//child=TreeNode
		public Assignment getChildAssignment_8() { return cChildAssignment_8; }
		
		//TreeNode
		public RuleCall getChildTreeNodeParserRuleCall_8_0() { return cChildTreeNodeParserRuleCall_8_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}
	public class ForceFailureNodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.chalmers.qualitybt.QualityBt.ForceFailureNode");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cForceFailureNodeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cIDKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cUIDAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cUIDEStringParserRuleCall_3_1_0 = (RuleCall)cUIDAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cNodeTypeKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cNodeTypeAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cNodeTypeNodeTypeEnumRuleCall_4_1_0 = (RuleCall)cNodeTypeAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cNodeStatusKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cNodeStatusAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cNodeStatusNodeStatusEnumRuleCall_5_1_0 = (RuleCall)cNodeStatusAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cParametersKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cParametersAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cParametersParameterParserRuleCall_6_2_0 = (RuleCall)cParametersAssignment_6_2.eContents().get(0);
		private final Group cGroup_6_3 = (Group)cGroup_6.eContents().get(3);
		private final Keyword cCommaKeyword_6_3_0 = (Keyword)cGroup_6_3.eContents().get(0);
		private final Assignment cParametersAssignment_6_3_1 = (Assignment)cGroup_6_3.eContents().get(1);
		private final RuleCall cParametersParameterParserRuleCall_6_3_1_0 = (RuleCall)cParametersAssignment_6_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6_4 = (Keyword)cGroup_6.eContents().get(4);
		private final Keyword cChildKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cChildAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cChildTreeNodeParserRuleCall_8_0 = (RuleCall)cChildAssignment_8.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//ForceFailureNode returns ForceFailureNode:
		//    'ForceFailureNode'
		//    name=EString
		//    '{'
		//        ("ID" uID=EString)?
		//        ('NodeType' NodeType=NodeType)?
		//        ('NodeStatus' NodeStatus=NodeStatus)?
		//        ('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		//        'child' child=TreeNode
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'ForceFailureNode'
		//name=EString
		//'{'
		//    ("ID" uID=EString)?
		//    ('NodeType' NodeType=NodeType)?
		//    ('NodeStatus' NodeStatus=NodeStatus)?
		//    ('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		//    'child' child=TreeNode
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'ForceFailureNode'
		public Keyword getForceFailureNodeKeyword_0() { return cForceFailureNodeKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//("ID" uID=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//"ID"
		public Keyword getIDKeyword_3_0() { return cIDKeyword_3_0; }
		
		//uID=EString
		public Assignment getUIDAssignment_3_1() { return cUIDAssignment_3_1; }
		
		//EString
		public RuleCall getUIDEStringParserRuleCall_3_1_0() { return cUIDEStringParserRuleCall_3_1_0; }
		
		//('NodeType' NodeType=NodeType)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'NodeType'
		public Keyword getNodeTypeKeyword_4_0() { return cNodeTypeKeyword_4_0; }
		
		//NodeType=NodeType
		public Assignment getNodeTypeAssignment_4_1() { return cNodeTypeAssignment_4_1; }
		
		//NodeType
		public RuleCall getNodeTypeNodeTypeEnumRuleCall_4_1_0() { return cNodeTypeNodeTypeEnumRuleCall_4_1_0; }
		
		//('NodeStatus' NodeStatus=NodeStatus)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'NodeStatus'
		public Keyword getNodeStatusKeyword_5_0() { return cNodeStatusKeyword_5_0; }
		
		//NodeStatus=NodeStatus
		public Assignment getNodeStatusAssignment_5_1() { return cNodeStatusAssignment_5_1; }
		
		//NodeStatus
		public RuleCall getNodeStatusNodeStatusEnumRuleCall_5_1_0() { return cNodeStatusNodeStatusEnumRuleCall_5_1_0; }
		
		//('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		public Group getGroup_6() { return cGroup_6; }
		
		//'parameters'
		public Keyword getParametersKeyword_6_0() { return cParametersKeyword_6_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6_1() { return cLeftCurlyBracketKeyword_6_1; }
		
		//parameters+=Parameter
		public Assignment getParametersAssignment_6_2() { return cParametersAssignment_6_2; }
		
		//Parameter
		public RuleCall getParametersParameterParserRuleCall_6_2_0() { return cParametersParameterParserRuleCall_6_2_0; }
		
		//( "," parameters+=Parameter)*
		public Group getGroup_6_3() { return cGroup_6_3; }
		
		//","
		public Keyword getCommaKeyword_6_3_0() { return cCommaKeyword_6_3_0; }
		
		//parameters+=Parameter
		public Assignment getParametersAssignment_6_3_1() { return cParametersAssignment_6_3_1; }
		
		//Parameter
		public RuleCall getParametersParameterParserRuleCall_6_3_1_0() { return cParametersParameterParserRuleCall_6_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6_4() { return cRightCurlyBracketKeyword_6_4; }
		
		//'child'
		public Keyword getChildKeyword_7() { return cChildKeyword_7; }
		
		//child=TreeNode
		public Assignment getChildAssignment_8() { return cChildAssignment_8; }
		
		//TreeNode
		public RuleCall getChildTreeNodeParserRuleCall_8_0() { return cChildTreeNodeParserRuleCall_8_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}
	public class RepeatNodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.chalmers.qualitybt.QualityBt.RepeatNode");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRepeatNodeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cIDKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cUIDAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cUIDEStringParserRuleCall_3_1_0 = (RuleCall)cUIDAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cNodeTypeKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cNodeTypeAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cNodeTypeNodeTypeEnumRuleCall_4_1_0 = (RuleCall)cNodeTypeAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cNodeStatusKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cNodeStatusAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cNodeStatusNodeStatusEnumRuleCall_5_1_0 = (RuleCall)cNodeStatusAssignment_5_1.eContents().get(0);
		private final Keyword cNum_cyclesKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cNum_cyclesAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cNum_cyclesEStringParserRuleCall_7_0 = (RuleCall)cNum_cyclesAssignment_7.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cParametersKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_8_1 = (Keyword)cGroup_8.eContents().get(1);
		private final Assignment cParametersAssignment_8_2 = (Assignment)cGroup_8.eContents().get(2);
		private final RuleCall cParametersParameterParserRuleCall_8_2_0 = (RuleCall)cParametersAssignment_8_2.eContents().get(0);
		private final Group cGroup_8_3 = (Group)cGroup_8.eContents().get(3);
		private final Keyword cCommaKeyword_8_3_0 = (Keyword)cGroup_8_3.eContents().get(0);
		private final Assignment cParametersAssignment_8_3_1 = (Assignment)cGroup_8_3.eContents().get(1);
		private final RuleCall cParametersParameterParserRuleCall_8_3_1_0 = (RuleCall)cParametersAssignment_8_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8_4 = (Keyword)cGroup_8.eContents().get(4);
		private final Keyword cChildKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cChildAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cChildTreeNodeParserRuleCall_10_0 = (RuleCall)cChildAssignment_10.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		
		//RepeatNode returns RepeatNode:
		//    'RepeatNode'
		//    name=EString
		//    '{'
		//        ("ID" uID=EString)?
		//        ('NodeType' NodeType=NodeType)?
		//        ('NodeStatus' NodeStatus=NodeStatus)?
		//        'num_cycles' num_cycles=EString
		//        ('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		//        'child' child=TreeNode
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'RepeatNode'
		//name=EString
		//'{'
		//    ("ID" uID=EString)?
		//    ('NodeType' NodeType=NodeType)?
		//    ('NodeStatus' NodeStatus=NodeStatus)?
		//    'num_cycles' num_cycles=EString
		//    ('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		//    'child' child=TreeNode
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'RepeatNode'
		public Keyword getRepeatNodeKeyword_0() { return cRepeatNodeKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//("ID" uID=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//"ID"
		public Keyword getIDKeyword_3_0() { return cIDKeyword_3_0; }
		
		//uID=EString
		public Assignment getUIDAssignment_3_1() { return cUIDAssignment_3_1; }
		
		//EString
		public RuleCall getUIDEStringParserRuleCall_3_1_0() { return cUIDEStringParserRuleCall_3_1_0; }
		
		//('NodeType' NodeType=NodeType)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'NodeType'
		public Keyword getNodeTypeKeyword_4_0() { return cNodeTypeKeyword_4_0; }
		
		//NodeType=NodeType
		public Assignment getNodeTypeAssignment_4_1() { return cNodeTypeAssignment_4_1; }
		
		//NodeType
		public RuleCall getNodeTypeNodeTypeEnumRuleCall_4_1_0() { return cNodeTypeNodeTypeEnumRuleCall_4_1_0; }
		
		//('NodeStatus' NodeStatus=NodeStatus)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'NodeStatus'
		public Keyword getNodeStatusKeyword_5_0() { return cNodeStatusKeyword_5_0; }
		
		//NodeStatus=NodeStatus
		public Assignment getNodeStatusAssignment_5_1() { return cNodeStatusAssignment_5_1; }
		
		//NodeStatus
		public RuleCall getNodeStatusNodeStatusEnumRuleCall_5_1_0() { return cNodeStatusNodeStatusEnumRuleCall_5_1_0; }
		
		//'num_cycles'
		public Keyword getNum_cyclesKeyword_6() { return cNum_cyclesKeyword_6; }
		
		//num_cycles=EString
		public Assignment getNum_cyclesAssignment_7() { return cNum_cyclesAssignment_7; }
		
		//EString
		public RuleCall getNum_cyclesEStringParserRuleCall_7_0() { return cNum_cyclesEStringParserRuleCall_7_0; }
		
		//('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		public Group getGroup_8() { return cGroup_8; }
		
		//'parameters'
		public Keyword getParametersKeyword_8_0() { return cParametersKeyword_8_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_8_1() { return cLeftCurlyBracketKeyword_8_1; }
		
		//parameters+=Parameter
		public Assignment getParametersAssignment_8_2() { return cParametersAssignment_8_2; }
		
		//Parameter
		public RuleCall getParametersParameterParserRuleCall_8_2_0() { return cParametersParameterParserRuleCall_8_2_0; }
		
		//( "," parameters+=Parameter)*
		public Group getGroup_8_3() { return cGroup_8_3; }
		
		//","
		public Keyword getCommaKeyword_8_3_0() { return cCommaKeyword_8_3_0; }
		
		//parameters+=Parameter
		public Assignment getParametersAssignment_8_3_1() { return cParametersAssignment_8_3_1; }
		
		//Parameter
		public RuleCall getParametersParameterParserRuleCall_8_3_1_0() { return cParametersParameterParserRuleCall_8_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8_4() { return cRightCurlyBracketKeyword_8_4; }
		
		//'child'
		public Keyword getChildKeyword_9() { return cChildKeyword_9; }
		
		//child=TreeNode
		public Assignment getChildAssignment_10() { return cChildAssignment_10; }
		
		//TreeNode
		public RuleCall getChildTreeNodeParserRuleCall_10_0() { return cChildTreeNodeParserRuleCall_10_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_11() { return cRightCurlyBracketKeyword_11; }
	}
	public class SubTreeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.chalmers.qualitybt.QualityBt.SubTree");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSubTreeAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cSubTreeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cIDKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cUIDAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cUIDEStringParserRuleCall_4_1_0 = (RuleCall)cUIDAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cNodeTypeKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cNodeTypeAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cNodeTypeNodeTypeEnumRuleCall_5_1_0 = (RuleCall)cNodeTypeAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cNodeStatusKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cNodeStatusAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cNodeStatusNodeStatusEnumRuleCall_6_1_0 = (RuleCall)cNodeStatusAssignment_6_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cParametersKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Assignment cParametersAssignment_7_2 = (Assignment)cGroup_7.eContents().get(2);
		private final RuleCall cParametersParameterParserRuleCall_7_2_0 = (RuleCall)cParametersAssignment_7_2.eContents().get(0);
		private final Group cGroup_7_3 = (Group)cGroup_7.eContents().get(3);
		private final Keyword cCommaKeyword_7_3_0 = (Keyword)cGroup_7_3.eContents().get(0);
		private final Assignment cParametersAssignment_7_3_1 = (Assignment)cGroup_7_3.eContents().get(1);
		private final RuleCall cParametersParameterParserRuleCall_7_3_1_0 = (RuleCall)cParametersAssignment_7_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7_4 = (Keyword)cGroup_7.eContents().get(4);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cChildKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_8_1 = (Keyword)cGroup_8.eContents().get(1);
		private final Assignment cChildAssignment_8_2 = (Assignment)cGroup_8.eContents().get(2);
		private final RuleCall cChildTreeNodeParserRuleCall_8_2_0 = (RuleCall)cChildAssignment_8_2.eContents().get(0);
		private final Group cGroup_8_3 = (Group)cGroup_8.eContents().get(3);
		private final Keyword cCommaKeyword_8_3_0 = (Keyword)cGroup_8_3.eContents().get(0);
		private final Assignment cChildAssignment_8_3_1 = (Assignment)cGroup_8_3.eContents().get(1);
		private final RuleCall cChildTreeNodeParserRuleCall_8_3_1_0 = (RuleCall)cChildAssignment_8_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8_4 = (Keyword)cGroup_8.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//SubTree returns SubTree:
		//    {SubTree}
		//    'SubTree'
		//    name=EString
		//    '{'
		//        ("ID" uID=EString)?
		//        ('NodeType' NodeType=NodeType)?
		//        ('NodeStatus' NodeStatus=NodeStatus)?
		//        ('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		//        ('child' '{' child+=TreeNode ( "," child+=TreeNode)* '}' )?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{SubTree}
		//'SubTree'
		//name=EString
		//'{'
		//    ("ID" uID=EString)?
		//    ('NodeType' NodeType=NodeType)?
		//    ('NodeStatus' NodeStatus=NodeStatus)?
		//    ('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		//    ('child' '{' child+=TreeNode ( "," child+=TreeNode)* '}' )?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{SubTree}
		public Action getSubTreeAction_0() { return cSubTreeAction_0; }
		
		//'SubTree'
		public Keyword getSubTreeKeyword_1() { return cSubTreeKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//("ID" uID=EString)?
		public Group getGroup_4() { return cGroup_4; }
		
		//"ID"
		public Keyword getIDKeyword_4_0() { return cIDKeyword_4_0; }
		
		//uID=EString
		public Assignment getUIDAssignment_4_1() { return cUIDAssignment_4_1; }
		
		//EString
		public RuleCall getUIDEStringParserRuleCall_4_1_0() { return cUIDEStringParserRuleCall_4_1_0; }
		
		//('NodeType' NodeType=NodeType)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'NodeType'
		public Keyword getNodeTypeKeyword_5_0() { return cNodeTypeKeyword_5_0; }
		
		//NodeType=NodeType
		public Assignment getNodeTypeAssignment_5_1() { return cNodeTypeAssignment_5_1; }
		
		//NodeType
		public RuleCall getNodeTypeNodeTypeEnumRuleCall_5_1_0() { return cNodeTypeNodeTypeEnumRuleCall_5_1_0; }
		
		//('NodeStatus' NodeStatus=NodeStatus)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'NodeStatus'
		public Keyword getNodeStatusKeyword_6_0() { return cNodeStatusKeyword_6_0; }
		
		//NodeStatus=NodeStatus
		public Assignment getNodeStatusAssignment_6_1() { return cNodeStatusAssignment_6_1; }
		
		//NodeStatus
		public RuleCall getNodeStatusNodeStatusEnumRuleCall_6_1_0() { return cNodeStatusNodeStatusEnumRuleCall_6_1_0; }
		
		//('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		public Group getGroup_7() { return cGroup_7; }
		
		//'parameters'
		public Keyword getParametersKeyword_7_0() { return cParametersKeyword_7_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_7_1() { return cLeftCurlyBracketKeyword_7_1; }
		
		//parameters+=Parameter
		public Assignment getParametersAssignment_7_2() { return cParametersAssignment_7_2; }
		
		//Parameter
		public RuleCall getParametersParameterParserRuleCall_7_2_0() { return cParametersParameterParserRuleCall_7_2_0; }
		
		//( "," parameters+=Parameter)*
		public Group getGroup_7_3() { return cGroup_7_3; }
		
		//","
		public Keyword getCommaKeyword_7_3_0() { return cCommaKeyword_7_3_0; }
		
		//parameters+=Parameter
		public Assignment getParametersAssignment_7_3_1() { return cParametersAssignment_7_3_1; }
		
		//Parameter
		public RuleCall getParametersParameterParserRuleCall_7_3_1_0() { return cParametersParameterParserRuleCall_7_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7_4() { return cRightCurlyBracketKeyword_7_4; }
		
		//('child' '{' child+=TreeNode ( "," child+=TreeNode)* '}' )?
		public Group getGroup_8() { return cGroup_8; }
		
		//'child'
		public Keyword getChildKeyword_8_0() { return cChildKeyword_8_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_8_1() { return cLeftCurlyBracketKeyword_8_1; }
		
		//child+=TreeNode
		public Assignment getChildAssignment_8_2() { return cChildAssignment_8_2; }
		
		//TreeNode
		public RuleCall getChildTreeNodeParserRuleCall_8_2_0() { return cChildTreeNodeParserRuleCall_8_2_0; }
		
		//( "," child+=TreeNode)*
		public Group getGroup_8_3() { return cGroup_8_3; }
		
		//","
		public Keyword getCommaKeyword_8_3_0() { return cCommaKeyword_8_3_0; }
		
		//child+=TreeNode
		public Assignment getChildAssignment_8_3_1() { return cChildAssignment_8_3_1; }
		
		//TreeNode
		public RuleCall getChildTreeNodeParserRuleCall_8_3_1_0() { return cChildTreeNodeParserRuleCall_8_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8_4() { return cRightCurlyBracketKeyword_8_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}
	public class SimpleActionNodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.chalmers.qualitybt.QualityBt.SimpleActionNode");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSimpleActionNodeAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cSimpleActionNodeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cIDKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cUIDAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cUIDEStringParserRuleCall_4_1_0 = (RuleCall)cUIDAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cNodeTypeKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cNodeTypeAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cNodeTypeNodeTypeEnumRuleCall_5_1_0 = (RuleCall)cNodeTypeAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cNodeStatusKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cNodeStatusAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cNodeStatusNodeStatusEnumRuleCall_6_1_0 = (RuleCall)cNodeStatusAssignment_6_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cParametersKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Assignment cParametersAssignment_7_2 = (Assignment)cGroup_7.eContents().get(2);
		private final RuleCall cParametersParameterParserRuleCall_7_2_0 = (RuleCall)cParametersAssignment_7_2.eContents().get(0);
		private final Group cGroup_7_3 = (Group)cGroup_7.eContents().get(3);
		private final Keyword cCommaKeyword_7_3_0 = (Keyword)cGroup_7_3.eContents().get(0);
		private final Assignment cParametersAssignment_7_3_1 = (Assignment)cGroup_7_3.eContents().get(1);
		private final RuleCall cParametersParameterParserRuleCall_7_3_1_0 = (RuleCall)cParametersAssignment_7_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7_4 = (Keyword)cGroup_7.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//SimpleActionNode returns SimpleActionNode:
		//    {SimpleActionNode}
		//    'SimpleActionNode'
		//    name=EString
		//    '{'
		//        ("ID" uID=EString)?
		//        ('NodeType' NodeType=NodeType)?
		//        ('NodeStatus' NodeStatus=NodeStatus)?
		//        ('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{SimpleActionNode}
		//'SimpleActionNode'
		//name=EString
		//'{'
		//    ("ID" uID=EString)?
		//    ('NodeType' NodeType=NodeType)?
		//    ('NodeStatus' NodeStatus=NodeStatus)?
		//    ('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{SimpleActionNode}
		public Action getSimpleActionNodeAction_0() { return cSimpleActionNodeAction_0; }
		
		//'SimpleActionNode'
		public Keyword getSimpleActionNodeKeyword_1() { return cSimpleActionNodeKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//("ID" uID=EString)?
		public Group getGroup_4() { return cGroup_4; }
		
		//"ID"
		public Keyword getIDKeyword_4_0() { return cIDKeyword_4_0; }
		
		//uID=EString
		public Assignment getUIDAssignment_4_1() { return cUIDAssignment_4_1; }
		
		//EString
		public RuleCall getUIDEStringParserRuleCall_4_1_0() { return cUIDEStringParserRuleCall_4_1_0; }
		
		//('NodeType' NodeType=NodeType)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'NodeType'
		public Keyword getNodeTypeKeyword_5_0() { return cNodeTypeKeyword_5_0; }
		
		//NodeType=NodeType
		public Assignment getNodeTypeAssignment_5_1() { return cNodeTypeAssignment_5_1; }
		
		//NodeType
		public RuleCall getNodeTypeNodeTypeEnumRuleCall_5_1_0() { return cNodeTypeNodeTypeEnumRuleCall_5_1_0; }
		
		//('NodeStatus' NodeStatus=NodeStatus)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'NodeStatus'
		public Keyword getNodeStatusKeyword_6_0() { return cNodeStatusKeyword_6_0; }
		
		//NodeStatus=NodeStatus
		public Assignment getNodeStatusAssignment_6_1() { return cNodeStatusAssignment_6_1; }
		
		//NodeStatus
		public RuleCall getNodeStatusNodeStatusEnumRuleCall_6_1_0() { return cNodeStatusNodeStatusEnumRuleCall_6_1_0; }
		
		//('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		public Group getGroup_7() { return cGroup_7; }
		
		//'parameters'
		public Keyword getParametersKeyword_7_0() { return cParametersKeyword_7_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_7_1() { return cLeftCurlyBracketKeyword_7_1; }
		
		//parameters+=Parameter
		public Assignment getParametersAssignment_7_2() { return cParametersAssignment_7_2; }
		
		//Parameter
		public RuleCall getParametersParameterParserRuleCall_7_2_0() { return cParametersParameterParserRuleCall_7_2_0; }
		
		//( "," parameters+=Parameter)*
		public Group getGroup_7_3() { return cGroup_7_3; }
		
		//","
		public Keyword getCommaKeyword_7_3_0() { return cCommaKeyword_7_3_0; }
		
		//parameters+=Parameter
		public Assignment getParametersAssignment_7_3_1() { return cParametersAssignment_7_3_1; }
		
		//Parameter
		public RuleCall getParametersParameterParserRuleCall_7_3_1_0() { return cParametersParameterParserRuleCall_7_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7_4() { return cRightCurlyBracketKeyword_7_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}
	public class SimpleConditionNodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.chalmers.qualitybt.QualityBt.SimpleConditionNode");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSimpleConditionNodeAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cSimpleConditionNodeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cIDKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cUIDAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cUIDEStringParserRuleCall_4_1_0 = (RuleCall)cUIDAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cNodeTypeKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cNodeTypeAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cNodeTypeNodeTypeEnumRuleCall_5_1_0 = (RuleCall)cNodeTypeAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cNodeStatusKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cNodeStatusAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cNodeStatusNodeStatusEnumRuleCall_6_1_0 = (RuleCall)cNodeStatusAssignment_6_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cParametersKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Assignment cParametersAssignment_7_2 = (Assignment)cGroup_7.eContents().get(2);
		private final RuleCall cParametersParameterParserRuleCall_7_2_0 = (RuleCall)cParametersAssignment_7_2.eContents().get(0);
		private final Group cGroup_7_3 = (Group)cGroup_7.eContents().get(3);
		private final Keyword cCommaKeyword_7_3_0 = (Keyword)cGroup_7_3.eContents().get(0);
		private final Assignment cParametersAssignment_7_3_1 = (Assignment)cGroup_7_3.eContents().get(1);
		private final RuleCall cParametersParameterParserRuleCall_7_3_1_0 = (RuleCall)cParametersAssignment_7_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7_4 = (Keyword)cGroup_7.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//SimpleConditionNode returns SimpleConditionNode:
		//    {SimpleConditionNode}
		//    'SimpleConditionNode'
		//    name=EString
		//    '{'
		//        ("ID" uID=EString)?
		//        ('NodeType' NodeType=NodeType)?
		//        ('NodeStatus' NodeStatus=NodeStatus)?
		//        ('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{SimpleConditionNode}
		//'SimpleConditionNode'
		//name=EString
		//'{'
		//    ("ID" uID=EString)?
		//    ('NodeType' NodeType=NodeType)?
		//    ('NodeStatus' NodeStatus=NodeStatus)?
		//    ('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{SimpleConditionNode}
		public Action getSimpleConditionNodeAction_0() { return cSimpleConditionNodeAction_0; }
		
		//'SimpleConditionNode'
		public Keyword getSimpleConditionNodeKeyword_1() { return cSimpleConditionNodeKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//("ID" uID=EString)?
		public Group getGroup_4() { return cGroup_4; }
		
		//"ID"
		public Keyword getIDKeyword_4_0() { return cIDKeyword_4_0; }
		
		//uID=EString
		public Assignment getUIDAssignment_4_1() { return cUIDAssignment_4_1; }
		
		//EString
		public RuleCall getUIDEStringParserRuleCall_4_1_0() { return cUIDEStringParserRuleCall_4_1_0; }
		
		//('NodeType' NodeType=NodeType)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'NodeType'
		public Keyword getNodeTypeKeyword_5_0() { return cNodeTypeKeyword_5_0; }
		
		//NodeType=NodeType
		public Assignment getNodeTypeAssignment_5_1() { return cNodeTypeAssignment_5_1; }
		
		//NodeType
		public RuleCall getNodeTypeNodeTypeEnumRuleCall_5_1_0() { return cNodeTypeNodeTypeEnumRuleCall_5_1_0; }
		
		//('NodeStatus' NodeStatus=NodeStatus)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'NodeStatus'
		public Keyword getNodeStatusKeyword_6_0() { return cNodeStatusKeyword_6_0; }
		
		//NodeStatus=NodeStatus
		public Assignment getNodeStatusAssignment_6_1() { return cNodeStatusAssignment_6_1; }
		
		//NodeStatus
		public RuleCall getNodeStatusNodeStatusEnumRuleCall_6_1_0() { return cNodeStatusNodeStatusEnumRuleCall_6_1_0; }
		
		//('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		public Group getGroup_7() { return cGroup_7; }
		
		//'parameters'
		public Keyword getParametersKeyword_7_0() { return cParametersKeyword_7_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_7_1() { return cLeftCurlyBracketKeyword_7_1; }
		
		//parameters+=Parameter
		public Assignment getParametersAssignment_7_2() { return cParametersAssignment_7_2; }
		
		//Parameter
		public RuleCall getParametersParameterParserRuleCall_7_2_0() { return cParametersParameterParserRuleCall_7_2_0; }
		
		//( "," parameters+=Parameter)*
		public Group getGroup_7_3() { return cGroup_7_3; }
		
		//","
		public Keyword getCommaKeyword_7_3_0() { return cCommaKeyword_7_3_0; }
		
		//parameters+=Parameter
		public Assignment getParametersAssignment_7_3_1() { return cParametersAssignment_7_3_1; }
		
		//Parameter
		public RuleCall getParametersParameterParserRuleCall_7_3_1_0() { return cParametersParameterParserRuleCall_7_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7_4() { return cRightCurlyBracketKeyword_7_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}
	public class RetryNodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.chalmers.qualitybt.QualityBt.RetryNode");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRetryNodeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cIDKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cUIDAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cUIDEStringParserRuleCall_3_1_0 = (RuleCall)cUIDAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cNodeTypeKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cNodeTypeAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cNodeTypeNodeTypeEnumRuleCall_4_1_0 = (RuleCall)cNodeTypeAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cNodeStatusKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cNodeStatusAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cNodeStatusNodeStatusEnumRuleCall_5_1_0 = (RuleCall)cNodeStatusAssignment_5_1.eContents().get(0);
		private final Keyword cNum_attemptsKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cNum_attemptsAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cNum_attemptsEStringParserRuleCall_7_0 = (RuleCall)cNum_attemptsAssignment_7.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cParametersKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_8_1 = (Keyword)cGroup_8.eContents().get(1);
		private final Assignment cParametersAssignment_8_2 = (Assignment)cGroup_8.eContents().get(2);
		private final RuleCall cParametersParameterParserRuleCall_8_2_0 = (RuleCall)cParametersAssignment_8_2.eContents().get(0);
		private final Group cGroup_8_3 = (Group)cGroup_8.eContents().get(3);
		private final Keyword cCommaKeyword_8_3_0 = (Keyword)cGroup_8_3.eContents().get(0);
		private final Assignment cParametersAssignment_8_3_1 = (Assignment)cGroup_8_3.eContents().get(1);
		private final RuleCall cParametersParameterParserRuleCall_8_3_1_0 = (RuleCall)cParametersAssignment_8_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8_4 = (Keyword)cGroup_8.eContents().get(4);
		private final Keyword cChildKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cChildAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cChildTreeNodeParserRuleCall_10_0 = (RuleCall)cChildAssignment_10.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		
		//RetryNode returns RetryNode:
		//    'RetryNode'
		//    name=EString
		//    '{'
		//        ("ID" uID=EString)?
		//        ('NodeType' NodeType=NodeType)?
		//        ('NodeStatus' NodeStatus=NodeStatus)?
		//        'num_attempts' num_attempts=EString
		//        ('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		//        'child' child=TreeNode
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'RetryNode'
		//name=EString
		//'{'
		//    ("ID" uID=EString)?
		//    ('NodeType' NodeType=NodeType)?
		//    ('NodeStatus' NodeStatus=NodeStatus)?
		//    'num_attempts' num_attempts=EString
		//    ('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		//    'child' child=TreeNode
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'RetryNode'
		public Keyword getRetryNodeKeyword_0() { return cRetryNodeKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//("ID" uID=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//"ID"
		public Keyword getIDKeyword_3_0() { return cIDKeyword_3_0; }
		
		//uID=EString
		public Assignment getUIDAssignment_3_1() { return cUIDAssignment_3_1; }
		
		//EString
		public RuleCall getUIDEStringParserRuleCall_3_1_0() { return cUIDEStringParserRuleCall_3_1_0; }
		
		//('NodeType' NodeType=NodeType)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'NodeType'
		public Keyword getNodeTypeKeyword_4_0() { return cNodeTypeKeyword_4_0; }
		
		//NodeType=NodeType
		public Assignment getNodeTypeAssignment_4_1() { return cNodeTypeAssignment_4_1; }
		
		//NodeType
		public RuleCall getNodeTypeNodeTypeEnumRuleCall_4_1_0() { return cNodeTypeNodeTypeEnumRuleCall_4_1_0; }
		
		//('NodeStatus' NodeStatus=NodeStatus)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'NodeStatus'
		public Keyword getNodeStatusKeyword_5_0() { return cNodeStatusKeyword_5_0; }
		
		//NodeStatus=NodeStatus
		public Assignment getNodeStatusAssignment_5_1() { return cNodeStatusAssignment_5_1; }
		
		//NodeStatus
		public RuleCall getNodeStatusNodeStatusEnumRuleCall_5_1_0() { return cNodeStatusNodeStatusEnumRuleCall_5_1_0; }
		
		//'num_attempts'
		public Keyword getNum_attemptsKeyword_6() { return cNum_attemptsKeyword_6; }
		
		//num_attempts=EString
		public Assignment getNum_attemptsAssignment_7() { return cNum_attemptsAssignment_7; }
		
		//EString
		public RuleCall getNum_attemptsEStringParserRuleCall_7_0() { return cNum_attemptsEStringParserRuleCall_7_0; }
		
		//('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		public Group getGroup_8() { return cGroup_8; }
		
		//'parameters'
		public Keyword getParametersKeyword_8_0() { return cParametersKeyword_8_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_8_1() { return cLeftCurlyBracketKeyword_8_1; }
		
		//parameters+=Parameter
		public Assignment getParametersAssignment_8_2() { return cParametersAssignment_8_2; }
		
		//Parameter
		public RuleCall getParametersParameterParserRuleCall_8_2_0() { return cParametersParameterParserRuleCall_8_2_0; }
		
		//( "," parameters+=Parameter)*
		public Group getGroup_8_3() { return cGroup_8_3; }
		
		//","
		public Keyword getCommaKeyword_8_3_0() { return cCommaKeyword_8_3_0; }
		
		//parameters+=Parameter
		public Assignment getParametersAssignment_8_3_1() { return cParametersAssignment_8_3_1; }
		
		//Parameter
		public RuleCall getParametersParameterParserRuleCall_8_3_1_0() { return cParametersParameterParserRuleCall_8_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8_4() { return cRightCurlyBracketKeyword_8_4; }
		
		//'child'
		public Keyword getChildKeyword_9() { return cChildKeyword_9; }
		
		//child=TreeNode
		public Assignment getChildAssignment_10() { return cChildAssignment_10; }
		
		//TreeNode
		public RuleCall getChildTreeNodeParserRuleCall_10_0() { return cChildTreeNodeParserRuleCall_10_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_11() { return cRightCurlyBracketKeyword_11; }
	}
	public class BlackboardCheckIntElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.chalmers.qualitybt.QualityBt.BlackboardCheckInt");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cBlackboardCheckIntKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cIDKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cUIDAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cUIDEStringParserRuleCall_3_1_0 = (RuleCall)cUIDAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cNodeTypeKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cNodeTypeAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cNodeTypeNodeTypeEnumRuleCall_4_1_0 = (RuleCall)cNodeTypeAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cNodeStatusKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cNodeStatusAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cNodeStatusNodeStatusEnumRuleCall_5_1_0 = (RuleCall)cNodeStatusAssignment_5_1.eContents().get(0);
		private final Keyword cReturn_on_mismatchKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cReturn_on_mismatchAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cReturn_on_mismatchNodeStatusEnumRuleCall_7_0 = (RuleCall)cReturn_on_mismatchAssignment_7.eContents().get(0);
		private final Keyword cValue_AKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cValue_AAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cValue_AEStringParserRuleCall_9_0 = (RuleCall)cValue_AAssignment_9.eContents().get(0);
		private final Keyword cValue_BKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Assignment cValue_BAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cValue_BEStringParserRuleCall_11_0 = (RuleCall)cValue_BAssignment_11.eContents().get(0);
		private final Group cGroup_12 = (Group)cGroup.eContents().get(12);
		private final Keyword cParametersKeyword_12_0 = (Keyword)cGroup_12.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_12_1 = (Keyword)cGroup_12.eContents().get(1);
		private final Assignment cParametersAssignment_12_2 = (Assignment)cGroup_12.eContents().get(2);
		private final RuleCall cParametersParameterParserRuleCall_12_2_0 = (RuleCall)cParametersAssignment_12_2.eContents().get(0);
		private final Group cGroup_12_3 = (Group)cGroup_12.eContents().get(3);
		private final Keyword cCommaKeyword_12_3_0 = (Keyword)cGroup_12_3.eContents().get(0);
		private final Assignment cParametersAssignment_12_3_1 = (Assignment)cGroup_12_3.eContents().get(1);
		private final RuleCall cParametersParameterParserRuleCall_12_3_1_0 = (RuleCall)cParametersAssignment_12_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_12_4 = (Keyword)cGroup_12.eContents().get(4);
		private final Keyword cChildKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Assignment cChildAssignment_14 = (Assignment)cGroup.eContents().get(14);
		private final RuleCall cChildTreeNodeParserRuleCall_14_0 = (RuleCall)cChildAssignment_14.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_15 = (Keyword)cGroup.eContents().get(15);
		
		//BlackboardCheckInt returns BlackboardCheckInt:
		//    'BlackboardCheckInt'
		//    name=EString
		//    '{'
		//        ("ID" uID=EString)?
		//        ('NodeType' NodeType=NodeType)?
		//        ('NodeStatus' NodeStatus=NodeStatus)?
		//        'return_on_mismatch' return_on_mismatch=NodeStatus
		//        'value_A' value_A=EString
		//        'value_B' value_B=EString
		//        ('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		//        'child' child=TreeNode
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'BlackboardCheckInt'
		//name=EString
		//'{'
		//    ("ID" uID=EString)?
		//    ('NodeType' NodeType=NodeType)?
		//    ('NodeStatus' NodeStatus=NodeStatus)?
		//    'return_on_mismatch' return_on_mismatch=NodeStatus
		//    'value_A' value_A=EString
		//    'value_B' value_B=EString
		//    ('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		//    'child' child=TreeNode
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'BlackboardCheckInt'
		public Keyword getBlackboardCheckIntKeyword_0() { return cBlackboardCheckIntKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//("ID" uID=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//"ID"
		public Keyword getIDKeyword_3_0() { return cIDKeyword_3_0; }
		
		//uID=EString
		public Assignment getUIDAssignment_3_1() { return cUIDAssignment_3_1; }
		
		//EString
		public RuleCall getUIDEStringParserRuleCall_3_1_0() { return cUIDEStringParserRuleCall_3_1_0; }
		
		//('NodeType' NodeType=NodeType)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'NodeType'
		public Keyword getNodeTypeKeyword_4_0() { return cNodeTypeKeyword_4_0; }
		
		//NodeType=NodeType
		public Assignment getNodeTypeAssignment_4_1() { return cNodeTypeAssignment_4_1; }
		
		//NodeType
		public RuleCall getNodeTypeNodeTypeEnumRuleCall_4_1_0() { return cNodeTypeNodeTypeEnumRuleCall_4_1_0; }
		
		//('NodeStatus' NodeStatus=NodeStatus)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'NodeStatus'
		public Keyword getNodeStatusKeyword_5_0() { return cNodeStatusKeyword_5_0; }
		
		//NodeStatus=NodeStatus
		public Assignment getNodeStatusAssignment_5_1() { return cNodeStatusAssignment_5_1; }
		
		//NodeStatus
		public RuleCall getNodeStatusNodeStatusEnumRuleCall_5_1_0() { return cNodeStatusNodeStatusEnumRuleCall_5_1_0; }
		
		//'return_on_mismatch'
		public Keyword getReturn_on_mismatchKeyword_6() { return cReturn_on_mismatchKeyword_6; }
		
		//return_on_mismatch=NodeStatus
		public Assignment getReturn_on_mismatchAssignment_7() { return cReturn_on_mismatchAssignment_7; }
		
		//NodeStatus
		public RuleCall getReturn_on_mismatchNodeStatusEnumRuleCall_7_0() { return cReturn_on_mismatchNodeStatusEnumRuleCall_7_0; }
		
		//'value_A'
		public Keyword getValue_AKeyword_8() { return cValue_AKeyword_8; }
		
		//value_A=EString
		public Assignment getValue_AAssignment_9() { return cValue_AAssignment_9; }
		
		//EString
		public RuleCall getValue_AEStringParserRuleCall_9_0() { return cValue_AEStringParserRuleCall_9_0; }
		
		//'value_B'
		public Keyword getValue_BKeyword_10() { return cValue_BKeyword_10; }
		
		//value_B=EString
		public Assignment getValue_BAssignment_11() { return cValue_BAssignment_11; }
		
		//EString
		public RuleCall getValue_BEStringParserRuleCall_11_0() { return cValue_BEStringParserRuleCall_11_0; }
		
		//('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		public Group getGroup_12() { return cGroup_12; }
		
		//'parameters'
		public Keyword getParametersKeyword_12_0() { return cParametersKeyword_12_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_12_1() { return cLeftCurlyBracketKeyword_12_1; }
		
		//parameters+=Parameter
		public Assignment getParametersAssignment_12_2() { return cParametersAssignment_12_2; }
		
		//Parameter
		public RuleCall getParametersParameterParserRuleCall_12_2_0() { return cParametersParameterParserRuleCall_12_2_0; }
		
		//( "," parameters+=Parameter)*
		public Group getGroup_12_3() { return cGroup_12_3; }
		
		//","
		public Keyword getCommaKeyword_12_3_0() { return cCommaKeyword_12_3_0; }
		
		//parameters+=Parameter
		public Assignment getParametersAssignment_12_3_1() { return cParametersAssignment_12_3_1; }
		
		//Parameter
		public RuleCall getParametersParameterParserRuleCall_12_3_1_0() { return cParametersParameterParserRuleCall_12_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_12_4() { return cRightCurlyBracketKeyword_12_4; }
		
		//'child'
		public Keyword getChildKeyword_13() { return cChildKeyword_13; }
		
		//child=TreeNode
		public Assignment getChildAssignment_14() { return cChildAssignment_14; }
		
		//TreeNode
		public RuleCall getChildTreeNodeParserRuleCall_14_0() { return cChildTreeNodeParserRuleCall_14_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_15() { return cRightCurlyBracketKeyword_15; }
	}
	public class BlackboardCheckDoubleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.chalmers.qualitybt.QualityBt.BlackboardCheckDouble");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cBlackboardCheckDoubleKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cIDKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cUIDAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cUIDEStringParserRuleCall_3_1_0 = (RuleCall)cUIDAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cNodeTypeKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cNodeTypeAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cNodeTypeNodeTypeEnumRuleCall_4_1_0 = (RuleCall)cNodeTypeAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cNodeStatusKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cNodeStatusAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cNodeStatusNodeStatusEnumRuleCall_5_1_0 = (RuleCall)cNodeStatusAssignment_5_1.eContents().get(0);
		private final Keyword cReturn_on_mismatchKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cReturn_on_mismatchAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cReturn_on_mismatchNodeStatusEnumRuleCall_7_0 = (RuleCall)cReturn_on_mismatchAssignment_7.eContents().get(0);
		private final Keyword cValue_AKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cValue_AAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cValue_AEStringParserRuleCall_9_0 = (RuleCall)cValue_AAssignment_9.eContents().get(0);
		private final Keyword cValue_BKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Assignment cValue_BAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cValue_BEStringParserRuleCall_11_0 = (RuleCall)cValue_BAssignment_11.eContents().get(0);
		private final Group cGroup_12 = (Group)cGroup.eContents().get(12);
		private final Keyword cParametersKeyword_12_0 = (Keyword)cGroup_12.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_12_1 = (Keyword)cGroup_12.eContents().get(1);
		private final Assignment cParametersAssignment_12_2 = (Assignment)cGroup_12.eContents().get(2);
		private final RuleCall cParametersParameterParserRuleCall_12_2_0 = (RuleCall)cParametersAssignment_12_2.eContents().get(0);
		private final Group cGroup_12_3 = (Group)cGroup_12.eContents().get(3);
		private final Keyword cCommaKeyword_12_3_0 = (Keyword)cGroup_12_3.eContents().get(0);
		private final Assignment cParametersAssignment_12_3_1 = (Assignment)cGroup_12_3.eContents().get(1);
		private final RuleCall cParametersParameterParserRuleCall_12_3_1_0 = (RuleCall)cParametersAssignment_12_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_12_4 = (Keyword)cGroup_12.eContents().get(4);
		private final Keyword cChildKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Assignment cChildAssignment_14 = (Assignment)cGroup.eContents().get(14);
		private final RuleCall cChildTreeNodeParserRuleCall_14_0 = (RuleCall)cChildAssignment_14.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_15 = (Keyword)cGroup.eContents().get(15);
		
		//BlackboardCheckDouble returns BlackboardCheckDouble:
		//    'BlackboardCheckDouble'
		//    name=EString
		//    '{'
		//        ("ID" uID=EString)?
		//        ('NodeType' NodeType=NodeType)?
		//        ('NodeStatus' NodeStatus=NodeStatus)?
		//        'return_on_mismatch' return_on_mismatch=NodeStatus
		//        'value_A' value_A=EString
		//        'value_B' value_B=EString
		//        ('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		//        'child' child=TreeNode
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'BlackboardCheckDouble'
		//name=EString
		//'{'
		//    ("ID" uID=EString)?
		//    ('NodeType' NodeType=NodeType)?
		//    ('NodeStatus' NodeStatus=NodeStatus)?
		//    'return_on_mismatch' return_on_mismatch=NodeStatus
		//    'value_A' value_A=EString
		//    'value_B' value_B=EString
		//    ('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		//    'child' child=TreeNode
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'BlackboardCheckDouble'
		public Keyword getBlackboardCheckDoubleKeyword_0() { return cBlackboardCheckDoubleKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//("ID" uID=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//"ID"
		public Keyword getIDKeyword_3_0() { return cIDKeyword_3_0; }
		
		//uID=EString
		public Assignment getUIDAssignment_3_1() { return cUIDAssignment_3_1; }
		
		//EString
		public RuleCall getUIDEStringParserRuleCall_3_1_0() { return cUIDEStringParserRuleCall_3_1_0; }
		
		//('NodeType' NodeType=NodeType)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'NodeType'
		public Keyword getNodeTypeKeyword_4_0() { return cNodeTypeKeyword_4_0; }
		
		//NodeType=NodeType
		public Assignment getNodeTypeAssignment_4_1() { return cNodeTypeAssignment_4_1; }
		
		//NodeType
		public RuleCall getNodeTypeNodeTypeEnumRuleCall_4_1_0() { return cNodeTypeNodeTypeEnumRuleCall_4_1_0; }
		
		//('NodeStatus' NodeStatus=NodeStatus)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'NodeStatus'
		public Keyword getNodeStatusKeyword_5_0() { return cNodeStatusKeyword_5_0; }
		
		//NodeStatus=NodeStatus
		public Assignment getNodeStatusAssignment_5_1() { return cNodeStatusAssignment_5_1; }
		
		//NodeStatus
		public RuleCall getNodeStatusNodeStatusEnumRuleCall_5_1_0() { return cNodeStatusNodeStatusEnumRuleCall_5_1_0; }
		
		//'return_on_mismatch'
		public Keyword getReturn_on_mismatchKeyword_6() { return cReturn_on_mismatchKeyword_6; }
		
		//return_on_mismatch=NodeStatus
		public Assignment getReturn_on_mismatchAssignment_7() { return cReturn_on_mismatchAssignment_7; }
		
		//NodeStatus
		public RuleCall getReturn_on_mismatchNodeStatusEnumRuleCall_7_0() { return cReturn_on_mismatchNodeStatusEnumRuleCall_7_0; }
		
		//'value_A'
		public Keyword getValue_AKeyword_8() { return cValue_AKeyword_8; }
		
		//value_A=EString
		public Assignment getValue_AAssignment_9() { return cValue_AAssignment_9; }
		
		//EString
		public RuleCall getValue_AEStringParserRuleCall_9_0() { return cValue_AEStringParserRuleCall_9_0; }
		
		//'value_B'
		public Keyword getValue_BKeyword_10() { return cValue_BKeyword_10; }
		
		//value_B=EString
		public Assignment getValue_BAssignment_11() { return cValue_BAssignment_11; }
		
		//EString
		public RuleCall getValue_BEStringParserRuleCall_11_0() { return cValue_BEStringParserRuleCall_11_0; }
		
		//('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		public Group getGroup_12() { return cGroup_12; }
		
		//'parameters'
		public Keyword getParametersKeyword_12_0() { return cParametersKeyword_12_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_12_1() { return cLeftCurlyBracketKeyword_12_1; }
		
		//parameters+=Parameter
		public Assignment getParametersAssignment_12_2() { return cParametersAssignment_12_2; }
		
		//Parameter
		public RuleCall getParametersParameterParserRuleCall_12_2_0() { return cParametersParameterParserRuleCall_12_2_0; }
		
		//( "," parameters+=Parameter)*
		public Group getGroup_12_3() { return cGroup_12_3; }
		
		//","
		public Keyword getCommaKeyword_12_3_0() { return cCommaKeyword_12_3_0; }
		
		//parameters+=Parameter
		public Assignment getParametersAssignment_12_3_1() { return cParametersAssignment_12_3_1; }
		
		//Parameter
		public RuleCall getParametersParameterParserRuleCall_12_3_1_0() { return cParametersParameterParserRuleCall_12_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_12_4() { return cRightCurlyBracketKeyword_12_4; }
		
		//'child'
		public Keyword getChildKeyword_13() { return cChildKeyword_13; }
		
		//child=TreeNode
		public Assignment getChildAssignment_14() { return cChildAssignment_14; }
		
		//TreeNode
		public RuleCall getChildTreeNodeParserRuleCall_14_0() { return cChildTreeNodeParserRuleCall_14_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_15() { return cRightCurlyBracketKeyword_15; }
	}
	public class BlackboardCheckStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.chalmers.qualitybt.QualityBt.BlackboardCheckString");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cBlackboardCheckStringKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cIDKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cUIDAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cUIDEStringParserRuleCall_3_1_0 = (RuleCall)cUIDAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cNodeTypeKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cNodeTypeAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cNodeTypeNodeTypeEnumRuleCall_4_1_0 = (RuleCall)cNodeTypeAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cNodeStatusKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cNodeStatusAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cNodeStatusNodeStatusEnumRuleCall_5_1_0 = (RuleCall)cNodeStatusAssignment_5_1.eContents().get(0);
		private final Keyword cReturn_on_mismatchKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cReturn_on_mismatchAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cReturn_on_mismatchNodeStatusEnumRuleCall_7_0 = (RuleCall)cReturn_on_mismatchAssignment_7.eContents().get(0);
		private final Keyword cValue_AKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cValue_AAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cValue_AEStringParserRuleCall_9_0 = (RuleCall)cValue_AAssignment_9.eContents().get(0);
		private final Keyword cValue_BKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Assignment cValue_BAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cValue_BEStringParserRuleCall_11_0 = (RuleCall)cValue_BAssignment_11.eContents().get(0);
		private final Group cGroup_12 = (Group)cGroup.eContents().get(12);
		private final Keyword cParametersKeyword_12_0 = (Keyword)cGroup_12.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_12_1 = (Keyword)cGroup_12.eContents().get(1);
		private final Assignment cParametersAssignment_12_2 = (Assignment)cGroup_12.eContents().get(2);
		private final RuleCall cParametersParameterParserRuleCall_12_2_0 = (RuleCall)cParametersAssignment_12_2.eContents().get(0);
		private final Group cGroup_12_3 = (Group)cGroup_12.eContents().get(3);
		private final Keyword cCommaKeyword_12_3_0 = (Keyword)cGroup_12_3.eContents().get(0);
		private final Assignment cParametersAssignment_12_3_1 = (Assignment)cGroup_12_3.eContents().get(1);
		private final RuleCall cParametersParameterParserRuleCall_12_3_1_0 = (RuleCall)cParametersAssignment_12_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_12_4 = (Keyword)cGroup_12.eContents().get(4);
		private final Keyword cChildKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Assignment cChildAssignment_14 = (Assignment)cGroup.eContents().get(14);
		private final RuleCall cChildTreeNodeParserRuleCall_14_0 = (RuleCall)cChildAssignment_14.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_15 = (Keyword)cGroup.eContents().get(15);
		
		//BlackboardCheckString returns BlackboardCheckString:
		//    'BlackboardCheckString'
		//    name=EString
		//    '{'
		//        ("ID" uID=EString)?
		//        ('NodeType' NodeType=NodeType)?
		//        ('NodeStatus' NodeStatus=NodeStatus)?
		//        'return_on_mismatch' return_on_mismatch=NodeStatus
		//        'value_A' value_A=EString
		//        'value_B' value_B=EString
		//        ('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		//        'child' child=TreeNode
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'BlackboardCheckString'
		//name=EString
		//'{'
		//    ("ID" uID=EString)?
		//    ('NodeType' NodeType=NodeType)?
		//    ('NodeStatus' NodeStatus=NodeStatus)?
		//    'return_on_mismatch' return_on_mismatch=NodeStatus
		//    'value_A' value_A=EString
		//    'value_B' value_B=EString
		//    ('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		//    'child' child=TreeNode
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'BlackboardCheckString'
		public Keyword getBlackboardCheckStringKeyword_0() { return cBlackboardCheckStringKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//("ID" uID=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//"ID"
		public Keyword getIDKeyword_3_0() { return cIDKeyword_3_0; }
		
		//uID=EString
		public Assignment getUIDAssignment_3_1() { return cUIDAssignment_3_1; }
		
		//EString
		public RuleCall getUIDEStringParserRuleCall_3_1_0() { return cUIDEStringParserRuleCall_3_1_0; }
		
		//('NodeType' NodeType=NodeType)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'NodeType'
		public Keyword getNodeTypeKeyword_4_0() { return cNodeTypeKeyword_4_0; }
		
		//NodeType=NodeType
		public Assignment getNodeTypeAssignment_4_1() { return cNodeTypeAssignment_4_1; }
		
		//NodeType
		public RuleCall getNodeTypeNodeTypeEnumRuleCall_4_1_0() { return cNodeTypeNodeTypeEnumRuleCall_4_1_0; }
		
		//('NodeStatus' NodeStatus=NodeStatus)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'NodeStatus'
		public Keyword getNodeStatusKeyword_5_0() { return cNodeStatusKeyword_5_0; }
		
		//NodeStatus=NodeStatus
		public Assignment getNodeStatusAssignment_5_1() { return cNodeStatusAssignment_5_1; }
		
		//NodeStatus
		public RuleCall getNodeStatusNodeStatusEnumRuleCall_5_1_0() { return cNodeStatusNodeStatusEnumRuleCall_5_1_0; }
		
		//'return_on_mismatch'
		public Keyword getReturn_on_mismatchKeyword_6() { return cReturn_on_mismatchKeyword_6; }
		
		//return_on_mismatch=NodeStatus
		public Assignment getReturn_on_mismatchAssignment_7() { return cReturn_on_mismatchAssignment_7; }
		
		//NodeStatus
		public RuleCall getReturn_on_mismatchNodeStatusEnumRuleCall_7_0() { return cReturn_on_mismatchNodeStatusEnumRuleCall_7_0; }
		
		//'value_A'
		public Keyword getValue_AKeyword_8() { return cValue_AKeyword_8; }
		
		//value_A=EString
		public Assignment getValue_AAssignment_9() { return cValue_AAssignment_9; }
		
		//EString
		public RuleCall getValue_AEStringParserRuleCall_9_0() { return cValue_AEStringParserRuleCall_9_0; }
		
		//'value_B'
		public Keyword getValue_BKeyword_10() { return cValue_BKeyword_10; }
		
		//value_B=EString
		public Assignment getValue_BAssignment_11() { return cValue_BAssignment_11; }
		
		//EString
		public RuleCall getValue_BEStringParserRuleCall_11_0() { return cValue_BEStringParserRuleCall_11_0; }
		
		//('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		public Group getGroup_12() { return cGroup_12; }
		
		//'parameters'
		public Keyword getParametersKeyword_12_0() { return cParametersKeyword_12_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_12_1() { return cLeftCurlyBracketKeyword_12_1; }
		
		//parameters+=Parameter
		public Assignment getParametersAssignment_12_2() { return cParametersAssignment_12_2; }
		
		//Parameter
		public RuleCall getParametersParameterParserRuleCall_12_2_0() { return cParametersParameterParserRuleCall_12_2_0; }
		
		//( "," parameters+=Parameter)*
		public Group getGroup_12_3() { return cGroup_12_3; }
		
		//","
		public Keyword getCommaKeyword_12_3_0() { return cCommaKeyword_12_3_0; }
		
		//parameters+=Parameter
		public Assignment getParametersAssignment_12_3_1() { return cParametersAssignment_12_3_1; }
		
		//Parameter
		public RuleCall getParametersParameterParserRuleCall_12_3_1_0() { return cParametersParameterParserRuleCall_12_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_12_4() { return cRightCurlyBracketKeyword_12_4; }
		
		//'child'
		public Keyword getChildKeyword_13() { return cChildKeyword_13; }
		
		//child=TreeNode
		public Assignment getChildAssignment_14() { return cChildAssignment_14; }
		
		//TreeNode
		public RuleCall getChildTreeNodeParserRuleCall_14_0() { return cChildTreeNodeParserRuleCall_14_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_15() { return cRightCurlyBracketKeyword_15; }
	}
	
	public class NodeTypeElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.chalmers.qualitybt.QualityBt.NodeType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cUNDEFINEDEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cUNDEFINEDUNDEFINEDKeyword_0_0 = (Keyword)cUNDEFINEDEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cACTIONEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cACTIONACTIONKeyword_1_0 = (Keyword)cACTIONEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cCONDITIONEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cCONDITIONCONDITIONKeyword_2_0 = (Keyword)cCONDITIONEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cCONTROLEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cCONTROLCONTROLKeyword_3_0 = (Keyword)cCONTROLEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cDECORATOREnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cDECORATORDECORATORKeyword_4_0 = (Keyword)cDECORATOREnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cSUBTREEEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cSUBTREESUBTREEKeyword_5_0 = (Keyword)cSUBTREEEnumLiteralDeclaration_5.eContents().get(0);
		
		//enum NodeType returns NodeType:
		//                UNDEFINED = 'UNDEFINED' | ACTION = 'ACTION' | CONDITION = 'CONDITION' | CONTROL = 'CONTROL' | DECORATOR = 'DECORATOR' | SUBTREE = 'SUBTREE';
		public EnumRule getRule() { return rule; }
		
		//UNDEFINED = 'UNDEFINED' | ACTION = 'ACTION' | CONDITION = 'CONDITION' | CONTROL = 'CONTROL' | DECORATOR = 'DECORATOR' | SUBTREE = 'SUBTREE'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//UNDEFINED = 'UNDEFINED'
		public EnumLiteralDeclaration getUNDEFINEDEnumLiteralDeclaration_0() { return cUNDEFINEDEnumLiteralDeclaration_0; }
		
		//'UNDEFINED'
		public Keyword getUNDEFINEDUNDEFINEDKeyword_0_0() { return cUNDEFINEDUNDEFINEDKeyword_0_0; }
		
		//ACTION = 'ACTION'
		public EnumLiteralDeclaration getACTIONEnumLiteralDeclaration_1() { return cACTIONEnumLiteralDeclaration_1; }
		
		//'ACTION'
		public Keyword getACTIONACTIONKeyword_1_0() { return cACTIONACTIONKeyword_1_0; }
		
		//CONDITION = 'CONDITION'
		public EnumLiteralDeclaration getCONDITIONEnumLiteralDeclaration_2() { return cCONDITIONEnumLiteralDeclaration_2; }
		
		//'CONDITION'
		public Keyword getCONDITIONCONDITIONKeyword_2_0() { return cCONDITIONCONDITIONKeyword_2_0; }
		
		//CONTROL = 'CONTROL'
		public EnumLiteralDeclaration getCONTROLEnumLiteralDeclaration_3() { return cCONTROLEnumLiteralDeclaration_3; }
		
		//'CONTROL'
		public Keyword getCONTROLCONTROLKeyword_3_0() { return cCONTROLCONTROLKeyword_3_0; }
		
		//DECORATOR = 'DECORATOR'
		public EnumLiteralDeclaration getDECORATOREnumLiteralDeclaration_4() { return cDECORATOREnumLiteralDeclaration_4; }
		
		//'DECORATOR'
		public Keyword getDECORATORDECORATORKeyword_4_0() { return cDECORATORDECORATORKeyword_4_0; }
		
		//SUBTREE = 'SUBTREE'
		public EnumLiteralDeclaration getSUBTREEEnumLiteralDeclaration_5() { return cSUBTREEEnumLiteralDeclaration_5; }
		
		//'SUBTREE'
		public Keyword getSUBTREESUBTREEKeyword_5_0() { return cSUBTREESUBTREEKeyword_5_0; }
	}
	public class NodeStatusElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.chalmers.qualitybt.QualityBt.NodeStatus");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cIDLEEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cIDLEIDLEKeyword_0_0 = (Keyword)cIDLEEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cRUNNINGEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cRUNNINGRUNNINGKeyword_1_0 = (Keyword)cRUNNINGEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cSUCCESSEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cSUCCESSSUCCESSKeyword_2_0 = (Keyword)cSUCCESSEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cFAILUREEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cFAILUREFAILUREKeyword_3_0 = (Keyword)cFAILUREEnumLiteralDeclaration_3.eContents().get(0);
		
		//enum NodeStatus returns NodeStatus:
		//                IDLE = 'IDLE' | RUNNING = 'RUNNING' | SUCCESS = 'SUCCESS' | FAILURE = 'FAILURE';
		public EnumRule getRule() { return rule; }
		
		//IDLE = 'IDLE' | RUNNING = 'RUNNING' | SUCCESS = 'SUCCESS' | FAILURE = 'FAILURE'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//IDLE = 'IDLE'
		public EnumLiteralDeclaration getIDLEEnumLiteralDeclaration_0() { return cIDLEEnumLiteralDeclaration_0; }
		
		//'IDLE'
		public Keyword getIDLEIDLEKeyword_0_0() { return cIDLEIDLEKeyword_0_0; }
		
		//RUNNING = 'RUNNING'
		public EnumLiteralDeclaration getRUNNINGEnumLiteralDeclaration_1() { return cRUNNINGEnumLiteralDeclaration_1; }
		
		//'RUNNING'
		public Keyword getRUNNINGRUNNINGKeyword_1_0() { return cRUNNINGRUNNINGKeyword_1_0; }
		
		//SUCCESS = 'SUCCESS'
		public EnumLiteralDeclaration getSUCCESSEnumLiteralDeclaration_2() { return cSUCCESSEnumLiteralDeclaration_2; }
		
		//'SUCCESS'
		public Keyword getSUCCESSSUCCESSKeyword_2_0() { return cSUCCESSSUCCESSKeyword_2_0; }
		
		//FAILURE = 'FAILURE'
		public EnumLiteralDeclaration getFAILUREEnumLiteralDeclaration_3() { return cFAILUREEnumLiteralDeclaration_3; }
		
		//'FAILURE'
		public Keyword getFAILUREFAILUREKeyword_3_0() { return cFAILUREFAILUREKeyword_3_0; }
	}
	
	private final RootElements pRoot;
	private final TreeNodeElements pTreeNode;
	private final LeafNodeElements pLeafNode;
	private final ActionNodeBaseElements pActionNodeBase;
	private final ControlNodeElements pControlNode;
	private final DecoratorNodeElements pDecoratorNode;
	private final BehaviorTreeElements pBehaviorTree;
	private final EStringElements pEString;
	private final NodeTypeElements eNodeType;
	private final NodeStatusElements eNodeStatus;
	private final ParameterElements pParameter;
	private final AlwaysFailureNodeElements pAlwaysFailureNode;
	private final AlwaysSuccessNodeElements pAlwaysSuccessNode;
	private final SetBlackboardNodeElements pSetBlackboardNode;
	private final FallbackNodeElements pFallbackNode;
	private final IfThenElseNodeElements pIfThenElseNode;
	private final MnualNodeElements pMnualNode;
	private final ParallelNodeElements pParallelNode;
	private final SequenceStarNodeElements pSequenceStarNode;
	private final SwitchNodeElements pSwitchNode;
	private final ReactiveFallbackElements pReactiveFallback;
	private final WhileDoElseNodeElements pWhileDoElseNode;
	private final ReactiveSequenceElements pReactiveSequence;
	private final SequenceNodeElements pSequenceNode;
	private final SubtreeNodeElements pSubtreeNode;
	private final TimeoutNodeElements pTimeoutNode;
	private final KeepRunningUntilFailureNodeElements pKeepRunningUntilFailureNode;
	private final TimerQueueNodeElements pTimerQueueNode;
	private final InverterNodeElements pInverterNode;
	private final ForceSuccessNodeElements pForceSuccessNode;
	private final ForceFailureNodeElements pForceFailureNode;
	private final RepeatNodeElements pRepeatNode;
	private final SubTreeElements pSubTree;
	private final SimpleActionNodeElements pSimpleActionNode;
	private final SimpleConditionNodeElements pSimpleConditionNode;
	private final RetryNodeElements pRetryNode;
	private final BlackboardCheckIntElements pBlackboardCheckInt;
	private final BlackboardCheckDoubleElements pBlackboardCheckDouble;
	private final BlackboardCheckStringElements pBlackboardCheckString;
	private final TerminalRule tNL;
	private final TerminalRule tBEGIN;
	private final TerminalRule tEND;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public QualityBtGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pRoot = new RootElements();
		this.pTreeNode = new TreeNodeElements();
		this.pLeafNode = new LeafNodeElements();
		this.pActionNodeBase = new ActionNodeBaseElements();
		this.pControlNode = new ControlNodeElements();
		this.pDecoratorNode = new DecoratorNodeElements();
		this.pBehaviorTree = new BehaviorTreeElements();
		this.pEString = new EStringElements();
		this.eNodeType = new NodeTypeElements();
		this.eNodeStatus = new NodeStatusElements();
		this.pParameter = new ParameterElements();
		this.pAlwaysFailureNode = new AlwaysFailureNodeElements();
		this.pAlwaysSuccessNode = new AlwaysSuccessNodeElements();
		this.pSetBlackboardNode = new SetBlackboardNodeElements();
		this.pFallbackNode = new FallbackNodeElements();
		this.pIfThenElseNode = new IfThenElseNodeElements();
		this.pMnualNode = new MnualNodeElements();
		this.pParallelNode = new ParallelNodeElements();
		this.pSequenceStarNode = new SequenceStarNodeElements();
		this.pSwitchNode = new SwitchNodeElements();
		this.pReactiveFallback = new ReactiveFallbackElements();
		this.pWhileDoElseNode = new WhileDoElseNodeElements();
		this.pReactiveSequence = new ReactiveSequenceElements();
		this.pSequenceNode = new SequenceNodeElements();
		this.pSubtreeNode = new SubtreeNodeElements();
		this.pTimeoutNode = new TimeoutNodeElements();
		this.pKeepRunningUntilFailureNode = new KeepRunningUntilFailureNodeElements();
		this.pTimerQueueNode = new TimerQueueNodeElements();
		this.pInverterNode = new InverterNodeElements();
		this.pForceSuccessNode = new ForceSuccessNodeElements();
		this.pForceFailureNode = new ForceFailureNodeElements();
		this.pRepeatNode = new RepeatNodeElements();
		this.pSubTree = new SubTreeElements();
		this.pSimpleActionNode = new SimpleActionNodeElements();
		this.pSimpleConditionNode = new SimpleConditionNodeElements();
		this.pRetryNode = new RetryNodeElements();
		this.pBlackboardCheckInt = new BlackboardCheckIntElements();
		this.pBlackboardCheckDouble = new BlackboardCheckDoubleElements();
		this.pBlackboardCheckString = new BlackboardCheckStringElements();
		this.tNL = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.chalmers.qualitybt.QualityBt.NL");
		this.tBEGIN = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.chalmers.qualitybt.QualityBt.BEGIN");
		this.tEND = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.chalmers.qualitybt.QualityBt.END");
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.chalmers.qualitybt.QualityBt".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Root returns Root:
	//    'root' main_tree_to_execute=EString
	//        BEGIN behaviortrees+=BehaviorTree (behaviortrees+=BehaviorTree)* END
	//        ;
	public RootElements getRootAccess() {
		return pRoot;
	}
	
	public ParserRule getRootRule() {
		return getRootAccess().getRule();
	}
	
	//TreeNode returns TreeNode:
	//    (LeafNode | ControlNode | DecoratorNode | SubTree);
	public TreeNodeElements getTreeNodeAccess() {
		return pTreeNode;
	}
	
	public ParserRule getTreeNodeRule() {
		return getTreeNodeAccess().getRule();
	}
	
	//LeafNode returns LeafNode:
	//    ActionNodeBase | SimpleConditionNode;
	public LeafNodeElements getLeafNodeAccess() {
		return pLeafNode;
	}
	
	public ParserRule getLeafNodeRule() {
		return getLeafNodeAccess().getRule();
	}
	
	//ActionNodeBase returns ActionNodeBase:
	//    SimpleActionNode | AlwaysSuccessNode | AlwaysFailureNode| SetBlackboardNode ;
	public ActionNodeBaseElements getActionNodeBaseAccess() {
		return pActionNodeBase;
	}
	
	public ParserRule getActionNodeBaseRule() {
		return getActionNodeBaseAccess().getRule();
	}
	
	//ControlNode returns ControlNode:
	//    ReactiveSequence | SequenceNode | FallbackNode | ReactiveFallback | SequenceStarNode | ParallelNode | IfThenElseNode | SwitchNode | WhileDoElseNode | MnualNode;
	public ControlNodeElements getControlNodeAccess() {
		return pControlNode;
	}
	
	public ParserRule getControlNodeRule() {
		return getControlNodeAccess().getRule();
	}
	
	//DecoratorNode returns DecoratorNode:
	//    RepeatNode | ForceFailureNode | ForceSuccessNode | RetryNode | InverterNode | TimeoutNode | KeepRunningUntilFailureNode | TimerQueueNode | BlackboardCheckInt | BlackboardCheckDouble |BlackboardCheckString;
	public DecoratorNodeElements getDecoratorNodeAccess() {
		return pDecoratorNode;
	}
	
	public ParserRule getDecoratorNodeRule() {
		return getDecoratorNodeAccess().getRule();
	}
	
	//BehaviorTree returns BehaviorTree:
	//    'BehaviorTree'
	//        'ID' "=" ID=EString
	//        BEGIN node+=TreeNode (node+=TreeNode)*  END
	//;
	public BehaviorTreeElements getBehaviorTreeAccess() {
		return pBehaviorTree;
	}
	
	public ParserRule getBehaviorTreeRule() {
		return getBehaviorTreeAccess().getRule();
	}
	
	//EString returns ecore::EString:
	//    STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//enum NodeType returns NodeType:
	//                UNDEFINED = 'UNDEFINED' | ACTION = 'ACTION' | CONDITION = 'CONDITION' | CONTROL = 'CONTROL' | DECORATOR = 'DECORATOR' | SUBTREE = 'SUBTREE';
	public NodeTypeElements getNodeTypeAccess() {
		return eNodeType;
	}
	
	public EnumRule getNodeTypeRule() {
		return getNodeTypeAccess().getRule();
	}
	
	//enum NodeStatus returns NodeStatus:
	//                IDLE = 'IDLE' | RUNNING = 'RUNNING' | SUCCESS = 'SUCCESS' | FAILURE = 'FAILURE';
	public NodeStatusElements getNodeStatusAccess() {
		return eNodeStatus;
	}
	
	public EnumRule getNodeStatusRule() {
		return getNodeStatusAccess().getRule();
	}
	
	//Parameter returns Parameter:
	//        key=EString "=" value=EString
	//;
	public ParameterElements getParameterAccess() {
		return pParameter;
	}
	
	public ParserRule getParameterRule() {
		return getParameterAccess().getRule();
	}
	
	//AlwaysFailureNode returns AlwaysFailureNode:
	//    {AlwaysFailureNode}
	//    'AlwaysFailure'
	////    name=EString
	////        ('ID' uID=EString)?
	////        ('NodeType' NodeType=NodeType)?
	////        ('NodeStatus' NodeStatus=NodeStatus)?
	////        ('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
	//;
	public AlwaysFailureNodeElements getAlwaysFailureNodeAccess() {
		return pAlwaysFailureNode;
	}
	
	public ParserRule getAlwaysFailureNodeRule() {
		return getAlwaysFailureNodeAccess().getRule();
	}
	
	//AlwaysSuccessNode returns AlwaysSuccessNode:
	//    {AlwaysSuccessNode}
	//    'AlwaysSuccessNode'
	//    name=EString
	//    '{'
	//        ('ID' uID=EString)?
	//        ('NodeType' NodeType=NodeType)?
	//        ('NodeStatus' NodeStatus=NodeStatus)?
	//        ('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
	//    '}';
	public AlwaysSuccessNodeElements getAlwaysSuccessNodeAccess() {
		return pAlwaysSuccessNode;
	}
	
	public ParserRule getAlwaysSuccessNodeRule() {
		return getAlwaysSuccessNodeAccess().getRule();
	}
	
	//SetBlackboardNode returns SetBlackboardNode:
	//    'SetBlackboardNode'
	//    name=EString
	//    '{'
	//        ("ID" uID=EString)?
	//        ('NodeType' NodeType=NodeType)?
	//        ('NodeStatus' NodeStatus=NodeStatus)?
	//        'value' value=EString
	//        'output_key' output_key=EString
	//        ('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
	//    '}';
	public SetBlackboardNodeElements getSetBlackboardNodeAccess() {
		return pSetBlackboardNode;
	}
	
	public ParserRule getSetBlackboardNodeRule() {
		return getSetBlackboardNodeAccess().getRule();
	}
	
	//FallbackNode returns FallbackNode:
	//    'FallbackNode'
	//    name=EString
	//    '{'
	//        ("ID" uID=EString)?
	//        ('NodeType' NodeType=NodeType)?
	//        ('NodeStatus' NodeStatus=NodeStatus)?
	//        ('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
	//        'child' '{' child+=TreeNode ( "," child+=TreeNode)* '}'
	//    '}';
	public FallbackNodeElements getFallbackNodeAccess() {
		return pFallbackNode;
	}
	
	public ParserRule getFallbackNodeRule() {
		return getFallbackNodeAccess().getRule();
	}
	
	//IfThenElseNode returns IfThenElseNode:
	//    'IfThenElseNode'
	//    name=EString
	//    '{'
	//        ("ID" uID=EString)?
	//        ('NodeType' NodeType=NodeType)?
	//        ('NodeStatus' NodeStatus=NodeStatus)?
	//        ('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
	//        'child' '{' child+=TreeNode ( "," child+=TreeNode)* '}'
	//    '}';
	public IfThenElseNodeElements getIfThenElseNodeAccess() {
		return pIfThenElseNode;
	}
	
	public ParserRule getIfThenElseNodeRule() {
		return getIfThenElseNodeAccess().getRule();
	}
	
	//MnualNode returns MnualNode:
	//    'MnualNode'
	//    name=EString
	//    '{'
	//        ("ID" uID=EString)?
	//        ('NodeType' NodeType=NodeType)?
	//        ('NodeStatus' NodeStatus=NodeStatus)?
	//        ('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
	//        'child' '{' child+=TreeNode ( "," child+=TreeNode)* '}'
	//    '}';
	public MnualNodeElements getMnualNodeAccess() {
		return pMnualNode;
	}
	
	public ParserRule getMnualNodeRule() {
		return getMnualNodeAccess().getRule();
	}
	
	//ParallelNode returns ParallelNode:
	//    'ParallelNode'
	//    name=EString
	//    '{'
	//        ("ID" uID=EString)?
	//        ('NodeType' NodeType=NodeType)?
	//        ('NodeStatus' NodeStatus=NodeStatus)?
	//        ('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
	//        'child' '{' child+=TreeNode ( "," child+=TreeNode)* '}'
	//    '}';
	public ParallelNodeElements getParallelNodeAccess() {
		return pParallelNode;
	}
	
	public ParserRule getParallelNodeRule() {
		return getParallelNodeAccess().getRule();
	}
	
	//SequenceStarNode returns SequenceStarNode:
	//    'SequenceStarNode'
	//    name=EString
	//    '{'
	//        ("ID" uID=EString)?
	//        ('NodeType' NodeType=NodeType)?
	//        ('NodeStatus' NodeStatus=NodeStatus)?
	//        ('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
	//        'child' '{' child+=TreeNode ( "," child+=TreeNode)* '}'
	//    '}';
	public SequenceStarNodeElements getSequenceStarNodeAccess() {
		return pSequenceStarNode;
	}
	
	public ParserRule getSequenceStarNodeRule() {
		return getSequenceStarNodeAccess().getRule();
	}
	
	//SwitchNode returns SwitchNode:
	//    'SwitchNode'
	//    name=EString
	//    '{'
	//        ("ID" uID=EString)?
	//        ('NodeType' NodeType=NodeType)?
	//        ('NodeStatus' NodeStatus=NodeStatus)?
	//        ('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
	//        'child' '{' child+=TreeNode ( "," child+=TreeNode)* '}'
	//    '}';
	public SwitchNodeElements getSwitchNodeAccess() {
		return pSwitchNode;
	}
	
	public ParserRule getSwitchNodeRule() {
		return getSwitchNodeAccess().getRule();
	}
	
	//ReactiveFallback returns ReactiveFallback:
	//    'ReactiveFallback'
	//    name=EString
	//    '{'
	//        ("ID" uID=EString)?
	//        ('NodeType' NodeType=NodeType)?
	//        ('NodeStatus' NodeStatus=NodeStatus)?
	//        ('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
	//        'child' '{' child+=TreeNode ( "," child+=TreeNode)* '}'
	//    '}';
	public ReactiveFallbackElements getReactiveFallbackAccess() {
		return pReactiveFallback;
	}
	
	public ParserRule getReactiveFallbackRule() {
		return getReactiveFallbackAccess().getRule();
	}
	
	//WhileDoElseNode returns WhileDoElseNode:
	//    'WhileDoElseNode'
	//    name=EString
	//    '{'
	//        ("ID" uID=EString)?
	//        ('NodeType' NodeType=NodeType)?
	//        ('NodeStatus' NodeStatus=NodeStatus)?
	//        ('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
	//        'child' '{' child+=TreeNode ( "," child+=TreeNode)* '}'
	//    '}';
	public WhileDoElseNodeElements getWhileDoElseNodeAccess() {
		return pWhileDoElseNode;
	}
	
	public ParserRule getWhileDoElseNodeRule() {
		return getWhileDoElseNodeAccess().getRule();
	}
	
	//ReactiveSequence returns ReactiveSequence:
	//    'ReactiveSequence'
	//    name=EString
	//    '{'
	//        ("ID" uID=EString)?
	//        ('NodeType' NodeType=NodeType)?
	//        ('NodeStatus' NodeStatus=NodeStatus)?
	//        ('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
	//        'child' '{' child+=TreeNode ( "," child+=TreeNode)* '}'
	//    '}';
	public ReactiveSequenceElements getReactiveSequenceAccess() {
		return pReactiveSequence;
	}
	
	public ParserRule getReactiveSequenceRule() {
		return getReactiveSequenceAccess().getRule();
	}
	
	//SequenceNode returns SequenceNode:
	//    'SequenceNode'
	//    name=EString
	//    '{'
	//        ("ID" uID=EString)?
	//        ('NodeType' NodeType=NodeType)?
	//        ('NodeStatus' NodeStatus=NodeStatus)?
	//        ('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
	//        'child' '{' child+=TreeNode ( "," child+=TreeNode)* '}'
	//    '}';
	public SequenceNodeElements getSequenceNodeAccess() {
		return pSequenceNode;
	}
	
	public ParserRule getSequenceNodeRule() {
		return getSequenceNodeAccess().getRule();
	}
	
	//SubtreeNode returns SubtreeNode:
	//    'SubtreeNode'
	//    name=EString
	//    '{'
	//        ("ID" uID=EString)?
	//        ('NodeType' NodeType=NodeType)?
	//        ('NodeStatus' NodeStatus=NodeStatus)?
	//        ('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
	//        'child' child=TreeNode
	//    '}';
	public SubtreeNodeElements getSubtreeNodeAccess() {
		return pSubtreeNode;
	}
	
	public ParserRule getSubtreeNodeRule() {
		return getSubtreeNodeAccess().getRule();
	}
	
	//TimeoutNode returns TimeoutNode:
	//    'TimeoutNode'
	//    name=EString
	//    '{'
	//        ("ID" uID=EString)?
	//        ('NodeType' NodeType=NodeType)?
	//        ('NodeStatus' NodeStatus=NodeStatus)?
	//        'msec' msec=EString
	//        ('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
	//        'child' child=TreeNode
	//    '}';
	public TimeoutNodeElements getTimeoutNodeAccess() {
		return pTimeoutNode;
	}
	
	public ParserRule getTimeoutNodeRule() {
		return getTimeoutNodeAccess().getRule();
	}
	
	//KeepRunningUntilFailureNode returns KeepRunningUntilFailureNode:
	//    'KeepRunningUntilFailureNode'
	//    name=EString
	//    '{'
	//        ("ID" uID=EString)?
	//        ('NodeType' NodeType=NodeType)?
	//        ('NodeStatus' NodeStatus=NodeStatus)?
	//        ('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
	//        'child' child=TreeNode
	//    '}';
	public KeepRunningUntilFailureNodeElements getKeepRunningUntilFailureNodeAccess() {
		return pKeepRunningUntilFailureNode;
	}
	
	public ParserRule getKeepRunningUntilFailureNodeRule() {
		return getKeepRunningUntilFailureNodeAccess().getRule();
	}
	
	//TimerQueueNode returns TimerQueueNode:
	//    'TimerQueueNode'
	//    name=EString
	//    '{'
	//        ("ID" uID=EString)?
	//        ('NodeType' NodeType=NodeType)?
	//        ('NodeStatus' NodeStatus=NodeStatus)?
	//        ('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
	//        'child' child=TreeNode
	//    '}';
	public TimerQueueNodeElements getTimerQueueNodeAccess() {
		return pTimerQueueNode;
	}
	
	public ParserRule getTimerQueueNodeRule() {
		return getTimerQueueNodeAccess().getRule();
	}
	
	//InverterNode returns InverterNode:
	//    'InverterNode'
	//    name=EString
	//    '{'
	//        ("ID" uID=EString)?
	//        ('NodeType' NodeType=NodeType)?
	//        ('NodeStatus' NodeStatus=NodeStatus)?
	//        ('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
	//        'child' child=TreeNode
	//    '}';
	public InverterNodeElements getInverterNodeAccess() {
		return pInverterNode;
	}
	
	public ParserRule getInverterNodeRule() {
		return getInverterNodeAccess().getRule();
	}
	
	//ForceSuccessNode returns ForceSuccessNode:
	//    'ForceSuccessNode'
	//    name=EString
	//    '{'
	//        ("ID" uID=EString)?
	//        ('NodeType' NodeType=NodeType)?
	//        ('NodeStatus' NodeStatus=NodeStatus)?
	//        ('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
	//        'child' child=TreeNode
	//    '}';
	public ForceSuccessNodeElements getForceSuccessNodeAccess() {
		return pForceSuccessNode;
	}
	
	public ParserRule getForceSuccessNodeRule() {
		return getForceSuccessNodeAccess().getRule();
	}
	
	//ForceFailureNode returns ForceFailureNode:
	//    'ForceFailureNode'
	//    name=EString
	//    '{'
	//        ("ID" uID=EString)?
	//        ('NodeType' NodeType=NodeType)?
	//        ('NodeStatus' NodeStatus=NodeStatus)?
	//        ('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
	//        'child' child=TreeNode
	//    '}';
	public ForceFailureNodeElements getForceFailureNodeAccess() {
		return pForceFailureNode;
	}
	
	public ParserRule getForceFailureNodeRule() {
		return getForceFailureNodeAccess().getRule();
	}
	
	//RepeatNode returns RepeatNode:
	//    'RepeatNode'
	//    name=EString
	//    '{'
	//        ("ID" uID=EString)?
	//        ('NodeType' NodeType=NodeType)?
	//        ('NodeStatus' NodeStatus=NodeStatus)?
	//        'num_cycles' num_cycles=EString
	//        ('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
	//        'child' child=TreeNode
	//    '}';
	public RepeatNodeElements getRepeatNodeAccess() {
		return pRepeatNode;
	}
	
	public ParserRule getRepeatNodeRule() {
		return getRepeatNodeAccess().getRule();
	}
	
	//SubTree returns SubTree:
	//    {SubTree}
	//    'SubTree'
	//    name=EString
	//    '{'
	//        ("ID" uID=EString)?
	//        ('NodeType' NodeType=NodeType)?
	//        ('NodeStatus' NodeStatus=NodeStatus)?
	//        ('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
	//        ('child' '{' child+=TreeNode ( "," child+=TreeNode)* '}' )?
	//    '}';
	public SubTreeElements getSubTreeAccess() {
		return pSubTree;
	}
	
	public ParserRule getSubTreeRule() {
		return getSubTreeAccess().getRule();
	}
	
	//SimpleActionNode returns SimpleActionNode:
	//    {SimpleActionNode}
	//    'SimpleActionNode'
	//    name=EString
	//    '{'
	//        ("ID" uID=EString)?
	//        ('NodeType' NodeType=NodeType)?
	//        ('NodeStatus' NodeStatus=NodeStatus)?
	//        ('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
	//    '}';
	public SimpleActionNodeElements getSimpleActionNodeAccess() {
		return pSimpleActionNode;
	}
	
	public ParserRule getSimpleActionNodeRule() {
		return getSimpleActionNodeAccess().getRule();
	}
	
	//SimpleConditionNode returns SimpleConditionNode:
	//    {SimpleConditionNode}
	//    'SimpleConditionNode'
	//    name=EString
	//    '{'
	//        ("ID" uID=EString)?
	//        ('NodeType' NodeType=NodeType)?
	//        ('NodeStatus' NodeStatus=NodeStatus)?
	//        ('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
	//    '}';
	public SimpleConditionNodeElements getSimpleConditionNodeAccess() {
		return pSimpleConditionNode;
	}
	
	public ParserRule getSimpleConditionNodeRule() {
		return getSimpleConditionNodeAccess().getRule();
	}
	
	//RetryNode returns RetryNode:
	//    'RetryNode'
	//    name=EString
	//    '{'
	//        ("ID" uID=EString)?
	//        ('NodeType' NodeType=NodeType)?
	//        ('NodeStatus' NodeStatus=NodeStatus)?
	//        'num_attempts' num_attempts=EString
	//        ('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
	//        'child' child=TreeNode
	//    '}';
	public RetryNodeElements getRetryNodeAccess() {
		return pRetryNode;
	}
	
	public ParserRule getRetryNodeRule() {
		return getRetryNodeAccess().getRule();
	}
	
	//BlackboardCheckInt returns BlackboardCheckInt:
	//    'BlackboardCheckInt'
	//    name=EString
	//    '{'
	//        ("ID" uID=EString)?
	//        ('NodeType' NodeType=NodeType)?
	//        ('NodeStatus' NodeStatus=NodeStatus)?
	//        'return_on_mismatch' return_on_mismatch=NodeStatus
	//        'value_A' value_A=EString
	//        'value_B' value_B=EString
	//        ('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
	//        'child' child=TreeNode
	//    '}';
	public BlackboardCheckIntElements getBlackboardCheckIntAccess() {
		return pBlackboardCheckInt;
	}
	
	public ParserRule getBlackboardCheckIntRule() {
		return getBlackboardCheckIntAccess().getRule();
	}
	
	//BlackboardCheckDouble returns BlackboardCheckDouble:
	//    'BlackboardCheckDouble'
	//    name=EString
	//    '{'
	//        ("ID" uID=EString)?
	//        ('NodeType' NodeType=NodeType)?
	//        ('NodeStatus' NodeStatus=NodeStatus)?
	//        'return_on_mismatch' return_on_mismatch=NodeStatus
	//        'value_A' value_A=EString
	//        'value_B' value_B=EString
	//        ('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
	//        'child' child=TreeNode
	//    '}';
	public BlackboardCheckDoubleElements getBlackboardCheckDoubleAccess() {
		return pBlackboardCheckDouble;
	}
	
	public ParserRule getBlackboardCheckDoubleRule() {
		return getBlackboardCheckDoubleAccess().getRule();
	}
	
	//BlackboardCheckString returns BlackboardCheckString:
	//    'BlackboardCheckString'
	//    name=EString
	//    '{'
	//        ("ID" uID=EString)?
	//        ('NodeType' NodeType=NodeType)?
	//        ('NodeStatus' NodeStatus=NodeStatus)?
	//        'return_on_mismatch' return_on_mismatch=NodeStatus
	//        'value_A' value_A=EString
	//        'value_B' value_B=EString
	//        ('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
	//        'child' child=TreeNode
	//    '}';
	public BlackboardCheckStringElements getBlackboardCheckStringAccess() {
		return pBlackboardCheckString;
	}
	
	public ParserRule getBlackboardCheckStringRule() {
		return getBlackboardCheckStringAccess().getRule();
	}
	
	//terminal NL: ('\r'?'\n')+;
	public TerminalRule getNLRule() {
		return tNL;
	}
	
	//terminal BEGIN: 'synthetic:BEGIN';
	public TerminalRule getBEGINRule() {
		return tBEGIN;
	}
	
	//terminal END: 'synthetic:END';
	public TerminalRule getENDRule() {
		return tEND;
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
