// automatically generated by Xtext
grammar org.xtext.chalmers.QualityBtCpp with org.eclipse.xtext.common.Terminals

import "http://www.example.org/btcpp" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

Root returns Root:
	'Root'
	'{'
		'main_tree_to_execute' main_tree_to_execute=EString
		'behaviortrees' '{' behaviortrees+=BehaviorTree ( "," behaviortrees+=BehaviorTree)* '}' 
	'}';


TreeNode returns TreeNode:
	AlwaysFailureNode | AlwaysSuccessNode | SetBlackboardNode | FallbackNode | IfThenElseNode | ManualSelectorNode | ParallelNode | SequenceWithMemoryNode | SwitchNode | ReactiveFallbackNode | WhileDoElseNode | ReactiveSequenceNode | SequenceNode | TimeoutNode | KeepRunningUntilFailureNode | InverterNode | ForceSuccessNode | ForceFailureNode | RepeatNode | SubTree | ScriptNode | ScriptConditionNode | RetryNode | ParallelAllNode | DelayNode | PreconditionNode | EntryUpdatedDecoratorNode | RunOnceNode | LoopNode | ConsumeQueueNode | TestNode | EntryUpdatedActionNode | UnsetBlackboardNode | ThreadedActionNode | CoroActionNode | SleepNode | PopFromQueueNode;




BehaviorTree returns BehaviorTree:
	'BehaviorTree'
	'{'
		'ID' ID=EString
		'node' '{' node+=TreeNode ( "," node+=TreeNode)* '}' 
	'}';

EString returns ecore::EString:
	STRING | ID;

Parameter returns Parameter:
	'Parameter'
	'{'
		'key' key=EString
		'value' value=EString
	'}';

Quality returns Quality:
	{Quality}
	'Quality'
	'{'
		('ID' ID=EString)?
		('qualityreq' '{' qualityreq+=QualityRequirement ( "," qualityreq+=QualityRequirement)* '}' )?
	'}';

QualityRequirement returns QualityRequirement:
	{QualityRequirement}
	'QualityRequirement'
	'{'
		('ID' ID=EString)?
		('description' description=EString)?
	'}';

AlwaysFailureNode returns AlwaysFailureNode:
	{AlwaysFailureNode}
	'AlwaysFailureNode'
	name=EString
	'{'
		('ID' ID=EString)?
		('satisfices' '(' satisfices+=[Quality|EString] ( "," satisfices+=[Quality|EString])* ')' )?
		('satisfies' '(' satisfies+=[QualityRequirement|EString] ( "," satisfies+=[QualityRequirement|EString])* ')' )?
		('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
	'}';

AlwaysSuccessNode returns AlwaysSuccessNode:
	{AlwaysSuccessNode}
	'AlwaysSuccessNode'
	name=EString
	'{'
		('ID' ID=EString)?
		('satisfices' '(' satisfices+=[Quality|EString] ( "," satisfices+=[Quality|EString])* ')' )?
		('satisfies' '(' satisfies+=[QualityRequirement|EString] ( "," satisfies+=[QualityRequirement|EString])* ')' )?
		('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
	'}';

SetBlackboardNode returns SetBlackboardNode:
	'SetBlackboardNode'
	name=EString
	'{'
		('ID' ID=EString)?
		'value' value=EString
		'output_key' output_key=EString
		('satisfices' '(' satisfices+=[Quality|EString] ( "," satisfices+=[Quality|EString])* ')' )?
		('satisfies' '(' satisfies+=[QualityRequirement|EString] ( "," satisfies+=[QualityRequirement|EString])* ')' )?
		('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
	'}';

FallbackNode returns FallbackNode:
	'FallbackNode'
	name=EString
	'{'
		('ID' ID=EString)?
		('satisfices' '(' satisfices+=[Quality|EString] ( "," satisfices+=[Quality|EString])* ')' )?
		('satisfies' '(' satisfies+=[QualityRequirement|EString] ( "," satisfies+=[QualityRequirement|EString])* ')' )?
		('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		'child' '{' child+=TreeNode ( "," child+=TreeNode)* '}' 
	'}';

IfThenElseNode returns IfThenElseNode:
	'IfThenElseNode'
	name=EString
	'{'
		('ID' ID=EString)?
		('satisfices' '(' satisfices+=[Quality|EString] ( "," satisfices+=[Quality|EString])* ')' )?
		('satisfies' '(' satisfies+=[QualityRequirement|EString] ( "," satisfies+=[QualityRequirement|EString])* ')' )?
		('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		'child' '{' child+=TreeNode ( "," child+=TreeNode)* '}' 
	'}';

ManualSelectorNode returns ManualSelectorNode:
	'ManualSelectorNode'
	name=EString
	'{'
		('ID' ID=EString)?
		('satisfices' '(' satisfices+=[Quality|EString] ( "," satisfices+=[Quality|EString])* ')' )?
		('satisfies' '(' satisfies+=[QualityRequirement|EString] ( "," satisfies+=[QualityRequirement|EString])* ')' )?
		('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		'child' '{' child+=TreeNode ( "," child+=TreeNode)* '}' 
	'}';

ParallelNode returns ParallelNode:
	'ParallelNode'
	name=EString
	'{'
		('ID' ID=EString)?
		('satisfices' '(' satisfices+=[Quality|EString] ( "," satisfices+=[Quality|EString])* ')' )?
		('satisfies' '(' satisfies+=[QualityRequirement|EString] ( "," satisfies+=[QualityRequirement|EString])* ')' )?
		('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		'child' '{' child+=TreeNode ( "," child+=TreeNode)* '}' 
	'}';

SequenceWithMemoryNode returns SequenceWithMemoryNode:
	'SequenceWithMemoryNode'
	name=EString
	'{'
		('ID' ID=EString)?
		('satisfices' '(' satisfices+=[Quality|EString] ( "," satisfices+=[Quality|EString])* ')' )?
		('satisfies' '(' satisfies+=[QualityRequirement|EString] ( "," satisfies+=[QualityRequirement|EString])* ')' )?
		('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		'child' '{' child+=TreeNode ( "," child+=TreeNode)* '}' 
	'}';

SwitchNode returns SwitchNode:
	'SwitchNode'
	name=EString
	'{'
		('ID' ID=EString)?
		('satisfices' '(' satisfices+=[Quality|EString] ( "," satisfices+=[Quality|EString])* ')' )?
		('satisfies' '(' satisfies+=[QualityRequirement|EString] ( "," satisfies+=[QualityRequirement|EString])* ')' )?
		('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		'child' '{' child+=TreeNode ( "," child+=TreeNode)* '}' 
	'}';

ReactiveFallbackNode returns ReactiveFallbackNode:
	'ReactiveFallbackNode'
	name=EString
	'{'
		('ID' ID=EString)?
		('satisfices' '(' satisfices+=[Quality|EString] ( "," satisfices+=[Quality|EString])* ')' )?
		('satisfies' '(' satisfies+=[QualityRequirement|EString] ( "," satisfies+=[QualityRequirement|EString])* ')' )?
		('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		'child' '{' child+=TreeNode ( "," child+=TreeNode)* '}' 
	'}';

WhileDoElseNode returns WhileDoElseNode:
	'WhileDoElseNode'
	name=EString
	'{'
		('ID' ID=EString)?
		('satisfices' '(' satisfices+=[Quality|EString] ( "," satisfices+=[Quality|EString])* ')' )?
		('satisfies' '(' satisfies+=[QualityRequirement|EString] ( "," satisfies+=[QualityRequirement|EString])* ')' )?
		('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		'child' '{' child+=TreeNode ( "," child+=TreeNode)* '}' 
	'}';

ReactiveSequenceNode returns ReactiveSequenceNode:
	'ReactiveSequenceNode'
	name=EString
	'{'
		('ID' ID=EString)?
		('satisfices' '(' satisfices+=[Quality|EString] ( "," satisfices+=[Quality|EString])* ')' )?
		('satisfies' '(' satisfies+=[QualityRequirement|EString] ( "," satisfies+=[QualityRequirement|EString])* ')' )?
		('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		'child' '{' child+=TreeNode ( "," child+=TreeNode)* '}' 
	'}';

SequenceNode returns SequenceNode:
	'SequenceNode'
	name=EString
	'{'
		('ID' ID=EString)?
		('satisfices' '(' satisfices+=[Quality|EString] ( "," satisfices+=[Quality|EString])* ')' )?
		('satisfies' '(' satisfies+=[QualityRequirement|EString] ( "," satisfies+=[QualityRequirement|EString])* ')' )?
		('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		'child' '{' child+=TreeNode ( "," child+=TreeNode)* '}' 
	'}';

TimeoutNode returns TimeoutNode:
	'TimeoutNode'
	name=EString
	'{'
		('ID' ID=EString)?
		'msec' msec=EString
		('satisfices' '(' satisfices+=[Quality|EString] ( "," satisfices+=[Quality|EString])* ')' )?
		('satisfies' '(' satisfies+=[QualityRequirement|EString] ( "," satisfies+=[QualityRequirement|EString])* ')' )?
		('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		'child' child=TreeNode
	'}';

KeepRunningUntilFailureNode returns KeepRunningUntilFailureNode:
	'KeepRunningUntilFailureNode'
	name=EString
	'{'
		('ID' ID=EString)?
		('satisfices' '(' satisfices+=[Quality|EString] ( "," satisfices+=[Quality|EString])* ')' )?
		('satisfies' '(' satisfies+=[QualityRequirement|EString] ( "," satisfies+=[QualityRequirement|EString])* ')' )?
		('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		'child' child=TreeNode
	'}';

InverterNode returns InverterNode:
	'InverterNode'
	name=EString
	'{'
		('ID' ID=EString)?
		('satisfices' '(' satisfices+=[Quality|EString] ( "," satisfices+=[Quality|EString])* ')' )?
		('satisfies' '(' satisfies+=[QualityRequirement|EString] ( "," satisfies+=[QualityRequirement|EString])* ')' )?
		('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		'child' child=TreeNode
	'}';

ForceSuccessNode returns ForceSuccessNode:
	'ForceSuccessNode'
	name=EString
	'{'
		('ID' ID=EString)?
		('satisfices' '(' satisfices+=[Quality|EString] ( "," satisfices+=[Quality|EString])* ')' )?
		('satisfies' '(' satisfies+=[QualityRequirement|EString] ( "," satisfies+=[QualityRequirement|EString])* ')' )?
		('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		'child' child=TreeNode
	'}';

ForceFailureNode returns ForceFailureNode:
	'ForceFailureNode'
	name=EString
	'{'
		('ID' ID=EString)?
		('satisfices' '(' satisfices+=[Quality|EString] ( "," satisfices+=[Quality|EString])* ')' )?
		('satisfies' '(' satisfies+=[QualityRequirement|EString] ( "," satisfies+=[QualityRequirement|EString])* ')' )?
		('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		'child' child=TreeNode
	'}';

RepeatNode returns RepeatNode:
	'RepeatNode'
	name=EString
	'{'
		('ID' ID=EString)?
		'num_cycles' num_cycles=EString
		('satisfices' '(' satisfices+=[Quality|EString] ( "," satisfices+=[Quality|EString])* ')' )?
		('satisfies' '(' satisfies+=[QualityRequirement|EString] ( "," satisfies+=[QualityRequirement|EString])* ')' )?
		('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		'child' child=TreeNode
	'}';

SubTree returns SubTree:
	{SubTree}
	'SubTree'
	name=EString
	'{'
		('ID' ID=EString)?
		('satisfices' '(' satisfices+=[Quality|EString] ( "," satisfices+=[Quality|EString])* ')' )?
		('satisfies' '(' satisfies+=[QualityRequirement|EString] ( "," satisfies+=[QualityRequirement|EString])* ')' )?
		('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		('child' '{' child+=TreeNode ( "," child+=TreeNode)* '}' )?
	'}';

ScriptNode returns ScriptNode:
	{ScriptNode}
	'ScriptNode'
	name=EString
	'{'
		('ID' ID=EString)?
		('satisfices' '(' satisfices+=[Quality|EString] ( "," satisfices+=[Quality|EString])* ')' )?
		('satisfies' '(' satisfies+=[QualityRequirement|EString] ( "," satisfies+=[QualityRequirement|EString])* ')' )?
		('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
	'}';

ScriptConditionNode returns ScriptConditionNode:
	{ScriptConditionNode}
	'ScriptConditionNode'
	name=EString
	'{'
		('ID' ID=EString)?
		('satisfices' '(' satisfices+=[Quality|EString] ( "," satisfices+=[Quality|EString])* ')' )?
		('satisfies' '(' satisfies+=[QualityRequirement|EString] ( "," satisfies+=[QualityRequirement|EString])* ')' )?
		('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
	'}';

RetryNode returns RetryNode:
	'RetryNode'
	name=EString
	'{'
		('ID' ID=EString)?
		'num_attempts' num_attempts=EString
		('satisfices' '(' satisfices+=[Quality|EString] ( "," satisfices+=[Quality|EString])* ')' )?
		('satisfies' '(' satisfies+=[QualityRequirement|EString] ( "," satisfies+=[QualityRequirement|EString])* ')' )?
		('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		'child' child=TreeNode
	'}';

ParallelAllNode returns ParallelAllNode:
	'ParallelAllNode'
	name=EString
	'{'
		('ID' ID=EString)?
		('satisfices' '(' satisfices+=[Quality|EString] ( "," satisfices+=[Quality|EString])* ')' )?
		('satisfies' '(' satisfies+=[QualityRequirement|EString] ( "," satisfies+=[QualityRequirement|EString])* ')' )?
		('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		'child' '{' child+=TreeNode ( "," child+=TreeNode)* '}' 
	'}';

DelayNode returns DelayNode:
	'DelayNode'
	name=EString
	'{'
		('ID' ID=EString)?
		('delay_msec' delay_msec=EString)?
		('satisfices' '(' satisfices+=[Quality|EString] ( "," satisfices+=[Quality|EString])* ')' )?
		('satisfies' '(' satisfies+=[QualityRequirement|EString] ( "," satisfies+=[QualityRequirement|EString])* ')' )?
		('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		'child' child=TreeNode
	'}';

PreconditionNode returns PreconditionNode:
	'PreconditionNode'
	name=EString
	'{'
		('ID' ID=EString)?
		('satisfices' '(' satisfices+=[Quality|EString] ( "," satisfices+=[Quality|EString])* ')' )?
		('satisfies' '(' satisfies+=[QualityRequirement|EString] ( "," satisfies+=[QualityRequirement|EString])* ')' )?
		('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		'child' child=TreeNode
	'}';

EntryUpdatedDecoratorNode returns EntryUpdatedDecoratorNode:
	'EntryUpdatedDecoratorNode'
	name=EString
	'{'
		('ID' ID=EString)?
		('satisfices' '(' satisfices+=[Quality|EString] ( "," satisfices+=[Quality|EString])* ')' )?
		('satisfies' '(' satisfies+=[QualityRequirement|EString] ( "," satisfies+=[QualityRequirement|EString])* ')' )?
		('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		'child' child=TreeNode
	'}';

RunOnceNode returns RunOnceNode:
	'RunOnceNode'
	name=EString
	'{'
		('ID' ID=EString)?
		('satisfices' '(' satisfices+=[Quality|EString] ( "," satisfices+=[Quality|EString])* ')' )?
		('satisfies' '(' satisfies+=[QualityRequirement|EString] ( "," satisfies+=[QualityRequirement|EString])* ')' )?
		('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		'child' child=TreeNode
	'}';

LoopNode returns LoopNode:
	'LoopNode'
	name=EString
	'{'
		('ID' ID=EString)?
		('satisfices' '(' satisfices+=[Quality|EString] ( "," satisfices+=[Quality|EString])* ')' )?
		('satisfies' '(' satisfies+=[QualityRequirement|EString] ( "," satisfies+=[QualityRequirement|EString])* ')' )?
		('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		'child' child=TreeNode
	'}';

ConsumeQueueNode returns ConsumeQueueNode:
	'ConsumeQueueNode'
	name=EString
	'{'
		('ID' ID=EString)?
		('satisfices' '(' satisfices+=[Quality|EString] ( "," satisfices+=[Quality|EString])* ')' )?
		('satisfies' '(' satisfies+=[QualityRequirement|EString] ( "," satisfies+=[QualityRequirement|EString])* ')' )?
		('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		'child' child=TreeNode
	'}';

TestNode returns TestNode:
	{TestNode}
	'TestNode'
	name=EString
	'{'
		('ID' ID=EString)?
		('satisfices' '(' satisfices+=[Quality|EString] ( "," satisfices+=[Quality|EString])* ')' )?
		('satisfies' '(' satisfies+=[QualityRequirement|EString] ( "," satisfies+=[QualityRequirement|EString])* ')' )?
		('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
	'}';

EntryUpdatedActionNode returns EntryUpdatedActionNode:
	{EntryUpdatedActionNode}
	'EntryUpdatedActionNode'
	name=EString
	'{'
		('ID' ID=EString)?
		('satisfices' '(' satisfices+=[Quality|EString] ( "," satisfices+=[Quality|EString])* ')' )?
		('satisfies' '(' satisfies+=[QualityRequirement|EString] ( "," satisfies+=[QualityRequirement|EString])* ')' )?
		('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
	'}';

UnsetBlackboardNode returns UnsetBlackboardNode:
	{UnsetBlackboardNode}
	'UnsetBlackboardNode'
	name=EString
	'{'
		('ID' ID=EString)?
		('satisfices' '(' satisfices+=[Quality|EString] ( "," satisfices+=[Quality|EString])* ')' )?
		('satisfies' '(' satisfies+=[QualityRequirement|EString] ( "," satisfies+=[QualityRequirement|EString])* ')' )?
		('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
	'}';

ThreadedActionNode returns ThreadedActionNode:
	{ThreadedActionNode}
	'ThreadedActionNode'
	name=EString
	'{'
		('ID' ID=EString)?
		('satisfices' '(' satisfices+=[Quality|EString] ( "," satisfices+=[Quality|EString])* ')' )?
		('satisfies' '(' satisfies+=[QualityRequirement|EString] ( "," satisfies+=[QualityRequirement|EString])* ')' )?
		('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
	'}';

CoroActionNode returns CoroActionNode:
	{CoroActionNode}
	'CoroActionNode'
	name=EString
	'{'
		('ID' ID=EString)?
		('satisfices' '(' satisfices+=[Quality|EString] ( "," satisfices+=[Quality|EString])* ')' )?
		('satisfies' '(' satisfies+=[QualityRequirement|EString] ( "," satisfies+=[QualityRequirement|EString])* ')' )?
		('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
	'}';

SleepNode returns SleepNode:
	{SleepNode}
	'SleepNode'
	name=EString
	'{'
		('ID' ID=EString)?
		('satisfices' '(' satisfices+=[Quality|EString] ( "," satisfices+=[Quality|EString])* ')' )?
		('satisfies' '(' satisfies+=[QualityRequirement|EString] ( "," satisfies+=[QualityRequirement|EString])* ')' )?
		('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
	'}';

PopFromQueueNode returns PopFromQueueNode:
	{PopFromQueueNode}
	'PopFromQueueNode'
	name=EString
	'{'
		('ID' ID=EString)?
		('satisfices' '(' satisfices+=[Quality|EString] ( "," satisfices+=[Quality|EString])* ')' )?
		('satisfies' '(' satisfies+=[QualityRequirement|EString] ( "," satisfies+=[QualityRequirement|EString])* ')' )?
		('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
	'}';
